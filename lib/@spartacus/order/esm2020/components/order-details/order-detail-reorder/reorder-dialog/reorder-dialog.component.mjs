/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { CartValidationStatusCode, } from '@spartacus/cart/base/root';
import { OCC_CART_ID_CURRENT } from '@spartacus/core';
import { ICON_TYPE, } from '@spartacus/storefront';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "@spartacus/order/root";
import * as i3 from "@spartacus/cart/base/root";
import * as i4 from "@angular/common";
import * as i5 from "@spartacus/core";
export class ReorderDialogComponent {
    constructor(launchDialogService, reorderOrderFacade, multiCartFacade) {
        this.launchDialogService = launchDialogService;
        this.reorderOrderFacade = reorderOrderFacade;
        this.multiCartFacade = multiCartFacade;
        this.iconTypes = ICON_TYPE;
        this.focusConfig = {
            trap: true,
            block: true,
            autofocus: true,
            focusOnEscape: true,
        };
        this.loading$ = new BehaviorSubject(false);
        this.showDecisionPrompt$ = new BehaviorSubject(true);
        this.data$ = this.launchDialogService.data$;
    }
    createCartFromOrder(orderCode) {
        this.showDecisionPrompt$.next(false);
        this.loading$.next(true);
        this.reorderOrderFacade
            .reorder(orderCode)
            .subscribe((cartModificationList) => {
            this.multiCartFacade.reloadCart(OCC_CART_ID_CURRENT);
            this.cartModifications = cartModificationList.cartModifications;
            this.loading$.next(false);
        });
    }
    close(reason) {
        this.launchDialogService.closeDialog(reason);
    }
    get cartValidationStatusCode() {
        return CartValidationStatusCode;
    }
}
ReorderDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: ReorderDialogComponent, deps: [{ token: i1.LaunchDialogService }, { token: i2.ReorderOrderFacade }, { token: i3.MultiCartFacade }], target: i0.ɵɵFactoryTarget.Component });
ReorderDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: ReorderDialogComponent, selector: "cx-reorder-dialog", ngImport: i0, template: "<div\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n  class=\"cx-modal-container\"\n>\n  <div class=\"cx-modal-content\">\n    <ng-container>\n      <div class=\"cx-dialog-header modal-header\">\n        <div class=\"cx-dialog-title modal-title\">\n          {{ 'reorder.dialog.reorderProducts' | cxTranslate }}\n        </div>\n        <button\n          type=\"button\"\n          class=\"close\"\n          attr.aria-label=\"{{ 'addToCart.closeModal' | cxTranslate }}\"\n          (click)=\"close('Close reorder result dialog')\"\n        >\n          <span aria-hidden=\"true\">\n            <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n          </span>\n        </button>\n      </div>\n    </ng-container>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <ng-container *ngIf=\"data$ | async as data\">\n        <ng-container *ngIf=\"showDecisionPrompt$ | async; else result\">\n          <div class=\"cx-reorder-dialog-areyousure-section\">\n            <p>\n              {{ 'reorder.dialog.areYouSureToReplaceCart' | cxTranslate }}\n            </p>\n            <div class=\"cx-reorder-dialog-footer\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <button\n                    class=\"btn btn-action\"\n                    (click)=\"close('Cancel creating cart from order')\"\n                  >\n                    {{ 'reorder.dialog.cancel' | cxTranslate }}\n                  </button>\n                  <button\n                    class=\"btn btn-primary\"\n                    (click)=\"createCartFromOrder(data.orderCode)\"\n                  >\n                    {{ 'reorder.dialog.continue' | cxTranslate }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-template #result>\n          <ng-container *ngIf=\"!(loading$ | async); else loading\">\n            <p>\n              <ng-container\n                *ngIf=\"!cartModifications?.length; else cartResponse\"\n              >\n                <span class=\"cx-cart-mod-entry-container\">\n                  <span class=\"alert-icon\">\n                    <cx-icon\n                      class=\"success\"\n                      [type]=\"iconTypes.SUCCESS\"\n                    ></cx-icon>\n                  </span>\n                  {{ 'reorder.dialog.messages.success' | cxTranslate }}\n                </span>\n              </ng-container>\n              <ng-template #cartResponse>\n                <span\n                  *ngFor=\"let cartModification of cartModifications\"\n                  class=\"cx-cart-mod-entry-container\"\n                >\n                  <ng-container\n                    *ngIf=\"\n                      cartModification.statusCode ===\n                        cartValidationStatusCode.LOW_STOCK;\n                      else errorIcon\n                    \"\n                  >\n                    <span class=\"alert-icon\">\n                      <cx-icon\n                        class=\"warning\"\n                        [type]=\"iconTypes.INFO\"\n                      ></cx-icon>\n                    </span>\n                  </ng-container>\n                  <ng-template #errorIcon>\n                    <span class=\"alert-icon\">\n                      <cx-icon class=\"error\" [type]=\"iconTypes.ERROR\"></cx-icon>\n                    </span>\n                  </ng-template>\n                  <span>\n                    {{\n                      'reorder.dialog.messages.' + cartModification.statusCode\n                        | cxTranslate\n                          : {\n                              quantity: cartModification.quantity,\n                              quantityAdded: cartModification.quantityAdded,\n                              productCode: cartModification.entry.product.code,\n                              productName: cartModification.entry.product.name\n                            }\n                    }}\n                  </span>\n                </span>\n              </ng-template>\n            </p>\n          </ng-container>\n          <ng-template #loading>\n            <div class=\"cx-spinner\">\n              <cx-spinner></cx-spinner>\n            </div>\n          </ng-template>\n        </ng-template>\n      </ng-container>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i1.SpinnerComponent, selector: "cx-spinner" }, { kind: "directive", type: i1.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "component", type: i1.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: ReorderDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-reorder-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n  class=\"cx-modal-container\"\n>\n  <div class=\"cx-modal-content\">\n    <ng-container>\n      <div class=\"cx-dialog-header modal-header\">\n        <div class=\"cx-dialog-title modal-title\">\n          {{ 'reorder.dialog.reorderProducts' | cxTranslate }}\n        </div>\n        <button\n          type=\"button\"\n          class=\"close\"\n          attr.aria-label=\"{{ 'addToCart.closeModal' | cxTranslate }}\"\n          (click)=\"close('Close reorder result dialog')\"\n        >\n          <span aria-hidden=\"true\">\n            <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n          </span>\n        </button>\n      </div>\n    </ng-container>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <ng-container *ngIf=\"data$ | async as data\">\n        <ng-container *ngIf=\"showDecisionPrompt$ | async; else result\">\n          <div class=\"cx-reorder-dialog-areyousure-section\">\n            <p>\n              {{ 'reorder.dialog.areYouSureToReplaceCart' | cxTranslate }}\n            </p>\n            <div class=\"cx-reorder-dialog-footer\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <button\n                    class=\"btn btn-action\"\n                    (click)=\"close('Cancel creating cart from order')\"\n                  >\n                    {{ 'reorder.dialog.cancel' | cxTranslate }}\n                  </button>\n                  <button\n                    class=\"btn btn-primary\"\n                    (click)=\"createCartFromOrder(data.orderCode)\"\n                  >\n                    {{ 'reorder.dialog.continue' | cxTranslate }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-template #result>\n          <ng-container *ngIf=\"!(loading$ | async); else loading\">\n            <p>\n              <ng-container\n                *ngIf=\"!cartModifications?.length; else cartResponse\"\n              >\n                <span class=\"cx-cart-mod-entry-container\">\n                  <span class=\"alert-icon\">\n                    <cx-icon\n                      class=\"success\"\n                      [type]=\"iconTypes.SUCCESS\"\n                    ></cx-icon>\n                  </span>\n                  {{ 'reorder.dialog.messages.success' | cxTranslate }}\n                </span>\n              </ng-container>\n              <ng-template #cartResponse>\n                <span\n                  *ngFor=\"let cartModification of cartModifications\"\n                  class=\"cx-cart-mod-entry-container\"\n                >\n                  <ng-container\n                    *ngIf=\"\n                      cartModification.statusCode ===\n                        cartValidationStatusCode.LOW_STOCK;\n                      else errorIcon\n                    \"\n                  >\n                    <span class=\"alert-icon\">\n                      <cx-icon\n                        class=\"warning\"\n                        [type]=\"iconTypes.INFO\"\n                      ></cx-icon>\n                    </span>\n                  </ng-container>\n                  <ng-template #errorIcon>\n                    <span class=\"alert-icon\">\n                      <cx-icon class=\"error\" [type]=\"iconTypes.ERROR\"></cx-icon>\n                    </span>\n                  </ng-template>\n                  <span>\n                    {{\n                      'reorder.dialog.messages.' + cartModification.statusCode\n                        | cxTranslate\n                          : {\n                              quantity: cartModification.quantity,\n                              quantityAdded: cartModification.quantityAdded,\n                              productCode: cartModification.entry.product.code,\n                              productName: cartModification.entry.product.name\n                            }\n                    }}\n                  </span>\n                </span>\n              </ng-template>\n            </p>\n          </ng-container>\n          <ng-template #loading>\n            <div class=\"cx-spinner\">\n              <cx-spinner></cx-spinner>\n            </div>\n          </ng-template>\n        </ng-template>\n      </ng-container>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.LaunchDialogService }, { type: i2.ReorderOrderFacade }, { type: i3.MultiCartFacade }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVvcmRlci1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZGVyL2NvbXBvbmVudHMvb3JkZXItZGV0YWlscy9vcmRlci1kZXRhaWwtcmVvcmRlci9yZW9yZGVyLWRpYWxvZy9yZW9yZGVyLWRpYWxvZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JkZXIvY29tcG9uZW50cy9vcmRlci1kZXRhaWxzL29yZGVyLWRldGFpbC1yZW9yZGVyL3Jlb3JkZXItZGlhbG9nL3Jlb3JkZXItZGlhbG9nLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFHTCx3QkFBd0IsR0FFekIsTUFBTSwyQkFBMkIsQ0FBQztBQUNuQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV0RCxPQUFPLEVBRUwsU0FBUyxHQUVWLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7Ozs7OztBQU92QyxNQUFNLE9BQU8sc0JBQXNCO0lBZWpDLFlBQ1ksbUJBQXdDLEVBQ3hDLGtCQUFzQyxFQUN0QyxlQUFnQztRQUZoQyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBQ3hDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBakI1QyxjQUFTLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLGdCQUFXLEdBQWdCO1lBQ3pCLElBQUksRUFBRSxJQUFJO1lBQ1YsS0FBSyxFQUFFLElBQUk7WUFDWCxTQUFTLEVBQUUsSUFBSTtZQUNmLGFBQWEsRUFBRSxJQUFJO1NBQ3BCLENBQUM7UUFJRixhQUFRLEdBQUcsSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEMsd0JBQW1CLEdBQUcsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsVUFBSyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUM7SUFNcEMsQ0FBQztJQUVKLG1CQUFtQixDQUFDLFNBQWlCO1FBQ25DLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLGtCQUFrQjthQUNwQixPQUFPLENBQUMsU0FBUyxDQUFDO2FBQ2xCLFNBQVMsQ0FBQyxDQUFDLG9CQUEwQyxFQUFFLEVBQUU7WUFDeEQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQztZQUNyRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsb0JBQW9CLENBQUMsaUJBQWlCLENBQUM7WUFDaEUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQWM7UUFDbEIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBQ0QsSUFBVyx3QkFBd0I7UUFDakMsT0FBTyx3QkFBd0IsQ0FBQztJQUNsQyxDQUFDOzttSEF0Q1Usc0JBQXNCO3VHQUF0QixzQkFBc0IseURDM0JuQyxzMklBc0hBOzJGRDNGYSxzQkFBc0I7a0JBTGxDLFNBQVM7K0JBQ0UsbUJBQW1CLG1CQUVaLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDYXJ0TW9kaWZpY2F0aW9uLFxuICBDYXJ0TW9kaWZpY2F0aW9uTGlzdCxcbiAgQ2FydFZhbGlkYXRpb25TdGF0dXNDb2RlLFxuICBNdWx0aUNhcnRGYWNhZGUsXG59IGZyb20gJ0BzcGFydGFjdXMvY2FydC9iYXNlL3Jvb3QnO1xuaW1wb3J0IHsgT0NDX0NBUlRfSURfQ1VSUkVOVCB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBSZW9yZGVyT3JkZXJGYWNhZGUgfSBmcm9tICdAc3BhcnRhY3VzL29yZGVyL3Jvb3QnO1xuaW1wb3J0IHtcbiAgRm9jdXNDb25maWcsXG4gIElDT05fVFlQRSxcbiAgTGF1bmNoRGlhbG9nU2VydmljZSxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9zdG9yZWZyb250JztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1yZW9yZGVyLWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9yZW9yZGVyLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBSZW9yZGVyRGlhbG9nQ29tcG9uZW50IHtcbiAgaWNvblR5cGVzID0gSUNPTl9UWVBFO1xuICBmb2N1c0NvbmZpZzogRm9jdXNDb25maWcgPSB7XG4gICAgdHJhcDogdHJ1ZSxcbiAgICBibG9jazogdHJ1ZSxcbiAgICBhdXRvZm9jdXM6IHRydWUsXG4gICAgZm9jdXNPbkVzY2FwZTogdHJ1ZSxcbiAgfTtcblxuICBjYXJ0TW9kaWZpY2F0aW9uczogQ2FydE1vZGlmaWNhdGlvbltdIHwgdW5kZWZpbmVkO1xuXG4gIGxvYWRpbmckID0gbmV3IEJlaGF2aW9yU3ViamVjdChmYWxzZSk7XG4gIHNob3dEZWNpc2lvblByb21wdCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KHRydWUpO1xuICBkYXRhJCA9IHRoaXMubGF1bmNoRGlhbG9nU2VydmljZS5kYXRhJDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgbGF1bmNoRGlhbG9nU2VydmljZTogTGF1bmNoRGlhbG9nU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgcmVvcmRlck9yZGVyRmFjYWRlOiBSZW9yZGVyT3JkZXJGYWNhZGUsXG4gICAgcHJvdGVjdGVkIG11bHRpQ2FydEZhY2FkZTogTXVsdGlDYXJ0RmFjYWRlXG4gICkge31cblxuICBjcmVhdGVDYXJ0RnJvbU9yZGVyKG9yZGVyQ29kZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5zaG93RGVjaXNpb25Qcm9tcHQkLm5leHQoZmFsc2UpO1xuICAgIHRoaXMubG9hZGluZyQubmV4dCh0cnVlKTtcbiAgICB0aGlzLnJlb3JkZXJPcmRlckZhY2FkZVxuICAgICAgLnJlb3JkZXIob3JkZXJDb2RlKVxuICAgICAgLnN1YnNjcmliZSgoY2FydE1vZGlmaWNhdGlvbkxpc3Q6IENhcnRNb2RpZmljYXRpb25MaXN0KSA9PiB7XG4gICAgICAgIHRoaXMubXVsdGlDYXJ0RmFjYWRlLnJlbG9hZENhcnQoT0NDX0NBUlRfSURfQ1VSUkVOVCk7XG4gICAgICAgIHRoaXMuY2FydE1vZGlmaWNhdGlvbnMgPSBjYXJ0TW9kaWZpY2F0aW9uTGlzdC5jYXJ0TW9kaWZpY2F0aW9ucztcbiAgICAgICAgdGhpcy5sb2FkaW5nJC5uZXh0KGZhbHNlKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgY2xvc2UocmVhc29uOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmxhdW5jaERpYWxvZ1NlcnZpY2UuY2xvc2VEaWFsb2cocmVhc29uKTtcbiAgfVxuICBwdWJsaWMgZ2V0IGNhcnRWYWxpZGF0aW9uU3RhdHVzQ29kZSgpOiB0eXBlb2YgQ2FydFZhbGlkYXRpb25TdGF0dXNDb2RlIHtcbiAgICByZXR1cm4gQ2FydFZhbGlkYXRpb25TdGF0dXNDb2RlO1xuICB9XG59XG4iLCI8ZGl2XG4gIFtjeEZvY3VzXT1cImZvY3VzQ29uZmlnXCJcbiAgKGVzYyk9XCJjbG9zZSgnRXNjYXBlIGNsaWNrZWQnKVwiXG4gIGNsYXNzPVwiY3gtbW9kYWwtY29udGFpbmVyXCJcbj5cbiAgPGRpdiBjbGFzcz1cImN4LW1vZGFsLWNvbnRlbnRcIj5cbiAgICA8bmctY29udGFpbmVyPlxuICAgICAgPGRpdiBjbGFzcz1cImN4LWRpYWxvZy1oZWFkZXIgbW9kYWwtaGVhZGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjeC1kaWFsb2ctdGl0bGUgbW9kYWwtdGl0bGVcIj5cbiAgICAgICAgICB7eyAncmVvcmRlci5kaWFsb2cucmVvcmRlclByb2R1Y3RzJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgY2xhc3M9XCJjbG9zZVwiXG4gICAgICAgICAgYXR0ci5hcmlhLWxhYmVsPVwie3sgJ2FkZFRvQ2FydC5jbG9zZU1vZGFsJyB8IGN4VHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAoY2xpY2spPVwiY2xvc2UoJ0Nsb3NlIHJlb3JkZXIgcmVzdWx0IGRpYWxvZycpXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgICAgICAgPGN4LWljb24gW3R5cGVdPVwiaWNvblR5cGVzLkNMT1NFXCI+PC9jeC1pY29uPlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgIDwhLS0gTW9kYWwgQm9keSAtLT5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtZGlhbG9nLWJvZHkgbW9kYWwtYm9keVwiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImRhdGEkIHwgYXN5bmMgYXMgZGF0YVwiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwic2hvd0RlY2lzaW9uUHJvbXB0JCB8IGFzeW5jOyBlbHNlIHJlc3VsdFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjeC1yZW9yZGVyLWRpYWxvZy1hcmV5b3VzdXJlLXNlY3Rpb25cIj5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICB7eyAncmVvcmRlci5kaWFsb2cuYXJlWW91U3VyZVRvUmVwbGFjZUNhcnQnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjeC1yZW9yZGVyLWRpYWxvZy1mb290ZXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJidG4gYnRuLWFjdGlvblwiXG4gICAgICAgICAgICAgICAgICAgIChjbGljayk9XCJjbG9zZSgnQ2FuY2VsIGNyZWF0aW5nIGNhcnQgZnJvbSBvcmRlcicpXCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3sgJ3Jlb3JkZXIuZGlhbG9nLmNhbmNlbCcgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCJcbiAgICAgICAgICAgICAgICAgICAgKGNsaWNrKT1cImNyZWF0ZUNhcnRGcm9tT3JkZXIoZGF0YS5vcmRlckNvZGUpXCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3sgJ3Jlb3JkZXIuZGlhbG9nLmNvbnRpbnVlJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjcmVzdWx0PlxuICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhKGxvYWRpbmckIHwgYXN5bmMpOyBlbHNlIGxvYWRpbmdcIj5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICA8bmctY29udGFpbmVyXG4gICAgICAgICAgICAgICAgKm5nSWY9XCIhY2FydE1vZGlmaWNhdGlvbnM/Lmxlbmd0aDsgZWxzZSBjYXJ0UmVzcG9uc2VcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjeC1jYXJ0LW1vZC1lbnRyeS1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYWxlcnQtaWNvblwiPlxuICAgICAgICAgICAgICAgICAgICA8Y3gtaWNvblxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwic3VjY2Vzc1wiXG4gICAgICAgICAgICAgICAgICAgICAgW3R5cGVdPVwiaWNvblR5cGVzLlNVQ0NFU1NcIlxuICAgICAgICAgICAgICAgICAgICA+PC9jeC1pY29uPlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3sgJ3Jlb3JkZXIuZGlhbG9nLm1lc3NhZ2VzLnN1Y2Nlc3MnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgI2NhcnRSZXNwb25zZT5cbiAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IGNhcnRNb2RpZmljYXRpb24gb2YgY2FydE1vZGlmaWNhdGlvbnNcIlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjeC1jYXJ0LW1vZC1lbnRyeS1jb250YWluZXJcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJcbiAgICAgICAgICAgICAgICAgICAgICBjYXJ0TW9kaWZpY2F0aW9uLnN0YXR1c0NvZGUgPT09XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJ0VmFsaWRhdGlvblN0YXR1c0NvZGUuTE9XX1NUT0NLO1xuICAgICAgICAgICAgICAgICAgICAgIGVsc2UgZXJyb3JJY29uXG4gICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYWxlcnQtaWNvblwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxjeC1pY29uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIndhcm5pbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3R5cGVdPVwiaWNvblR5cGVzLklORk9cIlxuICAgICAgICAgICAgICAgICAgICAgID48L2N4LWljb24+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlICNlcnJvckljb24+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYWxlcnQtaWNvblwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxjeC1pY29uIGNsYXNzPVwiZXJyb3JcIiBbdHlwZV09XCJpY29uVHlwZXMuRVJST1JcIj48L2N4LWljb24+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAge3tcbiAgICAgICAgICAgICAgICAgICAgICAncmVvcmRlci5kaWFsb2cubWVzc2FnZXMuJyArIGNhcnRNb2RpZmljYXRpb24uc3RhdHVzQ29kZVxuICAgICAgICAgICAgICAgICAgICAgICAgfCBjeFRyYW5zbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1YW50aXR5OiBjYXJ0TW9kaWZpY2F0aW9uLnF1YW50aXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHlBZGRlZDogY2FydE1vZGlmaWNhdGlvbi5xdWFudGl0eUFkZGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdENvZGU6IGNhcnRNb2RpZmljYXRpb24uZW50cnkucHJvZHVjdC5jb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdE5hbWU6IGNhcnRNb2RpZmljYXRpb24uZW50cnkucHJvZHVjdC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICA8bmctdGVtcGxhdGUgI2xvYWRpbmc+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtc3Bpbm5lclwiPlxuICAgICAgICAgICAgICA8Y3gtc3Bpbm5lcj48L2N4LXNwaW5uZXI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=