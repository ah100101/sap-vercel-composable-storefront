/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { GlobalMessageType } from '@spartacus/core';
import { tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../amend-order.service";
import * as i2 from "@angular/common";
import * as i3 from "../../amend-order-items/amend-order-items.component";
import * as i4 from "../../amend-order-actions/amend-order-actions.component";
import * as i5 from "@spartacus/storefront";
import * as i6 from "@spartacus/core";
export class CancelOrderComponent {
    constructor(orderAmendService) {
        this.orderAmendService = orderAmendService;
        this.globalMessageType = GlobalMessageType;
        this.form$ = this.orderAmendService
            .getForm()
            .pipe(tap((form) => (this.orderCode = form.value.orderCode)));
        this.entries$ = this.orderAmendService.getEntries();
    }
}
CancelOrderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CancelOrderComponent, deps: [{ token: i1.OrderAmendService }], target: i0.ɵɵFactoryTarget.Component });
CancelOrderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: CancelOrderComponent, selector: "cx-cancel-order", ngImport: i0, template: "<ng-container *ngIf=\"form$ | async as form\">\n  <cx-message\n    role=\"alert\"\n    *ngIf=\"!form.get('entries').valid && form.get('entries').touched\"\n    [text]=\"'formErrors.cxNoSelectedItemToCancel' | cxTranslate\"\n    [isVisibleCloseButton]=\"false\"\n    [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n  >\n  </cx-message>\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n  <cx-amend-order-items *ngIf=\"entries$ | async as entries\" [entries]=\"entries\">\n  </cx-amend-order-items>\n\n  <cx-form-errors [control]=\"form.get('entries')\"></cx-form-errors>\n\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <ng-template #actions>\n    <cx-amend-order-actions\n      *ngIf=\"orderCode\"\n      [orderCode]=\"orderCode\"\n      [amendOrderForm]=\"form\"\n      backRoute=\"orderDetails\"\n      forwardRoute=\"orderCancelConfirmation\"\n    ></cx-amend-order-actions>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i3.CancelOrReturnItemsComponent, selector: "cx-amend-order-items", inputs: ["entries", "isConfirmation"] }, { kind: "component", type: i4.AmendOrderActionsComponent, selector: "cx-amend-order-actions", inputs: ["orderCode", "amendOrderForm", "backRoute", "forwardRoute"] }, { kind: "component", type: i5.FormErrorsComponent, selector: "cx-form-errors", inputs: ["prefix", "translationParams", "control"] }, { kind: "component", type: i5.MessageComponent, selector: "cx-message", inputs: ["text", "actionButtonText", "actionButtonMessage", "accordionText", "showBody", "isVisibleCloseButton", "type"], outputs: ["closeMessage", "buttonAction"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CancelOrderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-cancel-order', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"form$ | async as form\">\n  <cx-message\n    role=\"alert\"\n    *ngIf=\"!form.get('entries').valid && form.get('entries').touched\"\n    [text]=\"'formErrors.cxNoSelectedItemToCancel' | cxTranslate\"\n    [isVisibleCloseButton]=\"false\"\n    [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n  >\n  </cx-message>\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n  <cx-amend-order-items *ngIf=\"entries$ | async as entries\" [entries]=\"entries\">\n  </cx-amend-order-items>\n\n  <cx-form-errors [control]=\"form.get('entries')\"></cx-form-errors>\n\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <ng-template #actions>\n    <cx-amend-order-actions\n      *ngIf=\"orderCode\"\n      [orderCode]=\"orderCode\"\n      [amendOrderForm]=\"form\"\n      backRoute=\"orderDetails\"\n      forwardRoute=\"orderCancelConfirmation\"\n    ></cx-amend-order-actions>\n  </ng-template>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.OrderAmendService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FuY2VsLW9yZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmRlci9jb21wb25lbnRzL2FtZW5kLW9yZGVyL2NhbmNlbGxhdGlvbnMvY2FuY2VsLW9yZGVyL2NhbmNlbC1vcmRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JkZXIvY29tcG9uZW50cy9hbWVuZC1vcmRlci9jYW5jZWxsYXRpb25zL2NhbmNlbC1vcmRlci9jYW5jZWwtb3JkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHbkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFcEQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7OztBQVFyQyxNQUFNLE9BQU8sb0JBQW9CO0lBVS9CLFlBQXNCLGlCQUFvQztRQUFwQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBUjFELHNCQUFpQixHQUFHLGlCQUFpQixDQUFDO1FBRXRDLFVBQUssR0FBaUMsSUFBSSxDQUFDLGlCQUFpQjthQUN6RCxPQUFPLEVBQUU7YUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFaEUsYUFBUSxHQUE2QixJQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxFQUFFLENBQUM7SUFFWixDQUFDOztpSEFWbkQsb0JBQW9CO3FHQUFwQixvQkFBb0IsdURDbkJqQyxvN0JBMkJBOzJGRFJhLG9CQUFvQjtrQkFMaEMsU0FBUzsrQkFDRSxpQkFBaUIsbUJBRVYsdUJBQXVCLENBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVudHlwZWRGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBPcmRlckVudHJ5IH0gZnJvbSAnQHNwYXJ0YWN1cy9jYXJ0L2Jhc2Uvcm9vdCc7XG5pbXBvcnQgeyBHbG9iYWxNZXNzYWdlVHlwZSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBPcmRlckFtZW5kU2VydmljZSB9IGZyb20gJy4uLy4uL2FtZW5kLW9yZGVyLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1jYW5jZWwtb3JkZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vY2FuY2VsLW9yZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIENhbmNlbE9yZGVyQ29tcG9uZW50IHtcbiAgb3JkZXJDb2RlOiBzdHJpbmc7XG4gIGdsb2JhbE1lc3NhZ2VUeXBlID0gR2xvYmFsTWVzc2FnZVR5cGU7XG5cbiAgZm9ybSQ6IE9ic2VydmFibGU8VW50eXBlZEZvcm1Hcm91cD4gPSB0aGlzLm9yZGVyQW1lbmRTZXJ2aWNlXG4gICAgLmdldEZvcm0oKVxuICAgIC5waXBlKHRhcCgoZm9ybSkgPT4gKHRoaXMub3JkZXJDb2RlID0gZm9ybS52YWx1ZS5vcmRlckNvZGUpKSk7XG5cbiAgZW50cmllcyQ6IE9ic2VydmFibGU8T3JkZXJFbnRyeVtdPiA9IHRoaXMub3JkZXJBbWVuZFNlcnZpY2UuZ2V0RW50cmllcygpO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBvcmRlckFtZW5kU2VydmljZTogT3JkZXJBbWVuZFNlcnZpY2UpIHt9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiZm9ybSQgfCBhc3luYyBhcyBmb3JtXCI+XG4gIDxjeC1tZXNzYWdlXG4gICAgcm9sZT1cImFsZXJ0XCJcbiAgICAqbmdJZj1cIiFmb3JtLmdldCgnZW50cmllcycpLnZhbGlkICYmIGZvcm0uZ2V0KCdlbnRyaWVzJykudG91Y2hlZFwiXG4gICAgW3RleHRdPVwiJ2Zvcm1FcnJvcnMuY3hOb1NlbGVjdGVkSXRlbVRvQ2FuY2VsJyB8IGN4VHJhbnNsYXRlXCJcbiAgICBbaXNWaXNpYmxlQ2xvc2VCdXR0b25dPVwiZmFsc2VcIlxuICAgIFt0eXBlXT1cImdsb2JhbE1lc3NhZ2VUeXBlLk1TR19UWVBFX0VSUk9SXCJcbiAgPlxuICA8L2N4LW1lc3NhZ2U+XG4gIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJhY3Rpb25zXCI+PC9uZy1jb250YWluZXI+XG4gIDxjeC1hbWVuZC1vcmRlci1pdGVtcyAqbmdJZj1cImVudHJpZXMkIHwgYXN5bmMgYXMgZW50cmllc1wiIFtlbnRyaWVzXT1cImVudHJpZXNcIj5cbiAgPC9jeC1hbWVuZC1vcmRlci1pdGVtcz5cblxuICA8Y3gtZm9ybS1lcnJvcnMgW2NvbnRyb2xdPVwiZm9ybS5nZXQoJ2VudHJpZXMnKVwiPjwvY3gtZm9ybS1lcnJvcnM+XG5cbiAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImFjdGlvbnNcIj48L25nLWNvbnRhaW5lcj5cblxuICA8bmctdGVtcGxhdGUgI2FjdGlvbnM+XG4gICAgPGN4LWFtZW5kLW9yZGVyLWFjdGlvbnNcbiAgICAgICpuZ0lmPVwib3JkZXJDb2RlXCJcbiAgICAgIFtvcmRlckNvZGVdPVwib3JkZXJDb2RlXCJcbiAgICAgIFthbWVuZE9yZGVyRm9ybV09XCJmb3JtXCJcbiAgICAgIGJhY2tSb3V0ZT1cIm9yZGVyRGV0YWlsc1wiXG4gICAgICBmb3J3YXJkUm91dGU9XCJvcmRlckNhbmNlbENvbmZpcm1hdGlvblwiXG4gICAgPjwvY3gtYW1lbmQtb3JkZXItYWN0aW9ucz5cbiAgPC9uZy10ZW1wbGF0ZT5cbjwvbmctY29udGFpbmVyPlxuIl19