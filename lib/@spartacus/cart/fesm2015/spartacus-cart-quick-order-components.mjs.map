{"version":3,"file":"spartacus-cart-quick-order-components.mjs","sources":["../../../feature-libs/cart/quick-order/components/cart-quick-order-form/cart-quick-order-form.component.ts","../../../feature-libs/cart/quick-order/components/cart-quick-order-form/cart-quick-order-form.component.html","../../../feature-libs/cart/quick-order/components/cart-quick-order-form/cart-quick-order-form.module.ts","../../../feature-libs/cart/quick-order/components/cart-quick-order-form/index.ts","../../../feature-libs/cart/quick-order/components/page-context/quick-order-order-entries.context.ts","../../../feature-libs/cart/quick-order/components/page-context/index.ts","../../../feature-libs/cart/quick-order/components/quick-order/form/quick-order-form.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/form/quick-order-form.component.html","../../../feature-libs/cart/quick-order/components/quick-order/table/item/quick-order-item.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/table/item/quick-order-item.component.html","../../../feature-libs/cart/quick-order/components/quick-order/table/quick-order-table.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/table/quick-order-table.component.html","../../../feature-libs/cart/quick-order/components/quick-order/quick-order.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/quick-order.component.html","../../../feature-libs/cart/quick-order/components/quick-order/quick-order-list.module.ts","../../../feature-libs/cart/quick-order/components/quick-order-components.module.ts","../../../feature-libs/cart/quick-order/components/quick-order/index.ts","../../../feature-libs/cart/quick-order/components/public_api.ts","../../../feature-libs/cart/quick-order/components/spartacus-cart-quick-order-components.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActiveCartFacade,\n  Cart,\n  CartAddEntryFailEvent,\n  CartAddEntrySuccessEvent,\n} from '@spartacus/cart/base/root';\nimport {\n  EventService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-quick-order-form',\n  templateUrl: './cart-quick-order-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartQuickOrderFormComponent implements OnInit, OnDestroy {\n  quickOrderForm: UntypedFormGroup;\n  cartIsLoading$: Observable<boolean> = this.activeCartService\n    .isStable()\n    .pipe(map((loaded) => !loaded));\n  cart$: Observable<Cart> = this.activeCartService.getActive();\n  min = 1;\n\n  protected subscription: Subscription = new Subscription();\n  protected cartEventsSubscription: Subscription = new Subscription();\n  protected minQuantityValue: number = 1;\n\n  constructor(\n    protected activeCartService: ActiveCartFacade,\n    protected eventService: EventService,\n    protected formBuilder: UntypedFormBuilder,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.watchQuantityChange();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n    this.cartEventsSubscription?.unsubscribe();\n  }\n\n  applyQuickOrder(): void {\n    if (this.quickOrderForm.invalid) {\n      this.quickOrderForm.markAllAsTouched();\n      return;\n    }\n\n    const productCode = this.quickOrderForm.get('productCode')?.value;\n    const quantity = this.quickOrderForm.get('quantity')?.value;\n\n    this.watchAddEntrySuccessEvent();\n    this.watchAddEntryFailEvent();\n\n    if (productCode && quantity) {\n      this.activeCartService.addEntry(productCode, quantity);\n    }\n  }\n\n  protected buildForm(): void {\n    this.quickOrderForm = this.formBuilder.group({\n      productCode: ['', [Validators.required]],\n      quantity: [\n        this.minQuantityValue,\n        { updateOn: 'blur', validators: [Validators.required] },\n      ],\n    });\n  }\n\n  protected watchQuantityChange(): void {\n    this.subscription.add(\n      this.quickOrderForm\n        .get('quantity')\n        ?.valueChanges.subscribe((value) =>\n          this.quickOrderForm\n            .get('quantity')\n            ?.setValue(this.getValidCount(value), { emitEvent: false })\n        )\n    );\n  }\n\n  protected watchAddEntrySuccessEvent(): void {\n    this.cartEventsSubscription.add(\n      this.eventService\n        .get(CartAddEntrySuccessEvent)\n        .pipe(first())\n        .subscribe((data: CartAddEntrySuccessEvent) => {\n          let key = 'quickOrderCartForm.stockLevelReached';\n          let productTranslation;\n          let messageType = GlobalMessageType.MSG_TYPE_WARNING;\n\n          if (data.quantityAdded) {\n            key =\n              data.quantityAdded > 1\n                ? 'quickOrderCartForm.entriesWereAdded'\n                : 'quickOrderCartForm.entryWasAdded';\n\n            productTranslation =\n              data.quantityAdded > 1\n                ? 'quickOrderCartForm.products'\n                : 'quickOrderCartForm.product';\n\n            messageType = GlobalMessageType.MSG_TYPE_CONFIRMATION;\n          }\n\n          this.globalMessageService.add(\n            {\n              key,\n              params: {\n                product: data?.entry?.product?.name || productTranslation,\n                quantity: data.quantityAdded,\n              },\n            },\n            messageType\n          );\n          this.resetForm();\n        })\n    );\n  }\n\n  protected watchAddEntryFailEvent(): void {\n    this.cartEventsSubscription.add(\n      this.eventService\n        .get(CartAddEntryFailEvent)\n        .pipe(first())\n        .subscribe(() => {\n          this.globalMessageService.add(\n            {\n              key: 'quickOrderCartForm.noResults',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n        })\n    );\n  }\n\n  protected getValidCount(value: number) {\n    if (value < this.min || !value) {\n      value = this.min;\n    }\n\n    return value;\n  }\n\n  protected resetForm(): void {\n    this.quickOrderForm.reset();\n  }\n}\n","<ng-container *ngIf=\"cart$ | async as cart\">\n  <div class=\"cx-cart-quick-order-form-title\">\n    {{ 'quickOrderCartForm.title' | cxTranslate }}\n  </div>\n  <div class=\"form-group\">\n    <form (ngSubmit)=\"applyQuickOrder()\" [formGroup]=\"quickOrderForm\">\n      <div class=\"cx-cart-quick-order-form-container\">\n        <span class=\"cx-cart-quick-order-form-productID\">\n          <label class=\"cx-cart-quick-order-form-label\">\n            {{ 'quickOrderCartForm.productCodeLabel' | cxTranslate }}\n          </label>\n          <input\n            [attr.aria-label]=\"\n              'quickOrderCartForm.entryProductCode' | cxTranslate\n            \"\n            aria-required=\"true\"\n            class=\"form-control input-product-code\"\n            formControlName=\"productCode\"\n            required=\"true\"\n            placeholder=\"{{\n              'quickOrderCartForm.productCodePlaceholder' | cxTranslate\n            }}\"\n            type=\"text\"\n          />\n        </span>\n\n        <span class=\"cx-cart-quick-order-form-qty\">\n          <label class=\"cx-cart-quick-order-form-label\">\n            {{ 'quickOrderCartForm.quantityLabel' | cxTranslate }}\n          </label>\n          <input\n            [attr.aria-label]=\"'quickOrderCartForm.quantity' | cxTranslate\"\n            aria-required=\"true\"\n            class=\"form-control input-quantity\"\n            formControlName=\"quantity\"\n            required=\"true\"\n            type=\"number\"\n          />\n        </span>\n        <button\n          [attr.aria-label]=\"'quickOrderCartForm.addToCart' | cxTranslate\"\n          [class.disabled]=\"cartIsLoading$ | async\"\n          [disabled]=\"cartIsLoading$ | async\"\n          class=\"btn btn-block btn-secondary apply-quick-order-button\"\n          type=\"submit\"\n        >\n          {{ 'quickOrderCartForm.add' | cxTranslate }}\n        </button>\n        <cx-form-errors\n          [control]=\"quickOrderForm.get('productCode')\"\n        ></cx-form-errors>\n        <cx-form-errors\n          [control]=\"quickOrderForm.get('quantity')\"\n        ></cx-form-errors>\n      </div>\n    </form></div\n></ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { CartQuickOrderFormComponent } from './cart-quick-order-form.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, FormErrorsModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartQuickOrderFormComponent: {\n          component: CartQuickOrderFormComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartQuickOrderFormComponent],\n  exports: [CartQuickOrderFormComponent],\n})\nexport class CartQuickOrderFormModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cart-quick-order-form.component';\nexport * from './cart-quick-order-form.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, isDevMode } from '@angular/core';\nimport { merge, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  mergeAll,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport {\n  AddOrderEntriesContext,\n  GetOrderEntriesContext,\n  OrderEntriesSource,\n  OrderEntry,\n  ProductData,\n  ProductImportInfo,\n  ProductImportStatus,\n} from '@spartacus/cart/base/root';\nimport { QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport { Product, ProductConnector } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuickOrderOrderEntriesContext\n  implements AddOrderEntriesContext, GetOrderEntriesContext\n{\n  readonly type = OrderEntriesSource.QUICK_ORDER;\n\n  constructor(\n    protected quickOrderService: QuickOrderFacade,\n    protected productConnector: ProductConnector\n  ) {}\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.quickOrderService.getEntries();\n  }\n\n  addEntries(productsData: ProductData[]): Observable<ProductImportInfo> {\n    return merge(\n      productsData.map((productData) =>\n        this.quickOrderService\n          .canAdd(productData.productCode, productsData)\n          .pipe(\n            switchMap((canAdd) => {\n              if (canAdd) {\n                return this.productConnector.get(productData.productCode).pipe(\n                  filter((product) => !!product),\n                  tap((product) => {\n                    this.quickOrderService.addProduct(\n                      product,\n                      productData.quantity\n                    );\n                  }),\n                  map((product) => this.handleResults(product, productData)),\n                  catchError((response: HttpErrorResponse) => {\n                    return of(\n                      this.handleErrors(response, productData.productCode)\n                    );\n                  })\n                );\n              } else {\n                return of({\n                  productCode: productData.productCode,\n                  statusCode: ProductImportStatus.LIMIT_EXCEEDED,\n                });\n              }\n            })\n          )\n      )\n    ).pipe(mergeAll(), take(productsData.length));\n  }\n\n  protected handleResults(\n    product: Product,\n    productData: ProductData\n  ): ProductImportInfo {\n    if (\n      product.stock?.stockLevel &&\n      productData.quantity > product.stock.stockLevel\n    ) {\n      return {\n        productCode: productData.productCode,\n        productName: product?.name,\n        statusCode: ProductImportStatus.LOW_STOCK,\n        quantity: productData.quantity,\n        quantityAdded: product.stock.stockLevel,\n      };\n    } else if (product.stock?.stockLevelStatus === 'outOfStock') {\n      return {\n        productCode: productData.productCode,\n        statusCode: ProductImportStatus.NO_STOCK,\n        productName: product?.name,\n      };\n    } else {\n      return {\n        productCode: productData.productCode,\n        statusCode: ProductImportStatus.SUCCESS,\n      };\n    }\n  }\n\n  protected handleErrors(\n    response: HttpErrorResponse,\n    productCode: string\n  ): ProductImportInfo {\n    if (response?.error?.errors[0].type === 'UnknownIdentifierError') {\n      return {\n        productCode,\n        statusCode: ProductImportStatus.UNKNOWN_IDENTIFIER,\n      };\n    } else {\n      if (isDevMode()) {\n        console.warn(\n          'Unrecognized cart add entry action type while mapping messages',\n          response\n        );\n      }\n      return {\n        productCode,\n        statusCode: ProductImportStatus.UNKNOWN_ERROR,\n      };\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './quick-order-order-entries.context';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\nimport { QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport { Config, Product, WindowRef } from '@spartacus/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nconst SEARCH_BOX_ACTIVE_CLASS = 'quick-order-searchbox-is-active';\n\n@Component({\n  selector: 'cx-quick-order-form',\n  templateUrl: './quick-order-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderFormComponent implements OnInit, OnDestroy {\n  form: UntypedFormGroup;\n  iconTypes = ICON_TYPE;\n  isSearching: boolean = false;\n  noResults: boolean = false;\n  results: Product[] = [];\n\n  @Input() limit: number;\n\n  protected subscription = new Subscription();\n  protected searchSubscription = new Subscription();\n\n  constructor(\n    public config: Config,\n    protected cd: ChangeDetectorRef,\n    protected quickOrderService: QuickOrderFacade,\n    protected winRef: WindowRef\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.subscription.add(this.watchProductAdd());\n    this.subscription.add(this.watchQueryChange());\n  }\n\n  onBlur(event: UIEvent): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if (!this.isSuggestionFocused()) {\n        this.blurSuggestionBox(event);\n      }\n    });\n  }\n\n  clear(event?: Event): void {\n    event?.preventDefault();\n\n    if (this.isResultsBoxOpen()) {\n      this.toggleBodyClass(SEARCH_BOX_ACTIVE_CLASS, false);\n    }\n\n    const product = this.form.get('product')?.value;\n\n    if (!!product) {\n      this.form.reset();\n    }\n\n    // We have to call 'close' method every time to make sure results list is empty and call detectChanges to change icon type in form\n    this.close();\n    this.cd?.detectChanges();\n  }\n\n  add(product: Product, event: Event): void {\n    event?.preventDefault();\n\n    // TODO change to nonpurchasable flag once we will support multidimensional products in search and when the purchasable flag will be available in search product response\n\n    // Check if product is purchasable / non multidimensional\n    if (product.multidimensional) {\n      this.quickOrderService.setNonPurchasableProductError(product);\n      this.clear();\n      return;\n    } else {\n      this.quickOrderService.clearNonPurchasableProductError();\n    }\n\n    this.quickOrderService.addProduct(product);\n  }\n\n  addProduct(event: Event): void {\n    this.quickOrderService\n      .canAdd()\n      .pipe(take(1))\n      .subscribe((canAdd: boolean) => {\n        if (canAdd) {\n          // Add product if there is only one in the result list\n          if (this.results.length === 1) {\n            this.add(this.results[0], event);\n            // Add product if there is focus on it\n          } else if (this.getFocusedIndex() !== -1) {\n            const product = this.results[this.getFocusedIndex()];\n            this.add(product, event);\n          }\n        }\n      });\n  }\n\n  focusNextChild(event: UIEvent): void {\n    event.preventDefault(); // Negate normal keyscroll\n    if (!this.results.length) {\n      return;\n    }\n\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  focusPreviousChild(event: UIEvent): void {\n    event.preventDefault(); // Negate normal keyscroll\n    if (!this.results.length) {\n      return;\n    }\n\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  isResultsBoxOpen(): boolean {\n    return this.winRef\n      ? !!this.winRef.document.querySelector(`.${SEARCH_BOX_ACTIVE_CLASS}`)\n      : false;\n  }\n\n  canAddProduct(): Observable<boolean> {\n    return this.quickOrderService.canAdd();\n  }\n\n  open(): void {\n    this.toggleBodyClass(SEARCH_BOX_ACTIVE_CLASS, true);\n  }\n\n  // Return result list as HTMLElement array\n  protected getResultElements(): HTMLElement[] {\n    if (this.winRef) {\n      return Array.from(\n        this.winRef.document.querySelectorAll(\n          '.quick-order-results-products > li button'\n        )\n      );\n    } else {\n      return [];\n    }\n  }\n\n  protected blurSuggestionBox(event: UIEvent): void {\n    this.toggleBodyClass(SEARCH_BOX_ACTIVE_CLASS, false);\n\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Return focused element as HTMLElement\n  protected getFocusedElement(): HTMLElement | any {\n    if (this.winRef) {\n      return <HTMLElement>this.winRef.document.activeElement;\n    }\n  }\n\n  protected getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  protected isSuggestionFocused(): boolean {\n    return this.getResultElements().includes(this.getFocusedElement());\n  }\n\n  protected toggleBodyClass(className: string, add?: boolean) {\n    // TODO(#14058): Remove condition\n    if (this.winRef) {\n      if (add === undefined) {\n        this.winRef.document.body.classList.toggle(className);\n      } else {\n        add\n          ? this.winRef.document.body.classList.add(className)\n          : this.winRef.document.body.classList.remove(className);\n      }\n    }\n  }\n\n  protected buildForm() {\n    const form = new UntypedFormGroup({});\n    form.setControl('product', new UntypedFormControl(null));\n\n    this.form = form;\n  }\n\n  protected isEmpty(string?: string): boolean {\n    return string?.trim() === '' || string == null;\n  }\n\n  protected watchQueryChange(): Subscription {\n    return this.form.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(300),\n        filter((value) => {\n          if (this.config?.quickOrder?.searchForm) {\n            //Check if input to quick order is an empty after deleting input manually\n            if (this.isEmpty(value.product)) {\n              //Clear recommendation results on empty string\n              this.clear();\n              return false;\n            }\n            return (\n              !!value.product &&\n              value.product.length >=\n                this.config.quickOrder?.searchForm?.minCharactersBeforeRequest\n            );\n          }\n\n          return value;\n        })\n      )\n      .subscribe((value) => {\n        this.searchProducts(value.product);\n      });\n  }\n\n  protected searchProducts(query: string): void {\n    this.searchSubscription.add(\n      this.canAddProduct()\n        .pipe(\n          filter(Boolean),\n          switchMap(() =>\n            this.quickOrderService\n              .searchProducts(\n                query,\n                this.config?.quickOrder?.searchForm?.maxProducts\n              )\n              .pipe(take(1))\n          )\n        )\n        .subscribe((products) => {\n          this.results = products;\n\n          if (this.results.length) {\n            this.noResults = false;\n            this.open();\n          } else {\n            this.noResults = true;\n          }\n\n          this.cd?.detectChanges();\n        })\n    );\n  }\n\n  protected clearResults(): void {\n    this.results = [];\n  }\n\n  protected close(): void {\n    this.resetSearchSubscription();\n    this.clearResults();\n    this.noResults = false;\n  }\n\n  protected resetSearchSubscription(): void {\n    this.searchSubscription.unsubscribe();\n    this.searchSubscription = new Subscription();\n  }\n\n  protected watchProductAdd(): Subscription {\n    return this.quickOrderService\n      .getProductAdded()\n      .subscribe(() => this.clear());\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<form [formGroup]=\"form\" class=\"quick-order-form-container\">\n  <div\n    class=\"quick-order-form-input\"\n    role=\"search\"\n    [attr.aria-label]=\"'quickOrderForm.quickOrderSearch' | cxTranslate\"\n  >\n    <input\n      (blur)=\"onBlur($event)\"\n      (focus)=\"open()\"\n      (keydown.arrowdown)=\"focusNextChild($event)\"\n      (keydown.arrowup)=\"focusPreviousChild($event)\"\n      (keydown.enter)=\"addProduct($event)\"\n      (keydown.escape)=\"clear($event)\"\n      [attr.aria-label]=\"\n        'quickOrderForm.searchBoxLabel' | cxTranslate: { limit: limit }\n      \"\n      aria-controls=\"quick-order-search-results\"\n      aria-describedby=\"quickOrderFormInitialDescription\"\n      class=\"form-control\"\n      formControlName=\"product\"\n      placeholder=\"{{ 'quickOrderForm.placeholder' | cxTranslate }}\"\n      type=\"text\"\n    />\n\n    <button\n      *ngIf=\"form.get('product')?.value; else searchIcon\"\n      (click)=\"clear($event)\"\n      (keydown.enter)=\"clear($event)\"\n      [attr.aria-label]=\"'common.reset' | cxTranslate\"\n      class=\"quick-order-form-reset-icon\"\n    >\n      <cx-icon [type]=\"iconTypes.RESET\"></cx-icon>\n    </button>\n\n    <ng-template #searchIcon>\n      <button\n        [attr.aria-label]=\"'common.search' | cxTranslate\"\n        class=\"quick-order-form-search-icon\"\n        tabindex=\"-1\"\n      >\n        <cx-icon [type]=\"iconTypes.SEARCH\"></cx-icon>\n      </button>\n    </ng-template>\n\n    <span\n      *ngIf=\"!(canAddProduct() | async) && form.get('product')?.dirty\"\n      class=\"list-limit-reached-text\"\n      role=\"alert\"\n    >\n      {{ 'quickOrderForm.listLimitReached' | cxTranslate }}\n    </span>\n  </div>\n\n  <div\n    *ngIf=\"isResultsBoxOpen()\"\n    class=\"quick-order-results\"\n    role=\"dialog\"\n    id=\"quick-order-search-results\"\n  >\n    <ul\n      *ngIf=\"results.length\"\n      class=\"quick-order-results-products\"\n      role=\"listbox\"\n    >\n      <li\n        *ngFor=\"let product of results; let i = index\"\n        class=\"quick-order-results-product-container\"\n      >\n        <button\n          (blur)=\"onBlur($event)\"\n          (mousedown)=\"add(product, $event)\"\n          (keydown.arrowdown)=\"focusNextChild($event)\"\n          (keydown.arrowup)=\"focusPreviousChild($event)\"\n          (keydown.enter)=\"add(product, $event)\"\n          (keydown.escape)=\"clear($event)\"\n          [class.has-media]=\"\n            config?.quickOrder?.searchForm?.displayProductImages\n          \"\n          class=\"quick-order-results-product\"\n          role=\"option\"\n        >\n          <cx-media\n            *ngIf=\"config?.quickOrder?.searchForm?.displayProductImages\"\n            [alt]=\"product.name\"\n            [container]=\"product.images?.PRIMARY\"\n            class=\"media\"\n            format=\"thumbnail\"\n            role=\"presentation\"\n          ></cx-media>\n          <div class=\"name\" [innerHTML]=\"product.name\"></div>\n          <span class=\"id\">\n            {{\n              'quickOrderForm.id'\n                | cxTranslate\n                  : {\n                      id: product.code\n                    }\n            }}\n          </span>\n          <span class=\"price\">{{ product.price?.formattedValue }}</span>\n        </button>\n      </li>\n    </ul>\n\n    <span *ngIf=\"noResults\" class=\"quick-order-no-results\">\n      {{ 'quickOrderForm.noResults' | cxTranslate }}\n    </span>\n  </div>\n</form>\n\n<label\n  aria-live=\"polite\"\n  id=\"quickOrderFormInitialDescription\"\n  aria-atomic=\"true\"\n  class=\"cx-visually-hidden\"\n>\n  {{\n    results.length\n      ? ('quickOrderForm.productsResults'\n        | cxTranslate: { count: results.length })\n      : ''\n  }}\n  {{ 'quickOrderForm.initialDescription' | cxTranslate }}\n</label>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/cart/base/root';\nimport { QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: '[cx-quick-order-item], cx-quick-order-item',\n  templateUrl: './quick-order-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderItemComponent implements OnInit, OnDestroy {\n  quantityControl: UntypedFormControl;\n\n  get entry(): OrderEntry {\n    return this._entry;\n  }\n\n  @Input('entry') set entry(value: OrderEntry) {\n    this._entry = value;\n    this.quantityControl = new UntypedFormControl(this.entry.quantity, {\n      updateOn: 'blur',\n    });\n  }\n\n  @Input()\n  index: number;\n\n  @Input()\n  loading: boolean = false;\n\n  protected _entry: OrderEntry;\n  protected subscription = new Subscription();\n\n  constructor(\n    protected cd: ChangeDetectorRef,\n    protected quickOrderService: QuickOrderFacade\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.quantityControl.valueChanges.subscribe(() => {\n        this.quickOrderService.updateEntryQuantity(\n          this.index,\n          this.quantityControl.value\n        );\n      })\n    );\n\n    this.subscription.add(this.watchProductAdd());\n  }\n\n  removeEntry(): void {\n    this.quickOrderService.softDeleteEntry(this.index);\n    this.cd.detectChanges();\n  }\n\n  protected watchProductAdd(): Subscription {\n    return this.quickOrderService.getProductAdded().subscribe((productCode) => {\n      if (productCode === this.entry.product?.code) {\n        this.quantityControl = new UntypedFormControl(this.entry.quantity);\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<td role=\"cell\">\n  <div class=\"cx-table-item-container\">\n    <a\n      [ngClass]=\"{\n        disabled: loading,\n        'img-missing': !entry?.product?.images?.PRIMARY\n      }\"\n      [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n      tabindex=\"-1\"\n    >\n      <cx-media\n        [container]=\"entry?.product?.images?.PRIMARY\"\n        [alt]=\"entry?.product?.name\"\n        format=\"cartIcon\"\n      ></cx-media>\n    </a>\n    <div class=\"cx-info\">\n      <div class=\"cx-name\">\n        <a\n          [ngClass]=\"{ disabled: loading }\"\n          [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n          class=\"cx-link\"\n          >{{ entry.product?.name || '-' }}\n        </a>\n      </div>\n\n      <div class=\"cx-code\">\n        {{ 'quickOrderTable.id' | cxTranslate }} {{ entry.product?.code }}\n      </div>\n    </div>\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-price\">\n  <div class=\"cx-mobile-header\">\n    {{ 'quickOrderTable.itemPrice' | cxTranslate }}\n  </div>\n  <div class=\"cx-value\">\n    {{ entry.basePrice?.formattedValue || '-' }}\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-quantity\">\n  <div class=\"cx-mobile-header\">\n    {{ 'quickOrderTable.qty' | cxTranslate }}\n  </div>\n  <div class=\"cx-value\">\n    <cx-item-counter\n      [control]=\"quantityControl\"\n      [max]=\"entry.product?.stock?.stockLevel\"\n      [readonly]=\"loading\"\n    ></cx-item-counter>\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-actions\">\n  <button\n    (click)=\"removeEntry()\"\n    [attr.aria-label]=\"'common.remove' | cxTranslate\"\n    [disabled]=\"loading\"\n    class=\"btn btn-tertiary\"\n  >\n    {{ 'common.remove' | cxTranslate }}\n  </button>\n</td>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { OrderEntry } from '@spartacus/cart/base/root';\n\n@Component({\n  selector: 'cx-quick-order-table',\n  templateUrl: './quick-order-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderTableComponent {\n  @Input()\n  entries: OrderEntry[] = [];\n\n  @Input()\n  loading: boolean = false;\n}\n","<table\n  *ngIf=\"entries?.length > 0\"\n  class=\"cx-quick-order-table-wrapper\"\n  role=\"table\"\n>\n  <caption class=\"cx-visually-hidden\">\n    {{\n      'quickOrderTable.caption' | cxTranslate\n    }}\n  </caption>\n  <thead>\n    <tr role=\"row\" class=\"cx-item-list-header cx-quick-order-table-header\">\n      <th role=\"columnheader\" class=\"cx-item-list-desc\">\n        {{ 'quickOrderTable.product' | cxTranslate }}\n      </th>\n      <th role=\"columnheader\" class=\"cx-item-list-price\">\n        {{ 'quickOrderTable.price' | cxTranslate }}\n      </th>\n      <th role=\"columnheader\" class=\"cx-item-list-qty\">\n        {{ 'quickOrderTable.quantity' | cxTranslate }}\n      </th>\n      <th role=\"columnheader\" class=\"cx-item-list-actions\">\n        {{ 'quickOrderTable.actions' | cxTranslate }}\n      </th>\n    </tr>\n  </thead>\n  <tbody class=\"cx-item-list-items\">\n    <tr\n      cx-quick-order-item\n      class=\"cx-item-list-row cx-quick-order-table-row\"\n      *ngFor=\"let entry of entries; let i = index\"\n      [entry]=\"entry\"\n      [index]=\"i\"\n      [loading]=\"loading\"\n    ></tr>\n  </tbody>\n</table>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { ActiveCartFacade, OrderEntry } from '@spartacus/cart/base/root';\nimport {\n  CmsQuickOrderComponent,\n  QuickOrderStatePersistenceService,\n} from '@spartacus/cart/quick-order/core';\nimport {\n  QuickOrderAddEntryEvent,\n  QuickOrderFacade,\n} from '@spartacus/cart/quick-order/root';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  Product,\n} from '@spartacus/core';\nimport { CmsComponentData } from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { first, map, tap } from 'rxjs/operators';\nimport { QuickOrderFormComponent } from './form/quick-order-form.component';\n\n@Component({\n  selector: 'cx-quick-order',\n  templateUrl: './quick-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderComponent implements OnInit, OnDestroy {\n  cartId$: Observable<string>;\n  entries$: Observable<OrderEntry[]>;\n  quickOrderListLimit$: Observable<number | undefined> =\n    this.component.data$.pipe(\n      map((data) => data.quickOrderListLimit),\n      tap((limit) => {\n        if (!!limit) {\n          this.quickOrderService.setListLimit(limit);\n        }\n      })\n    );\n  isCartStable$: Observable<boolean> = combineLatest([\n    this.activeCartService.getActiveCartId(),\n    this.activeCartService.isStable(),\n  ]).pipe(map(([activeCartId, isStable]) => (!activeCartId ? true : isStable)));\n  globalMessageType = GlobalMessageType;\n  listLimitReached$: Observable<boolean>;\n\n  @ViewChild('quickOrderForm')\n  quickOrderForm: QuickOrderFormComponent;\n\n  protected cartErrors$ = new BehaviorSubject<QuickOrderAddEntryEvent[]>([]);\n  protected cartWarnings$ = new BehaviorSubject<QuickOrderAddEntryEvent[]>([]);\n  protected cartSuccesses$ = new BehaviorSubject<OrderEntry[]>([]);\n  protected showAddToCartInformation$ = new BehaviorSubject<boolean>(false);\n  protected nonPurchasableProductError$ = new BehaviorSubject<Product | null>(\n    null\n  );\n\n  constructor(\n    protected activeCartService: ActiveCartFacade,\n    protected component: CmsComponentData<CmsQuickOrderComponent>,\n    protected globalMessageService: GlobalMessageService,\n    protected quickOrderService: QuickOrderFacade,\n    protected quickOrderStatePersistenceService: QuickOrderStatePersistenceService\n  ) {}\n\n  ngOnInit(): void {\n    this.cartId$ = this.activeCartService.getActiveCartId();\n    this.entries$ = this.quickOrderService.getEntries();\n    this.quickOrderStatePersistenceService.initSync();\n  }\n\n  ngOnDestroy(): void {\n    this.quickOrderService.clearDeletedEntries();\n  }\n\n  get errors$(): Observable<QuickOrderAddEntryEvent[]> {\n    return this.cartErrors$.asObservable();\n  }\n\n  get warnings$(): Observable<QuickOrderAddEntryEvent[]> {\n    return this.cartWarnings$.asObservable();\n  }\n\n  get successes$(): Observable<OrderEntry[]> {\n    return this.cartSuccesses$.asObservable();\n  }\n\n  get nonPurchasableError$(): Observable<Product | null> {\n    return this.quickOrderService.getNonPurchasableProductError();\n  }\n\n  get addToCartInformation$(): Observable<boolean> {\n    return this.showAddToCartInformation$.asObservable();\n  }\n\n  get softDeletedEntries$(): Observable<Record<string, OrderEntry>> {\n    return this.quickOrderService.getSoftDeletedEntries();\n  }\n\n  clear(): void {\n    this.quickOrderService.clearList();\n    this.globalMessageService.add(\n      {\n        key: 'quickOrderTable.listCleared',\n      },\n      GlobalMessageType.MSG_TYPE_INFO\n    );\n  }\n\n  addToCart(orderEntries: OrderEntry[]): void {\n    if (!orderEntries.length) {\n      this.showAddToCartInformation$.next(true);\n      return;\n    }\n\n    this.clearStatuses();\n\n    this.quickOrderService\n      .addToCart()\n      .pipe(first())\n      .subscribe(([entries, errors]) => {\n        errors.forEach((err) => {\n          if (!err.entry) {\n            err.entry = orderEntries.find(\n              (e) => e.product?.code === err.productCode\n            );\n          }\n        });\n\n        this.extractErrors(errors);\n        this.extractWarnings(errors);\n\n        if (!errors.length) {\n          this.showAddedToCartSuccessMessage();\n        } else {\n          this.extractSuccesses(errors, entries);\n        }\n      });\n  }\n\n  clearErrors(): void {\n    this.cartErrors$.next([]);\n  }\n\n  clearWarnings(): void {\n    this.cartWarnings$.next([]);\n  }\n\n  clearSuccesses(): void {\n    this.cartSuccesses$.next([]);\n  }\n\n  clearAddToCartInformation(): void {\n    this.showAddToCartInformation$.next(false);\n  }\n\n  undoDeletion(entry: OrderEntry): void {\n    if (entry.product?.code) {\n      this.quickOrderService.restoreSoftDeletedEntry(entry.product.code);\n    }\n  }\n\n  clearDeletion(entry: OrderEntry): void {\n    if (entry.product?.code) {\n      this.quickOrderService.hardDeleteEntry(entry.product.code);\n    }\n  }\n\n  clearNonPurchasableError(): void {\n    this.quickOrderService.clearNonPurchasableProductError();\n  }\n\n  canAddProduct(): Observable<boolean> {\n    return this.quickOrderService.canAdd();\n  }\n\n  protected extractErrors(errors: QuickOrderAddEntryEvent[]): void {\n    const noAddedEntries = errors.filter((error) => error.quantityAdded === 0);\n\n    this.setErrors(noAddedEntries);\n  }\n\n  protected extractWarnings(errors: QuickOrderAddEntryEvent[]): void {\n    const warnings = errors.filter((error) => error.quantityAdded !== 0);\n\n    this.setWarnings(warnings);\n  }\n\n  protected extractSuccesses(\n    errors: QuickOrderAddEntryEvent[],\n    entries: OrderEntry[]\n  ): void {\n    const successAddedEntries: OrderEntry[] = [];\n\n    entries.forEach((entry) => {\n      const element = errors.find(\n        (error) => error.productCode === entry.product?.code\n      );\n      if (!element) {\n        successAddedEntries.push(entry);\n      }\n    });\n\n    this.setSuccesses(successAddedEntries);\n  }\n\n  protected clearStatuses(): void {\n    this.clearErrors();\n    this.clearWarnings();\n    this.clearSuccesses();\n  }\n\n  protected showAddedToCartSuccessMessage(): void {\n    this.globalMessageService.add(\n      {\n        key: 'quickOrderTable.addedtoCart',\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n  }\n\n  protected setErrors(errors: QuickOrderAddEntryEvent[]): void {\n    this.cartErrors$.next(errors);\n  }\n\n  protected setWarnings(warnings: QuickOrderAddEntryEvent[]): void {\n    this.cartWarnings$.next(warnings);\n  }\n\n  protected setSuccesses(entries: OrderEntry[]): void {\n    this.cartSuccesses$.next(entries);\n  }\n}\n","<div\n  aria-atomic=\"true\"\n  aria-live=\"assertive\"\n  aria-relevant=\"additions\"\n  class=\"quick-order-message-container\"\n>\n  <ng-container *ngIf=\"entries$ | async as entries\">\n    <ng-container *ngIf=\"!(canAddProduct() | async)\">\n      <ng-container *ngIf=\"quickOrderForm?.form?.get('product')?.dirty\">\n        <cx-message\n          [text]=\"\n            'quickOrderList.errors.listIsFull'\n              | cxTranslate: { count: entries.length }\n          \"\n          [isVisibleCloseButton]=\"false\"\n          [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n          class=\"quick-order-list-limit-message\"\n        >\n        </cx-message>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n\n  <ng-container *ngIf=\"addToCartInformation$ | async\">\n    <cx-message\n      (closeMessage)=\"clearAddToCartInformation()\"\n      [text]=\"\n        'quickOrderList.informations.addProductBeforeAddingToCart' | cxTranslate\n      \"\n      [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n      class=\"quick-order-add-to-cart-information-message\"\n    >\n    </cx-message>\n  </ng-container>\n\n  <ng-container *ngIf=\"nonPurchasableError$ | async as nonPurchasableError\">\n    <cx-message\n      (closeMessage)=\"clearNonPurchasableError()\"\n      [text]=\"\n        'quickOrderList.errors.nonPurchasableError'\n          | cxTranslate: { name: nonPurchasableError.name }\n      \"\n      [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n      class=\"quick-order-non-purchasable-product-error-message\"\n    >\n    </cx-message>\n  </ng-container>\n\n  <ng-container *ngIf=\"softDeletedEntries$ | async as deletedEntries\">\n    <cx-message\n      *ngFor=\"let deletedEntry of deletedEntries | keyvalue\"\n      (buttonAction)=\"undoDeletion(deletedEntry.value)\"\n      (closeMessage)=\"clearDeletion(deletedEntry.value)\"\n      [actionButtonText]=\"'quickOrderList.undo' | cxTranslate\"\n      [actionButtonMessage]=\"\n        'quickOrderList.revokeUndo'\n          | cxTranslate: { name: deletedEntry.value.product?.name }\n      \"\n      [text]=\"\n        'quickOrderList.productWasDeleted'\n          | cxTranslate: { name: deletedEntry.value.product?.name }\n      \"\n      [type]=\"globalMessageType.MSG_TYPE_CONFIRMATION\"\n      class=\"quick-order-deletions-message\"\n    >\n    </cx-message>\n  </ng-container>\n\n  <ng-container *ngIf=\"errors$ | async as errors\">\n    <cx-message\n      *ngIf=\"errors.length\"\n      (closeMessage)=\"clearErrors()\"\n      [accordionText]=\"'quickOrderList.errors.reviewErrors' | cxTranslate\"\n      [text]=\"'quickOrderList.errorProceedingToCart' | cxTranslate\"\n      [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n      class=\"quick-order-errors-message\"\n    >\n      <ul class=\"quick-order-errors\">\n        <li *ngFor=\"let error of errors\" class=\"quick-order-error-item\">\n          <span>\n            {{\n              'quickOrderList.errors.productIsOutOfStock'\n                | cxTranslate\n                  : {\n                      name: error.entry.product.name,\n                      code: error.entry.product.code\n                    }\n            }}\n          </span>\n        </li>\n      </ul>\n      <div class=\"cx-visually-hidden\">\n        {{\n          'quickOrderList.errors.outOfStockErrorFound'\n            | cxTranslate: { count: errors.length }\n        }}\n      </div>\n    </cx-message>\n  </ng-container>\n\n  <ng-container *ngIf=\"warnings$ | async as warnings\">\n    <cx-message\n      *ngIf=\"warnings.length\"\n      (closeMessage)=\"clearWarnings()\"\n      [accordionText]=\"'quickOrderList.warnings.reviewWarnings' | cxTranslate\"\n      [text]=\"'quickOrderList.warningProceedingToCart' | cxTranslate\"\n      [type]=\"globalMessageType.MSG_TYPE_WARNING\"\n      class=\"quick-order-warnings-message\"\n    >\n      <ul class=\"quick-order-warnings\">\n        <li *ngFor=\"let warning of warnings\" class=\"quick-order-warning-item\">\n          <span>\n            {{\n              'quickOrderList.warnings.productWasReduced'\n                | cxTranslate\n                  : {\n                      name: warning.entry.product.name,\n                      code: warning.entry.product.code,\n                      quantityAdded: warning.quantityAdded\n                    }\n            }}\n          </span>\n        </li>\n      </ul>\n      <div class=\"cx-visually-hidden\">\n        {{\n          'quickOrderList.warnings.reduceWarningFound'\n            | cxTranslate: { count: warnings.length }\n        }}\n      </div>\n    </cx-message>\n  </ng-container>\n\n  <ng-container *ngIf=\"successes$ | async as successes\">\n    <cx-message\n      *ngIf=\"successes.length\"\n      (closeMessage)=\"clearSuccesses()\"\n      [text]=\"'quickOrderList.successfullyAddedToCart' | cxTranslate\"\n      [type]=\"globalMessageType.MSG_TYPE_CONFIRMATION\"\n      class=\"quick-order-successes-message\"\n    >\n      <ul class=\"quick-order-successes\">\n        <li *ngFor=\"let entry of successes\" class=\"quick-order-success-item\">\n          <span>{{\n            'quickOrderList.successes.productAddedToCart'\n              | cxTranslate\n                : {\n                    name: entry.product.name,\n                    code: entry.product.code\n                  }\n          }}</span>\n        </li>\n      </ul>\n      <div class=\"cx-visually-hidden\">\n        {{\n          'quickOrderList.successes.addedToCartFound'\n            | cxTranslate: { count: successes.length }\n        }}\n      </div>\n    </cx-message>\n  </ng-container>\n</div>\n\n<ng-container *ngIf=\"quickOrderListLimit$ | async as quickOrderListLimit\">\n  <ng-container *ngIf=\"entries$ | async as entries\">\n    <div class=\"quick-order-header\">\n      <h2>\n        {{ 'quickOrderList.header' | cxTranslate }}\n      </h2>\n      <p>\n        {{\n          'quickOrderList.subHeader'\n            | cxTranslate: { limit: quickOrderListLimit }\n        }}\n      </p>\n    </div>\n\n    <div class=\"quick-order-form-body\">\n      <cx-quick-order-form #quickOrderForm [limit]=\"quickOrderListLimit\">\n      </cx-quick-order-form>\n    </div>\n\n    <div class=\"quick-order-table-body\">\n      <cx-quick-order-table\n        [entries]=\"entries\"\n        [loading]=\"!(isCartStable$ | async)\"\n      ></cx-quick-order-table>\n    </div>\n\n    <div class=\"quick-order-footer row\">\n      <div class=\"col-xs-12 col-md-5 col-lg-3\">\n        <button\n          *ngIf=\"entries.length\"\n          (click)=\"clear()\"\n          [attr.aria-label]=\"'quickOrderList.emptyList' | cxTranslate\"\n          [disabled]=\"!(isCartStable$ | async)\"\n          class=\"btn btn-block btn-secondary clear-button\"\n          type=\"button\"\n        >\n          {{ 'quickOrderList.emptyList' | cxTranslate }}\n        </button>\n      </div>\n\n      <div class=\"col-xs-12 col-md-5 col-lg-3\">\n        <cx-progress-button\n          (clickEvent)=\"addToCart(entries)\"\n          [ariaLabel]=\"'quickOrderList.addToCart' | cxTranslate\"\n          [class]=\"'btn-block add-button'\"\n          [loading]=\"!(isCartStable$ | async)\"\n        >\n          {{ 'quickOrderList.addToCart' | cxTranslate }}\n        </cx-progress-button>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  AtMessageModule,\n  FormErrorsModule,\n  IconModule,\n  ItemCounterModule,\n  MediaModule,\n  MessageComponentModule,\n  ProgressButtonModule,\n} from '@spartacus/storefront';\nimport { QuickOrderComponent } from './quick-order.component';\nimport { QuickOrderFormComponent } from './form/quick-order-form.component';\nimport { QuickOrderItemComponent } from './table/item/quick-order-item.component';\nimport { QuickOrderTableComponent } from './table/quick-order-table.component';\n\n@NgModule({\n  imports: [\n    AtMessageModule,\n    CommonModule,\n    FormErrorsModule,\n    I18nModule,\n    IconModule,\n    ItemCounterModule,\n    MediaModule,\n    MessageComponentModule,\n    ProgressButtonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        QuickOrderComponent: {\n          component: QuickOrderComponent,\n          data: {\n            quickOrderListLimit: 10,\n          },\n        },\n      },\n    }),\n  ],\n  declarations: [\n    QuickOrderComponent,\n    QuickOrderFormComponent,\n    QuickOrderItemComponent,\n    QuickOrderTableComponent,\n  ],\n  exports: [\n    QuickOrderComponent,\n    QuickOrderFormComponent,\n    QuickOrderItemComponent,\n    QuickOrderTableComponent,\n  ],\n})\nexport class QuickOrderListModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { QuickOrderOrderEntriesContextToken } from '@spartacus/cart/quick-order/root';\nimport { CartQuickOrderFormModule } from './cart-quick-order-form/cart-quick-order-form.module';\nimport { QuickOrderOrderEntriesContext } from './page-context/quick-order-order-entries.context';\nimport { QuickOrderListModule } from './quick-order/quick-order-list.module';\n\n@NgModule({\n  imports: [RouterModule, QuickOrderListModule, CartQuickOrderFormModule],\n  providers: [\n    {\n      provide: QuickOrderOrderEntriesContextToken,\n      useExisting: QuickOrderOrderEntriesContext,\n    },\n  ],\n})\nexport class QuickOrderComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './form/quick-order-form.component';\nexport * from './quick-order-list.module';\nexport * from './quick-order.component';\nexport * from './table/item/quick-order-item.component';\nexport * from './table/quick-order-table.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cart-quick-order-form/index';\nexport * from './page-context/index';\nexport * from './quick-order-components.module';\nexport * from './quick-order/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i4","i5","i1","i2","i3","i2.QuickOrderItemComponent","i7.QuickOrderFormComponent","i8.QuickOrderTableComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIG;MAgCU,2BAA2B,CAAA;AAYtC,IAAA,WAAA,CACY,iBAAmC,EACnC,YAA0B,EAC1B,WAA+B,EAC/B,oBAA0C,EAAA;AAH1C,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAC1B,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AAC/B,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAdtD,QAAA,IAAc,CAAA,cAAA,GAAwB,IAAI,CAAC,iBAAiB;AACzD,aAAA,QAAQ,EAAE;AACV,aAAA,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAClC,IAAA,CAAA,KAAK,GAAqB,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;AAC7D,QAAA,IAAG,CAAA,GAAA,GAAG,CAAC,CAAC;AAEE,QAAA,IAAA,CAAA,YAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;AAChD,QAAA,IAAA,CAAA,sBAAsB,GAAiB,IAAI,YAAY,EAAE,CAAC;AAC1D,QAAA,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;KAOnC;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,WAAW,GAAA;;AACT,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;AACjC,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,sBAAsB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;KAC5C;IAED,eAAe,GAAA;;AACb,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;AAC/B,YAAA,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;YACvC,OAAO;AACR,SAAA;AAED,QAAA,MAAM,WAAW,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;AAClE,QAAA,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;QAE5D,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAI,WAAW,IAAI,QAAQ,EAAE;YAC3B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AACxD,SAAA;KACF;IAES,SAAS,GAAA;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACxC,YAAA,QAAQ,EAAE;AACR,gBAAA,IAAI,CAAC,gBAAgB;gBACrB,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AACxD,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;IAES,mBAAmB,GAAA;;QAC3B,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc;aAChB,GAAG,CAAC,UAAU,CAAC,MACd,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;;YACjC,OAAA,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc;AAChB,iBAAA,GAAG,CAAC,UAAU,CAAC,0CACd,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAA;AAAA,SAAA,CAC9D,CACJ,CAAC;KACH;IAES,yBAAyB,GAAA;AACjC,QAAA,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAC7B,IAAI,CAAC,YAAY;aACd,GAAG,CAAC,wBAAwB,CAAC;aAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC,CAAC,IAA8B,KAAI;;YAC5C,IAAI,GAAG,GAAG,sCAAsC,CAAC;AACjD,YAAA,IAAI,kBAAkB,CAAC;AACvB,YAAA,IAAI,WAAW,GAAG,iBAAiB,CAAC,gBAAgB,CAAC;YAErD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,GAAG;oBACD,IAAI,CAAC,aAAa,GAAG,CAAC;AACpB,0BAAE,qCAAqC;0BACrC,kCAAkC,CAAC;gBAEzC,kBAAkB;oBAChB,IAAI,CAAC,aAAa,GAAG,CAAC;AACpB,0BAAE,6BAA6B;0BAC7B,4BAA4B,CAAC;AAEnC,gBAAA,WAAW,GAAG,iBAAiB,CAAC,qBAAqB,CAAC;AACvD,aAAA;AAED,YAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;gBACE,GAAG;AACH,gBAAA,MAAM,EAAE;AACN,oBAAA,OAAO,EAAE,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,KAAI,kBAAkB;oBACzD,QAAQ,EAAE,IAAI,CAAC,aAAa;AAC7B,iBAAA;aACF,EACD,WAAW,CACZ,CAAC;YACF,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB,CAAC,CACL,CAAC;KACH;IAES,sBAAsB,GAAA;AAC9B,QAAA,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAC7B,IAAI,CAAC,YAAY;aACd,GAAG,CAAC,qBAAqB,CAAC;aAC1B,IAAI,CAAC,KAAK,EAAE,CAAC;aACb,SAAS,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;AACE,gBAAA,GAAG,EAAE,8BAA8B;AACpC,aAAA,EACD,iBAAiB,CAAC,cAAc,CACjC,CAAC;SACH,CAAC,CACL,CAAC;KACH;AAES,IAAA,aAAa,CAAC,KAAa,EAAA;QACnC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;AAC9B,YAAA,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAClB,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;IAES,SAAS,GAAA;AACjB,QAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;KAC7B;;wHArIU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,gECpCxC,spEAyDA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDrBa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,0BAA0B,EAAA,eAAA,EAEnB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,spEAAA,EAAA,CAAA;;;AElCjD;;;;AAIG;MAuBU,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;sHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAHpB,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAVhC,YAAY,EAAE,mBAAmB,EAAE,UAAU,EAAE,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAW/D,2BAA2B,CAAA,EAAA,CAAA,CAAA;AAE1B,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAZxB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,2BAA2B,EAAE;AAC3B,oBAAA,SAAS,EAAE,2BAA2B;AACvC,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,mBAAmB,EAAE,UAAU,EAAE,gBAAgB,CAAA,EAAA,CAAA,CAAA;2FAa9D,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAdpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,UAAU,EAAE,gBAAgB,CAAC;AAC1E,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,2BAA2B,EAAE;AAC3B,oCAAA,SAAS,EAAE,2BAA2B;AACvC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,2BAA2B,CAAC;oBAC3C,OAAO,EAAE,CAAC,2BAA2B,CAAC;iBACvC,CAAA;;;AC1BD;;;;AAIG;;MC6BU,6BAA6B,CAAA;IAKxC,WACY,CAAA,iBAAmC,EACnC,gBAAkC,EAAA;AADlC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AAJrC,QAAA,IAAA,CAAA,IAAI,GAAG,kBAAkB,CAAC,WAAW,CAAC;KAK3C;IAEJ,UAAU,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;KAC5C;AAED,IAAA,UAAU,CAAC,YAA2B,EAAA;AACpC,QAAA,OAAO,KAAK,CACV,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW,KAC3B,IAAI,CAAC,iBAAiB;AACnB,aAAA,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,YAAY,CAAC;AAC7C,aAAA,IAAI,CACH,SAAS,CAAC,CAAC,MAAM,KAAI;AACnB,YAAA,IAAI,MAAM,EAAE;AACV,gBAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,CAC5D,MAAM,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,EAC9B,GAAG,CAAC,CAAC,OAAO,KAAI;oBACd,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAC/B,OAAO,EACP,WAAW,CAAC,QAAQ,CACrB,CAAC;iBACH,CAAC,EACF,GAAG,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,EAC1D,UAAU,CAAC,CAAC,QAA2B,KAAI;AACzC,oBAAA,OAAO,EAAE,CACP,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,WAAW,CAAC,WAAW,CAAC,CACrD,CAAC;iBACH,CAAC,CACH,CAAC;AACH,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,EAAE,CAAC;oBACR,WAAW,EAAE,WAAW,CAAC,WAAW;oBACpC,UAAU,EAAE,mBAAmB,CAAC,cAAc;AAC/C,iBAAA,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CACH,CACJ,CACF,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;KAC/C;IAES,aAAa,CACrB,OAAgB,EAChB,WAAwB,EAAA;;AAExB,QAAA,IACE,CAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAK,0CAAE,UAAU;YACzB,WAAW,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,EAC/C;YACA,OAAO;gBACL,WAAW,EAAE,WAAW,CAAC,WAAW;AACpC,gBAAA,WAAW,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,IAAI;gBAC1B,UAAU,EAAE,mBAAmB,CAAC,SAAS;gBACzC,QAAQ,EAAE,WAAW,CAAC,QAAQ;AAC9B,gBAAA,aAAa,EAAE,OAAO,CAAC,KAAK,CAAC,UAAU;aACxC,CAAC;AACH,SAAA;aAAM,IAAI,CAAA,MAAA,OAAO,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,gBAAgB,MAAK,YAAY,EAAE;YAC3D,OAAO;gBACL,WAAW,EAAE,WAAW,CAAC,WAAW;gBACpC,UAAU,EAAE,mBAAmB,CAAC,QAAQ;AACxC,gBAAA,WAAW,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,IAAI;aAC3B,CAAC;AACH,SAAA;AAAM,aAAA;YACL,OAAO;gBACL,WAAW,EAAE,WAAW,CAAC,WAAW;gBACpC,UAAU,EAAE,mBAAmB,CAAC,OAAO;aACxC,CAAC;AACH,SAAA;KACF;IAES,YAAY,CACpB,QAA2B,EAC3B,WAAmB,EAAA;;AAEnB,QAAA,IAAI,CAAA,CAAA,EAAA,GAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAC,CAAC,EAAE,IAAI,MAAK,wBAAwB,EAAE;YAChE,OAAO;gBACL,WAAW;gBACX,UAAU,EAAE,mBAAmB,CAAC,kBAAkB;aACnD,CAAC;AACH,SAAA;AAAM,aAAA;YACL,IAAI,SAAS,EAAE,EAAE;AACf,gBAAA,OAAO,CAAC,IAAI,CACV,gEAAgE,EAChE,QAAQ,CACT,CAAC;AACH,aAAA;YACD,OAAO;gBACL,WAAW;gBACX,UAAU,EAAE,mBAAmB,CAAC,aAAa;aAC9C,CAAC;AACH,SAAA;KACF;;0HAnGU,6BAA6B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAE,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAA7B,6BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,cAF5B,MAAM,EAAA,CAAA,CAAA;2FAEP,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAHzC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AChCD;;;;AAIG;;ACJH;;;;AAIG;AAuBH,MAAM,uBAAuB,GAAG,iCAAiC,CAAC;MAOrD,uBAAuB,CAAA;AAYlC,IAAA,WAAA,CACS,MAAc,EACX,EAAqB,EACrB,iBAAmC,EACnC,MAAiB,EAAA;AAHpB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACX,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;AACrB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAd7B,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AACtB,QAAA,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;AAC7B,QAAA,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AAC3B,QAAA,IAAO,CAAA,OAAA,GAAc,EAAE,CAAC;AAId,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAClC,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,YAAY,EAAE,CAAC;KAO9C;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;KAChD;AAED,IAAA,MAAM,CAAC,KAAc,EAAA;;QAEnB,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;AAC/B,gBAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC/B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,KAAK,CAAC,KAAa,EAAA;;AACjB,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,cAAc,EAAE,CAAC;AAExB,QAAA,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AAC3B,YAAA,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;AACtD,SAAA;AAED,QAAA,MAAM,OAAO,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;QAEhD,IAAI,CAAC,CAAC,OAAO,EAAE;AACb,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AACnB,SAAA;;QAGD,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,EAAE,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,EAAE,CAAC;KAC1B;IAED,GAAG,CAAC,OAAgB,EAAE,KAAY,EAAA;AAChC,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,cAAc,EAAE,CAAC;;;QAKxB,IAAI,OAAO,CAAC,gBAAgB,EAAE;AAC5B,YAAA,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;YAC9D,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO;AACR,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,CAAC;AAC1D,SAAA;AAED,QAAA,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC5C;AAED,IAAA,UAAU,CAAC,KAAY,EAAA;AACrB,QAAA,IAAI,CAAC,iBAAiB;AACnB,aAAA,MAAM,EAAE;AACR,aAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,aAAA,SAAS,CAAC,CAAC,MAAe,KAAI;AAC7B,YAAA,IAAI,MAAM,EAAE;;AAEV,gBAAA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,oBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;;AAElC,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,EAAE;oBACxC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACrD,oBAAA,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC1B,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACN;AAED,IAAA,cAAc,CAAC,KAAc,EAAA;AAC3B,QAAA,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACxB,OAAO;AACR,SAAA;AAED,QAAA,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;;QAGF,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAA,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,gBAAA,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACpB,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnC,aAAA;AACF,SAAA;KACF;AAED,IAAA,kBAAkB,CAAC,KAAc,EAAA;AAC/B,QAAA,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACxB,OAAO;AACR,SAAA;AAED,QAAA,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;;QAGF,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,YAAY,GAAG,CAAC,EAAE;gBACpB,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACrC,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnC,aAAA;AACF,SAAA;KACF;IAED,gBAAgB,GAAA;QACd,OAAO,IAAI,CAAC,MAAM;AAChB,cAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAI,CAAA,EAAA,uBAAuB,EAAE,CAAC;cACnE,KAAK,CAAC;KACX;IAED,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;KACxC;IAED,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;KACrD;;IAGS,iBAAiB,GAAA;QACzB,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CACnC,2CAA2C,CAC5C,CACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;KACF;AAES,IAAA,iBAAiB,CAAC,KAAc,EAAA;AACxC,QAAA,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;AAErD,QAAA,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;AACX,YAAA,KAAK,CAAC,MAAO,CAAC,IAAI,EAAE,CAAC;AACpC,SAAA;KACF;;IAGS,iBAAiB,GAAA;QACzB,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,OAAoB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;AACxD,SAAA;KACF;IAES,eAAe,GAAA;AACvB,QAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACnE;IAES,mBAAmB,GAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACpE;IAES,eAAe,CAAC,SAAiB,EAAE,GAAa,EAAA;;QAExD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,GAAG,KAAK,SAAS,EAAE;AACrB,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACvD,aAAA;AAAM,iBAAA;gBACL,GAAG;AACD,sBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;AACpD,sBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC3D,aAAA;AACF,SAAA;KACF;IAES,SAAS,GAAA;AACjB,QAAA,MAAM,IAAI,GAAG,IAAI,gBAAgB,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;AAEzD,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;AAES,IAAA,OAAO,CAAC,MAAe,EAAA;AAC/B,QAAA,OAAO,CAAA,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,IAAI,EAAE,MAAK,EAAE,IAAI,MAAM,IAAI,IAAI,CAAC;KAChD;IAES,gBAAgB,GAAA;AACxB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC1B,aAAA,IAAI,CACH,oBAAoB,EAAE,EACtB,YAAY,CAAC,GAAG,CAAC,EACjB,MAAM,CAAC,CAAC,KAAK,KAAI;;YACf,IAAI,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE;;gBAEvC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;;oBAE/B,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,oBAAA,OAAO,KAAK,CAAC;AACd,iBAAA;AACD,gBAAA,QACE,CAAC,CAAC,KAAK,CAAC,OAAO;oBACf,KAAK,CAAC,OAAO,CAAC,MAAM;AAClB,yBAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,0BAA0B,CAAA,EAChE;AACH,aAAA;AAED,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACnB,YAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACrC,SAAC,CAAC,CAAC;KACN;AAES,IAAA,cAAc,CAAC,KAAa,EAAA;QACpC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CACzB,IAAI,CAAC,aAAa,EAAE;aACjB,IAAI,CACH,MAAM,CAAC,OAAO,CAAC,EACf,SAAS,CAAC,MAAK;;YACb,OAAA,IAAI,CAAC,iBAAiB;AACnB,iBAAA,cAAc,CACb,KAAK,EACL,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CACjD;AACA,iBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;AAAA,SAAA,CACjB,CACF;AACA,aAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;AAExB,YAAA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACvB,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,IAAI,EAAE,CAAC;AACb,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACvB,aAAA;AAED,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,EAAE,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,EAAE,CAAC;SAC1B,CAAC,CACL,CAAC;KACH;IAES,YAAY,GAAA;AACpB,QAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;IAES,KAAK,GAAA;QACb,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IAES,uBAAuB,GAAA;AAC/B,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AACtC,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,YAAY,EAAE,CAAC;KAC9C;IAES,eAAe,GAAA;QACvB,OAAO,IAAI,CAAC,iBAAiB;AAC1B,aAAA,eAAe,EAAE;aACjB,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;oHA3RU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAD,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,uFClCpC,2xHA4HA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD1Fa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,qBAAqB,EAAA,eAAA,EAEd,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,2xHAAA,EAAA,CAAA;sLAStC,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEzCR;;;;AAIG;MAoBU,uBAAuB,CAAA;AAGlC,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAoB,KAAK,CAAC,KAAiB,EAAA;AACzC,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACjE,YAAA,QAAQ,EAAE,MAAM;AACjB,SAAA,CAAC,CAAC;KACJ;IAWD,WACY,CAAA,EAAqB,EACrB,iBAAmC,EAAA;AADnC,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;AACrB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AAP/C,QAAA,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;AAGf,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAKxC;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;AAC/C,YAAA,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CACxC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,eAAe,CAAC,KAAK,CAC3B,CAAC;SACH,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KAC/C;IAED,WAAW,GAAA;QACT,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KACzB;IAES,eAAe,GAAA;AACvB,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,WAAW,KAAI;;YACxE,IAAI,WAAW,MAAK,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAA,EAAE;AAC5C,gBAAA,IAAI,CAAC,eAAe,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACnE,gBAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;AACzB,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;;AACT,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;KAClC;;oHAzDU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,kJCxBpC,+uDAiEA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAH,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDzCa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,4CAA4C,EAAA,eAAA,EAErC,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,+uDAAA,EAAA,CAAA;yIAS3B,KAAK,EAAA,CAAA;sBAAxB,KAAK;uBAAC,OAAO,CAAA;gBAQd,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;;;AEzCR;;;;AAIG;MAUU,wBAAwB,CAAA;AALrC,IAAA,WAAA,GAAA;AAOE,QAAA,IAAO,CAAA,OAAA,GAAiB,EAAE,CAAC;AAG3B,QAAA,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;KAC1B;;qHANY,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,gHCdrC,woCAqCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,uBAAA,EAAA,QAAA,EAAA,4CAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDvBa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;+BACE,sBAAsB,EAAA,eAAA,EAEf,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,woCAAA,EAAA,CAAA;8BAI/C,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;;;AElBR;;;;AAIG;MAiCU,mBAAmB,CAAA;IA8B9B,WACY,CAAA,iBAAmC,EACnC,SAAmD,EACnD,oBAA0C,EAC1C,iBAAmC,EACnC,iCAAoE,EAAA;AAJpE,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAA0C;AACnD,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAiC,CAAA,iCAAA,GAAjC,iCAAiC,CAAmC;AAhChF,QAAA,IAAoB,CAAA,oBAAA,GAClB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CACvB,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC,EACvC,GAAG,CAAC,CAAC,KAAK,KAAI;YACZ,IAAI,CAAC,CAAC,KAAK,EAAE;AACX,gBAAA,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC5C,aAAA;SACF,CAAC,CACH,CAAC;AACJ,QAAA,IAAa,CAAA,aAAA,GAAwB,aAAa,CAAC;AACjD,YAAA,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE;AACxC,YAAA,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;AAClC,SAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,QAAQ,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC9E,QAAA,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAM5B,IAAA,CAAA,WAAW,GAAG,IAAI,eAAe,CAA4B,EAAE,CAAC,CAAC;QACjE,IAAA,CAAA,aAAa,GAAG,IAAI,eAAe,CAA4B,EAAE,CAAC,CAAC;QACnE,IAAA,CAAA,cAAc,GAAG,IAAI,eAAe,CAAe,EAAE,CAAC,CAAC;QACvD,IAAA,CAAA,yBAAyB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAChE,IAAA,CAAA,2BAA2B,GAAG,IAAI,eAAe,CACzD,IAAI,CACL,CAAC;KAQE;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;AACpD,QAAA,IAAI,CAAC,iCAAiC,CAAC,QAAQ,EAAE,CAAC;KACnD;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;KAC9C;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;KACxC;AAED,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;AAED,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KAC3C;AAED,IAAA,IAAI,oBAAoB,GAAA;AACtB,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,CAAC;KAC/D;AAED,IAAA,IAAI,qBAAqB,GAAA;AACvB,QAAA,OAAO,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;KACtD;AAED,IAAA,IAAI,mBAAmB,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;KACvD;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;AACnC,QAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;AACE,YAAA,GAAG,EAAE,6BAA6B;AACnC,SAAA,EACD,iBAAiB,CAAC,aAAa,CAChC,CAAC;KACH;AAED,IAAA,SAAS,CAAC,YAA0B,EAAA;AAClC,QAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AACxB,YAAA,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1C,OAAO;AACR,SAAA;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;AAErB,QAAA,IAAI,CAAC,iBAAiB;AACnB,aAAA,SAAS,EAAE;aACX,IAAI,CAAC,KAAK,EAAE,CAAC;aACb,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,KAAI;AAC/B,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACrB,gBAAA,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;oBACd,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAC3B,CAAC,CAAC,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAC,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,MAAK,GAAG,CAAC,WAAW,CAAA,EAAA,CAC3C,CAAC;AACH,iBAAA;AACH,aAAC,CAAC,CAAC;AAEH,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3B,YAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAE7B,YAAA,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,IAAI,CAAC,6BAA6B,EAAE,CAAC;AACtC,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxC,aAAA;AACH,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC3B;IAED,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC7B;IAED,cAAc,GAAA;AACZ,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC9B;IAED,yBAAyB,GAAA;AACvB,QAAA,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5C;AAED,IAAA,YAAY,CAAC,KAAiB,EAAA;;AAC5B,QAAA,IAAI,MAAA,KAAK,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,EAAE;YACvB,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACpE,SAAA;KACF;AAED,IAAA,aAAa,CAAC,KAAiB,EAAA;;AAC7B,QAAA,IAAI,MAAA,KAAK,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,EAAE;YACvB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC5D,SAAA;KACF;IAED,wBAAwB,GAAA;AACtB,QAAA,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,CAAC;KAC1D;IAED,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;KACxC;AAES,IAAA,aAAa,CAAC,MAAiC,EAAA;AACvD,QAAA,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC;AAE3E,QAAA,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;KAChC;AAES,IAAA,eAAe,CAAC,MAAiC,EAAA;AACzD,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC;AAErE,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC5B;IAES,gBAAgB,CACxB,MAAiC,EACjC,OAAqB,EAAA;QAErB,MAAM,mBAAmB,GAAiB,EAAE,CAAC;AAE7C,QAAA,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,KAAI;YACxB,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CACzB,CAAC,KAAK,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,KAAK,CAAC,WAAW,MAAK,CAAA,EAAA,GAAA,KAAK,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAA,CAAA,EAAA,CACrD,CAAC;YACF,IAAI,CAAC,OAAO,EAAE;AACZ,gBAAA,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;KACxC;IAES,aAAa,GAAA;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAES,6BAA6B,GAAA;AACrC,QAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;AACE,YAAA,GAAG,EAAE,6BAA6B;AACnC,SAAA,EACD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;KACH;AAES,IAAA,SAAS,CAAC,MAAiC,EAAA;AACnD,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/B;AAES,IAAA,WAAW,CAAC,QAAmC,EAAA;AACvD,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnC;AAES,IAAA,YAAY,CAAC,OAAqB,EAAA;AAC1C,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;;gHA5MU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAD,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAJ,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iCAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,wKCrChC,krOAwNA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,eAAA,EAAA,UAAA,EAAA,sBAAA,EAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,cAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,IAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAH,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDnLa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,gBAAgB,EAAA,eAAA,EAET,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,krOAAA,EAAA,CAAA;4PAsB/C,cAAc,EAAA,CAAA;sBADb,SAAS;uBAAC,gBAAgB,CAAA;;;AExD7B;;;;AAIG;MAkEU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,iBAZ7B,mBAAmB;QACnB,uBAAuB;QACvB,uBAAuB;AACvB,QAAA,wBAAwB,aA7BxB,eAAe;QACf,YAAY;QACZ,gBAAgB;QAChB,UAAU;QACV,UAAU;QACV,iBAAiB;QACjB,WAAW;QACX,sBAAsB;QACtB,oBAAoB;QACpB,mBAAmB;QACnB,YAAY;AACZ,QAAA,SAAS,aAqBT,mBAAmB;QACnB,uBAAuB;QACvB,uBAAuB;QACvB,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAGf,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAzBpB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,mBAAmB,EAAE;AACnB,oBAAA,SAAS,EAAE,mBAAmB;AAC9B,oBAAA,IAAI,EAAE;AACJ,wBAAA,mBAAmB,EAAE,EAAE;AACxB,qBAAA;AACF,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAxBC,eAAe;QACf,YAAY;QACZ,gBAAgB;QAChB,UAAU;QACV,UAAU;QACV,iBAAiB;QACjB,WAAW;QACX,sBAAsB;QACtB,oBAAoB;QACpB,mBAAmB;QACnB,YAAY;QACZ,SAAS,CAAA,EAAA,CAAA,CAAA;2FA2BA,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAxChC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,eAAe;wBACf,YAAY;wBACZ,gBAAgB;wBAChB,UAAU;wBACV,UAAU;wBACV,iBAAiB;wBACjB,WAAW;wBACX,sBAAsB;wBACtB,oBAAoB;wBACpB,mBAAmB;wBACnB,YAAY;wBACZ,SAAS;AACV,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,mBAAmB,EAAE;AACnB,oCAAA,SAAS,EAAE,mBAAmB;AAC9B,oCAAA,IAAI,EAAE;AACJ,wCAAA,mBAAmB,EAAE,EAAE;AACxB,qCAAA;AACF,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,mBAAmB;wBACnB,uBAAuB;wBACvB,uBAAuB;wBACvB,wBAAwB;AACzB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,uBAAuB;wBACvB,uBAAuB;wBACvB,wBAAwB;AACzB,qBAAA;iBACF,CAAA;;;ACrED;;;;AAIG;MAkBU,0BAA0B,CAAA;;uHAA1B,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,EAR3B,OAAA,EAAA,CAAA,YAAY,EAAE,oBAAoB,EAAE,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAQ3D,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,EAP1B,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,kCAAkC;AAC3C,YAAA,WAAW,EAAE,6BAA6B;AAC3C,SAAA;KACF,EAAA,OAAA,EAAA,CANS,YAAY,EAAE,oBAAoB,EAAE,wBAAwB,CAAA,EAAA,CAAA,CAAA;2FAQ3D,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBATtC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,oBAAoB,EAAE,wBAAwB,CAAC;AACvE,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,kCAAkC;AAC3C,4BAAA,WAAW,EAAE,6BAA6B;AAC3C,yBAAA;AACF,qBAAA;iBACF,CAAA;;;ACrBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;AAEG;;;;"}