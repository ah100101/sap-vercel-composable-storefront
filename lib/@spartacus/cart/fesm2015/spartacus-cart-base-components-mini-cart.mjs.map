{"version":3,"file":"spartacus-cart-base-components-mini-cart.mjs","sources":["../../../feature-libs/cart/base/components/mini-cart/mini-cart-component.service.ts","../../../feature-libs/cart/base/components/mini-cart/mini-cart.component.ts","../../../feature-libs/cart/base/components/mini-cart/mini-cart.component.html","../../../feature-libs/cart/base/components/mini-cart/mini-cart.module.ts","../../../feature-libs/cart/base/components/mini-cart/public_api.ts","../../../feature-libs/cart/base/components/mini-cart/spartacus-cart-base-components-mini-cart.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActiveCartFacade, CreateCartEvent } from '@spartacus/cart/base/root';\nimport {\n  AuthService,\n  BASE_SITE_CONTEXT_ID,\n  EventService,\n  SiteContextParamsService,\n  StatePersistenceService,\n  StorageSyncType,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  startWith,\n  switchMap,\n  takeWhile,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MiniCartComponentService {\n  constructor(\n    protected activeCartFacade: ActiveCartFacade,\n    protected authService: AuthService,\n    protected statePersistenceService: StatePersistenceService,\n    protected siteContextParamsService: SiteContextParamsService,\n    protected eventService: EventService\n  ) {}\n\n  /**\n   * This function supports lazy loading of the cart functionality's code. We only call\n   * the activeCartFacade if we know there is actually a cart.\n   * Without a cart, we can return a default value and\n   * avoid loading the cart library code.\n   */\n  getQuantity(): Observable<number> {\n    return this.activeCartRequired().pipe(\n      switchMap((activeCartRequired) => {\n        if (activeCartRequired) {\n          return this.activeCartFacade.getActive().pipe(\n            startWith({ totalUnitCount: 0 }),\n            map((cart) => cart.totalUnitCount || 0)\n          );\n        } else {\n          return of(0);\n        }\n      })\n    );\n  }\n\n  /**\n   * This function supports lazy loading of the cart functionality's code. We only call\n   * the activeCartFacade if we know there is actually a cart.\n   * Without a cart, we can return a default value and\n   * avoid loading the cart library code.\n   */\n  getTotalPrice(): Observable<string> {\n    return this.activeCartRequired().pipe(\n      switchMap((activeCartRequired) => {\n        if (activeCartRequired) {\n          return this.activeCartFacade\n            .getActive()\n            .pipe(map((cart) => cart.totalPrice?.formattedValue ?? ''));\n        } else {\n          return of('');\n        }\n      })\n    );\n  }\n\n  /**\n   * This function determines if it is required to get active cart data from ActiveCartFacade.\n   * It is required to call the ActiveCartFacade if one of these criteria is met:\n   * - There is an active cart id in the browser local storage\n   * - A user is authenticated\n   * - The cart library code chunk with the ActiveCartFacade implementation is already loaded.\n   *\n   * Once the observable returned by activeCartRequired emits true, it completes.\n   * activeCartRequired helps to make the mini cart compatible with some level of lazy loading.\n   */\n  protected activeCartRequired(): Observable<boolean> {\n    return combineLatest([\n      this.hasActiveCartInStorage(),\n      this.authService.isUserLoggedIn(),\n      this.isCartCreated(),\n    ]).pipe(\n      map(\n        ([hasCartInStorage, isUserLoggedIn, isCartCreated]) =>\n          hasCartInStorage || isUserLoggedIn || isCartCreated\n      ),\n      distinctUntilChanged(),\n      takeWhile((hasCart) => !hasCart, true)\n    );\n  }\n\n  protected hasActiveCartInStorage(): Observable<boolean> {\n    return this.getCartStateFromBrowserStorage().pipe(\n      map((state) => Boolean(state?.active))\n    );\n  }\n\n  protected isCartCreated(): Observable<boolean> {\n    return this.eventService.get(CreateCartEvent).pipe(\n      map((_) => true),\n      startWith(false)\n    );\n  }\n\n  protected getCartStateFromBrowserStorage(): Observable<\n    { active: string } | undefined\n  > {\n    return this.siteContextParamsService.getValues([BASE_SITE_CONTEXT_ID]).pipe(\n      map((context) => {\n        return this.statePersistenceService.readStateFromStorage({\n          key: 'cart',\n          context: context,\n          storageType: StorageSyncType.LOCAL_STORAGE,\n        });\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { MiniCartComponentService } from './mini-cart-component.service';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.miniCartComponentService.getQuantity();\n\n  total$: Observable<string> = this.miniCartComponentService.getTotalPrice();\n\n  constructor(protected miniCartComponentService: MiniCartComponentService) {}\n}\n","<a\n  [attr.aria-label]=\"\n    'miniCart.item' | cxTranslate: { count: quantity$ | async }\n  \"\n  [routerLink]=\"{ cxRoute: 'cart' } | cxUrl\"\n>\n  <cx-icon [type]=\"iconTypes.CART\"></cx-icon>\n\n  <span class=\"total\">\n    {{ 'miniCart.total' | cxTranslate: { total: total$ | async } }}\n  </span>\n\n  <span class=\"count\">\n    {{ 'miniCart.count' | cxTranslate: { count: quantity$ | async } }}\n  </span>\n</a>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [MiniCartComponent],\n  exports: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './mini-cart-component.service';\nexport * from './mini-cart.component';\nexport * from './mini-cart.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.MiniCartComponentService","i2","i5"],"mappings":"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"}