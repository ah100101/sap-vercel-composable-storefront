{"version":3,"file":"spartacus-cart-wish-list-core.mjs","sources":["../../../feature-libs/cart/wish-list/core/store/actions/wish-list.action.ts","../../../feature-libs/cart/wish-list/core/store/actions/index.ts","../../../feature-libs/cart/wish-list/core/utils/utils.ts","../../../feature-libs/cart/wish-list/core/facade/wish-list.service.ts","../../../feature-libs/cart/wish-list/core/facade/index.ts","../../../feature-libs/cart/wish-list/core/facade/facade-providers.ts","../../../feature-libs/cart/wish-list/core/store/effects/wish-list.effect.ts","../../../feature-libs/cart/wish-list/core/store/effects/index.ts","../../../feature-libs/cart/wish-list/core/store/wish-list-store.module.ts","../../../feature-libs/cart/wish-list/core/wish-list-core.module.ts","../../../feature-libs/cart/wish-list/core/public_api.ts","../../../feature-libs/cart/wish-list/core/spartacus-cart-wish-list-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { MULTI_CART_DATA } from '@spartacus/cart/base/core';\nimport { Cart } from '@spartacus/cart/base/root';\nimport { StateUtils } from '@spartacus/core';\n\nexport const CREATE_WISH_LIST = '[Wish List] Create Wish List';\nexport const CREATE_WISH_LIST_FAIL = '[Wish List] Create Wish List Fail';\nexport const CREATE_WISH_LIST_SUCCESS = '[Wish List] Create Wish List Success';\n\nexport const LOAD_WISH_LIST = '[Wish List] Load Wish List';\nexport const LOAD_WISH_LIST_SUCCESS = '[Wish List] Load Wish List Success';\nexport const LOAD_WISH_LIST_FAIL = '[Wish List] Load Wish List Fail';\n\nexport class CreateWishList implements Action {\n  readonly type = CREATE_WISH_LIST;\n  constructor(\n    public payload: {\n      userId: string;\n      name?: string;\n      description?: string;\n    }\n  ) {}\n}\n\nexport class CreateWishListSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_WISH_LIST_SUCCESS;\n  constructor(public payload: { cart: Cart; cartId: string }) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CreateWishListFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_WISH_LIST_FAIL;\n  constructor(public payload: { cartId: string; error?: any }) {\n    super(MULTI_CART_DATA, payload.cartId, payload.error);\n  }\n}\n\ninterface LoadWishListPayload {\n  userId: string;\n  /**\n   * This is tempCartId which is exact the wishlist name computed from customerId\n   */\n  cartId: string;\n}\n\n/**\n * When we try load wishlist for the first time we don't know cart id.\n * Instead we create temporary cartId from wishlist name to keep track of loading/error state.\n */\nexport class LoadWishList extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_WISH_LIST;\n  constructor(public payload: LoadWishListPayload) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\nexport class LoadWishListSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_WISH_LIST_SUCCESS;\n  constructor(public payload: { cart: Cart; cartId: string }) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\ninterface LoadWishListFailPayload {\n  /**\n   * Cart id used as a store entity key. This could point either to some\n   * temporary cart used to track loading/error state or to normal wish list entity.\n   */\n  cartId: string;\n  error: any;\n}\n\nexport class LoadWishListFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_WISH_LIST_FAIL;\n  constructor(public payload: LoadWishListFailPayload) {\n    super(MULTI_CART_DATA, payload.cartId, payload.error);\n  }\n}\n\nexport type WishListActions =\n  | CreateWishList\n  | CreateWishListSuccess\n  | CreateWishListFail\n  | LoadWishList\n  | LoadWishListSuccess\n  | LoadWishListFail;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as WishListActions from './wish-list.action';\n\nexport { WishListActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Compute wishlist cart name for customer.\n */\nexport function getWishlistName(customerId: string): string {\n  return `wishlist${customerId}`;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { StateWithMultiCart } from '@spartacus/cart/base/core';\nimport {\n  Cart,\n  CartType,\n  MultiCartFacade,\n  OrderEntry,\n} from '@spartacus/cart/base/root';\nimport { WishListFacade } from '@spartacus/cart/wish-list/root';\nimport { OCC_USER_ID_ANONYMOUS, UserIdService } from '@spartacus/core';\nimport { UserAccountFacade } from '@spartacus/user/account/root';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { WishListActions } from '../store/actions/index';\nimport { getWishlistName } from '../utils/utils';\n\n@Injectable()\nexport class WishListService implements WishListFacade {\n  constructor(\n    protected store: Store<StateWithMultiCart>,\n    protected userAccountFacade: UserAccountFacade,\n    protected multiCartFacade: MultiCartFacade,\n    protected userIdService: UserIdService\n  ) {}\n\n  createWishList(userId: string, name?: string, description?: string): void {\n    this.store.dispatch(\n      new WishListActions.CreateWishList({ userId, name, description })\n    );\n  }\n\n  getWishList(): Observable<Cart> {\n    return combineLatest([\n      this.getWishListId(),\n      this.userAccountFacade.get(),\n      this.userIdService.getUserId(),\n    ]).pipe(\n      distinctUntilChanged(),\n      tap(([wishListId, user, userId]) => {\n        if (\n          !Boolean(wishListId) &&\n          userId !== OCC_USER_ID_ANONYMOUS &&\n          user?.customerId\n        ) {\n          this.loadWishList(userId, user.customerId);\n        }\n      }),\n      filter(([wishListId]) => Boolean(wishListId)),\n      switchMap(([wishListId]) => this.multiCartFacade.getCart(wishListId))\n    );\n  }\n\n  loadWishList(userId: string, customerId: string): void {\n    this.store.dispatch(\n      new WishListActions.LoadWishList({\n        userId,\n        cartId: getWishlistName(customerId),\n      })\n    );\n  }\n\n  addEntry(productCode: string): void {\n    this.getWishListIdWithUserId().subscribe(([wishListId, userId]) =>\n      this.multiCartFacade.addEntry(userId, wishListId, productCode, 1)\n    );\n  }\n\n  removeEntry(entry: OrderEntry): void {\n    this.getWishListIdWithUserId().subscribe(([wishListId, userId]) =>\n      this.multiCartFacade.removeEntry(\n        userId,\n        wishListId,\n        entry.entryNumber as number\n      )\n    );\n  }\n\n  getWishListLoading(): Observable<boolean> {\n    return this.getWishListId().pipe(\n      switchMap((wishListId) =>\n        this.multiCartFacade.isStable(wishListId).pipe(map((stable) => !stable))\n      )\n    );\n  }\n\n  protected getWishListId(): Observable<string> {\n    return this.multiCartFacade.getCartIdByType(CartType.WISH_LIST);\n  }\n\n  private getWishListIdWithUserId(): Observable<string[]> {\n    return this.getWishListId().pipe(\n      distinctUntilChanged(),\n      withLatestFrom(\n        this.userIdService.getUserId(),\n        this.userAccountFacade.get()\n      ),\n      tap(([wishListId, userId, user]) => {\n        if (!Boolean(wishListId) && user?.customerId) {\n          this.loadWishList(userId, user.customerId);\n        }\n      }),\n      filter(([wishListId]) => Boolean(wishListId)),\n      map(([wishListId, userId]) => [wishListId, userId]),\n      take(1)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './wish-list.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport { WishListFacade } from '@spartacus/cart/wish-list/root';\nimport { WishListService } from './wish-list.service';\n\nexport const facadeProviders: Provider[] = [\n  WishListService,\n  {\n    provide: WishListFacade,\n    useExisting: WishListService,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action, select, Store } from '@ngrx/store';\nimport {\n  CartActions,\n  CartConnector,\n  getCartIdByUserId,\n  MultiCartSelectors,\n  StateWithMultiCart,\n} from '@spartacus/cart/base/core';\nimport { CartType } from '@spartacus/cart/base/root';\nimport {\n  isNotUndefined,\n  normalizeHttpError,\n  SiteContextActions,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  filter,\n  map,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { WishListActions } from '../actions';\n\n@Injectable()\nexport class WishListEffects {\n  createWishList$: Observable<\n    WishListActions.CreateWishListSuccess | WishListActions.CreateWishListFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(WishListActions.CREATE_WISH_LIST),\n      map((action: WishListActions.CreateWishList) => action.payload),\n      switchMap((payload) => {\n        return this.cartConnector.create(payload.userId).pipe(\n          switchMap((cart) => {\n            return this.cartConnector\n              .save(\n                payload.userId,\n                cart.code ?? '',\n                payload.name,\n                payload.description\n              )\n              .pipe(\n                switchMap((savedCart) => [\n                  new WishListActions.CreateWishListSuccess({\n                    cart: savedCart,\n                    cartId: getCartIdByUserId(savedCart, payload.userId),\n                  }),\n                ]),\n                catchError((error) =>\n                  from([\n                    new WishListActions.CreateWishListFail({\n                      cartId: cart.code ?? '',\n                      error: normalizeHttpError(error),\n                    }),\n                  ])\n                )\n              );\n          })\n        );\n      })\n    )\n  );\n\n  loadWishList$: Observable<\n    | WishListActions.LoadWishListSuccess\n    | CartActions.RemoveCart\n    | WishListActions.CreateWishList\n    | WishListActions.LoadWishListFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(WishListActions.LOAD_WISH_LIST),\n      map((action: WishListActions.LoadWishList) => action.payload),\n      concatMap((payload) => {\n        const { userId, cartId } = payload;\n        return this.cartConnector.loadAll(userId).pipe(\n          switchMap((carts) => {\n            const wishListName = cartId;\n            const wishList = carts.find((cart) => cart.name === wishListName);\n            const actions = [];\n            actions.push(\n              wishList\n                ? new WishListActions.LoadWishListSuccess({\n                    cart: wishList,\n                    cartId: getCartIdByUserId(wishList, userId),\n                  })\n                : new WishListActions.CreateWishList({\n                    userId,\n                    name: wishListName,\n                  })\n            );\n            // remove temp wishlist, which id is whishlist name\n            actions.push(new CartActions.RemoveCart({ cartId: wishListName }));\n            return actions;\n          }),\n          catchError((error) =>\n            from([\n              new WishListActions.LoadWishListFail({\n                cartId: cartId,\n                error: normalizeHttpError(error),\n              }),\n            ])\n          )\n        );\n      })\n    )\n  );\n\n  resetWishList$: Observable<\n    WishListActions.LoadWishListSuccess | WishListActions.LoadWishListFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        SiteContextActions.LANGUAGE_CHANGE,\n        SiteContextActions.CURRENCY_CHANGE\n      ),\n      withLatestFrom(\n        this.userIdService.getUserId(),\n        this.store.pipe(\n          filter((store) => !!store.cart),\n          select(MultiCartSelectors.getCartIdByTypeFactory(CartType.WISH_LIST))\n        )\n      ),\n      switchMap(([, userId, wishListId]) => {\n        if (Boolean(wishListId)) {\n          return this.cartConnector.load(userId, wishListId).pipe(\n            switchMap((wishList) => [\n              new WishListActions.LoadWishListSuccess({\n                cart: wishList ?? {},\n                cartId: getCartIdByUserId(wishList, userId),\n              }),\n            ]),\n            catchError((error) =>\n              from([\n                new WishListActions.LoadWishListFail({\n                  cartId: wishListId,\n                  error: normalizeHttpError(error),\n                }),\n              ])\n            )\n          );\n        }\n        return EMPTY;\n      })\n    )\n  );\n\n  setWishListId$: Observable<CartActions.SetCartTypeIndex> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        WishListActions.CREATE_WISH_LIST_SUCCESS,\n        WishListActions.LOAD_WISH_LIST_SUCCESS\n      ),\n      map((action: Action) => {\n        switch (action.type) {\n          case WishListActions.CREATE_WISH_LIST_SUCCESS:\n          case WishListActions.LOAD_WISH_LIST_SUCCESS: {\n            return new CartActions.SetCartTypeIndex({\n              cartType: CartType.WISH_LIST,\n              cartId: (action as StateUtils.EntitySuccessAction).meta\n                .entityId as string,\n            });\n          }\n        }\n      }),\n      filter(isNotUndefined)\n    )\n  );\n\n  setWishListData$: Observable<CartActions.SetCartData> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        WishListActions.CREATE_WISH_LIST_SUCCESS,\n        WishListActions.LOAD_WISH_LIST_SUCCESS\n      ),\n      map((action: StateUtils.EntitySuccessAction) => {\n        switch (action.type) {\n          case WishListActions.CREATE_WISH_LIST_SUCCESS:\n          case WishListActions.LOAD_WISH_LIST_SUCCESS: {\n            return new CartActions.SetCartData({\n              cart: action.payload.cart,\n              cartId: action.payload.cartId,\n            });\n          }\n        }\n      }),\n      filter(isNotUndefined)\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private cartConnector: CartConnector,\n    private userIdService: UserIdService,\n    private store: Store<StateWithMultiCart>\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WishListEffects } from './wish-list.effect';\n\nexport const effects: any[] = [WishListEffects];\n\nexport * from './wish-list.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { effects } from './effects/index';\n\n@NgModule({\n  imports: [EffectsModule.forFeature(effects)],\n})\nexport class WishListStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { facadeProviders } from './facade/facade-providers';\nimport { WishListStoreModule } from './store/wish-list-store.module';\n\n@NgModule({\n  imports: [WishListStoreModule],\n  providers: [...facadeProviders],\n})\nexport class WishListCoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './facade/index';\nexport * from './store/actions/index';\nexport * from './utils/utils';\nexport * from './wish-list-core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["WishListActions.CreateWishList","WishListActions.LoadWishList","WishListActions.CREATE_WISH_LIST","WishListActions.CreateWishListSuccess","WishListActions.CreateWishListFail","WishListActions.LOAD_WISH_LIST","WishListActions.LoadWishListSuccess","WishListActions.LoadWishListFail","WishListActions.CREATE_WISH_LIST_SUCCESS","WishListActions.LOAD_WISH_LIST_SUCCESS","i1","i2","i3","i4"],"mappings":"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"}