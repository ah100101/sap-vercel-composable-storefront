{"version":3,"file":"spartacus-cart-quick-order-core.mjs","sources":["../../../feature-libs/cart/quick-order/core/models/cms.model.ts","../../../feature-libs/cart/quick-order/core/models/index.ts","../../../feature-libs/cart/quick-order/core/services/quick-order.service.ts","../../../feature-libs/cart/quick-order/core/facade/facade-providers.ts","../../../feature-libs/cart/quick-order/core/services/quick-order-state-persistance.service.ts","../../../feature-libs/cart/quick-order/core/quick-order-core.module.ts","../../../feature-libs/cart/quick-order/core/services/index.ts","../../../feature-libs/cart/quick-order/core/public_api.ts","../../../feature-libs/cart/quick-order/core/spartacus-cart-quick-order-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsComponent } from '@spartacus/core';\n\nexport interface CmsQuickOrderComponent extends CmsComponent {\n  quickOrderListLimit?: number;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport {\n  ActiveCartFacade,\n  CartAddEntryFailEvent,\n  CartAddEntrySuccessEvent,\n  OrderEntry,\n  ProductData,\n} from '@spartacus/cart/base/root';\nimport {\n  defaultQuickOrderConfig,\n  QuickOrderAddEntryEvent,\n  QuickOrderFacade,\n} from '@spartacus/cart/quick-order/root';\nimport {\n  Config,\n  EventService,\n  HttpErrorModel,\n  Product,\n  ProductSearchConnector,\n  ProductSearchPage,\n  SearchConfig,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n  timer,\n} from 'rxjs';\nimport { filter, first, map, switchMap, take, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class QuickOrderService implements QuickOrderFacade, OnDestroy {\n  protected productAdded$: Subject<string> = new Subject<string>();\n  protected entries$: BehaviorSubject<OrderEntry[]> = new BehaviorSubject<\n    OrderEntry[]\n  >([]);\n  protected softDeletedEntries$: BehaviorSubject<Record<string, OrderEntry>> =\n    new BehaviorSubject<Record<string, OrderEntry>>({});\n  protected nonPurchasableProductError$: BehaviorSubject<Product | null> =\n    new BehaviorSubject<Product | null>(null);\n  protected hardDeleteTimeout =\n    this.config.quickOrder?.list?.hardDeleteTimeout || 7000;\n  protected quickOrderListLimit = 0;\n  protected clearDeleteTimeouts: Record<string, Subscription> = {};\n\n  constructor(\n    protected activeCartService: ActiveCartFacade,\n    protected config: Config,\n    protected eventService: EventService,\n    protected productSearchConnector: ProductSearchConnector\n  ) {}\n\n  ngOnDestroy(): void {\n    this.clearDeletedEntries();\n  }\n\n  /**\n   * Get entries\n   */\n  getEntries(): BehaviorSubject<OrderEntry[]> {\n    return this.entries$;\n  }\n\n  /**\n   * Search products using query\n   */\n  searchProducts(query: string, maxProducts?: number): Observable<Product[]> {\n    // TODO(#14059): Remove condition\n    if (this.productSearchConnector) {\n      const searchConfig: SearchConfig = {\n        pageSize:\n          maxProducts ||\n          defaultQuickOrderConfig.quickOrder?.searchForm?.maxProducts,\n      };\n      return this.productSearchConnector\n        .search(query, searchConfig)\n        .pipe(\n          map((searchPage: ProductSearchPage) => searchPage.products || [])\n        );\n    } else {\n      return of([]);\n    }\n  }\n\n  /**\n   * Clear a list of added entries\n   */\n  clearList(): void {\n    this.entries$.next([]);\n  }\n\n  /**\n   * Get information about the possibility to add the next product\n   */\n  canAdd(code?: string, productData?: ProductData[]): Observable<boolean> {\n    if (code && productData) {\n      return of(\n        this.isProductOnTheList(code) ||\n          !this.isLimitExceeded(code, productData)\n      );\n    } else if (code) {\n      return of(this.isProductOnTheList(code) || !this.isLimitExceeded());\n    } else {\n      return of(!this.isLimitExceeded());\n    }\n  }\n\n  /**\n   * Set quick order list limit property\n   */\n  setListLimit(limit: number): void {\n    this.quickOrderListLimit = limit;\n  }\n\n  /**\n   * Load a list of entries\n   */\n  loadEntries(entries: OrderEntry[] = []): void {\n    this.entries$.next(entries);\n  }\n\n  /**\n   * Load a list of entries\n   */\n  updateEntryQuantity(entryIndex: number, quantity: number): void {\n    const entries = this.entries$.getValue() || [];\n    entries[entryIndex].quantity = quantity;\n\n    this.entries$.next(entries);\n  }\n\n  /**\n   * Delete single entry from the list\n   */\n  softDeleteEntry(index: number): void {\n    this.entries$.pipe(take(1)).subscribe((entries: OrderEntry[]) => {\n      const entriesList = entries;\n      this.addSoftEntryDeletion(entriesList[index], true);\n      entriesList.splice(index, 1);\n      this.entries$.next(entriesList);\n    });\n  }\n\n  /**\n   * Add product to the quick order list\n   */\n  addProduct(product: Product, quantity: number = 1): void {\n    const entry = this.generateOrderEntry(product, quantity);\n    this.addEntry(entry);\n  }\n\n  /**\n   * Return product added subject\n   */\n  getProductAdded(): Subject<string> {\n    return this.productAdded$;\n  }\n\n  /**\n   * Set product added subject\n   */\n  setProductAdded(productCode: string): void {\n    this.productAdded$.next(productCode);\n  }\n\n  /**\n   * Adding to cart all products from the list\n   */\n  addToCart(): Observable<[OrderEntry[], QuickOrderAddEntryEvent[]]> {\n    let entries: OrderEntry[] = [];\n    const events: QuickOrderAddEntryEvent[] = [];\n    const subscription = this.eventService\n      .get(CartAddEntrySuccessEvent)\n      .subscribe((cartEvent: CartAddEntrySuccessEvent) => {\n        if (\n          cartEvent.quantityAdded === 0 ||\n          (!!cartEvent.quantityAdded &&\n            cartEvent.quantityAdded < cartEvent.quantity)\n        ) {\n          events.push(this.createQuickOrderResultEvent(cartEvent));\n        }\n      });\n\n    subscription.add(\n      this.eventService\n        .get(CartAddEntryFailEvent)\n        .subscribe((cartEvent: CartAddEntryFailEvent) => {\n          events.push(this.createQuickOrderResultEvent(cartEvent));\n        })\n    );\n\n    return this.getEntries().pipe(\n      first(),\n      switchMap((elements) => {\n        entries = elements;\n        this.activeCartService.addEntries(elements);\n        this.clearList();\n\n        return this.activeCartService.isStable();\n      }),\n      filter((isStable) => isStable),\n      map(() => [entries, events] as [OrderEntry[], QuickOrderAddEntryEvent[]]),\n      tap(() => subscription.unsubscribe())\n    );\n  }\n\n  /**\n   * Return soft deleted entries\n   */\n  getSoftDeletedEntries(): Observable<Record<string, OrderEntry>> {\n    return this.softDeletedEntries$;\n  }\n\n  /**\n   * Restore soft deleted entry\n   */\n  restoreSoftDeletedEntry(productCode: string): void {\n    const entry = this.getSoftDeletedEntry(productCode);\n\n    this.addEntry(entry);\n    this.hardDeleteEntry(productCode);\n  }\n\n  /**\n   * Clear deleted entry from the list\n   */\n  hardDeleteEntry(productCode: string): void {\n    const entry = this.getSoftDeletedEntry(productCode);\n    const deletedEntries = this.softDeletedEntries$.getValue();\n\n    if (entry) {\n      delete deletedEntries[productCode];\n      this.softDeletedEntries$.next(deletedEntries);\n    }\n\n    this.clearDeleteTimeout(productCode);\n  }\n\n  /**\n   * Clear all deleted entries and timeout subscriptions\n   */\n  clearDeletedEntries(): void {\n    Object.values(this.clearDeleteTimeouts).forEach(\n      (subscription: Subscription) => subscription.unsubscribe()\n    );\n\n    this.softDeletedEntries$.next({});\n    this.clearDeleteTimeouts = {};\n  }\n\n  /**\n   *  Return non purchasable product error\n   */\n  getNonPurchasableProductError(): Observable<Product | null> {\n    return this.nonPurchasableProductError$;\n  }\n\n  /**\n   * Set error that selected product is not purchasable\n   */\n  setNonPurchasableProductError(product: Product): void {\n    this.nonPurchasableProductError$.next(product);\n  }\n\n  /**\n   * Clear not purchasable product error\n   */\n  clearNonPurchasableProductError(): void {\n    this.nonPurchasableProductError$.next(null);\n  }\n\n  /**\n   * Add soft deleted entry to the cached list\n   */\n  protected addSoftEntryDeletion(\n    entry: OrderEntry,\n    clearTimeout: boolean = true\n  ): void {\n    const deletedEntries = this.softDeletedEntries$.getValue();\n    const productCode = entry?.product?.code;\n\n    if (productCode) {\n      deletedEntries[productCode] = entry;\n\n      this.softDeletedEntries$.next(deletedEntries);\n\n      if (clearTimeout) {\n        const subscription: Subscription = timer(\n          this.hardDeleteTimeout\n        ).subscribe(() => {\n          this.hardDeleteEntry(productCode);\n        });\n\n        this.clearDeleteTimeouts[productCode] = subscription;\n      }\n    }\n  }\n\n  /**\n   * Get soft deletion entry\n   */\n  protected getSoftDeletedEntry(productCode: string): OrderEntry {\n    const deletedEntries = this.softDeletedEntries$.getValue();\n\n    return deletedEntries[productCode];\n  }\n\n  /**\n   * Generate Order Entry from Product\n   */\n  protected generateOrderEntry(\n    product: Product,\n    quantity?: number\n  ): OrderEntry {\n    return {\n      basePrice: product.price,\n      product,\n      quantity,\n      totalPrice: product.price,\n    } as OrderEntry;\n  }\n\n  /**\n   * Add single entry to the list\n   */\n  protected addEntry(entry: OrderEntry): void {\n    if (\n      entry?.product?.code &&\n      !this.isProductOnTheList(entry.product.code) &&\n      this.isLimitExceeded()\n    ) {\n      return;\n    }\n\n    const entries = this.entries$.getValue() || [];\n    const entryStockLevel = entry.product?.stock?.stockLevel;\n\n    if (entryStockLevel && entry.quantity && entry.quantity > entryStockLevel) {\n      entry.quantity = entryStockLevel;\n    }\n\n    if (entry.product?.code && this.isProductOnTheList(entry.product.code)) {\n      const entryIndex = entries.findIndex(\n        (item: OrderEntry) => item.product?.code === entry.product?.code\n      );\n      const quantity = entries[entryIndex].quantity;\n\n      if (quantity && entry.quantity) {\n        entries[entryIndex].quantity = quantity + entry?.quantity;\n        const newQuantity = entries[entryIndex].quantity;\n\n        if (newQuantity && entryStockLevel && newQuantity > entryStockLevel) {\n          entries[entryIndex].quantity = entryStockLevel;\n        }\n\n        this.entries$.next([...entries]);\n      }\n    } else {\n      this.entries$.next([...entries, ...[entry]]);\n    }\n\n    this.productAdded$.next(entry.product?.code);\n  }\n\n  /**\n   * Verify if product is already on the list\n   */\n  protected isProductOnTheList(productCode: string): boolean {\n    const entries = this.entries$.getValue() || [];\n\n    return !!entries.find(\n      (item: OrderEntry) => item.product?.code === productCode\n    );\n  }\n\n  protected isLimitExceeded(\n    code?: string,\n    productsData?: ProductData[]\n  ): boolean {\n    const entries = this.entries$.getValue() || [];\n\n    /**\n     * Used to offset the amount of existing entries with the index of the missing\n     * entry to be added. We can use this offset to see if adding the missing product\n     * would hit the list limit before we attempt to add it.\n     */\n    const missingProductIndex =\n      code && productsData\n        ? this.getMissingProductIndex(entries, code, productsData)\n        : 0;\n\n    return (\n      entries.length + (missingProductIndex || 0) >= this.quickOrderListLimit\n    );\n  }\n\n  /**\n   * Get the index of the missing product in the productsData array identified by code\n   * from the entries array.\n   */\n  protected getMissingProductIndex(\n    entries: OrderEntry[],\n    code: string,\n    productsData: ProductData[]\n  ) {\n    const missingProducts =\n      productsData?.filter(\n        (product) =>\n          !entries\n            .map((entry) => entry.product?.code)\n            .includes(product.productCode)\n      ) || [];\n    return missingProducts.findIndex((product) => product.productCode === code);\n  }\n\n  private createQuickOrderResultEvent(\n    cartEvent: CartAddEntrySuccessEvent | CartAddEntryFailEvent\n  ): QuickOrderAddEntryEvent {\n    const evt: QuickOrderAddEntryEvent = {\n      productCode: cartEvent.productCode,\n      quantity: cartEvent.quantity,\n    };\n\n    if ('entry' in cartEvent) {\n      evt.entry = cartEvent.entry;\n    }\n    if ('quantityAdded' in cartEvent) {\n      evt.quantityAdded = cartEvent.quantityAdded;\n    }\n    if ('error' in cartEvent && cartEvent.error instanceof HttpErrorModel) {\n      evt.error = cartEvent.error;\n    }\n\n    if (evt.error?.details?.length) {\n      const isOutOfStock = evt.error?.details.some(\n        (e) => e.type === 'InsufficientStockError'\n      );\n      evt.quantityAdded = isOutOfStock ? 0 : evt.quantity;\n    }\n\n    return evt;\n  }\n\n  protected clearDeleteTimeout(productCode: string): void {\n    const clearMessageTimout = this.clearDeleteTimeouts[productCode];\n\n    if (clearMessageTimout) {\n      clearMessageTimout.unsubscribe();\n      delete this.clearDeleteTimeouts[productCode];\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport { QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport { QuickOrderService } from '../services/quick-order.service';\n\nexport const facadeProviders: Provider[] = [\n  QuickOrderService,\n  {\n    provide: QuickOrderFacade,\n    useExisting: QuickOrderService,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { OrderEntry } from '@spartacus/cart/base/root';\nimport { QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport {\n  BASE_SITE_CONTEXT_ID,\n  SiteContextParamsService,\n  StatePersistenceService,\n  StorageSyncType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuickOrderStatePersistenceService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected quickOrderService: QuickOrderFacade,\n    protected siteContextParamsService: SiteContextParamsService,\n    protected statePersistenceService: StatePersistenceService\n  ) {}\n\n  /**\n   * Identifier used for storage key.\n   */\n  protected key = 'quick-order';\n\n  /**\n   * Initializes the synchronization between state and browser storage.\n   */\n  initSync(): void {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage({\n        key: this.key,\n        state$: this.quickOrderService.getEntries(),\n        context$: this.siteContextParamsService.getValues([\n          BASE_SITE_CONTEXT_ID,\n        ]),\n        storageType: StorageSyncType.SESSION_STORAGE,\n        onRead: (state) => this.onRead(state),\n      })\n    );\n  }\n\n  protected onRead(state: OrderEntry[] | undefined): void {\n    if (state) {\n      this.quickOrderService.loadEntries(state);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { facadeProviders } from './facade/facade-providers';\nimport { QuickOrderStatePersistenceService } from './services/quick-order-state-persistance.service';\n\n@NgModule({\n  providers: [...facadeProviders, QuickOrderStatePersistenceService],\n})\nexport class QuickOrderCoreModule {\n  static forRoot(): ModuleWithProviders<QuickOrderCoreModule> {\n    return {\n      ngModule: QuickOrderCoreModule,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './quick-order.service';\nexport * from './quick-order-state-persistance.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './models/index';\nexport * from './quick-order-core.module';\nexport * from './services/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1"],"mappings":";;;;;;;;;;;AAAA;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAmCU,iBAAiB,CAAA;AAc5B,IAAA,WAAA,CACY,iBAAmC,EACnC,MAAc,EACd,YAA0B,EAC1B,sBAA8C,EAAA;QAH9C,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;QACnC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;AAjBhD,QAAA,IAAA,CAAA,aAAa,GAAoB,IAAI,OAAO,EAAU,CAAC;AACvD,QAAA,IAAA,CAAA,QAAQ,GAAkC,IAAI,eAAe,CAErE,EAAE,CAAC,CAAC;AACI,QAAA,IAAA,CAAA,mBAAmB,GAC3B,IAAI,eAAe,CAA6B,EAAE,CAAC,CAAC;AAC5C,QAAA,IAAA,CAAA,2BAA2B,GACnC,IAAI,eAAe,CAAiB,IAAI,CAAC,CAAC;AAClC,QAAA,IAAA,CAAA,iBAAiB,GACzB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,EAAE,iBAAiB,IAAI,IAAI,CAAC;QAChD,IAAmB,CAAA,mBAAA,GAAG,CAAC,CAAC;QACxB,IAAmB,CAAA,mBAAA,GAAiC,EAAE,CAAC;KAO7D;IAEJ,WAAW,GAAA;QACT,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;AAED;;AAEG;IACH,UAAU,GAAA;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AAED;;AAEG;IACH,cAAc,CAAC,KAAa,EAAE,WAAoB,EAAA;;QAEhD,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC/B,YAAA,MAAM,YAAY,GAAiB;AACjC,gBAAA,QAAQ,EACN,WAAW;AACX,oBAAA,uBAAuB,CAAC,UAAU,EAAE,UAAU,EAAE,WAAW;aAC9D,CAAC;YACF,OAAO,IAAI,CAAC,sBAAsB;AAC/B,iBAAA,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC;AAC3B,iBAAA,IAAI,CACH,GAAG,CAAC,CAAC,UAA6B,KAAK,UAAU,CAAC,QAAQ,IAAI,EAAE,CAAC,CAClE,CAAC;AACL,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACf,SAAA;KACF;AAED;;AAEG;IACH,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACxB;AAED;;AAEG;IACH,MAAM,CAAC,IAAa,EAAE,WAA2B,EAAA;QAC/C,IAAI,IAAI,IAAI,WAAW,EAAE;AACvB,YAAA,OAAO,EAAE,CACP,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBAC3B,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,WAAW,CAAC,CAC3C,CAAC;AACH,SAAA;AAAM,aAAA,IAAI,IAAI,EAAE;AACf,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACrE,SAAA;AAAM,aAAA;YACL,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACpC,SAAA;KACF;AAED;;AAEG;AACH,IAAA,YAAY,CAAC,KAAa,EAAA;AACxB,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;KAClC;AAED;;AAEG;IACH,WAAW,CAAC,UAAwB,EAAE,EAAA;AACpC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B;AAED;;AAEG;IACH,mBAAmB,CAAC,UAAkB,EAAE,QAAgB,EAAA;QACtD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC/C,QAAA,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAExC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B;AAED;;AAEG;AACH,IAAA,eAAe,CAAC,KAAa,EAAA;AAC3B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAqB,KAAI;YAC9D,MAAM,WAAW,GAAG,OAAO,CAAC;YAC5B,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;AACpD,YAAA,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC7B,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAClC,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;AACH,IAAA,UAAU,CAAC,OAAgB,EAAE,QAAA,GAAmB,CAAC,EAAA;QAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACzD,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACtB;AAED;;AAEG;IACH,eAAe,GAAA;QACb,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;AAED;;AAEG;AACH,IAAA,eAAe,CAAC,WAAmB,EAAA;AACjC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACtC;AAED;;AAEG;IACH,SAAS,GAAA;QACP,IAAI,OAAO,GAAiB,EAAE,CAAC;QAC/B,MAAM,MAAM,GAA8B,EAAE,CAAC;AAC7C,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY;aACnC,GAAG,CAAC,wBAAwB,CAAC;AAC7B,aAAA,SAAS,CAAC,CAAC,SAAmC,KAAI;AACjD,YAAA,IACE,SAAS,CAAC,aAAa,KAAK,CAAC;AAC7B,iBAAC,CAAC,CAAC,SAAS,CAAC,aAAa;AACxB,oBAAA,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,QAAQ,CAAC,EAC/C;gBACA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1D,aAAA;AACH,SAAC,CAAC,CAAC;AAEL,QAAA,YAAY,CAAC,GAAG,CACd,IAAI,CAAC,YAAY;aACd,GAAG,CAAC,qBAAqB,CAAC;AAC1B,aAAA,SAAS,CAAC,CAAC,SAAgC,KAAI;YAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,CAAC;SAC1D,CAAC,CACL,CAAC;AAEF,QAAA,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAC3B,KAAK,EAAE,EACP,SAAS,CAAC,CAAC,QAAQ,KAAI;YACrB,OAAO,GAAG,QAAQ,CAAC;AACnB,YAAA,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,EAAE,CAAC;AAEjB,YAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;AAC3C,SAAC,CAAC,EACF,MAAM,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAC9B,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAA8C,CAAC,EACzE,GAAG,CAAC,MAAM,YAAY,CAAC,WAAW,EAAE,CAAC,CACtC,CAAC;KACH;AAED;;AAEG;IACH,qBAAqB,GAAA;QACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;AAED;;AAEG;AACH,IAAA,uBAAuB,CAAC,WAAmB,EAAA;QACzC,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAEpD,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACrB,QAAA,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;KACnC;AAED;;AAEG;AACH,IAAA,eAAe,CAAC,WAAmB,EAAA;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;QACpD,MAAM,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;AAE3D,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,OAAO,cAAc,CAAC,WAAW,CAAC,CAAC;AACnC,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC/C,SAAA;AAED,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;KACtC;AAED;;AAEG;IACH,mBAAmB,GAAA;QACjB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAC7C,CAAC,YAA0B,KAAK,YAAY,CAAC,WAAW,EAAE,CAC3D,CAAC;AAEF,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;KAC/B;AAED;;AAEG;IACH,6BAA6B,GAAA;QAC3B,OAAO,IAAI,CAAC,2BAA2B,CAAC;KACzC;AAED;;AAEG;AACH,IAAA,6BAA6B,CAAC,OAAgB,EAAA;AAC5C,QAAA,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAChD;AAED;;AAEG;IACH,+BAA+B,GAAA;AAC7B,QAAA,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7C;AAED;;AAEG;AACO,IAAA,oBAAoB,CAC5B,KAAiB,EACjB,YAAA,GAAwB,IAAI,EAAA;QAE5B,MAAM,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;AAC3D,QAAA,MAAM,WAAW,GAAG,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC;AAEzC,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,cAAc,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;AAEpC,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE9C,YAAA,IAAI,YAAY,EAAE;AAChB,gBAAA,MAAM,YAAY,GAAiB,KAAK,CACtC,IAAI,CAAC,iBAAiB,CACvB,CAAC,SAAS,CAAC,MAAK;AACf,oBAAA,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AACpC,iBAAC,CAAC,CAAC;AAEH,gBAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,GAAG,YAAY,CAAC;AACtD,aAAA;AACF,SAAA;KACF;AAED;;AAEG;AACO,IAAA,mBAAmB,CAAC,WAAmB,EAAA;QAC/C,MAAM,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;AAE3D,QAAA,OAAO,cAAc,CAAC,WAAW,CAAC,CAAC;KACpC;AAED;;AAEG;IACO,kBAAkB,CAC1B,OAAgB,EAChB,QAAiB,EAAA;QAEjB,OAAO;YACL,SAAS,EAAE,OAAO,CAAC,KAAK;YACxB,OAAO;YACP,QAAQ;YACR,UAAU,EAAE,OAAO,CAAC,KAAK;SACZ,CAAC;KACjB;AAED;;AAEG;AACO,IAAA,QAAQ,CAAC,KAAiB,EAAA;AAClC,QAAA,IACE,KAAK,EAAE,OAAO,EAAE,IAAI;YACpB,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;YAC5C,IAAI,CAAC,eAAe,EAAE,EACtB;YACA,OAAO;AACR,SAAA;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;QAC/C,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC;QAEzD,IAAI,eAAe,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,GAAG,eAAe,EAAE;AACzE,YAAA,KAAK,CAAC,QAAQ,GAAG,eAAe,CAAC;AAClC,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACtE,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAClC,CAAC,IAAgB,KAAK,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,KAAK,CAAC,OAAO,EAAE,IAAI,CACjE,CAAC;YACF,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC;AAE9C,YAAA,IAAI,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAC9B,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,GAAG,QAAQ,GAAG,KAAK,EAAE,QAAQ,CAAC;gBAC1D,MAAM,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC;AAEjD,gBAAA,IAAI,WAAW,IAAI,eAAe,IAAI,WAAW,GAAG,eAAe,EAAE;AACnE,oBAAA,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,GAAG,eAAe,CAAC;AAChD,iBAAA;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AAClC,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9C,SAAA;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAC9C;AAED;;AAEG;AACO,IAAA,kBAAkB,CAAC,WAAmB,EAAA;QAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;AAE/C,QAAA,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CACnB,CAAC,IAAgB,KAAK,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,WAAW,CACzD,CAAC;KACH;IAES,eAAe,CACvB,IAAa,EACb,YAA4B,EAAA;QAE5B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;AAE/C;;;;AAIG;AACH,QAAA,MAAM,mBAAmB,GACvB,IAAI,IAAI,YAAY;cAChB,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC;cACxD,CAAC,CAAC;AAER,QAAA,QACE,OAAO,CAAC,MAAM,IAAI,mBAAmB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,mBAAmB,EACvE;KACH;AAED;;;AAGG;AACO,IAAA,sBAAsB,CAC9B,OAAqB,EACrB,IAAY,EACZ,YAA2B,EAAA;AAE3B,QAAA,MAAM,eAAe,GACnB,YAAY,EAAE,MAAM,CAClB,CAAC,OAAO,KACN,CAAC,OAAO;aACL,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;aACnC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CACnC,IAAI,EAAE,CAAC;AACV,QAAA,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC;KAC7E;AAEO,IAAA,2BAA2B,CACjC,SAA2D,EAAA;AAE3D,QAAA,MAAM,GAAG,GAA4B;YACnC,WAAW,EAAE,SAAS,CAAC,WAAW;YAClC,QAAQ,EAAE,SAAS,CAAC,QAAQ;SAC7B,CAAC;QAEF,IAAI,OAAO,IAAI,SAAS,EAAE;AACxB,YAAA,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;AAC7B,SAAA;QACD,IAAI,eAAe,IAAI,SAAS,EAAE;AAChC,YAAA,GAAG,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;AAC7C,SAAA;QACD,IAAI,OAAO,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,YAAY,cAAc,EAAE;AACrE,YAAA,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;AAC7B,SAAA;AAED,QAAA,IAAI,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE;YAC9B,MAAM,YAAY,GAAG,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAC1C,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,wBAAwB,CAC3C,CAAC;AACF,YAAA,GAAG,CAAC,aAAa,GAAG,YAAY,GAAG,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC;AACrD,SAAA;AAED,QAAA,OAAO,GAAG,CAAC;KACZ;AAES,IAAA,kBAAkB,CAAC,WAAmB,EAAA;QAC9C,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAEjE,QAAA,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,WAAW,EAAE,CAAC;AACjC,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAC9C,SAAA;KACF;;8GAnaU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAjB,iBAAiB,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;;;ACtCX;;;;AAIG;AAMI,MAAM,eAAe,GAAe;IACzC,iBAAiB;AACjB,IAAA;AACE,QAAA,OAAO,EAAE,gBAAgB;AACzB,QAAA,WAAW,EAAE,iBAAiB;AAC/B,KAAA;CACF;;AChBD;;;;AAIG;MAgBU,iCAAiC,CAAA;AAG5C,IAAA,WAAA,CACY,iBAAmC,EACnC,wBAAkD,EAClD,uBAAgD,EAAA;QAFhD,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;QACnC,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;QAClD,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;AALlD,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAQ5C;;AAEG;QACO,IAAG,CAAA,GAAA,GAAG,aAAa,CAAC;KAL1B;AAOJ;;AAEG;IACH,QAAQ,GAAA;QACN,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC;YAC3C,GAAG,EAAE,IAAI,CAAC,GAAG;AACb,YAAA,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE;AAC3C,YAAA,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC;gBAChD,oBAAoB;aACrB,CAAC;YACF,WAAW,EAAE,eAAe,CAAC,eAAe;YAC5C,MAAM,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACtC,SAAA,CAAC,CACH,CAAC;KACH;AAES,IAAA,MAAM,CAAC,KAA+B,EAAA;AAC9C,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3C,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;8HAvCU,iCAAiC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjC,iCAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iCAAiC,cAFhC,MAAM,EAAA,CAAA,CAAA;2FAEP,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAH7C,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACnBD;;;;AAIG;MASU,oBAAoB,CAAA;AAC/B,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,oBAAoB;SAC/B,CAAC;KACH;;iHALU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,aAFpB,CAAC,GAAG,eAAe,EAAE,iCAAiC,CAAC,EAAA,CAAA,CAAA;2FAEvD,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,SAAS,EAAE,CAAC,GAAG,eAAe,EAAE,iCAAiC,CAAC;AACnE,iBAAA,CAAA;;;ACZD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;AAEG;;;;"}