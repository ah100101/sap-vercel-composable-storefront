/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ICON_TYPE } from '@spartacus/storefront';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/cart/base/root";
import * as i2 from "@angular/common";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@spartacus/core";
export class CartItemValidationWarningComponent {
    constructor(cartValidationFacade) {
        this.cartValidationFacade = cartValidationFacade;
        this.iconTypes = ICON_TYPE;
        this.isVisible = true;
        this.cartModification$ = this.cartValidationFacade
            .getValidationResults()
            .pipe(map((modificationList) => modificationList.find((modification) => modification.entry?.product?.code === this.code)));
    }
}
CartItemValidationWarningComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CartItemValidationWarningComponent, deps: [{ token: i1.CartValidationFacade }], target: i0.ɵɵFactoryTarget.Component });
CartItemValidationWarningComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: CartItemValidationWarningComponent, selector: "cx-cart-item-validation-warning", inputs: { code: "code" }, ngImport: i0, template: "<ng-container *ngIf=\"cartModification$ | async as cartModification\">\n  <div class=\"alert alert-info\" *ngIf=\"isVisible\">\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n    </span>\n    <span>\n      {{\n        'validation.' + cartModification.statusCode\n          | cxTranslate\n            : {\n                quantity: cartModification.quantityAdded\n              }\n      }}\n    </span>\n\n    <button class=\"close\" type=\"button\" (click)=\"isVisible = !isVisible\">\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CartItemValidationWarningComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-cart-item-validation-warning', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"cartModification$ | async as cartModification\">\n  <div class=\"alert alert-info\" *ngIf=\"isVisible\">\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n    </span>\n    <span>\n      {{\n        'validation.' + cartModification.statusCode\n          | cxTranslate\n            : {\n                quantity: cartModification.quantityAdded\n              }\n      }}\n    </span>\n\n    <button class=\"close\" type=\"button\" (click)=\"isVisible = !isVisible\">\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.CartValidationFacade }]; }, propDecorators: { code: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC1pdGVtLXZhbGlkYXRpb24td2FybmluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2FydC9iYXNlL2NvbXBvbmVudHMvdmFsaWRhdGlvbi9jYXJ0LWl0ZW0td2FybmluZy9jYXJ0LWl0ZW0tdmFsaWRhdGlvbi13YXJuaW5nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jYXJ0L2Jhc2UvY29tcG9uZW50cy92YWxpZGF0aW9uL2NhcnQtaXRlbS13YXJuaW5nL2NhcnQtaXRlbS12YWxpZGF0aW9uLXdhcm5pbmcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7OztBQU9yQyxNQUFNLE9BQU8sa0NBQWtDO0lBaUI3QyxZQUFzQixvQkFBMEM7UUFBMUMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQWJoRSxjQUFTLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFFakIsc0JBQWlCLEdBQUcsSUFBSSxDQUFDLG9CQUFvQjthQUMxQyxvQkFBb0IsRUFBRTthQUN0QixJQUFJLENBQ0gsR0FBRyxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxDQUN2QixnQkFBZ0IsQ0FBQyxJQUFJLENBQ25CLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUksQ0FDbEUsQ0FDRixDQUNGLENBQUM7SUFFK0QsQ0FBQzs7K0hBakJ6RCxrQ0FBa0M7bUhBQWxDLGtDQUFrQyxpR0NoQi9DLCttQkFvQkE7MkZESmEsa0NBQWtDO2tCQUw5QyxTQUFTOytCQUNFLGlDQUFpQyxtQkFFMUIsdUJBQXVCLENBQUMsTUFBTTsyR0FJL0MsSUFBSTtzQkFESCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcnRWYWxpZGF0aW9uRmFjYWRlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jYXJ0L2Jhc2Uvcm9vdCc7XG5pbXBvcnQgeyBJQ09OX1RZUEUgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1jYXJ0LWl0ZW0tdmFsaWRhdGlvbi13YXJuaW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NhcnQtaXRlbS12YWxpZGF0aW9uLXdhcm5pbmcuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQ2FydEl0ZW1WYWxpZGF0aW9uV2FybmluZ0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIGNvZGU6IHN0cmluZztcblxuICBpY29uVHlwZXMgPSBJQ09OX1RZUEU7XG4gIGlzVmlzaWJsZSA9IHRydWU7XG5cbiAgY2FydE1vZGlmaWNhdGlvbiQgPSB0aGlzLmNhcnRWYWxpZGF0aW9uRmFjYWRlXG4gICAgLmdldFZhbGlkYXRpb25SZXN1bHRzKClcbiAgICAucGlwZShcbiAgICAgIG1hcCgobW9kaWZpY2F0aW9uTGlzdCkgPT5cbiAgICAgICAgbW9kaWZpY2F0aW9uTGlzdC5maW5kKFxuICAgICAgICAgIChtb2RpZmljYXRpb24pID0+IG1vZGlmaWNhdGlvbi5lbnRyeT8ucHJvZHVjdD8uY29kZSA9PT0gdGhpcy5jb2RlXG4gICAgICAgIClcbiAgICAgIClcbiAgICApO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjYXJ0VmFsaWRhdGlvbkZhY2FkZTogQ2FydFZhbGlkYXRpb25GYWNhZGUpIHt9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiY2FydE1vZGlmaWNhdGlvbiQgfCBhc3luYyBhcyBjYXJ0TW9kaWZpY2F0aW9uXCI+XG4gIDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1pbmZvXCIgKm5nSWY9XCJpc1Zpc2libGVcIj5cbiAgICA8c3BhbiBjbGFzcz1cImFsZXJ0LWljb25cIj5cbiAgICAgIDxjeC1pY29uIFt0eXBlXT1cImljb25UeXBlcy5JTkZPXCI+PC9jeC1pY29uPlxuICAgIDwvc3Bhbj5cbiAgICA8c3Bhbj5cbiAgICAgIHt7XG4gICAgICAgICd2YWxpZGF0aW9uLicgKyBjYXJ0TW9kaWZpY2F0aW9uLnN0YXR1c0NvZGVcbiAgICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICBxdWFudGl0eTogY2FydE1vZGlmaWNhdGlvbi5xdWFudGl0eUFkZGVkXG4gICAgICAgICAgICAgIH1cbiAgICAgIH19XG4gICAgPC9zcGFuPlxuXG4gICAgPGJ1dHRvbiBjbGFzcz1cImNsb3NlXCIgdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJpc1Zpc2libGUgPSAhaXNWaXNpYmxlXCI+XG4gICAgICA8Y3gtaWNvbiBbdHlwZV09XCJpY29uVHlwZXMuQ0xPU0VcIj48L2N4LWljb24+XG4gICAgPC9idXR0b24+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG4iXX0=