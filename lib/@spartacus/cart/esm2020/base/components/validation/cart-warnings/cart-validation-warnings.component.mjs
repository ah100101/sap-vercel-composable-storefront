/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { CartValidationStatusCode, } from '@spartacus/cart/base/root';
import { ICON_TYPE } from '@spartacus/storefront';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/cart/base/root";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "@spartacus/storefront";
import * as i5 from "@spartacus/core";
export class CartValidationWarningsComponent {
    constructor(cartValidationFacade) {
        this.cartValidationFacade = cartValidationFacade;
        this.iconTypes = ICON_TYPE;
        this.visibleWarnings = {};
        this.cartModifications$ = this.cartValidationFacade.getValidationResults().pipe(map((modificationList) => {
            const result = modificationList.filter((modification) => modification.statusCode === CartValidationStatusCode.NO_STOCK);
            result.forEach((modification) => {
                if (modification.entry?.product?.code) {
                    this.visibleWarnings[modification.entry.product.code] = true;
                }
            });
            return result;
        }));
    }
    removeMessage(cartModification) {
        if (cartModification.entry?.product?.code) {
            this.visibleWarnings[cartModification.entry.product.code] = false;
        }
    }
}
CartValidationWarningsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CartValidationWarningsComponent, deps: [{ token: i1.CartValidationFacade }], target: i0.ɵɵFactoryTarget.Component });
CartValidationWarningsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: CartValidationWarningsComponent, selector: "cx-cart-validation-warnings", ngImport: i0, template: "<ng-container *ngFor=\"let cartModification of cartModifications$ | async\">\n  <div\n    class=\"alert alert-danger\"\n    *ngIf=\"visibleWarnings[cartModification.entry.product.code]\"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n    </span>\n    <span>\n      <a\n        [routerLink]=\"\n          { cxRoute: 'product', params: cartModification.entry.product } | cxUrl\n        \"\n      >\n        {{ cartModification.entry.product.name }}\n      </a>\n      {{ 'validation.productOutOfStock' | cxTranslate }}\n    </span>\n\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"removeMessage(cartModification)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i4.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i5.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CartValidationWarningsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-cart-validation-warnings', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngFor=\"let cartModification of cartModifications$ | async\">\n  <div\n    class=\"alert alert-danger\"\n    *ngIf=\"visibleWarnings[cartModification.entry.product.code]\"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n    </span>\n    <span>\n      <a\n        [routerLink]=\"\n          { cxRoute: 'product', params: cartModification.entry.product } | cxUrl\n        \"\n      >\n        {{ cartModification.entry.product.name }}\n      </a>\n      {{ 'validation.productOutOfStock' | cxTranslate }}\n    </span>\n\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"removeMessage(cartModification)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.CartValidationFacade }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC12YWxpZGF0aW9uLXdhcm5pbmdzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jYXJ0L2Jhc2UvY29tcG9uZW50cy92YWxpZGF0aW9uL2NhcnQtd2FybmluZ3MvY2FydC12YWxpZGF0aW9uLXdhcm5pbmdzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jYXJ0L2Jhc2UvY29tcG9uZW50cy92YWxpZGF0aW9uL2NhcnQtd2FybmluZ3MvY2FydC12YWxpZGF0aW9uLXdhcm5pbmdzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFHTCx3QkFBd0IsR0FDekIsTUFBTSwyQkFBMkIsQ0FBQztBQUNuQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbEQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7O0FBT3JDLE1BQU0sT0FBTywrQkFBK0I7SUFvQjFDLFlBQXNCLG9CQUEwQztRQUExQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBbkJoRSxjQUFTLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLG9CQUFlLEdBQTRCLEVBQUUsQ0FBQztRQUU5Qyx1QkFBa0IsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxJQUFJLENBQ3hFLEdBQUcsQ0FBQyxDQUFDLGdCQUFnQixFQUFFLEVBQUU7WUFDdkIsTUFBTSxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUNwQyxDQUFDLFlBQVksRUFBRSxFQUFFLENBQ2YsWUFBWSxDQUFDLFVBQVUsS0FBSyx3QkFBd0IsQ0FBQyxRQUFRLENBQ2hFLENBQUM7WUFFRixNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUU7Z0JBQzlCLElBQUksWUFBWSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFO29CQUNyQyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztpQkFDOUQ7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUNILE9BQU8sTUFBTSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUNILENBQUM7SUFFaUUsQ0FBQztJQUVwRSxhQUFhLENBQUMsZ0JBQWtDO1FBQzlDLElBQUksZ0JBQWdCLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUU7WUFDekMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQztTQUNuRTtJQUNILENBQUM7OzRIQTFCVSwrQkFBK0I7Z0hBQS9CLCtCQUErQixtRUNwQjVDLDB4QkE0QkE7MkZEUmEsK0JBQStCO2tCQUwzQyxTQUFTOytCQUNFLDZCQUE2QixtQkFFdEIsdUJBQXVCLENBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIENhcnRNb2RpZmljYXRpb24sXG4gIENhcnRWYWxpZGF0aW9uRmFjYWRlLFxuICBDYXJ0VmFsaWRhdGlvblN0YXR1c0NvZGUsXG59IGZyb20gJ0BzcGFydGFjdXMvY2FydC9iYXNlL3Jvb3QnO1xuaW1wb3J0IHsgSUNPTl9UWVBFIH0gZnJvbSAnQHNwYXJ0YWN1cy9zdG9yZWZyb250JztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtY2FydC12YWxpZGF0aW9uLXdhcm5pbmdzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NhcnQtdmFsaWRhdGlvbi13YXJuaW5ncy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBDYXJ0VmFsaWRhdGlvbldhcm5pbmdzQ29tcG9uZW50IHtcbiAgaWNvblR5cGVzID0gSUNPTl9UWVBFO1xuICB2aXNpYmxlV2FybmluZ3M6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+ID0ge307XG5cbiAgY2FydE1vZGlmaWNhdGlvbnMkID0gdGhpcy5jYXJ0VmFsaWRhdGlvbkZhY2FkZS5nZXRWYWxpZGF0aW9uUmVzdWx0cygpLnBpcGUoXG4gICAgbWFwKChtb2RpZmljYXRpb25MaXN0KSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBtb2RpZmljYXRpb25MaXN0LmZpbHRlcihcbiAgICAgICAgKG1vZGlmaWNhdGlvbikgPT5cbiAgICAgICAgICBtb2RpZmljYXRpb24uc3RhdHVzQ29kZSA9PT0gQ2FydFZhbGlkYXRpb25TdGF0dXNDb2RlLk5PX1NUT0NLXG4gICAgICApO1xuXG4gICAgICByZXN1bHQuZm9yRWFjaCgobW9kaWZpY2F0aW9uKSA9PiB7XG4gICAgICAgIGlmIChtb2RpZmljYXRpb24uZW50cnk/LnByb2R1Y3Q/LmNvZGUpIHtcbiAgICAgICAgICB0aGlzLnZpc2libGVXYXJuaW5nc1ttb2RpZmljYXRpb24uZW50cnkucHJvZHVjdC5jb2RlXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KVxuICApO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjYXJ0VmFsaWRhdGlvbkZhY2FkZTogQ2FydFZhbGlkYXRpb25GYWNhZGUpIHt9XG5cbiAgcmVtb3ZlTWVzc2FnZShjYXJ0TW9kaWZpY2F0aW9uOiBDYXJ0TW9kaWZpY2F0aW9uKSB7XG4gICAgaWYgKGNhcnRNb2RpZmljYXRpb24uZW50cnk/LnByb2R1Y3Q/LmNvZGUpIHtcbiAgICAgIHRoaXMudmlzaWJsZVdhcm5pbmdzW2NhcnRNb2RpZmljYXRpb24uZW50cnkucHJvZHVjdC5jb2RlXSA9IGZhbHNlO1xuICAgIH1cbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgY2FydE1vZGlmaWNhdGlvbiBvZiBjYXJ0TW9kaWZpY2F0aW9ucyQgfCBhc3luY1wiPlxuICA8ZGl2XG4gICAgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIlxuICAgICpuZ0lmPVwidmlzaWJsZVdhcm5pbmdzW2NhcnRNb2RpZmljYXRpb24uZW50cnkucHJvZHVjdC5jb2RlXVwiXG4gID5cbiAgICA8c3BhbiBjbGFzcz1cImFsZXJ0LWljb25cIj5cbiAgICAgIDxjeC1pY29uIFt0eXBlXT1cImljb25UeXBlcy5FUlJPUlwiPjwvY3gtaWNvbj5cbiAgICA8L3NwYW4+XG4gICAgPHNwYW4+XG4gICAgICA8YVxuICAgICAgICBbcm91dGVyTGlua109XCJcbiAgICAgICAgICB7IGN4Um91dGU6ICdwcm9kdWN0JywgcGFyYW1zOiBjYXJ0TW9kaWZpY2F0aW9uLmVudHJ5LnByb2R1Y3QgfSB8IGN4VXJsXG4gICAgICAgIFwiXG4gICAgICA+XG4gICAgICAgIHt7IGNhcnRNb2RpZmljYXRpb24uZW50cnkucHJvZHVjdC5uYW1lIH19XG4gICAgICA8L2E+XG4gICAgICB7eyAndmFsaWRhdGlvbi5wcm9kdWN0T3V0T2ZTdG9jaycgfCBjeFRyYW5zbGF0ZSB9fVxuICAgIDwvc3Bhbj5cblxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzPVwiY2xvc2VcIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAoY2xpY2spPVwicmVtb3ZlTWVzc2FnZShjYXJ0TW9kaWZpY2F0aW9uKVwiXG4gICAgPlxuICAgICAgPGN4LWljb24gW3R5cGVdPVwiaWNvblR5cGVzLkNMT1NFXCI+PC9jeC1pY29uPlxuICAgIDwvYnV0dG9uPlxuICA8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuIl19