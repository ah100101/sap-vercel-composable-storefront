/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { StateUtils } from '@spartacus/core';
import { MULTI_CART_DATA } from '../multi-cart-state';
export const CART_PROCESSES_INCREMENT = '[Cart] Cart Processes Increment';
export const CART_PROCESSES_DECREMENT = '[Cart] Cart Processes Decrement';
export const SET_ACTIVE_CART_ID = '[Cart] Set Active Cart Id';
export const CLEAR_CART_STATE = '[Cart] Clear Cart State';
export const SET_CART_TYPE_INDEX = '[Cart] Set cart type index';
export const SET_CART_DATA = '[Cart] Set cart data';
/**
 * Increases process counter on cart entities
 * All actions that cause computations on cart should extend EntityProcessesIncrementAction instead of dispatching this action.
 */
export class CartProcessesIncrement extends StateUtils.EntityProcessesIncrementAction {
    constructor(payload) {
        super(MULTI_CART_DATA, payload);
        this.payload = payload;
        this.type = CART_PROCESSES_INCREMENT;
    }
}
/**
 * Decrement process counter on cart entities
 * All actions that cause computations on cart should extend EntityProcessesDecrementAction instead of dispatching this action.
 */
export class CartProcessesDecrement extends StateUtils.EntityProcessesDecrementAction {
    constructor(payload) {
        super(MULTI_CART_DATA, payload);
        this.payload = payload;
        this.type = CART_PROCESSES_DECREMENT;
    }
}
/**
 * Only sets active cart property with id of active cart. Then services take care of loading that cart.
 */
export class SetActiveCartId {
    constructor(payload) {
        this.payload = payload;
        this.type = SET_ACTIVE_CART_ID;
    }
}
/**
 * Clear whole cart store state: all entities + reset rest of the cart state.
 */
export class ClearCartState extends StateUtils.EntityRemoveAllAction {
    constructor() {
        super(MULTI_CART_DATA);
        this.type = CLEAR_CART_STATE;
    }
}
export class SetCartTypeIndex {
    constructor(payload) {
        this.payload = payload;
        this.type = SET_CART_TYPE_INDEX;
    }
}
export class SetCartData extends StateUtils.EntitySuccessAction {
    constructor(payload) {
        super(MULTI_CART_DATA, payload.cartId);
        this.payload = payload;
        this.type = SET_CART_DATA;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktY2FydC5hY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2FydC9iYXNlL2NvcmUvc3RvcmUvYWN0aW9ucy9tdWx0aS1jYXJ0LmFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBSUgsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV0RCxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxpQ0FBaUMsQ0FBQztBQUMxRSxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxpQ0FBaUMsQ0FBQztBQUUxRSxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRywyQkFBMkIsQ0FBQztBQUU5RCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyx5QkFBeUIsQ0FBQztBQUUxRCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyw0QkFBNEIsQ0FBQztBQUNoRSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsc0JBQXNCLENBQUM7QUFFcEQ7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLHNCQUF1QixTQUFRLFVBQVUsQ0FBQyw4QkFBOEI7SUFFbkYsWUFBbUIsT0FBZTtRQUNoQyxLQUFLLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRGYsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUR6QixTQUFJLEdBQUcsd0JBQXdCLENBQUM7SUFHekMsQ0FBQztDQUNGO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLHNCQUF1QixTQUFRLFVBQVUsQ0FBQyw4QkFBOEI7SUFFbkYsWUFBbUIsT0FBZTtRQUNoQyxLQUFLLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRGYsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUR6QixTQUFJLEdBQUcsd0JBQXdCLENBQUM7SUFHekMsQ0FBQztDQUNGO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sZUFBZTtJQUUxQixZQUFtQixPQUFlO1FBQWYsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUR6QixTQUFJLEdBQUcsa0JBQWtCLENBQUM7SUFDRSxDQUFDO0NBQ3ZDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sY0FBZSxTQUFRLFVBQVUsQ0FBQyxxQkFBcUI7SUFFbEU7UUFDRSxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7UUFGaEIsU0FBSSxHQUFHLGdCQUFnQixDQUFDO0lBR2pDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxnQkFBZ0I7SUFFM0IsWUFDUyxPQUEyRDtRQUEzRCxZQUFPLEdBQVAsT0FBTyxDQUFvRDtRQUYzRCxTQUFJLEdBQUcsbUJBQW1CLENBQUM7SUFHakMsQ0FBQztDQUNMO0FBRUQsTUFBTSxPQUFPLFdBQVksU0FBUSxVQUFVLENBQUMsbUJBQW1CO0lBRTdELFlBQW1CLE9BQXVDO1FBQ3hELEtBQUssQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRHRCLFlBQU8sR0FBUCxPQUFPLENBQWdDO1FBRGpELFNBQUksR0FBRyxhQUFhLENBQUM7SUFHOUIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgQ2FydCwgQ2FydFR5cGUgfSBmcm9tICdAc3BhcnRhY3VzL2NhcnQvYmFzZS9yb290JztcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgTVVMVElfQ0FSVF9EQVRBIH0gZnJvbSAnLi4vbXVsdGktY2FydC1zdGF0ZSc7XG5cbmV4cG9ydCBjb25zdCBDQVJUX1BST0NFU1NFU19JTkNSRU1FTlQgPSAnW0NhcnRdIENhcnQgUHJvY2Vzc2VzIEluY3JlbWVudCc7XG5leHBvcnQgY29uc3QgQ0FSVF9QUk9DRVNTRVNfREVDUkVNRU5UID0gJ1tDYXJ0XSBDYXJ0IFByb2Nlc3NlcyBEZWNyZW1lbnQnO1xuXG5leHBvcnQgY29uc3QgU0VUX0FDVElWRV9DQVJUX0lEID0gJ1tDYXJ0XSBTZXQgQWN0aXZlIENhcnQgSWQnO1xuXG5leHBvcnQgY29uc3QgQ0xFQVJfQ0FSVF9TVEFURSA9ICdbQ2FydF0gQ2xlYXIgQ2FydCBTdGF0ZSc7XG5cbmV4cG9ydCBjb25zdCBTRVRfQ0FSVF9UWVBFX0lOREVYID0gJ1tDYXJ0XSBTZXQgY2FydCB0eXBlIGluZGV4JztcbmV4cG9ydCBjb25zdCBTRVRfQ0FSVF9EQVRBID0gJ1tDYXJ0XSBTZXQgY2FydCBkYXRhJztcblxuLyoqXG4gKiBJbmNyZWFzZXMgcHJvY2VzcyBjb3VudGVyIG9uIGNhcnQgZW50aXRpZXNcbiAqIEFsbCBhY3Rpb25zIHRoYXQgY2F1c2UgY29tcHV0YXRpb25zIG9uIGNhcnQgc2hvdWxkIGV4dGVuZCBFbnRpdHlQcm9jZXNzZXNJbmNyZW1lbnRBY3Rpb24gaW5zdGVhZCBvZiBkaXNwYXRjaGluZyB0aGlzIGFjdGlvbi5cbiAqL1xuZXhwb3J0IGNsYXNzIENhcnRQcm9jZXNzZXNJbmNyZW1lbnQgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eVByb2Nlc3Nlc0luY3JlbWVudEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDQVJUX1BST0NFU1NFU19JTkNSRU1FTlQ7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBzdHJpbmcpIHtcbiAgICBzdXBlcihNVUxUSV9DQVJUX0RBVEEsIHBheWxvYWQpO1xuICB9XG59XG5cbi8qKlxuICogRGVjcmVtZW50IHByb2Nlc3MgY291bnRlciBvbiBjYXJ0IGVudGl0aWVzXG4gKiBBbGwgYWN0aW9ucyB0aGF0IGNhdXNlIGNvbXB1dGF0aW9ucyBvbiBjYXJ0IHNob3VsZCBleHRlbmQgRW50aXR5UHJvY2Vzc2VzRGVjcmVtZW50QWN0aW9uIGluc3RlYWQgb2YgZGlzcGF0Y2hpbmcgdGhpcyBhY3Rpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBDYXJ0UHJvY2Vzc2VzRGVjcmVtZW50IGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlQcm9jZXNzZXNEZWNyZW1lbnRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ0FSVF9QUk9DRVNTRVNfREVDUkVNRU5UO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogc3RyaW5nKSB7XG4gICAgc3VwZXIoTVVMVElfQ0FSVF9EQVRBLCBwYXlsb2FkKTtcbiAgfVxufVxuXG4vKipcbiAqIE9ubHkgc2V0cyBhY3RpdmUgY2FydCBwcm9wZXJ0eSB3aXRoIGlkIG9mIGFjdGl2ZSBjYXJ0LiBUaGVuIHNlcnZpY2VzIHRha2UgY2FyZSBvZiBsb2FkaW5nIHRoYXQgY2FydC5cbiAqL1xuZXhwb3J0IGNsYXNzIFNldEFjdGl2ZUNhcnRJZCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTRVRfQUNUSVZFX0NBUlRfSUQ7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBzdHJpbmcpIHt9XG59XG5cbi8qKlxuICogQ2xlYXIgd2hvbGUgY2FydCBzdG9yZSBzdGF0ZTogYWxsIGVudGl0aWVzICsgcmVzZXQgcmVzdCBvZiB0aGUgY2FydCBzdGF0ZS5cbiAqL1xuZXhwb3J0IGNsYXNzIENsZWFyQ2FydFN0YXRlIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlSZW1vdmVBbGxBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ0xFQVJfQ0FSVF9TVEFURTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoTVVMVElfQ0FSVF9EQVRBKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2V0Q2FydFR5cGVJbmRleCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTRVRfQ0FSVF9UWVBFX0lOREVYO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcGF5bG9hZDogeyBjYXJ0VHlwZTogQ2FydFR5cGU7IGNhcnRJZDogc3RyaW5nIHwgdW5kZWZpbmVkIH1cbiAgKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgU2V0Q2FydERhdGEgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eVN1Y2Nlc3NBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU0VUX0NBUlRfREFUQTtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHsgY2FydDogQ2FydDsgY2FydElkOiBzdHJpbmcgfSkge1xuICAgIHN1cGVyKE1VTFRJX0NBUlRfREFUQSwgcGF5bG9hZC5jYXJ0SWQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIE11bHRpQ2FydEFjdGlvbnMgPVxuICB8IENhcnRQcm9jZXNzZXNJbmNyZW1lbnRcbiAgfCBDYXJ0UHJvY2Vzc2VzRGVjcmVtZW50XG4gIHwgU2V0QWN0aXZlQ2FydElkXG4gIHwgQ2xlYXJDYXJ0U3RhdGVcbiAgfCBTZXRDYXJ0VHlwZUluZGV4XG4gIHwgU2V0Q2FydERhdGE7XG4iXX0=