/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { UntypedFormControl } from '@angular/forms';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/cart/quick-order/root";
import * as i2 from "@angular/common";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@angular/router";
import * as i5 from "@spartacus/core";
export class QuickOrderItemComponent {
    get entry() {
        return this._entry;
    }
    set entry(value) {
        this._entry = value;
        this.quantityControl = new UntypedFormControl(this.entry.quantity, {
            updateOn: 'blur',
        });
    }
    constructor(cd, quickOrderService) {
        this.cd = cd;
        this.quickOrderService = quickOrderService;
        this.loading = false;
        this.subscription = new Subscription();
    }
    ngOnInit() {
        this.subscription.add(this.quantityControl.valueChanges.subscribe(() => {
            this.quickOrderService.updateEntryQuantity(this.index, this.quantityControl.value);
        }));
        this.subscription.add(this.watchProductAdd());
    }
    removeEntry() {
        this.quickOrderService.softDeleteEntry(this.index);
        this.cd.detectChanges();
    }
    watchProductAdd() {
        return this.quickOrderService.getProductAdded().subscribe((productCode) => {
            if (productCode === this.entry.product?.code) {
                this.quantityControl = new UntypedFormControl(this.entry.quantity);
                this.cd.detectChanges();
            }
        });
    }
    ngOnDestroy() {
        this.subscription?.unsubscribe();
    }
}
QuickOrderItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: QuickOrderItemComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.QuickOrderFacade }], target: i0.ɵɵFactoryTarget.Component });
QuickOrderItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: QuickOrderItemComponent, selector: "[cx-quick-order-item], cx-quick-order-item", inputs: { entry: "entry", index: "index", loading: "loading" }, ngImport: i0, template: "<td role=\"cell\">\n  <div class=\"cx-table-item-container\">\n    <a\n      [ngClass]=\"{\n        disabled: loading,\n        'img-missing': !entry?.product?.images?.PRIMARY\n      }\"\n      [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n      tabindex=\"-1\"\n    >\n      <cx-media\n        [container]=\"entry?.product?.images?.PRIMARY\"\n        [alt]=\"entry?.product?.name\"\n        format=\"cartIcon\"\n      ></cx-media>\n    </a>\n    <div class=\"cx-info\">\n      <div class=\"cx-name\">\n        <a\n          [ngClass]=\"{ disabled: loading }\"\n          [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n          class=\"cx-link\"\n          >{{ entry.product?.name || '-' }}\n        </a>\n      </div>\n\n      <div class=\"cx-code\">\n        {{ 'quickOrderTable.id' | cxTranslate }} {{ entry.product?.code }}\n      </div>\n    </div>\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-price\">\n  <div class=\"cx-mobile-header\">\n    {{ 'quickOrderTable.itemPrice' | cxTranslate }}\n  </div>\n  <div class=\"cx-value\">\n    {{ entry.basePrice?.formattedValue || '-' }}\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-quantity\">\n  <div class=\"cx-mobile-header\">\n    {{ 'quickOrderTable.qty' | cxTranslate }}\n  </div>\n  <div class=\"cx-value\">\n    <cx-item-counter\n      [control]=\"quantityControl\"\n      [max]=\"entry.product?.stock?.stockLevel\"\n      [readonly]=\"loading\"\n    ></cx-item-counter>\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-actions\">\n  <button\n    (click)=\"removeEntry()\"\n    [attr.aria-label]=\"'common.remove' | cxTranslate\"\n    [disabled]=\"loading\"\n    class=\"btn btn-tertiary\"\n  >\n    {{ 'common.remove' | cxTranslate }}\n  </button>\n</td>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i3.ItemCounterComponent, selector: "cx-item-counter", inputs: ["control", "min", "max", "step", "allowZero", "readonly"] }, { kind: "component", type: i3.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { kind: "directive", type: i4.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i5.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: QuickOrderItemComponent, decorators: [{
            type: Component,
            args: [{ selector: '[cx-quick-order-item], cx-quick-order-item', changeDetection: ChangeDetectionStrategy.OnPush, template: "<td role=\"cell\">\n  <div class=\"cx-table-item-container\">\n    <a\n      [ngClass]=\"{\n        disabled: loading,\n        'img-missing': !entry?.product?.images?.PRIMARY\n      }\"\n      [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n      tabindex=\"-1\"\n    >\n      <cx-media\n        [container]=\"entry?.product?.images?.PRIMARY\"\n        [alt]=\"entry?.product?.name\"\n        format=\"cartIcon\"\n      ></cx-media>\n    </a>\n    <div class=\"cx-info\">\n      <div class=\"cx-name\">\n        <a\n          [ngClass]=\"{ disabled: loading }\"\n          [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n          class=\"cx-link\"\n          >{{ entry.product?.name || '-' }}\n        </a>\n      </div>\n\n      <div class=\"cx-code\">\n        {{ 'quickOrderTable.id' | cxTranslate }} {{ entry.product?.code }}\n      </div>\n    </div>\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-price\">\n  <div class=\"cx-mobile-header\">\n    {{ 'quickOrderTable.itemPrice' | cxTranslate }}\n  </div>\n  <div class=\"cx-value\">\n    {{ entry.basePrice?.formattedValue || '-' }}\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-quantity\">\n  <div class=\"cx-mobile-header\">\n    {{ 'quickOrderTable.qty' | cxTranslate }}\n  </div>\n  <div class=\"cx-value\">\n    <cx-item-counter\n      [control]=\"quantityControl\"\n      [max]=\"entry.product?.stock?.stockLevel\"\n      [readonly]=\"loading\"\n    ></cx-item-counter>\n  </div>\n</td>\n\n<td role=\"cell\" class=\"cx-actions\">\n  <button\n    (click)=\"removeEntry()\"\n    [attr.aria-label]=\"'common.remove' | cxTranslate\"\n    [disabled]=\"loading\"\n    class=\"btn btn-tertiary\"\n  >\n    {{ 'common.remove' | cxTranslate }}\n  </button>\n</td>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.QuickOrderFacade }]; }, propDecorators: { entry: [{
                type: Input,
                args: ['entry']
            }], index: [{
                type: Input
            }], loading: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpY2stb3JkZXItaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2FydC9xdWljay1vcmRlci9jb21wb25lbnRzL3F1aWNrLW9yZGVyL3RhYmxlL2l0ZW0vcXVpY2stb3JkZXItaXRlbS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2FydC9xdWljay1vcmRlci9jb21wb25lbnRzL3F1aWNrLW9yZGVyL3RhYmxlL2l0ZW0vcXVpY2stb3JkZXItaXRlbS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUNMLHVCQUF1QixFQUV2QixTQUFTLEVBQ1QsS0FBSyxHQUdOLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7Ozs7QUFPcEMsTUFBTSxPQUFPLHVCQUF1QjtJQUdsQyxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVELElBQW9CLEtBQUssQ0FBQyxLQUFpQjtRQUN6QyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDakUsUUFBUSxFQUFFLE1BQU07U0FDakIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQVdELFlBQ1ksRUFBcUIsRUFDckIsaUJBQW1DO1FBRG5DLE9BQUUsR0FBRixFQUFFLENBQW1CO1FBQ3JCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBa0I7UUFQL0MsWUFBTyxHQUFZLEtBQUssQ0FBQztRQUdmLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUt6QyxDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUNuQixJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQy9DLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxtQkFBbUIsQ0FDeEMsSUFBSSxDQUFDLEtBQUssRUFDVixJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FDM0IsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUNILENBQUM7UUFFRixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVTLGVBQWU7UUFDdkIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsZUFBZSxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDeEUsSUFBSSxXQUFXLEtBQUssSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFO2dCQUM1QyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDbkUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQzthQUN6QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxFQUFFLFdBQVcsRUFBRSxDQUFDO0lBQ25DLENBQUM7O29IQXpEVSx1QkFBdUI7d0dBQXZCLHVCQUF1QixrSkN4QnBDLCt1REFpRUE7MkZEekNhLHVCQUF1QjtrQkFMbkMsU0FBUzsrQkFDRSw0Q0FBNEMsbUJBRXJDLHVCQUF1QixDQUFDLE1BQU07dUlBUzNCLEtBQUs7c0JBQXhCLEtBQUs7dUJBQUMsT0FBTztnQkFRZCxLQUFLO3NCQURKLEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBPbkRlc3Ryb3ksXG4gIE9uSW5pdCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVbnR5cGVkRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBPcmRlckVudHJ5IH0gZnJvbSAnQHNwYXJ0YWN1cy9jYXJ0L2Jhc2Uvcm9vdCc7XG5pbXBvcnQgeyBRdWlja09yZGVyRmFjYWRlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jYXJ0L3F1aWNrLW9yZGVyL3Jvb3QnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1tjeC1xdWljay1vcmRlci1pdGVtXSwgY3gtcXVpY2stb3JkZXItaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9xdWljay1vcmRlci1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFF1aWNrT3JkZXJJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBxdWFudGl0eUNvbnRyb2w6IFVudHlwZWRGb3JtQ29udHJvbDtcblxuICBnZXQgZW50cnkoKTogT3JkZXJFbnRyeSB7XG4gICAgcmV0dXJuIHRoaXMuX2VudHJ5O1xuICB9XG5cbiAgQElucHV0KCdlbnRyeScpIHNldCBlbnRyeSh2YWx1ZTogT3JkZXJFbnRyeSkge1xuICAgIHRoaXMuX2VudHJ5ID0gdmFsdWU7XG4gICAgdGhpcy5xdWFudGl0eUNvbnRyb2wgPSBuZXcgVW50eXBlZEZvcm1Db250cm9sKHRoaXMuZW50cnkucXVhbnRpdHksIHtcbiAgICAgIHVwZGF0ZU9uOiAnYmx1cicsXG4gICAgfSk7XG4gIH1cblxuICBASW5wdXQoKVxuICBpbmRleDogbnVtYmVyO1xuXG4gIEBJbnB1dCgpXG4gIGxvYWRpbmc6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBwcm90ZWN0ZWQgX2VudHJ5OiBPcmRlckVudHJ5O1xuICBwcm90ZWN0ZWQgc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgcHJvdGVjdGVkIHF1aWNrT3JkZXJTZXJ2aWNlOiBRdWlja09yZGVyRmFjYWRlXG4gICkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi5hZGQoXG4gICAgICB0aGlzLnF1YW50aXR5Q29udHJvbC52YWx1ZUNoYW5nZXMuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgdGhpcy5xdWlja09yZGVyU2VydmljZS51cGRhdGVFbnRyeVF1YW50aXR5KFxuICAgICAgICAgIHRoaXMuaW5kZXgsXG4gICAgICAgICAgdGhpcy5xdWFudGl0eUNvbnRyb2wudmFsdWVcbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgKTtcblxuICAgIHRoaXMuc3Vic2NyaXB0aW9uLmFkZCh0aGlzLndhdGNoUHJvZHVjdEFkZCgpKTtcbiAgfVxuXG4gIHJlbW92ZUVudHJ5KCk6IHZvaWQge1xuICAgIHRoaXMucXVpY2tPcmRlclNlcnZpY2Uuc29mdERlbGV0ZUVudHJ5KHRoaXMuaW5kZXgpO1xuICAgIHRoaXMuY2QuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbiAgcHJvdGVjdGVkIHdhdGNoUHJvZHVjdEFkZCgpOiBTdWJzY3JpcHRpb24ge1xuICAgIHJldHVybiB0aGlzLnF1aWNrT3JkZXJTZXJ2aWNlLmdldFByb2R1Y3RBZGRlZCgpLnN1YnNjcmliZSgocHJvZHVjdENvZGUpID0+IHtcbiAgICAgIGlmIChwcm9kdWN0Q29kZSA9PT0gdGhpcy5lbnRyeS5wcm9kdWN0Py5jb2RlKSB7XG4gICAgICAgIHRoaXMucXVhbnRpdHlDb250cm9sID0gbmV3IFVudHlwZWRGb3JtQ29udHJvbCh0aGlzLmVudHJ5LnF1YW50aXR5KTtcbiAgICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbj8udW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIiwiPHRkIHJvbGU9XCJjZWxsXCI+XG4gIDxkaXYgY2xhc3M9XCJjeC10YWJsZS1pdGVtLWNvbnRhaW5lclwiPlxuICAgIDxhXG4gICAgICBbbmdDbGFzc109XCJ7XG4gICAgICAgIGRpc2FibGVkOiBsb2FkaW5nLFxuICAgICAgICAnaW1nLW1pc3NpbmcnOiAhZW50cnk/LnByb2R1Y3Q/LmltYWdlcz8uUFJJTUFSWVxuICAgICAgfVwiXG4gICAgICBbcm91dGVyTGlua109XCJ7IGN4Um91dGU6ICdwcm9kdWN0JywgcGFyYW1zOiBlbnRyeS5wcm9kdWN0IH0gfCBjeFVybFwiXG4gICAgICB0YWJpbmRleD1cIi0xXCJcbiAgICA+XG4gICAgICA8Y3gtbWVkaWFcbiAgICAgICAgW2NvbnRhaW5lcl09XCJlbnRyeT8ucHJvZHVjdD8uaW1hZ2VzPy5QUklNQVJZXCJcbiAgICAgICAgW2FsdF09XCJlbnRyeT8ucHJvZHVjdD8ubmFtZVwiXG4gICAgICAgIGZvcm1hdD1cImNhcnRJY29uXCJcbiAgICAgID48L2N4LW1lZGlhPlxuICAgIDwvYT5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtaW5mb1wiPlxuICAgICAgPGRpdiBjbGFzcz1cImN4LW5hbWVcIj5cbiAgICAgICAgPGFcbiAgICAgICAgICBbbmdDbGFzc109XCJ7IGRpc2FibGVkOiBsb2FkaW5nIH1cIlxuICAgICAgICAgIFtyb3V0ZXJMaW5rXT1cInsgY3hSb3V0ZTogJ3Byb2R1Y3QnLCBwYXJhbXM6IGVudHJ5LnByb2R1Y3QgfSB8IGN4VXJsXCJcbiAgICAgICAgICBjbGFzcz1cImN4LWxpbmtcIlxuICAgICAgICAgID57eyBlbnRyeS5wcm9kdWN0Py5uYW1lIHx8ICctJyB9fVxuICAgICAgICA8L2E+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImN4LWNvZGVcIj5cbiAgICAgICAge3sgJ3F1aWNrT3JkZXJUYWJsZS5pZCcgfCBjeFRyYW5zbGF0ZSB9fSB7eyBlbnRyeS5wcm9kdWN0Py5jb2RlIH19XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RkPlxuXG48dGQgcm9sZT1cImNlbGxcIiBjbGFzcz1cImN4LXByaWNlXCI+XG4gIDxkaXYgY2xhc3M9XCJjeC1tb2JpbGUtaGVhZGVyXCI+XG4gICAge3sgJ3F1aWNrT3JkZXJUYWJsZS5pdGVtUHJpY2UnIHwgY3hUcmFuc2xhdGUgfX1cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjeC12YWx1ZVwiPlxuICAgIHt7IGVudHJ5LmJhc2VQcmljZT8uZm9ybWF0dGVkVmFsdWUgfHwgJy0nIH19XG4gIDwvZGl2PlxuPC90ZD5cblxuPHRkIHJvbGU9XCJjZWxsXCIgY2xhc3M9XCJjeC1xdWFudGl0eVwiPlxuICA8ZGl2IGNsYXNzPVwiY3gtbW9iaWxlLWhlYWRlclwiPlxuICAgIHt7ICdxdWlja09yZGVyVGFibGUucXR5JyB8IGN4VHJhbnNsYXRlIH19XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiY3gtdmFsdWVcIj5cbiAgICA8Y3gtaXRlbS1jb3VudGVyXG4gICAgICBbY29udHJvbF09XCJxdWFudGl0eUNvbnRyb2xcIlxuICAgICAgW21heF09XCJlbnRyeS5wcm9kdWN0Py5zdG9jaz8uc3RvY2tMZXZlbFwiXG4gICAgICBbcmVhZG9ubHldPVwibG9hZGluZ1wiXG4gICAgPjwvY3gtaXRlbS1jb3VudGVyPlxuICA8L2Rpdj5cbjwvdGQ+XG5cbjx0ZCByb2xlPVwiY2VsbFwiIGNsYXNzPVwiY3gtYWN0aW9uc1wiPlxuICA8YnV0dG9uXG4gICAgKGNsaWNrKT1cInJlbW92ZUVudHJ5KClcIlxuICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiJ2NvbW1vbi5yZW1vdmUnIHwgY3hUcmFuc2xhdGVcIlxuICAgIFtkaXNhYmxlZF09XCJsb2FkaW5nXCJcbiAgICBjbGFzcz1cImJ0biBidG4tdGVydGlhcnlcIlxuICA+XG4gICAge3sgJ2NvbW1vbi5yZW1vdmUnIHwgY3hUcmFuc2xhdGUgfX1cbiAgPC9idXR0b24+XG48L3RkPlxuIl19