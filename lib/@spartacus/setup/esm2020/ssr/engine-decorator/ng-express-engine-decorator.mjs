/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { OptimizedSsrEngine, } from '../optimized-engine/optimized-ssr-engine';
import { defaultSsrOptimizationOptions, } from '../optimized-engine/ssr-optimization-options';
import { getServerRequestProviders } from '../providers/ssr-providers';
/**
 * The wrapper over the standard ngExpressEngine, that provides tokens for Spartacus
 * @param ngExpressEngine
 */
export class NgExpressEngineDecorator {
    /**
     * Returns the higher order ngExpressEngine with provided tokens for Spartacus
     *
     * @param ngExpressEngine
     */
    static get(ngExpressEngine, optimizationOptions) {
        return decorateExpressEngine(ngExpressEngine, optimizationOptions);
    }
}
export function decorateExpressEngine(ngExpressEngine, optimizationOptions = defaultSsrOptimizationOptions) {
    return function (setupOptions) {
        const engineInstance = ngExpressEngine({
            ...setupOptions,
            providers: [
                // add spartacus related providers
                ...getServerRequestProviders(),
                ...(setupOptions.providers ?? []),
            ],
        });
        // apply optimization wrapper if optimization options were defined
        return optimizationOptions
            ? new OptimizedSsrEngine(engineInstance, optimizationOptions)
                .engineInstance
            : engineInstance;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctZXhwcmVzcy1lbmdpbmUtZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29yZS1saWJzL3NldHVwL3Nzci9lbmdpbmUtZGVjb3JhdG9yL25nLWV4cHJlc3MtZW5naW5lLWRlY29yYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBR0gsT0FBTyxFQUNMLGtCQUFrQixHQUVuQixNQUFNLDBDQUEwQyxDQUFDO0FBQ2xELE9BQU8sRUFFTCw2QkFBNkIsR0FDOUIsTUFBTSw4Q0FBOEMsQ0FBQztBQUN0RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQVl2RTs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sd0JBQXdCO0lBQ25DOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsR0FBRyxDQUNSLGVBQWdDLEVBQ2hDLG1CQUFtRDtRQUVuRCxPQUFPLHFCQUFxQixDQUFDLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRjtBQUVELE1BQU0sVUFBVSxxQkFBcUIsQ0FDbkMsZUFBZ0MsRUFDaEMsc0JBR2dCLDZCQUE2QjtJQUU3QyxPQUFPLFVBQVUsWUFBNEI7UUFDM0MsTUFBTSxjQUFjLEdBQUcsZUFBZSxDQUFDO1lBQ3JDLEdBQUcsWUFBWTtZQUNmLFNBQVMsRUFBRTtnQkFDVCxrQ0FBa0M7Z0JBQ2xDLEdBQUcseUJBQXlCLEVBQUU7Z0JBQzlCLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQzthQUNsQztTQUNGLENBQUMsQ0FBQztRQUVILGtFQUFrRTtRQUNsRSxPQUFPLG1CQUFtQjtZQUN4QixDQUFDLENBQUMsSUFBSSxrQkFBa0IsQ0FBQyxjQUFjLEVBQUUsbUJBQW1CLENBQUM7aUJBQ3hELGNBQWM7WUFDbkIsQ0FBQyxDQUFDLGNBQWMsQ0FBQztJQUNyQixDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgTmdTZXR1cE9wdGlvbnMgfSBmcm9tICdAbmd1bml2ZXJzYWwvZXhwcmVzcy1lbmdpbmUnO1xuaW1wb3J0IHtcbiAgT3B0aW1pemVkU3NyRW5naW5lLFxuICBTc3JDYWxsYmFja0ZuLFxufSBmcm9tICcuLi9vcHRpbWl6ZWQtZW5naW5lL29wdGltaXplZC1zc3ItZW5naW5lJztcbmltcG9ydCB7XG4gIFNzck9wdGltaXphdGlvbk9wdGlvbnMsXG4gIGRlZmF1bHRTc3JPcHRpbWl6YXRpb25PcHRpb25zLFxufSBmcm9tICcuLi9vcHRpbWl6ZWQtZW5naW5lL3Nzci1vcHRpbWl6YXRpb24tb3B0aW9ucyc7XG5pbXBvcnQgeyBnZXRTZXJ2ZXJSZXF1ZXN0UHJvdmlkZXJzIH0gZnJvbSAnLi4vcHJvdmlkZXJzL3Nzci1wcm92aWRlcnMnO1xuXG5leHBvcnQgdHlwZSBOZ0V4cHJlc3NFbmdpbmVJbnN0YW5jZSA9IChcbiAgZmlsZVBhdGg6IHN0cmluZyxcbiAgb3B0aW9uczogb2JqZWN0LFxuICBjYWxsYmFjazogU3NyQ2FsbGJhY2tGblxuKSA9PiB2b2lkO1xuXG5leHBvcnQgdHlwZSBOZ0V4cHJlc3NFbmdpbmUgPSAoXG4gIHNldHVwT3B0aW9uczogUmVhZG9ubHk8TmdTZXR1cE9wdGlvbnM+XG4pID0+IE5nRXhwcmVzc0VuZ2luZUluc3RhbmNlO1xuXG4vKipcbiAqIFRoZSB3cmFwcGVyIG92ZXIgdGhlIHN0YW5kYXJkIG5nRXhwcmVzc0VuZ2luZSwgdGhhdCBwcm92aWRlcyB0b2tlbnMgZm9yIFNwYXJ0YWN1c1xuICogQHBhcmFtIG5nRXhwcmVzc0VuZ2luZVxuICovXG5leHBvcnQgY2xhc3MgTmdFeHByZXNzRW5naW5lRGVjb3JhdG9yIHtcbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGhpZ2hlciBvcmRlciBuZ0V4cHJlc3NFbmdpbmUgd2l0aCBwcm92aWRlZCB0b2tlbnMgZm9yIFNwYXJ0YWN1c1xuICAgKlxuICAgKiBAcGFyYW0gbmdFeHByZXNzRW5naW5lXG4gICAqL1xuICBzdGF0aWMgZ2V0KFxuICAgIG5nRXhwcmVzc0VuZ2luZTogTmdFeHByZXNzRW5naW5lLFxuICAgIG9wdGltaXphdGlvbk9wdGlvbnM/OiBTc3JPcHRpbWl6YXRpb25PcHRpb25zIHwgbnVsbFxuICApOiBOZ0V4cHJlc3NFbmdpbmUge1xuICAgIHJldHVybiBkZWNvcmF0ZUV4cHJlc3NFbmdpbmUobmdFeHByZXNzRW5naW5lLCBvcHRpbWl6YXRpb25PcHRpb25zKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVjb3JhdGVFeHByZXNzRW5naW5lKFxuICBuZ0V4cHJlc3NFbmdpbmU6IE5nRXhwcmVzc0VuZ2luZSxcbiAgb3B0aW1pemF0aW9uT3B0aW9uczpcbiAgICB8IFNzck9wdGltaXphdGlvbk9wdGlvbnNcbiAgICB8IG51bGxcbiAgICB8IHVuZGVmaW5lZCA9IGRlZmF1bHRTc3JPcHRpbWl6YXRpb25PcHRpb25zXG4pOiBOZ0V4cHJlc3NFbmdpbmUge1xuICByZXR1cm4gZnVuY3Rpb24gKHNldHVwT3B0aW9uczogTmdTZXR1cE9wdGlvbnMpIHtcbiAgICBjb25zdCBlbmdpbmVJbnN0YW5jZSA9IG5nRXhwcmVzc0VuZ2luZSh7XG4gICAgICAuLi5zZXR1cE9wdGlvbnMsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgLy8gYWRkIHNwYXJ0YWN1cyByZWxhdGVkIHByb3ZpZGVyc1xuICAgICAgICAuLi5nZXRTZXJ2ZXJSZXF1ZXN0UHJvdmlkZXJzKCksXG4gICAgICAgIC4uLihzZXR1cE9wdGlvbnMucHJvdmlkZXJzID8/IFtdKSxcbiAgICAgIF0sXG4gICAgfSk7XG5cbiAgICAvLyBhcHBseSBvcHRpbWl6YXRpb24gd3JhcHBlciBpZiBvcHRpbWl6YXRpb24gb3B0aW9ucyB3ZXJlIGRlZmluZWRcbiAgICByZXR1cm4gb3B0aW1pemF0aW9uT3B0aW9uc1xuICAgICAgPyBuZXcgT3B0aW1pemVkU3NyRW5naW5lKGVuZ2luZUluc3RhbmNlLCBvcHRpbWl6YXRpb25PcHRpb25zKVxuICAgICAgICAgIC5lbmdpbmVJbnN0YW5jZVxuICAgICAgOiBlbmdpbmVJbnN0YW5jZTtcbiAgfTtcbn1cbiJdfQ==