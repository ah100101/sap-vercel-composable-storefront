/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Injectable } from '@angular/core';
import { Config } from '../../config/config-tokens';
import { CmsConfig } from './cms-config';
import * as i0 from "@angular/core";
/**
 * The `CmsStructureConfig` is used to build pages in Spartacus by configuration
 * instead of using a backend CMS system. The configuration can be used to build
 * complete pages or parts of a page. The `CmsStructureConfig` is optimized to
 * only require the necessary properties. Adapter logic is applied to serialize
 * the `CmsStructureConfig` into the required UI model.
 */
export class CmsStructureConfig extends CmsConfig {
}
CmsStructureConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CmsStructureConfig, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
CmsStructureConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CmsStructureConfig, providedIn: 'root', useExisting: Config });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CmsStructureConfig, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                    useExisting: Config,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY21zLXN0cnVjdHVyZS5jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9jbXMvY29uZmlnL2Ntcy1zdHJ1Y3R1cmUuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVwRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDOztBQTBEekM7Ozs7OztHQU1HO0FBS0gsTUFBTSxPQUFnQixrQkFBbUIsU0FBUSxTQUFTOzsrR0FBcEMsa0JBQWtCO21IQUFsQixrQkFBa0IsY0FIMUIsTUFBTSxlQUNMLE1BQU07MkZBRUMsa0JBQWtCO2tCQUp2QyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO29CQUNsQixXQUFXLEVBQUUsTUFBTTtpQkFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tICcuLi8uLi9jb25maWcvY29uZmlnLXRva2Vucyc7XG5pbXBvcnQgeyBDb250ZW50U2xvdENvbXBvbmVudERhdGEgfSBmcm9tICcuLi9tb2RlbC9jb250ZW50LXNsb3QtY29tcG9uZW50LWRhdGEubW9kZWwnO1xuaW1wb3J0IHsgQ21zQ29uZmlnIH0gZnJvbSAnLi9jbXMtY29uZmlnJztcblxuLyoqXG4gKiBUaGUgYENtc1BhZ2VDb25maWdgIGlzIHVzZWQgdG8gYnVpbGQgcGFnZXMgYnkgY29uZmlndXJhdGlvbi5cbiAqIFRoZSBpbnRlcmZhY2VzIGFyZSBkZXNpZ25lZCB0byBoYXZlIGEgY2xlYW4gY29uZmlndXJhdGlvbiBmb3JcbiAqIHN0YXRpYyBDTVMgc3RydWN0dXJlLiBPcmRpbmFyeSBhdHRyaWJ1dGVzIHRoYXQgYXJlIG5vdFxuICogcmVxdWlyZWQgZm9yIGNvbmZpZ3VyYWJsZSBwYWdlcyBoYXZlIGJlZW4gbGVmdCBvdXQgYW5kXG4gKiB3aWxsIG5vdCBiZSBzZXJpYWxpemVkIGluIHRoZSBhZGFwdGVyIGxvZ2ljLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENtc1BhZ2VDb25maWcge1xuICAvKipcbiAgICogV2hlbiB0aGUgYGlnbm9yZUJhY2tlbmRgIGlzIHNldCB0byB0cnVlLCB0aGUgQ01TIGJhY2tlbmRcbiAgICogd2lsbCBub3QgYmUgY29uc3VtZWQuIFRoaXMgc2F2ZXMgbmV0d29yayBsYXRlbmN5IGFuZCBpc1xuICAgKiB1c2VmdWwgZm9yIGNvbW1vZGl0eSBjb21tZXJjZSBwYWdlcy5cbiAgICogKi9cbiAgaWdub3JlQmFja2VuZD86IGJvb2xlYW47XG5cbiAgcGFnZUlkPzogc3RyaW5nO1xuXG4gIHR5cGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBwYWdlIHRpdGxlIGlzIHR5cGljYWxseSB1c2VkIHRvIGRpc3BsYXkgdGhlIHBhZ2UgaGVhZGluZ1xuICAgKiBhcyB3ZWxsIGFzIGZvciB0aGUgcGFnZSB0aXRsZSB0YWcuIFRoZSBsYXR0ZXIgaXMgdXNlZCBmb3IgYnJvd3NlclxuICAgKiBuYXZpZ2F0aW9uIGFzIHdlbGwgYXMgU0VPIGFuZCBzb2NpYWwgc2hhcmUgcGxhdGZvcm1zLlxuICAgKi9cbiAgdGl0bGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIHRoZSB0ZW1wbGF0ZSBpcyB1c2VkIHRvIGJpbmQgdG8gdGhlIGxheW91dFxuICAgKiBjb25maWd1cmF0aW9uIGFuZCBjc3MgbGF5b3V0IGNsYXNzXG4gICAqL1xuICB0ZW1wbGF0ZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHBhZ2Ugc2xvdHMgcmVwcmVzZW50IHZhcmlvdXMgc2VjdGlvbnMgb24gdGhlIHBhZ2UgdGhhdFxuICAgKiBjYW4gY29udGFpbiBjb21wb25lbnRzLlxuICAgKi9cbiAgc2xvdHM6IHsgW2tleTogc3RyaW5nXTogQ21zUGFnZVNsb3RDb25maWcgfTtcbn1cblxuLyoqXG4gKiBUaGUgYENtc1BhZ2VTbG90c0NvbmZpZ2AgKHBsdXJhbCkgaG9sZHMgYENtc1BhZ2VTbG90Q29uZmlnYCBvYmplY3RzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENtc1BhZ2VTbG90c0NvbmZpZyB7XG4gIFtrZXk6IHN0cmluZ106IENtc1BhZ2VTbG90Q29uZmlnO1xufVxuXG4vKipcbiAqIFRoZSBgQ21zUGFnZVNsb3RDb25maWdgIGlzIGEgc2ltcGxpZmllZCBjb25maWd1cmF0aW9uIG1vZGVsXG4gKiB0aGF0IGNhbiBiZSB1c2VkIHRvIGNvbmZpZ3VyZSBzbG90cyBpbiBzdGF0aWMgY29uZmlndXJhdGlvbixcbiAqIHJhdGhlciB0aGFuIGxvYWRpbmcgZnJvbSBhIGJhY2tlbmQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ21zUGFnZVNsb3RDb25maWcge1xuICBjb21wb25lbnRJZHM/OiBzdHJpbmdbXTtcbiAgcHJvcGVydGllcz86IGFueTtcbn1cblxuLyoqXG4gKiBUaGUgYENtc1N0cnVjdHVyZUNvbmZpZ2AgaXMgdXNlZCB0byBidWlsZCBwYWdlcyBpbiBTcGFydGFjdXMgYnkgY29uZmlndXJhdGlvblxuICogaW5zdGVhZCBvZiB1c2luZyBhIGJhY2tlbmQgQ01TIHN5c3RlbS4gVGhlIGNvbmZpZ3VyYXRpb24gY2FuIGJlIHVzZWQgdG8gYnVpbGRcbiAqIGNvbXBsZXRlIHBhZ2VzIG9yIHBhcnRzIG9mIGEgcGFnZS4gVGhlIGBDbXNTdHJ1Y3R1cmVDb25maWdgIGlzIG9wdGltaXplZCB0b1xuICogb25seSByZXF1aXJlIHRoZSBuZWNlc3NhcnkgcHJvcGVydGllcy4gQWRhcHRlciBsb2dpYyBpcyBhcHBsaWVkIHRvIHNlcmlhbGl6ZVxuICogdGhlIGBDbXNTdHJ1Y3R1cmVDb25maWdgIGludG8gdGhlIHJlcXVpcmVkIFVJIG1vZGVsLlxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290JyxcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ21zU3RydWN0dXJlQ29uZmlnIGV4dGVuZHMgQ21zQ29uZmlnIHtcbiAgY21zU3RydWN0dXJlPzoge1xuICAgIGNvbXBvbmVudHM/OiB7IFtrZXk6IHN0cmluZ106IENvbnRlbnRTbG90Q29tcG9uZW50RGF0YSB8IGFueSB9O1xuICAgIHBhZ2VzPzogQ21zUGFnZUNvbmZpZ1tdO1xuICAgIHNsb3RzPzogQ21zUGFnZVNsb3RzQ29uZmlnO1xuICB9O1xufVxuXG5kZWNsYXJlIG1vZHVsZSAnLi4vLi4vY29uZmlnL2NvbmZpZy10b2tlbnMnIHtcbiAgaW50ZXJmYWNlIENvbmZpZyBleHRlbmRzIENtc1N0cnVjdHVyZUNvbmZpZyB7fVxufVxuIl19