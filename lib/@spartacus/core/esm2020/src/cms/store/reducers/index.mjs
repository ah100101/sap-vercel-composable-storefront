/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { InjectionToken } from '@angular/core';
import { combineReducers, } from '@ngrx/store';
import { AuthActions } from '../../../auth/user-auth/store/actions/index';
import { PageType } from '../../../model/cms.model';
import { SiteContextActions } from '../../../site-context/store/actions/index';
import { entityLoaderReducer } from '../../../state/utils/entity-loader/entity-loader.reducer';
import { entityReducer } from '../../../state/utils/entity/entity.reducer';
import { COMPONENT_ENTITY, NAVIGATION_DETAIL_ENTITY, } from '../cms-state';
import * as fromComponentsReducer from './components.reducer';
import * as fromNavigation from './navigation-entry-item.reducer';
import * as fromPageReducer from './page-data.reducer';
import * as fromPageIndexReducer from './page-index.reducer';
export function getReducers() {
    return {
        page: combineReducers({
            pageData: fromPageReducer.reducer,
            index: combineReducers({
                content: entityLoaderReducer(PageType.CONTENT_PAGE, fromPageIndexReducer.reducer(PageType.CONTENT_PAGE)),
                product: entityLoaderReducer(PageType.PRODUCT_PAGE, fromPageIndexReducer.reducer(PageType.PRODUCT_PAGE)),
                category: entityLoaderReducer(PageType.CATEGORY_PAGE, fromPageIndexReducer.reducer(PageType.CATEGORY_PAGE)),
                catalog: entityLoaderReducer(PageType.CATALOG_PAGE, fromPageIndexReducer.reducer(PageType.CATALOG_PAGE)),
            }),
        }),
        components: entityReducer(COMPONENT_ENTITY, fromComponentsReducer.reducer),
        navigation: entityLoaderReducer(NAVIGATION_DETAIL_ENTITY, fromNavigation.reducer),
    };
}
export const reducerToken = new InjectionToken('CmsReducers');
export const reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
export function clearCmsState(reducer) {
    return function (state, action) {
        if (action.type === SiteContextActions.LANGUAGE_CHANGE ||
            action.type === AuthActions.LOGOUT ||
            action.type === AuthActions.LOGIN) {
            state = undefined;
        }
        return reducer(state, action);
    };
}
export const metaReducers = [clearCmsState];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9jbXMvc3RvcmUvcmVkdWNlcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxjQUFjLEVBQVksTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUlMLGVBQWUsR0FFaEIsTUFBTSxhQUFhLENBQUM7QUFDckIsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUMvRixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFFM0UsT0FBTyxFQUdMLGdCQUFnQixFQUNoQix3QkFBd0IsR0FFekIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxLQUFLLHFCQUFxQixNQUFNLHNCQUFzQixDQUFDO0FBQzlELE9BQU8sS0FBSyxjQUFjLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxLQUFLLGVBQWUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEtBQUssb0JBQW9CLE1BQU0sc0JBQXNCLENBQUM7QUFFN0QsTUFBTSxVQUFVLFdBQVc7SUFDekIsT0FBTztRQUNMLElBQUksRUFBRSxlQUFlLENBQUM7WUFDcEIsUUFBUSxFQUFFLGVBQWUsQ0FBQyxPQUFPO1lBQ2pDLEtBQUssRUFBRSxlQUFlLENBQUM7Z0JBQ3JCLE9BQU8sRUFBRSxtQkFBbUIsQ0FDMUIsUUFBUSxDQUFDLFlBQVksRUFDckIsb0JBQW9CLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FDcEQ7Z0JBQ0QsT0FBTyxFQUFFLG1CQUFtQixDQUMxQixRQUFRLENBQUMsWUFBWSxFQUNyQixvQkFBb0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUNwRDtnQkFDRCxRQUFRLEVBQUUsbUJBQW1CLENBQzNCLFFBQVEsQ0FBQyxhQUFhLEVBQ3RCLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQ3JEO2dCQUNELE9BQU8sRUFBRSxtQkFBbUIsQ0FDMUIsUUFBUSxDQUFDLFlBQVksRUFDckIsb0JBQW9CLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FDcEQ7YUFDRixDQUFDO1NBQ0gsQ0FBQztRQUNGLFVBQVUsRUFBRSxhQUFhLENBQ3ZCLGdCQUFnQixFQUNoQixxQkFBcUIsQ0FBQyxPQUFPLENBQzlCO1FBQ0QsVUFBVSxFQUFFLG1CQUFtQixDQUM3Qix3QkFBd0IsRUFDeEIsY0FBYyxDQUFDLE9BQU8sQ0FDdkI7S0FDRixDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FDdkIsSUFBSSxjQUFjLENBQTZCLGFBQWEsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBYTtJQUN2QyxPQUFPLEVBQUUsWUFBWTtJQUNyQixVQUFVLEVBQUUsV0FBVztDQUN4QixDQUFDO0FBRUYsTUFBTSxVQUFVLGFBQWEsQ0FDM0IsT0FBNEM7SUFFNUMsT0FBTyxVQUFVLEtBQUssRUFBRSxNQUFNO1FBQzVCLElBQ0UsTUFBTSxDQUFDLElBQUksS0FBSyxrQkFBa0IsQ0FBQyxlQUFlO1lBQ2xELE1BQU0sQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLE1BQU07WUFDbEMsTUFBTSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsS0FBSyxFQUNqQztZQUNBLEtBQUssR0FBRyxTQUFTLENBQUM7U0FDbkI7UUFDRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBZ0MsQ0FBQyxhQUFhLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IEluamVjdGlvblRva2VuLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQWN0aW9uLFxuICBBY3Rpb25SZWR1Y2VyLFxuICBBY3Rpb25SZWR1Y2VyTWFwLFxuICBjb21iaW5lUmVkdWNlcnMsXG4gIE1ldGFSZWR1Y2VyLFxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBBdXRoQWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2F1dGgvdXNlci1hdXRoL3N0b3JlL2FjdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgUGFnZVR5cGUgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9jbXMubW9kZWwnO1xuaW1wb3J0IHsgU2l0ZUNvbnRleHRBY3Rpb25zIH0gZnJvbSAnLi4vLi4vLi4vc2l0ZS1jb250ZXh0L3N0b3JlL2FjdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgZW50aXR5TG9hZGVyUmVkdWNlciB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2VudGl0eS1sb2FkZXIvZW50aXR5LWxvYWRlci5yZWR1Y2VyJztcbmltcG9ydCB7IGVudGl0eVJlZHVjZXIgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9lbnRpdHkvZW50aXR5LnJlZHVjZXInO1xuaW1wb3J0IHsgTm9kZUl0ZW0gfSBmcm9tICcuLi8uLi9tb2RlbC9ub2RlLWl0ZW0ubW9kZWwnO1xuaW1wb3J0IHtcbiAgQ21zU3RhdGUsXG4gIENvbXBvbmVudHNDb250ZXh0LFxuICBDT01QT05FTlRfRU5USVRZLFxuICBOQVZJR0FUSU9OX0RFVEFJTF9FTlRJVFksXG4gIFN0YXRlV2l0aENtcyxcbn0gZnJvbSAnLi4vY21zLXN0YXRlJztcbmltcG9ydCAqIGFzIGZyb21Db21wb25lbnRzUmVkdWNlciBmcm9tICcuL2NvbXBvbmVudHMucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tTmF2aWdhdGlvbiBmcm9tICcuL25hdmlnYXRpb24tZW50cnktaXRlbS5yZWR1Y2VyJztcbmltcG9ydCAqIGFzIGZyb21QYWdlUmVkdWNlciBmcm9tICcuL3BhZ2UtZGF0YS5yZWR1Y2VyJztcbmltcG9ydCAqIGFzIGZyb21QYWdlSW5kZXhSZWR1Y2VyIGZyb20gJy4vcGFnZS1pbmRleC5yZWR1Y2VyJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlZHVjZXJzKCk6IEFjdGlvblJlZHVjZXJNYXA8Q21zU3RhdGUsIGFueT4ge1xuICByZXR1cm4ge1xuICAgIHBhZ2U6IGNvbWJpbmVSZWR1Y2Vycyh7XG4gICAgICBwYWdlRGF0YTogZnJvbVBhZ2VSZWR1Y2VyLnJlZHVjZXIsXG4gICAgICBpbmRleDogY29tYmluZVJlZHVjZXJzKHtcbiAgICAgICAgY29udGVudDogZW50aXR5TG9hZGVyUmVkdWNlcjxzdHJpbmcsIGFueT4oXG4gICAgICAgICAgUGFnZVR5cGUuQ09OVEVOVF9QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuQ09OVEVOVF9QQUdFKVxuICAgICAgICApLFxuICAgICAgICBwcm9kdWN0OiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZywgYW55PihcbiAgICAgICAgICBQYWdlVHlwZS5QUk9EVUNUX1BBR0UsXG4gICAgICAgICAgZnJvbVBhZ2VJbmRleFJlZHVjZXIucmVkdWNlcihQYWdlVHlwZS5QUk9EVUNUX1BBR0UpXG4gICAgICAgICksXG4gICAgICAgIGNhdGVnb3J5OiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZywgYW55PihcbiAgICAgICAgICBQYWdlVHlwZS5DQVRFR09SWV9QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuQ0FURUdPUllfUEFHRSlcbiAgICAgICAgKSxcbiAgICAgICAgY2F0YWxvZzogZW50aXR5TG9hZGVyUmVkdWNlcjxzdHJpbmcsIGFueT4oXG4gICAgICAgICAgUGFnZVR5cGUuQ0FUQUxPR19QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuQ0FUQUxPR19QQUdFKVxuICAgICAgICApLFxuICAgICAgfSksXG4gICAgfSksXG4gICAgY29tcG9uZW50czogZW50aXR5UmVkdWNlcjxDb21wb25lbnRzQ29udGV4dCwgYW55PihcbiAgICAgIENPTVBPTkVOVF9FTlRJVFksXG4gICAgICBmcm9tQ29tcG9uZW50c1JlZHVjZXIucmVkdWNlclxuICAgICksXG4gICAgbmF2aWdhdGlvbjogZW50aXR5TG9hZGVyUmVkdWNlcjxOb2RlSXRlbSwgYW55PihcbiAgICAgIE5BVklHQVRJT05fREVUQUlMX0VOVElUWSxcbiAgICAgIGZyb21OYXZpZ2F0aW9uLnJlZHVjZXJcbiAgICApLFxuICB9O1xufVxuXG5leHBvcnQgY29uc3QgcmVkdWNlclRva2VuOiBJbmplY3Rpb25Ub2tlbjxBY3Rpb25SZWR1Y2VyTWFwPENtc1N0YXRlPj4gPVxuICBuZXcgSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxDbXNTdGF0ZT4+KCdDbXNSZWR1Y2VycycpO1xuXG5leHBvcnQgY29uc3QgcmVkdWNlclByb3ZpZGVyOiBQcm92aWRlciA9IHtcbiAgcHJvdmlkZTogcmVkdWNlclRva2VuLFxuICB1c2VGYWN0b3J5OiBnZXRSZWR1Y2Vycyxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckNtc1N0YXRlKFxuICByZWR1Y2VyOiBBY3Rpb25SZWR1Y2VyPFN0YXRlV2l0aENtcywgQWN0aW9uPlxuKTogQWN0aW9uUmVkdWNlcjxTdGF0ZVdpdGhDbXMsIEFjdGlvbj4ge1xuICByZXR1cm4gZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHtcbiAgICBpZiAoXG4gICAgICBhY3Rpb24udHlwZSA9PT0gU2l0ZUNvbnRleHRBY3Rpb25zLkxBTkdVQUdFX0NIQU5HRSB8fFxuICAgICAgYWN0aW9uLnR5cGUgPT09IEF1dGhBY3Rpb25zLkxPR09VVCB8fFxuICAgICAgYWN0aW9uLnR5cGUgPT09IEF1dGhBY3Rpb25zLkxPR0lOXG4gICAgKSB7XG4gICAgICBzdGF0ZSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHJlZHVjZXIoc3RhdGUsIGFjdGlvbik7XG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBtZXRhUmVkdWNlcnM6IE1ldGFSZWR1Y2VyPFN0YXRlV2l0aENtcz5bXSA9IFtjbGVhckNtc1N0YXRlXTtcbiJdfQ==