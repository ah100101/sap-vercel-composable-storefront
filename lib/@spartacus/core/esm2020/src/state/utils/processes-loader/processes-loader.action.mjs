/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { resetMeta as loaderResetMeta, } from '../loader/loader.action';
export const PROCESSES_INCREMENT_ACTION = '[PROCESSES LOADER] INCREMENT';
export const PROCESSES_DECREMENT_ACTION = '[PROCESSES LOADER] DECREMENT';
export const PROCESSES_LOADER_RESET_ACTION = '[PROCESSES LOADER] RESET';
export function processesIncrementMeta(entityType) {
    return {
        entityType: entityType,
        loader: undefined,
        processesCountDiff: 1,
    };
}
export function processesDecrementMeta(entityType) {
    return {
        entityType: entityType,
        loader: undefined,
        processesCountDiff: -1,
    };
}
export function processesLoaderResetMeta(entityType) {
    // processes reset action is a reset action for loader reducer, but not the other way around
    return {
        ...loaderResetMeta(entityType),
        processesCountDiff: null,
    };
}
export class ProcessesLoaderResetAction {
    constructor(entityType) {
        this.type = PROCESSES_LOADER_RESET_ACTION;
        this.meta = processesLoaderResetMeta(entityType);
    }
}
export class ProcessesIncrementAction {
    constructor(entityType) {
        this.type = PROCESSES_INCREMENT_ACTION;
        this.meta = processesIncrementMeta(entityType);
    }
}
export class ProcessesDecrementAction {
    constructor(entityType) {
        this.type = PROCESSES_DECREMENT_ACTION;
        this.meta = processesDecrementMeta(entityType);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzc2VzLWxvYWRlci5hY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9zdGF0ZS91dGlscy9wcm9jZXNzZXMtbG9hZGVyL3Byb2Nlc3Nlcy1sb2FkZXIuYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFHSCxPQUFPLEVBRUwsU0FBUyxJQUFJLGVBQWUsR0FDN0IsTUFBTSx5QkFBeUIsQ0FBQztBQUVqQyxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyw4QkFBOEIsQ0FBQztBQUN6RSxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyw4QkFBOEIsQ0FBQztBQUN6RSxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRywwQkFBMEIsQ0FBQztBQVl4RSxNQUFNLFVBQVUsc0JBQXNCLENBQ3BDLFVBQWtCO0lBRWxCLE9BQU87UUFDTCxVQUFVLEVBQUUsVUFBVTtRQUN0QixNQUFNLEVBQUUsU0FBUztRQUNqQixrQkFBa0IsRUFBRSxDQUFDO0tBQ3RCLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLHNCQUFzQixDQUNwQyxVQUFrQjtJQUVsQixPQUFPO1FBQ0wsVUFBVSxFQUFFLFVBQVU7UUFDdEIsTUFBTSxFQUFFLFNBQVM7UUFDakIsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDO0tBQ3ZCLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLHdCQUF3QixDQUN0QyxVQUFrQjtJQUVsQiw0RkFBNEY7SUFDNUYsT0FBTztRQUNMLEdBQUcsZUFBZSxDQUFDLFVBQVUsQ0FBQztRQUM5QixrQkFBa0IsRUFBRSxJQUFJO0tBQ3pCLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxPQUFPLDBCQUEwQjtJQUdyQyxZQUFZLFVBQWtCO1FBRjlCLFNBQUksR0FBRyw2QkFBNkIsQ0FBQztRQUduQyxJQUFJLENBQUMsSUFBSSxHQUFHLHdCQUF3QixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ25ELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx3QkFBd0I7SUFHbkMsWUFBWSxVQUFrQjtRQUY5QixTQUFJLEdBQUcsMEJBQTBCLENBQUM7UUFHaEMsSUFBSSxDQUFDLElBQUksR0FBRyxzQkFBc0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNqRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sd0JBQXdCO0lBR25DLFlBQVksVUFBa0I7UUFGOUIsU0FBSSxHQUFHLDBCQUEwQixDQUFDO1FBR2hDLElBQUksQ0FBQyxJQUFJLEdBQUcsc0JBQXNCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDakQsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHtcbiAgTG9hZGVyTWV0YSxcbiAgcmVzZXRNZXRhIGFzIGxvYWRlclJlc2V0TWV0YSxcbn0gZnJvbSAnLi4vbG9hZGVyL2xvYWRlci5hY3Rpb24nO1xuXG5leHBvcnQgY29uc3QgUFJPQ0VTU0VTX0lOQ1JFTUVOVF9BQ1RJT04gPSAnW1BST0NFU1NFUyBMT0FERVJdIElOQ1JFTUVOVCc7XG5leHBvcnQgY29uc3QgUFJPQ0VTU0VTX0RFQ1JFTUVOVF9BQ1RJT04gPSAnW1BST0NFU1NFUyBMT0FERVJdIERFQ1JFTUVOVCc7XG5leHBvcnQgY29uc3QgUFJPQ0VTU0VTX0xPQURFUl9SRVNFVF9BQ1RJT04gPSAnW1BST0NFU1NFUyBMT0FERVJdIFJFU0VUJztcblxuZXhwb3J0IGludGVyZmFjZSBQcm9jZXNzZXNMb2FkZXJNZXRhIGV4dGVuZHMgTG9hZGVyTWV0YSB7XG4gIGVudGl0eVR5cGU6IHN0cmluZztcbiAgcHJvY2Vzc2VzQ291bnREaWZmPzogbnVtYmVyIHwgbnVsbDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9jZXNzZXNMb2FkZXJBY3Rpb24gZXh0ZW5kcyBBY3Rpb24ge1xuICByZWFkb25seSBwYXlsb2FkPzogYW55O1xuICByZWFkb25seSBtZXRhPzogUHJvY2Vzc2VzTG9hZGVyTWV0YTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3Nlc0luY3JlbWVudE1ldGEoXG4gIGVudGl0eVR5cGU6IHN0cmluZ1xuKTogUHJvY2Vzc2VzTG9hZGVyTWV0YSB7XG4gIHJldHVybiB7XG4gICAgZW50aXR5VHlwZTogZW50aXR5VHlwZSxcbiAgICBsb2FkZXI6IHVuZGVmaW5lZCxcbiAgICBwcm9jZXNzZXNDb3VudERpZmY6IDEsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzZXNEZWNyZW1lbnRNZXRhKFxuICBlbnRpdHlUeXBlOiBzdHJpbmdcbik6IFByb2Nlc3Nlc0xvYWRlck1ldGEge1xuICByZXR1cm4ge1xuICAgIGVudGl0eVR5cGU6IGVudGl0eVR5cGUsXG4gICAgbG9hZGVyOiB1bmRlZmluZWQsXG4gICAgcHJvY2Vzc2VzQ291bnREaWZmOiAtMSxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3Nlc0xvYWRlclJlc2V0TWV0YShcbiAgZW50aXR5VHlwZTogc3RyaW5nXG4pOiBQcm9jZXNzZXNMb2FkZXJNZXRhIHtcbiAgLy8gcHJvY2Vzc2VzIHJlc2V0IGFjdGlvbiBpcyBhIHJlc2V0IGFjdGlvbiBmb3IgbG9hZGVyIHJlZHVjZXIsIGJ1dCBub3QgdGhlIG90aGVyIHdheSBhcm91bmRcbiAgcmV0dXJuIHtcbiAgICAuLi5sb2FkZXJSZXNldE1ldGEoZW50aXR5VHlwZSksXG4gICAgcHJvY2Vzc2VzQ291bnREaWZmOiBudWxsLFxuICB9O1xufVxuXG5leHBvcnQgY2xhc3MgUHJvY2Vzc2VzTG9hZGVyUmVzZXRBY3Rpb24gaW1wbGVtZW50cyBQcm9jZXNzZXNMb2FkZXJBY3Rpb24ge1xuICB0eXBlID0gUFJPQ0VTU0VTX0xPQURFUl9SRVNFVF9BQ1RJT047XG4gIHJlYWRvbmx5IG1ldGE6IFByb2Nlc3Nlc0xvYWRlck1ldGE7XG4gIGNvbnN0cnVjdG9yKGVudGl0eVR5cGU6IHN0cmluZykge1xuICAgIHRoaXMubWV0YSA9IHByb2Nlc3Nlc0xvYWRlclJlc2V0TWV0YShlbnRpdHlUeXBlKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUHJvY2Vzc2VzSW5jcmVtZW50QWN0aW9uIGltcGxlbWVudHMgUHJvY2Vzc2VzTG9hZGVyQWN0aW9uIHtcbiAgdHlwZSA9IFBST0NFU1NFU19JTkNSRU1FTlRfQUNUSU9OO1xuICByZWFkb25seSBtZXRhOiBQcm9jZXNzZXNMb2FkZXJNZXRhO1xuICBjb25zdHJ1Y3RvcihlbnRpdHlUeXBlOiBzdHJpbmcpIHtcbiAgICB0aGlzLm1ldGEgPSBwcm9jZXNzZXNJbmNyZW1lbnRNZXRhKGVudGl0eVR5cGUpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBQcm9jZXNzZXNEZWNyZW1lbnRBY3Rpb24gaW1wbGVtZW50cyBQcm9jZXNzZXNMb2FkZXJBY3Rpb24ge1xuICB0eXBlID0gUFJPQ0VTU0VTX0RFQ1JFTUVOVF9BQ1RJT047XG4gIHJlYWRvbmx5IG1ldGE6IFByb2Nlc3Nlc0xvYWRlck1ldGE7XG4gIGNvbnN0cnVjdG9yKGVudGl0eVR5cGU6IHN0cmluZykge1xuICAgIHRoaXMubWV0YSA9IHByb2Nlc3Nlc0RlY3JlbWVudE1ldGEoZW50aXR5VHlwZSk7XG4gIH1cbn1cbiJdfQ==