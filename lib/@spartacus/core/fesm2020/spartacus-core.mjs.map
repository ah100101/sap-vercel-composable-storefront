{"version":3,"file":"spartacus-core.mjs","sources":["../../../projects/core/src/config/utils/deep-merge.ts","../../../projects/core/src/config/config-tokens.ts","../../../projects/core/src/config/config-providers.ts","../../../projects/core/src/anonymous-consents/config/default-anonymous-consents-config.ts","../../../projects/core/src/model/address.model.ts","../../../projects/core/src/model/payment.model.ts","../../../projects/core/src/model/cms.model.ts","../../../projects/core/src/model/consent.model.ts","../../../projects/core/src/model/customer-coupon.model.ts","../../../projects/core/src/model/image.model.ts","../../../projects/core/src/model/misc.model.ts","../../../projects/core/src/model/notification-preference.model.ts","../../../projects/core/src/model/org-unit.model.ts","../../../projects/core/src/model/point-of-service.model.ts","../../../projects/core/src/model/product-interest.model.ts","../../../projects/core/src/model/product-search.model.ts","../../../projects/core/src/model/product.model.ts","../../../projects/core/src/model/scoped-data.ts","../../../projects/core/src/model/index.ts","../../../projects/core/src/state/utils/entity/entity.action.ts","../../../projects/core/src/state/utils/loader/loader.action.ts","../../../projects/core/src/state/utils/entity-loader/entity-loader.action.ts","../../../projects/core/src/state/utils/loader/loader.selectors.ts","../../../projects/core/src/state/utils/loader/loader-state.ts","../../../projects/core/src/state/utils/loader/loader.reducer.ts","../../../projects/core/src/state/utils/loader/index.ts","../../../projects/core/src/state/utils/entity-loader/entity-loader.selectors.ts","../../../projects/core/src/state/utils/entity-loader/entity-loader-state.ts","../../../projects/core/src/state/utils/entity/entity.reducer.ts","../../../projects/core/src/state/utils/entity-loader/entity-loader.reducer.ts","../../../projects/core/src/state/utils/entity-loader/index.ts","../../../projects/core/src/state/utils/processes-loader/processes-loader.action.ts","../../../projects/core/src/state/utils/entity-processes-loader/entity-processes-loader.action.ts","../../../projects/core/src/state/utils/processes-loader/processes-loader.selectors.ts","../../../projects/core/src/state/utils/processes-loader/processes-loader-state.ts","../../../projects/core/src/state/utils/processes-loader/processes-loader.reducer.ts","../../../projects/core/src/state/utils/processes-loader/index.ts","../../../projects/core/src/state/utils/entity-processes-loader/entity-processes-loader.selectors.ts","../../../projects/core/src/state/utils/entity-processes-loader/entity-processes-loader-state.ts","../../../projects/core/src/state/utils/entity-processes-loader/entity-processes-loader.reducer.ts","../../../projects/core/src/state/utils/entity-processes-loader/index.ts","../../../projects/core/src/state/utils/entity/entity.selectors.ts","../../../projects/core/src/state/utils/entity/entity-state.ts","../../../projects/core/src/state/utils/entity/index.ts","../../../projects/core/src/state/utils/get-state-slice.ts","../../../projects/core/src/state/utils/entity-list-state.ts","../../../projects/core/src/state/utils/serializer.ts","../../../projects/core/src/state/utils/utils-group.ts","../../../projects/core/src/state/utils/index.ts","../../../projects/core/src/anonymous-consents/store/anonymous-consents-state.ts","../../../projects/core/src/anonymous-consents/store/actions/anonymous-consents.action.ts","../../../projects/core/src/anonymous-consents/store/actions/anonymous-consents-group.ts","../../../projects/core/src/anonymous-consents/store/actions/index.ts","../../../projects/core/src/anonymous-consents/store/selectors/feature.selector.ts","../../../projects/core/src/anonymous-consents/store/selectors/anonymous-consent-templates.selectors.ts","../../../projects/core/src/anonymous-consents/store/selectors/anonymous-consent-ui.selectors.ts","../../../projects/core/src/anonymous-consents/store/selectors/anonymous-consents.selectors.ts","../../../projects/core/src/anonymous-consents/store/selectors/anonymous-consents-group.selectors.ts","../../../projects/core/src/anonymous-consents/store/selectors/index.ts","../../../projects/core/src/occ/utils/occ-user-ids.ts","../../../projects/core/src/occ/utils/occ-constants.ts","../../../projects/core/src/auth/user-auth/store/actions/login-logout.action.ts","../../../projects/core/src/auth/user-auth/store/actions/auth-group.actions.ts","../../../projects/core/src/auth/user-auth/store/actions/index.ts","../../../projects/core/src/auth/user-auth/facade/user-id.service.ts","../../../projects/core/src/auth/user-auth/models/oauth-flow.ts","../../../projects/core/src/auth/user-auth/config/auth-config.ts","../../../projects/core/src/site-context/config/site-context-config.ts","../../../projects/core/src/occ/config/occ-config.ts","../../../projects/core/src/auth/user-auth/services/auth-config.service.ts","../../../projects/core/src/util/ssr.tokens.ts","../../../projects/core/src/window/window-ref.ts","../../../projects/core/src/auth/user-auth/services/oauth-lib-wrapper.service.ts","../../../projects/core/src/auth/user-auth/services/auth-storage.service.ts","../../../projects/core/src/routing/store/actions/router.action.ts","../../../projects/core/src/routing/store/actions/routing-group.actions.ts","../../../projects/core/src/routing/store/actions/index.ts","../../../projects/core/src/routing/store/routing-state.ts","../../../projects/core/src/routing/store/selectors/routing.selector.ts","../../../projects/core/src/routing/store/selectors/routing-group.selectors.ts","../../../projects/core/src/routing/store/selectors/index.ts","../../../projects/core/src/routing/configurable-routes/url-translation/path-utils.ts","../../../projects/core/src/routing/configurable-routes/config/routing-config.ts","../../../projects/core/src/routing/configurable-routes/routing-config.service.ts","../../../projects/core/src/routing/configurable-routes/url-translation/url-parsing.service.ts","../../../projects/core/src/routing/configurable-routes/url-translation/semantic-path.service.ts","../../../projects/core/src/routing/services/activated-routes.service.ts","../../../projects/core/src/routing/facade/routing-params.service.ts","../../../projects/core/src/routing/facade/routing.service.ts","../../../projects/core/src/auth/user-auth/services/auth-redirect-storage.service.ts","../../../projects/core/src/auth/user-auth/services/auth-flow-routes.service.ts","../../../projects/core/src/auth/user-auth/services/auth-redirect.service.ts","../../../projects/core/src/util/type-guards.ts","../../../projects/core/src/site-context/config/context-config-utils.ts","../../../projects/core/src/site-context/providers/context-ids.ts","../../../projects/core/src/site-context/store/actions/base-site.action.ts","../../../projects/core/src/site-context/store/actions/currencies.action.ts","../../../projects/core/src/site-context/store/actions/languages.action.ts","../../../projects/core/src/site-context/store/actions/site-context-group.actions.ts","../../../projects/core/src/site-context/store/actions/index.ts","../../../projects/core/src/site-context/store/state.ts","../../../projects/core/src/site-context/store/selectors/site-context.selector.ts","../../../projects/core/src/site-context/store/selectors/base-site.selectors.ts","../../../projects/core/src/site-context/store/selectors/currencies.selectors.ts","../../../projects/core/src/site-context/store/selectors/languages.selectors.ts","../../../projects/core/src/site-context/store/selectors/site-context-group.selectors.ts","../../../projects/core/src/site-context/store/selectors/index.ts","../../../projects/core/src/site-context/facade/base-site.service.ts","../../../projects/core/src/auth/user-auth/services/auth-multisite-isolation.service.ts","../../../projects/core/src/auth/user-auth/facade/auth.service.ts","../../../projects/core/src/anonymous-consents/facade/anonymous-consents.service.ts","../../../projects/core/src/occ/utils/interceptor-util.ts","../../../projects/core/src/auth/client-auth/store/client-auth-state.ts","../../../projects/core/src/auth/client-auth/store/actions/client-token.action.ts","../../../projects/core/src/auth/client-auth/store/actions/client-token-group.actions.ts","../../../projects/core/src/auth/client-auth/store/actions/index.ts","../../../projects/core/src/auth/client-auth/store/selectors/feature.selector.ts","../../../projects/core/src/auth/client-auth/store/selectors/client-token.selectors.ts","../../../projects/core/src/auth/client-auth/store/selectors/client-token-group.selectors.ts","../../../projects/core/src/auth/client-auth/store/selectors/index.ts","../../../projects/core/src/auth/client-auth/services/client-token.service.ts","../../../projects/core/src/auth/client-auth/services/client-error-handling.service.ts","../../../projects/core/src/config/utils/string-template.ts","../../../projects/core/src/util/http-params-uri.encoder.ts","../../../projects/core/src/occ/occ-models/occ-endpoints.model.ts","../../../projects/core/src/occ/utils/occ-url-util.ts","../../../projects/core/src/occ/services/occ-endpoints.service.ts","../../../projects/core/src/auth/client-auth/http-interceptors/client-token.interceptor.ts","../../../projects/core/src/auth/client-auth/http-interceptors/index.ts","../../../projects/core/src/state/config/state-config.ts","../../../projects/core/src/state/utils/browser-storage.ts","../../../projects/core/src/state/services/state-persistence.service.ts","../../../projects/core/src/auth/user-auth/services/auth-state-persistence.service.ts","../../../projects/core/src/state/reducers/transfer-state.reducer.ts","../../../projects/core/src/state/reducers/index.ts","../../../projects/core/src/state/state.module.ts","../../../projects/core/src/util/normalize-http-error.ts","../../../projects/core/src/auth/client-auth/services/client-authentication-token.service.ts","../../../projects/core/src/auth/client-auth/store/effects/client-token.effect.ts","../../../projects/core/src/auth/client-auth/store/effects/index.ts","../../../projects/core/src/auth/client-auth/store/reducers/index.ts","../../../projects/core/src/auth/client-auth/store/client-auth-store.module.ts","../../../projects/core/src/auth/client-auth/client-auth.module.ts","../../../projects/core/src/config/config-initializer/config-initializer.ts","../../../projects/core/src/config/config-initializer/config-initializer.service.ts","../../../projects/core/src/config/config-validator/config-validator.ts","../../../projects/core/src/auth/user-auth/config/base-url-config-validator.ts","../../../projects/core/src/auth/user-auth/config/default-auth-config.ts","../../../projects/core/src/util/create-from.ts","../../../projects/core/src/event/cx-event.ts","../../../projects/core/src/auth/user-auth/events/user-auth.events.ts","../../../projects/core/src/state/event/action-to-event-mapping.ts","../../../projects/core/src/event/utils/merging-subject.ts","../../../projects/core/src/event/event.service.ts","../../../projects/core/src/state/event/state-event.service.ts","../../../projects/core/src/state/event/index.ts","../../../projects/core/src/auth/user-auth/events/user-auth-event.builder.ts","../../../projects/core/src/auth/user-auth/events/user-auth-event.module.ts","../../../projects/core/src/global-message/models/global-message.model.ts","../../../projects/core/src/global-message/store/actions/global-message.actions.ts","../../../projects/core/src/global-message/store/actions/global-message-group.actions.ts","../../../projects/core/src/global-message/store/actions/index.ts","../../../projects/core/src/global-message/store/global-message-state.ts","../../../projects/core/src/global-message/store/selectors/feature.selector.ts","../../../projects/core/src/global-message/store/selectors/global-message.selectors.ts","../../../projects/core/src/global-message/store/selectors/global-message-group.selectors.ts","../../../projects/core/src/global-message/store/selectors/index.ts","../../../projects/core/src/global-message/facade/global-message.service.ts","../../../projects/core/src/auth/user-auth/services/auth-http-header.service.ts","../../../projects/core/src/auth/user-auth/http-interceptors/auth.interceptor.ts","../../../projects/core/src/auth/user-auth/http-interceptors/token-revocation.interceptor.ts","../../../projects/core/src/auth/user-auth/http-interceptors/index.ts","../../../projects/core/src/auth/user-auth/user-auth.module.ts","../../../projects/core/src/auth/auth.module.ts","../../../projects/core/src/auth/client-auth/models/client-token.model.ts","../../../projects/core/src/auth/client-auth/services/index.ts","../../../projects/core/src/auth/client-auth/index.ts","../../../projects/core/src/auth/user-auth/events/index.ts","../../../projects/core/src/auth/user-auth/facade/index.ts","../../../projects/core/src/auth/user-auth/guards/auth.guard.ts","../../../projects/core/src/auth/user-auth/guards/not-auth.guard.ts","../../../projects/core/src/auth/user-auth/guards/index.ts","../../../projects/core/src/auth/user-auth/models/auth-token.model.ts","../../../projects/core/src/auth/user-auth/models/oauth-try-login-response.ts","../../../projects/core/src/auth/user-auth/services/index.ts","../../../projects/core/src/auth/user-auth/index.ts","../../../projects/core/src/auth/index.ts","../../../projects/core/src/anonymous-consents/config/anonymous-consents-config.ts","../../../projects/core/src/anonymous-consents/http-interceptors/anonymous-consents-interceptor.ts","../../../projects/core/src/anonymous-consents/http-interceptors/index.ts","../../../projects/core/src/user/store/actions/billing-countries.action.ts","../../../projects/core/src/process/store/process-state.ts","../../../projects/core/src/process/store/selectors/feature.selector.ts","../../../projects/core/src/process/store/selectors/process.selectors.ts","../../../projects/core/src/process/store/selectors/index.ts","../../../projects/core/src/process/store/index.ts","../../../projects/core/src/user/store/user-state.ts","../../../projects/core/src/user/store/actions/customer-coupon.action.ts","../../../projects/core/src/user/store/actions/delivery-countries.action.ts","../../../projects/core/src/user/store/actions/notification-preference.action.ts","../../../projects/core/src/user/store/actions/payment-methods.action.ts","../../../projects/core/src/user/store/actions/product-interests.actions.ts","../../../projects/core/src/user/store/actions/regions.action.ts","../../../projects/core/src/user/store/actions/user-addresses.action.ts","../../../projects/core/src/user/store/actions/user-consents.action.ts","../../../projects/core/src/user/store/actions/user-cost-center.action.ts","../../../projects/core/src/user/store/actions/user-misc.action.ts","../../../projects/core/src/user/store/actions/user-register.action.ts","../../../projects/core/src/user/store/actions/user-group.actions.ts","../../../projects/core/src/user/store/actions/index.ts","../../../projects/core/src/anonymous-consents/connectors/anonymous-consent-templates.adapter.ts","../../../projects/core/src/anonymous-consents/connectors/anonymous-consent-templates.connector.ts","../../../projects/core/src/anonymous-consents/facade/index.ts","../../../projects/core/src/cms/connectors/component/cms-component.adapter.ts","../../../projects/core/src/cms/connectors/page/cms-page.adapter.ts","../../../projects/core/src/cms/connectors/page/converters.ts","../../../projects/core/src/cms/config/cms-config.ts","../../../projects/core/src/cms/model/page.model.ts","../../../projects/core/src/occ/occ-models/occ.models.ts","../../../projects/core/src/occ/adapters/cms/converters/occ-cms-page-normalizer.ts","../../../projects/core/src/cms/connectors/component/converters.ts","../../../projects/core/src/util/rxjs/get-last-value-sync.ts","../../../projects/core/src/util/combined-injector.ts","../../../projects/core/src/lazy-loading/events/module-initialized-event.ts","../../../projects/core/src/lazy-loading/tokens.ts","../../../projects/core/src/lazy-loading/lazy-modules.service.ts","../../../projects/core/src/lazy-loading/unified-injector.ts","../../../projects/core/src/util/converter.service.ts","../../../projects/core/src/occ/adapters/cms/occ-cms-component.adapter.ts","../../../projects/core/src/routing/models/page-context.model.ts","../../../projects/core/src/occ/adapters/cms/occ-cms-page.adapter.ts","../../../projects/core/src/occ/adapters/cms/cms-occ.module.ts","../../../projects/core/src/occ/adapters/cms/converters/index.ts","../../../projects/core/src/occ/adapters/cms/legacy-occ-cms-component.adapter.ts","../../../projects/core/src/occ/adapters/cms/index.ts","../../../projects/core/src/occ/adapters/cost-center/converters/occ-cost-center-normalizer.ts","../../../projects/core/src/occ/adapters/cost-center/converters/occ-cost-center-serializer.ts","../../../projects/core/src/cost-center/connectors/cost-center/converters.ts","../../../projects/core/src/occ/adapters/cost-center/converters/occ-cost-center-list-normalizer.ts","../../../projects/core/src/occ/adapters/cost-center/converters/index.ts","../../../projects/core/src/features-config/utils/feature-config-utils.ts","../../../projects/core/src/features-config/config/features-config.ts","../../../projects/core/src/features-config/services/feature-config.service.ts","../../../projects/core/src/features-config/directives/feature-level.directive.ts","../../../projects/core/src/features-config/directives/feature.directive.ts","../../../projects/core/src/features-config/features-config.module.ts","../../../projects/core/src/features-config/index.ts","../../../projects/core/src/config/services/configuration.service.ts","../../../projects/core/src/config/config.module.ts","../../../projects/core/src/occ/adapters/cost-center/default-occ-cost-centers-config.ts","../../../projects/core/src/occ/adapters/cost-center/cost-center-occ.module.ts","../../../projects/core/src/occ/adapters/cost-center/index.ts","../../../projects/core/src/occ/adapters/product/converters/product-image-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/product-reference-normalizer.ts","../../../projects/core/src/product/connectors/product/converters.ts","../../../projects/core/src/occ/adapters/product/converters/occ-product-search-page-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/occ-product-references-list-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/product-name-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/index.ts","../../../projects/core/src/product/connectors/references/converters.ts","../../../projects/core/src/occ/adapters/product/occ-product-references.adapter.ts","../../../projects/core/src/product/connectors/reviews/converters.ts","../../../projects/core/src/occ/adapters/product/occ-product-reviews.adapter.ts","../../../projects/core/src/product/connectors/search/converters.ts","../../../projects/core/src/occ/utils/occ-http-token.ts","../../../projects/core/src/occ/utils/index.ts","../../../projects/core/src/occ/adapters/product/occ-product-search.adapter.ts","../../../projects/core/src/occ/utils/occ-fields.ts","../../../projects/core/src/occ/services/occ-fields.service.ts","../../../projects/core/src/occ/services/occ-requests-optimizer.service.ts","../../../projects/core/src/occ/adapters/product/occ-product.adapter.ts","../../../projects/core/src/product/connectors/product/product.adapter.ts","../../../projects/core/src/product/connectors/references/product-references.adapter.ts","../../../projects/core/src/product/connectors/reviews/product-reviews.adapter.ts","../../../projects/core/src/product/connectors/search/product-search.adapter.ts","../../../projects/core/src/occ/adapters/product/default-occ-product-config.ts","../../../projects/core/src/occ/adapters/product/product-occ-config.ts","../../../projects/core/src/occ/adapters/product/product-occ.module.ts","../../../projects/core/src/occ/adapters/product/index.ts","../../../projects/core/src/occ/adapters/site-context/converters/base-site-normalizer.ts","../../../projects/core/src/occ/adapters/site-context/converters/index.ts","../../../projects/core/src/site-context/connectors/converters.ts","../../../projects/core/src/occ/adapters/site-context/occ-site.adapter.ts","../../../projects/core/src/site-context/connectors/site.adapter.ts","../../../projects/core/src/occ/adapters/site-context/default-occ-site-context-config.ts","../../../projects/core/src/site-context/facade/language.service.ts","../../../projects/core/src/site-context/facade/currency.service.ts","../../../projects/core/src/occ/adapters/site-context/site-context.interceptor.ts","../../../projects/core/src/occ/adapters/site-context/site-context-occ.module.ts","../../../projects/core/src/occ/adapters/site-context/index.ts","../../../projects/core/src/occ/adapters/user/converters/anonymous-consents-normalizer.ts","../../../projects/core/src/occ/adapters/user/converters/occ-user-interests-normalizer.ts","../../../projects/core/src/occ/adapters/user/converters/index.ts","../../../projects/core/src/anonymous-consents/connectors/converters.ts","../../../projects/core/src/user/connectors/consent/converters.ts","../../../projects/core/src/occ/adapters/user/occ-anonymous-consent-templates.adapter.ts","../../../projects/core/src/user/connectors/customer-coupon/converters.ts","../../../projects/core/src/occ/adapters/user/occ-customer-coupon.adapter.ts","../../../projects/core/src/user/connectors/address/converters.ts","../../../projects/core/src/occ/adapters/user/occ-user-address.adapter.ts","../../../projects/core/src/occ/adapters/user/occ-user-consent.adapter.ts","../../../projects/core/src/user/connectors/interests/converters.ts","../../../projects/core/src/occ/adapters/user/occ-user-interests.adapter.ts","../../../projects/core/src/user/connectors/notification-preference/converters.ts","../../../projects/core/src/user/connectors/notification-preference/user-notification-preference.adapter.ts","../../../projects/core/src/user/connectors/notification-preference/user-notification-preference.connector.ts","../../../projects/core/src/user/connectors/notification-preference/index.ts","../../../projects/core/src/occ/adapters/user/occ-user-notification-preference.adapter.ts","../../../projects/core/src/checkout/connectors/payment/converters.ts","../../../projects/core/src/occ/adapters/user/occ-user-payment.adapter.ts","../../../projects/core/src/user/connectors/address/user-address.adapter.ts","../../../projects/core/src/user/connectors/consent/user-consent.adapter.ts","../../../projects/core/src/user/connectors/cost-center/user-cost-center.adapter.ts","../../../projects/core/src/user/connectors/customer-coupon/customer-coupon.adapter.ts","../../../projects/core/src/user/connectors/interests/user-interests.adapter.ts","../../../projects/core/src/user/connectors/payment/user-payment.adapter.ts","../../../projects/core/src/occ/adapters/user/converters/occ-address-list-normalizer.ts","../../../projects/core/src/occ/adapters/user/default-occ-user-config.ts","../../../projects/core/src/occ/adapters/user/occ-user-cost-centers.adapter.ts","../../../projects/core/src/occ/adapters/user/user-occ.module.ts","../../../projects/core/src/occ/adapters/user/index.ts","../../../projects/core/src/occ/adapters/index.ts","../../../projects/core/src/occ/config/default-occ-config.ts","../../../projects/core/src/occ/config/occ-config-validator.ts","../../../projects/core/src/occ/interceptors/with-credentials.interceptor.ts","../../../projects/core/src/occ/base-occ.module.ts","../../../projects/core/src/occ/config/config-from-meta-tag-factory.ts","../../../projects/core/src/occ/config/meta-tag-config.module.ts","../../../projects/core/src/occ/interceptors/index.ts","../../../projects/core/src/occ/occ-models/index.ts","../../../projects/core/src/occ/services/loading-scopes.service.ts","../../../projects/core/src/occ/services/index.ts","../../../projects/core/src/occ/index.ts","../../../projects/core/src/user/store/selectors/feature.selector.ts","../../../projects/core/src/user/store/selectors/billing-countries.selectors.ts","../../../projects/core/src/user/store/selectors/customer-coupons.selectors.ts","../../../projects/core/src/user/store/selectors/delivery-countries.selectors.ts","../../../projects/core/src/user/store/selectors/notification-preference.selectors.ts","../../../projects/core/src/user/store/selectors/payment-methods.selectors.ts","../../../projects/core/src/user/store/selectors/product-interests.selectors.ts","../../../projects/core/src/user/store/selectors/regions.selectors.ts","../../../projects/core/src/user/store/selectors/user-addresses.selectors.ts","../../../projects/core/src/user/store/selectors/user-consents.selectors.ts","../../../projects/core/src/user/store/selectors/user-cost-center.selectors.ts","../../../projects/core/src/user/store/selectors/users-group.selectors.ts","../../../projects/core/src/user/store/selectors/index.ts","../../../projects/core/src/user/facade/user-consent.service.ts","../../../projects/core/src/anonymous-consents/store/effects/anonymous-consents.effect.ts","../../../projects/core/src/anonymous-consents/store/effects/index.ts","../../../projects/core/src/util/java-reg-exp-converter/java-reg-exp-converter.ts","../../../projects/core/src/site-context/config/config-loader/site-context-config-initializer.ts","../../../projects/core/src/site-context/config/index.ts","../../../projects/core/src/site-context/connectors/site.connector.ts","../../../projects/core/src/site-context/connectors/index.ts","../../../projects/core/src/site-context/events/site-context.events.ts","../../../projects/core/src/site-context/events/site-context-event.builder.ts","../../../projects/core/src/site-context/events/site-context-event.module.ts","../../../projects/core/src/site-context/events/index.ts","../../../projects/core/src/site-context/facade/site-context.interface.ts","../../../projects/core/src/site-context/facade/index.ts","../../../projects/core/src/site-context/providers/context-service-map.ts","../../../projects/core/src/site-context/providers/index.ts","../../../projects/core/src/site-context/services/base-site-initializer.ts","../../../projects/core/src/site-context/services/currency-state-persistence.service.ts","../../../projects/core/src/config/config-factory.ts","../../../projects/core/src/config/config-initializer/config-initializer.module.ts","../../../projects/core/src/config/config-initializer/index.ts","../../../projects/core/src/config/config-validator/config-validator.module.ts","../../../projects/core/src/config/config-validator/index.ts","../../../projects/core/src/config/utils/get-cookie.ts","../../../projects/core/src/config/test-config.module.ts","../../../projects/core/src/config/index.ts","../../../projects/core/src/site-context/services/currency-initializer.ts","../../../projects/core/src/site-context/services/language-state-persistence.service.ts","../../../projects/core/src/site-context/services/language-initializer.ts","../../../projects/core/src/site-context/services/site-context-params.service.ts","../../../projects/core/src/site-context/services/site-context-url-serializer.ts","../../../projects/core/src/site-context/services/index.ts","../../../projects/core/src/state/index.ts","../../../projects/core/src/site-context/config/base-site-config-validator.ts","../../../projects/core/src/site-context/config/default-site-context-config.ts","../../../projects/core/src/site-context/providers/context-initializer-providers.ts","../../../projects/core/src/site-context/services/site-context-routes-handler.ts","../../../projects/core/src/site-context/providers/context-service-providers.ts","../../../projects/core/src/site-context/providers/site-context-params-providers.ts","../../../projects/core/src/site-context/store/effects/base-site.effect.ts","../../../projects/core/src/site-context/store/effects/currencies.effect.ts","../../../projects/core/src/site-context/store/effects/languages.effect.ts","../../../projects/core/src/site-context/store/effects/index.ts","../../../projects/core/src/site-context/store/reducers/base-site.reducer.ts","../../../projects/core/src/site-context/store/reducers/currencies.reducer.ts","../../../projects/core/src/site-context/store/reducers/languages.reducer.ts","../../../projects/core/src/site-context/store/reducers/index.ts","../../../projects/core/src/site-context/store/site-context-store.module.ts","../../../projects/core/src/site-context/site-context.module.ts","../../../projects/core/src/site-context/index.ts","../../../projects/core/src/anonymous-consents/store/reducers/anonymous-consents-banner.reducer.ts","../../../projects/core/src/anonymous-consents/store/reducers/anonymous-consents-update.reducer.ts","../../../projects/core/src/anonymous-consents/store/reducers/anonymous-consents.reducer.ts","../../../projects/core/src/anonymous-consents/store/reducers/index.ts","../../../projects/core/src/anonymous-consents/services/anonymous-consents-state-persistence.service.ts","../../../projects/core/src/anonymous-consents/store/anonymous-consents-store.module.ts","../../../projects/core/src/anonymous-consents/anonymous-consents.module.ts","../../../projects/core/src/anonymous-consents/connectors/index.ts","../../../projects/core/src/anonymous-consents/services/index.ts","../../../projects/core/src/anonymous-consents/index.ts","../../../projects/core/src/checkout/connectors/checkout/converters.ts","../../../projects/core/src/checkout/connectors/checkout/index.ts","../../../projects/core/src/checkout/connectors/payment/index.ts","../../../projects/core/src/checkout/connectors/index.ts","../../../projects/core/src/checkout/index.ts","../../../projects/core/src/cms/config/default-cms-config.ts","../../../projects/core/src/cms/store/cms-state.ts","../../../projects/core/src/cms/store/actions/components.action.ts","../../../projects/core/src/cms/store/actions/navigation-entry-item.action.ts","../../../projects/core/src/cms/store/actions/page.action.ts","../../../projects/core/src/cms/store/actions/cms-group.actions.ts","../../../projects/core/src/cms/store/actions/index.ts","../../../projects/core/src/cms/store/selectors/feature.selectors.ts","../../../projects/core/src/cms/store/selectors/components.selectors.ts","../../../projects/core/src/cms/store/selectors/navigation-entry-item.selectors.ts","../../../projects/core/src/cms/store/selectors/page.selectors.ts","../../../projects/core/src/cms/store/selectors/cms-group.selectors.ts","../../../projects/core/src/cms/store/selectors/index.ts","../../../projects/core/src/cms/utils/cms-utils.ts","../../../projects/core/src/cms/facade/cms.service.ts","../../../projects/core/src/cms/page/config/default-page-meta.config.ts","../../../projects/core/src/cms/page/page-meta.resolver.ts","../../../projects/core/src/i18n/translation.service.ts","../../../projects/core/src/cms/page/routing/default-route-page-meta.resolver.ts","../../../projects/core/src/cms/page/routing/routing-page-meta.resolver.ts","../../../projects/core/src/cms/page/config/page-meta.config.ts","../../../projects/core/src/cms/page/routing/page-link.service.ts","../../../projects/core/src/cms/page/base-page-meta.resolver.ts","../../../projects/core/src/cms/page/content-page-meta.resolver.ts","../../../projects/core/src/cms/page/page-meta.module.ts","../../../projects/core/src/util/rxjs/buffer-debounce-time.ts","../../../projects/core/src/util/rxjs/withdraw-on.ts","../../../projects/core/src/cms/config/cms-structure.config.ts","../../../projects/core/src/cms/services/cms-structure-config.service.ts","../../../projects/core/src/cms/connectors/component/cms-component.connector.ts","../../../projects/core/src/cms/store/effects/components.effect.ts","../../../projects/core/src/util/glob-utils.ts","../../../projects/core/src/util/glob.service.ts","../../../projects/core/src/routing/services/url-matcher.service.ts","../../../projects/core/src/routing/configurable-routes/configurable-routes.service.ts","../../../projects/core/src/routing/configurable-routes/routes-config.ts","../../../projects/core/src/routing/configurable-routes/url-translation/product-url.pipe.ts","../../../projects/core/src/routing/configurable-routes/url-translation/url-command.ts","../../../projects/core/src/routing/configurable-routes/url-translation/url.pipe.ts","../../../projects/core/src/routing/configurable-routes/url-translation/url.module.ts","../../../projects/core/src/routing/configurable-routes/url-translation/index.ts","../../../projects/core/src/routing/configurable-routes/index.ts","../../../projects/core/src/routing/external-routes/external-routes-config.ts","../../../projects/core/src/routing/external-routes/external-routes.guard.ts","../../../projects/core/src/routing/external-routes/external-routes.providers.ts","../../../projects/core/src/routing/external-routes/external-routes.service.ts","../../../projects/core/src/routing/external-routes/external-routes.module.ts","../../../projects/core/src/routing/external-routes/index.ts","../../../projects/core/src/routing/models/cms-route.ts","../../../projects/core/src/routing/protected-routes/protected-routes.service.ts","../../../projects/core/src/routing/protected-routes/protected-routes.guard.ts","../../../projects/core/src/routing/protected-routes/index.ts","../../../projects/core/src/routing/configurable-routes/secure-portal-config/secure-portal-config-initializer.ts","../../../projects/core/src/routing/store/effects/router.effect.ts","../../../projects/core/src/routing/store/effects/index.ts","../../../projects/core/src/routing/store/reducers/router.reducer.ts","../../../projects/core/src/routing/routing.module.ts","../../../projects/core/src/routing/services/index.ts","../../../projects/core/src/routing/url-matcher/default-url-matcher.ts","../../../projects/core/src/routing/url-matcher/url-matcher-factory.ts","../../../projects/core/src/routing/url-matcher/index.ts","../../../projects/core/src/routing/index.ts","../../../projects/core/src/cms/store/effects/navigation-entry-item.effect.ts","../../../projects/core/src/cms/connectors/page/cms-page.connector.ts","../../../projects/core/src/cms/store/effects/page.effect.ts","../../../projects/core/src/cms/store/effects/index.ts","../../../projects/core/src/cms/store/reducers/components.reducer.ts","../../../projects/core/src/cms/store/reducers/navigation-entry-item.reducer.ts","../../../projects/core/src/cms/store/reducers/page-data.reducer.ts","../../../projects/core/src/cms/store/reducers/page-index.reducer.ts","../../../projects/core/src/cms/store/reducers/index.ts","../../../projects/core/src/cms/store/cms-store.module.ts","../../../projects/core/src/cms/cms.module.ts","../../../projects/core/src/cms/config/index.ts","../../../projects/core/src/cms/connectors/page/index.ts","../../../projects/core/src/cms/connectors/component/index.ts","../../../projects/core/src/cms/connectors/index.ts","../../../projects/core/src/cms/decorators/component-decorator.ts","../../../projects/core/src/cms/decorators/slot-decorator.ts","../../../projects/core/src/cms/decorators/index.ts","../../../projects/core/src/util/applicable.ts","../../../projects/core/src/util/rxjs/unite-latest.ts","../../../projects/core/src/cms/facade/page-meta.service.ts","../../../projects/core/src/cms/facade/index.ts","../../../projects/core/src/cms/model/content-slot-component-data.model.ts","../../../projects/core/src/cms/model/content-slot-data.model.ts","../../../projects/core/src/cms/model/node-item.model.ts","../../../projects/core/src/cms/page/config/index.ts","../../../projects/core/src/cms/page/page.resolvers.ts","../../../projects/core/src/cms/page/routing/route-page-meta.model.ts","../../../projects/core/src/cms/page/routing/index.ts","../../../projects/core/src/cms/page/index.ts","../../../projects/core/src/cms/services/dynamic-attribute.service.ts","../../../projects/core/src/cms/services/index.ts","../../../projects/core/src/cms/index.ts","../../../projects/core/src/event/index.ts","../../../projects/core/src/global-message/config/global-message-config.ts","../../../projects/core/src/global-message/facade/index.ts","../../../projects/core/src/global-message/models/response-status.model.ts","../../../projects/core/src/global-message/http-interceptors/handlers/http-error.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/bad-gateway/bad-gateway.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/bad-request/bad-request.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/conflict/conflict.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/forbidden/forbidden.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/gateway/gateway-timeout.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/internal-server/internal-server.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/not-found/not-found.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/unknown-error/unknown-error.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/index.ts","../../../projects/core/src/global-message/http-interceptors/http-error.interceptor.ts","../../../projects/core/src/global-message/http-interceptors/index.ts","../../../projects/core/src/global-message/store/reducers/global-message.reducer.ts","../../../projects/core/src/global-message/store/reducers/index.ts","../../../projects/core/src/global-message/store/global-message-store.module.ts","../../../projects/core/src/util/object-comparison-utils.ts","../../../projects/core/src/global-message/store/effects/global-message.effect.ts","../../../projects/core/src/global-message/config/default-global-message-config.ts","../../../projects/core/src/global-message/global-message.module.ts","../../../projects/core/src/global-message/index.ts","../../../projects/core/src/http/http-timeout/default-http-timeout.config.ts","../../../projects/core/src/http/http-timeout/http-timeout.config.ts","../../../projects/core/src/http/http-timeout/http-timeout.interceptor.ts","../../../projects/core/src/http/http-timeout/http-timeout.module.ts","../../../projects/core/src/http/http-timeout/index.ts","../../../projects/core/src/http/http.module.ts","../../../projects/core/src/http/index.ts","../../../projects/core/src/i18n/config/i18n-config.ts","../../../projects/core/src/i18n/config/i18n-config-initializer.ts","../../../projects/core/src/i18n/date.pipe.ts","../../../projects/core/src/i18n/numeric.pipe.ts","../../../projects/core/src/i18n/config/default-i18n-config.ts","../../../projects/core/src/i18n/i18next/i18next-backend/i18next-backend.initializer.ts","../../../projects/core/src/i18n/i18next/i18next-instance.ts","../../../projects/core/src/i18n/i18next/i18next-backend/i18next-http-backend-client.ts","../../../projects/core/src/i18n/i18next/i18next-backend/i18next-http-backend.initializer.ts","../../../projects/core/src/i18n/i18next/i18next-backend/i18next-backend.providers.ts","../../../projects/core/src/util/command-query/command.service.ts","../../../projects/core/src/util/command-query/query.service.ts","../../../projects/core/src/util/command-query/index.ts","../../../projects/core/src/util/java-reg-exp-converter/index.ts","../../../projects/core/src/util/occ-http-error-constants.ts","../../../projects/core/src/util/occ-http-error-handlers.ts","../../../projects/core/src/util/regex-pattern.ts","../../../projects/core/src/util/rxjs/back-off.ts","../../../projects/core/src/util/rxjs/index.ts","../../../projects/core/src/util/script-loader.service.ts","../../../projects/core/src/util/testing-time-utils.ts","../../../projects/core/src/util/time-utils.ts","../../../projects/core/src/util/type-utils.ts","../../../projects/core/src/util/index.ts","../../../projects/core/src/i18n/i18next/i18next-backend/i18next-backend.service.ts","../../../projects/core/src/i18n/i18next/i18next-initializer.ts","../../../projects/core/src/i18n/i18next/i18next-providers.ts","../../../projects/core/src/i18n/translation-chunk.service.ts","../../../projects/core/src/i18n/i18next/i18next-translation.service.ts","../../../projects/core/src/i18n/translate.pipe.ts","../../../projects/core/src/i18n/i18n.module.ts","../../../projects/core/src/i18n/i18next/i18next-backend/index.ts","../../../projects/core/src/i18n/i18next/index.ts","../../../projects/core/src/i18n/testing/mock-translate.ts","../../../projects/core/src/i18n/testing/mock-translate.pipe.ts","../../../projects/core/src/i18n/testing/mock-translation.service.ts","../../../projects/core/src/i18n/testing/mock-date.pipe.ts","../../../projects/core/src/i18n/testing/i18n-testing.module.ts","../../../projects/core/src/i18n/testing/index.ts","../../../projects/core/src/i18n/translatable.ts","../../../projects/core/src/i18n/translation-resources.ts","../../../projects/core/src/i18n/index.ts","../../../projects/core/src/cost-center/connectors/cost-center/index.ts","../../../projects/core/src/cost-center/connectors/index.ts","../../../projects/core/src/cost-center/cost-center.module.ts","../../../projects/core/src/cost-center/index.ts","../../../projects/core/src/process/store/reducers/index.ts","../../../projects/core/src/process/store/process-store.module.ts","../../../projects/core/src/process/process.module.ts","../../../projects/core/src/process/index.ts","../../../projects/core/src/product/connectors/product/product.connector.ts","../../../projects/core/src/product/connectors/product/scoped-product-data.ts","../../../projects/core/src/product/connectors/product/index.ts","../../../projects/core/src/product/connectors/references/product-references.connector.ts","../../../projects/core/src/product/connectors/references/index.ts","../../../projects/core/src/product/connectors/reviews/product-reviews.connector.ts","../../../projects/core/src/product/connectors/reviews/index.ts","../../../projects/core/src/product/connectors/search/product-search.connector.ts","../../../projects/core/src/product/connectors/search/index.ts","../../../projects/core/src/product/connectors/index.ts","../../../projects/core/src/product/event/product.events.ts","../../../projects/core/src/product/store/actions/product-references.action.ts","../../../projects/core/src/product/store/actions/product-reviews.action.ts","../../../projects/core/src/product/store/actions/product-search.action.ts","../../../projects/core/src/state/utils/scoped-loader/entity-scoped-loader.actions.ts","../../../projects/core/src/product/store/product-state.ts","../../../projects/core/src/product/store/actions/product.action.ts","../../../projects/core/src/product/store/actions/product-group.actions.ts","../../../projects/core/src/product/store/actions/index.ts","../../../projects/core/src/product/store/selectors/feature.selector.ts","../../../projects/core/src/product/store/selectors/product-references.selectors.ts","../../../projects/core/src/product/store/selectors/product-reviews.selectors.ts","../../../projects/core/src/product/store/reducers/product-search.reducer.ts","../../../projects/core/src/product/store/selectors/product-search.selectors.ts","../../../projects/core/src/product/store/selectors/product.selectors.ts","../../../projects/core/src/product/store/selectors/product-group.selectors.ts","../../../projects/core/src/product/store/selectors/index.ts","../../../projects/core/src/product/facade/product-search.service.ts","../../../projects/core/src/product/event/product-event.builder.ts","../../../projects/core/src/product/event/product-event.module.ts","../../../projects/core/src/product/event/index.ts","../../../projects/core/src/product/store/effects/product-references.effect.ts","../../../projects/core/src/product/store/effects/product-reviews.effect.ts","../../../projects/core/src/product/store/effects/product-search.effect.ts","../../../projects/core/src/product/store/effects/product.effect.ts","../../../projects/core/src/product/store/effects/index.ts","../../../projects/core/src/state/utils/scoped-loader/scoped-loader.reducer.ts","../../../projects/core/src/state/utils/scoped-loader/entity-scoped-loader.reducer.ts","../../../projects/core/src/product/store/reducers/product-references.reducer.ts","../../../projects/core/src/product/store/reducers/product-reviews.reducer.ts","../../../projects/core/src/product/store/reducers/index.ts","../../../projects/core/src/product/store/index.ts","../../../projects/core/src/product/facade/product-reference.service.ts","../../../projects/core/src/product/facade/product-review.service.ts","../../../projects/core/src/product/services/product-loading.service.ts","../../../projects/core/src/product/facade/product.service.ts","../../../projects/core/src/product/facade/searchbox.service.ts","../../../projects/core/src/product/facade/index.ts","../../../projects/core/src/product/model/search-config.ts","../../../projects/core/src/product/model/product-scope.ts","../../../projects/core/src/product/model/index.ts","../../../projects/core/src/product/services/category-page-meta.resolver.ts","../../../projects/core/src/product/services/coupon-search-page-meta.resolver.ts","../../../projects/core/src/product/services/product-page-meta.resolver.ts","../../../projects/core/src/product/services/search-page-meta.resolver.ts","../../../projects/core/src/product/store/product-store.module.ts","../../../projects/core/src/product/product.module.ts","../../../projects/core/src/product/services/index.ts","../../../projects/core/src/product/index.ts","../../../projects/core/src/user/connectors/address/user-address.connector.ts","../../../projects/core/src/user/connectors/address/index.ts","../../../projects/core/src/user/connectors/consent/user-consent.connector.ts","../../../projects/core/src/user/connectors/consent/index.ts","../../../projects/core/src/user/connectors/cost-center/user-cost-center.connector.ts","../../../projects/core/src/user/connectors/cost-center/index.ts","../../../projects/core/src/user/connectors/customer-coupon/customer-coupon.connector.ts","../../../projects/core/src/user/connectors/customer-coupon/index.ts","../../../projects/core/src/user/connectors/interests/user-interests.connector.ts","../../../projects/core/src/user/connectors/interests/index.ts","../../../projects/core/src/user/connectors/payment/user-payment.connector.ts","../../../projects/core/src/user/connectors/payment/index.ts","../../../projects/core/src/user/connectors/index.ts","../../../projects/core/src/user/events/user.events.ts","../../../projects/core/src/user/events/user-event.builder.ts","../../../projects/core/src/user/events/user-event.module.ts","../../../projects/core/src/user/events/index.ts","../../../projects/core/src/user/facade/consent.service.ts","../../../projects/core/src/user/facade/customer-coupon.service.ts","../../../projects/core/src/user/facade/user-address.service.ts","../../../projects/core/src/user/facade/user-cost-center.service.ts","../../../projects/core/src/user/facade/user-interests.service.ts","../../../projects/core/src/user/facade/user-notification-preference.service.ts","../../../projects/core/src/user/facade/user-payment.service.ts","../../../projects/core/src/user/user-transitional-tokens.ts","../../../projects/core/src/user/facade/user.service.ts","../../../projects/core/src/user/facade/index.ts","../../../projects/core/src/user/store/effects/billing-countries.effect.ts","../../../projects/core/src/user/store/effects/clear-miscs-data.effect.ts","../../../projects/core/src/user/store/effects/customer-coupon.effect.ts","../../../projects/core/src/user/store/effects/delivery-countries.effect.ts","../../../projects/core/src/user/store/effects/notification-preference.effect.ts","../../../projects/core/src/user/store/effects/payment-methods.effect.ts","../../../projects/core/src/user/store/effects/product-interests.effect.ts","../../../projects/core/src/user/store/effects/regions.effect.ts","../../../projects/core/src/user/store/effects/user-addresses.effect.ts","../../../projects/core/src/user/store/effects/user-consents.effect.ts","../../../projects/core/src/user/store/effects/user-cost-center.effect.ts","../../../projects/core/src/user/store/effects/index.ts","../../../projects/core/src/user/store/reducers/billing-countries.reducer.ts","../../../projects/core/src/user/store/reducers/customer-coupon.reducer.ts","../../../projects/core/src/user/store/reducers/delivery-countries.reducer.ts","../../../projects/core/src/user/store/reducers/notification-preference.reducer.ts","../../../projects/core/src/user/store/reducers/payment-methods.reducer.ts","../../../projects/core/src/user/store/reducers/product-interests.reducer.ts","../../../projects/core/src/user/store/reducers/regions.reducer.ts","../../../projects/core/src/user/store/reducers/user-addresses.reducer.ts","../../../projects/core/src/user/store/reducers/user-consents.reducer.ts","../../../projects/core/src/user/store/reducers/user-cost-center.reducer.ts","../../../projects/core/src/user/store/reducers/index.ts","../../../projects/core/src/user/store/user-store.module.ts","../../../projects/core/src/user/user.module.ts","../../../projects/core/src/user/index.ts","../../../projects/core/src/window/index.ts","../../../projects/core/src/lazy-loading/events/index.ts","../../../projects/core/src/lazy-loading/feature-modules.service.ts","../../../projects/core/src/lazy-loading/facade-factory/facade-factory.service.ts","../../../projects/core/src/lazy-loading/facade-factory/facade-factory.ts","../../../projects/core/src/lazy-loading/facade-factory/index.ts","../../../projects/core/src/lazy-loading/index.ts","../../../projects/core/src/lazy-loading/lazy-loading.module.ts","../../../projects/core/src/base-core.module.ts","../../../projects/core/public_api.ts","../../../projects/core/spartacus-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function isObject(item: any): boolean {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function deepMerge(\n  target: Record<string, unknown> = {},\n  ...sources: any[]\n): any {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift() || {};\n\n  if (isObject(source)) {\n    for (const key in source) {\n      if (source[key] instanceof Date) {\n        target[key] = source[key];\n      } else if (isObject(source[key])) {\n        if (!target[key] || !isObject(target[key])) {\n          target[key] = {};\n        }\n        deepMerge(target[key] as Record<string, unknown>, source[key]);\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return deepMerge(target, ...sources);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { inject, Injectable, InjectionToken } from '@angular/core';\nimport { deepMerge } from './utils/deep-merge';\n\nexport function configFactory() {\n  return deepMerge({}, inject(DefaultConfig), inject(RootConfig));\n}\n\n/**\n * Global Configuration, can be used to inject configuration to any part of the app\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: configFactory,\n})\nexport abstract class Config {}\n\nexport function defaultConfigFactory() {\n  return deepMerge(\n    {},\n    ...(inject(DefaultConfigChunk, { optional: true }) ?? [])\n  );\n}\n/**\n * Default Configuration token, used to build Global Configuration, built from DefaultConfigChunks\n */\nexport const DefaultConfig = new InjectionToken('DefaultConfiguration', {\n  providedIn: 'root',\n  factory: defaultConfigFactory,\n});\n\nexport function rootConfigFactory() {\n  return deepMerge({}, ...(inject(ConfigChunk, { optional: true }) ?? []));\n}\n\n/**\n * Root Configuration token, used to build Global Configuration, built from ConfigChunks\n */\nexport const RootConfig = new InjectionToken('RootConfiguration', {\n  providedIn: 'root',\n  factory: rootConfigFactory,\n});\n\n/**\n * Config chunk token, can be used to provide configuration chunk and contribute to the global configuration object.\n * Should not be used directly, use `provideConfig` or import `ConfigModule.withConfig` instead.\n */\nexport const ConfigChunk = new InjectionToken<Config[]>('ConfigurationChunk');\n/**\n * Config chunk token, can be used to provide configuration chunk and contribute to the default configuration.\n * Should not be used directly, use `provideDefaultConfig` or `provideDefaultConfigFactory` instead.\n *\n * General rule is, that all config provided in libraries should be provided as default config.\n */\nexport const DefaultConfigChunk = new InjectionToken<Config[]>(\n  'DefaultConfigurationChunk'\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { FactoryProvider, ValueProvider } from '@angular/core';\nimport { ConfigFactory } from './config-factory';\nimport { Config, ConfigChunk, DefaultConfigChunk } from './config-tokens';\n\n/**\n * Helper function to provide configuration chunk using ConfigChunk token\n *\n * To provide default configuration in libraries provideDefaultConfig should be used instead.\n *\n * @param config Config object to merge with the global configuration\n */\nexport function provideConfig(\n  config: Config = {},\n  defaultConfig = false\n): ValueProvider {\n  return {\n    provide: defaultConfig ? DefaultConfigChunk : ConfigChunk,\n    useValue: config,\n    multi: true,\n  };\n}\n\n/**\n * Helper function to provide configuration with factory function, using ConfigChunk token\n *\n * To provide default configuration in libraries provideDefaultConfigFactory should be used instead.\n *\n * @param configFactory Factory Function that will generate config object\n * @param deps Optional dependencies to a factory function\n */\nexport function provideConfigFactory(\n  configFactory: ConfigFactory,\n  deps?: any[],\n  defaultConfig = false\n): FactoryProvider {\n  return {\n    provide: defaultConfig ? DefaultConfigChunk : ConfigChunk,\n    useFactory: configFactory,\n    multi: true,\n    deps: deps,\n  };\n}\n\n/**\n * Helper function to provide default configuration chunk using DefaultConfigChunk token\n *\n * @param config Config object to merge with the default configuration\n */\nexport function provideDefaultConfig(config: Config = {}): ValueProvider {\n  return {\n    provide: DefaultConfigChunk,\n    useValue: config,\n    multi: true,\n  };\n}\n\n/**\n * Helper function to provide default configuration with factory function, using DefaultConfigChunk token\n *\n * @param configFactory Factory Function that will generate config object\n * @param deps Optional dependencies to a factory function\n */\nexport function provideDefaultConfigFactory(\n  configFactory: ConfigFactory,\n  deps?: any[]\n): FactoryProvider {\n  return {\n    provide: DefaultConfigChunk,\n    useFactory: configFactory,\n    multi: true,\n    deps: deps,\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AnonymousConsentsConfig } from './anonymous-consents-config';\n\nexport const defaultAnonymousConsentsConfig: AnonymousConsentsConfig = {\n  anonymousConsents: {\n    registerConsent: 'MARKETING_NEWSLETTER',\n    showLegalDescriptionInDialog: true,\n    requiredConsents: [],\n    consentManagementPage: {\n      showAnonymousConsents: true,\n      hideConsents: [],\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ErrorModel } from './misc.model';\n\nexport interface Country {\n  isocode?: string;\n  name?: string;\n}\n\nexport enum CountryType {\n  BILLING = 'BILLING',\n  SHIPPING = 'SHIPPING',\n}\n\nexport interface Region {\n  countryIso?: string;\n  isocode?: string;\n  isocodeShort?: string;\n  name?: string;\n}\n\nexport interface Address {\n  id?: string;\n\n  title?: string;\n  titleCode?: string;\n\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  companyName?: string;\n\n  line1?: string;\n  line2?: string;\n  postalCode?: string;\n  town?: string;\n  region?: Region;\n  district?: string;\n  country?: Country;\n  cellphone?: string;\n\n  defaultAddress?: boolean;\n  shippingAddress?: boolean;\n\n  formattedAddress?: string;\n  phone?: string;\n\n  visibleInAddressBook?: boolean;\n}\n\nexport interface AddressValidation {\n  decision?: string;\n  // TODO: Simplify with converter\n  errors?: { errors: ErrorModel[] };\n  suggestedAddresses?: Address[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address } from './address.model';\n\n/**\n * Use 'CardType' from '@spartacus/checkout/base/root' instead.\n * @deprecated since version 5.0\n *\n * // TODO:#deprecation-checkout - remove\n */\nexport interface CardType {\n  code?: string;\n  name?: string;\n}\n/**\n * Use 'CardType' from '@spartacus/checkout/base/root' instead.\n * @deprecated since version 5.0\n *\n * // TODO:#deprecation-checkout - remove\n */\nexport interface PaymentDetails {\n  accountHolderName?: string;\n  billingAddress?: Address;\n  cardNumber?: string;\n  cardType?: CardType;\n  cvn?: string;\n  defaultPayment?: boolean;\n  expiryMonth?: string;\n  expiryYear?: string;\n  id?: string;\n  issueNumber?: string;\n  saved?: boolean;\n  startMonth?: string;\n  startYear?: string;\n  subscriptionId?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface CmsComponent {\n  modifiedTime?: Date;\n  name?: string;\n  otherProperties?: any;\n  typeCode?: string;\n  uid?: string;\n\n  /**\n   * Defines detailed CMS component composition\n   */\n  composition?: {\n    /**\n     * List of inner component mappings\n     */\n    inner?: string[];\n  };\n\n  /**\n   * Style classes can be added to the CMS banner component to enhance the UX.\n   * The style classes are typically derived from the (CMS) backend and should\n   * match an existing CSS selector.\n   *\n   * The styleClasses can contain a \"list\" of space separated style classes.\n   */\n  styleClasses?: string;\n}\n\nexport interface CmsComponentWithChildren extends CmsComponent {\n  children?: string;\n}\n\nexport enum PageType {\n  CONTENT_PAGE = 'ContentPage',\n  PRODUCT_PAGE = 'ProductPage',\n  CATEGORY_PAGE = 'CategoryPage',\n  CATALOG_PAGE = 'CatalogPage',\n}\n\nexport interface CmsLinkComponent extends CmsComponent {\n  url?: string;\n  container?: boolean;\n  external?: boolean;\n  contentPage?: string;\n  contentPageLabelOrId?: string;\n  linkName?: string;\n  target?: string | boolean;\n\n  /**\n   * Style rules can be added to the CMS Link component to enhance the UX.\n   * The style attributes are typically derived from the (CMS) backend.\n   *\n   * The styleAttributes can contain a \"list\" of semicolon separated style rules.\n   */\n  styleAttributes?: string;\n}\n\nexport interface CmsSiteContextSelectorComponent extends CmsComponent {\n  context?: string;\n}\n\nexport enum ScrollBehavior {\n  AUTO = 'auto',\n  SMOOTH = 'smooth',\n}\n\nexport interface CmsScrollToTopComponent extends CmsComponent {\n  scrollBehavior?: ScrollBehavior;\n  displayThreshold?: number;\n}\n\nexport interface CmsSearchBoxComponent extends CmsComponent {\n  container?: boolean;\n  maxSuggestions?: number;\n  maxProducts?: number;\n  displaySuggestions?: boolean;\n  displayProducts?: boolean;\n  displayProductImages?: boolean;\n  waitTimeBeforeRequest?: number;\n  minCharactersBeforeRequest?: number;\n}\n\nexport interface CmsParagraphComponent extends CmsComponent {\n  content?: string;\n  container?: string;\n  title?: string;\n}\n\nexport interface CMSTabParagraphContainer extends CmsComponent {\n  container?: string;\n  components?: string;\n}\n\nexport interface CmsBannerComponentMedia {\n  altText?: string;\n  code?: string;\n  mime?: string;\n  url?: string;\n}\n\nexport interface CmsResponsiveBannerComponentMedia {\n  desktop?: CmsBannerComponentMedia;\n  mobile?: CmsBannerComponentMedia;\n  tablet?: CmsBannerComponentMedia;\n  widescreen?: CmsBannerComponentMedia;\n}\n\nexport interface CmsBannerComponent extends CmsComponent {\n  headline?: string;\n  content?: string;\n  container?: string;\n  media?: CmsBannerComponentMedia | CmsResponsiveBannerComponentMedia;\n  urlLink?: string;\n  external?: string | boolean;\n  contentPage?: string;\n  product?: string;\n  category?: string;\n}\n\nexport enum CmsBannerCarouselEffect {\n  FADE = 'FADE',\n  ZOOM = 'ZOOM',\n  CURTAIN = 'CURTAINX',\n  TURNDOWN = 'TURNDOWN',\n}\n\nexport interface CmsBannerCarouselComponent extends CmsComponent {\n  banners?: string;\n  effect?: CmsBannerCarouselEffect;\n}\n\nexport interface CmsProductCarouselComponent extends CmsComponent {\n  title?: string;\n  productCodes?: string;\n  container?: string;\n  popup?: string;\n  scroll?: string;\n}\n\nexport interface CmsProductReferencesComponent extends CmsComponent {\n  title?: string;\n  displayProductTitles?: string;\n  displayProductPrices?: string;\n  maximumNumberProducts?: number;\n  productReferenceTypes?: string;\n  container?: string;\n}\n\nexport interface CmsMiniCartComponent extends CmsComponent {\n  container?: string;\n  shownProductCount?: string;\n  title?: string;\n  totalDisplay?: string;\n  lightboxBannerComponent?: CmsBannerComponent;\n}\n\nexport interface CmsPageTitleComponent extends CmsComponent {\n  container?: string;\n}\n\n// TODO: Upgrade model when Breadcrumbs will be finally used in project\nexport interface CmsBreadcrumbsComponent extends CmsPageTitleComponent {}\n\nexport interface CmsNavigationNode {\n  uid?: string;\n  title?: string;\n  children?: Array<CmsNavigationNode>;\n  entries?: Array<CmsNavigationEntry>;\n}\n\nexport interface CmsNavigationEntry {\n  itemId?: string;\n  itemSuperType?: string;\n  itemType?: string;\n}\n\nexport interface CmsNavigationComponent extends CmsComponent {\n  container?: string;\n  styleClass?: string;\n  wrapAfter?: string;\n  notice?: string;\n  showLanguageCurrency?: string;\n  navigationNode?: CmsNavigationNode;\n  resetMenuOnClose?: boolean;\n}\n\nexport interface CmsProductFacetNavigationComponent extends CmsComponent {\n  container?: string;\n  activeFacetValueCode?: string;\n  searchResult?: string;\n  minPerFacet?: string;\n}\n\nexport interface CmsAddToCartComponent extends CmsComponent {\n  inventoryDisplay?: boolean;\n}\n\nexport interface CmsOrderDetailItemsComponent extends CmsComponent {\n  enableAddToCart?: boolean;\n  groupCartItems?: boolean;\n}\n\nexport interface CmsOrderDetailOverviewComponent extends CmsComponent {\n  simple?: boolean;\n}\n\nexport interface CmsPDFDocumentComponent extends CmsComponent {\n  pdfFile?: CmsBannerComponentMedia;\n  title?: string;\n  height?: number;\n}\n\nexport interface CmsVideoComponent extends CmsComponent {\n  overlayTitle?: string;\n  autoPlay?: string;\n  loop?: string;\n  mute?: string;\n  containerSize?: ContainerSizeOptions;\n  containerBackground?: ContainerBackgroundOptions;\n  thumbnailSelector?: ContainerBackgroundOptions;\n  videoContainerHeight?: number;\n  video?: CmsBannerComponentMedia;\n  container?: boolean;\n  videoMedia?: CmsBannerComponentMedia | CmsResponsiveBannerComponentMedia;\n  thumbnail?: CmsBannerComponentMedia | CmsResponsiveBannerComponentMedia;\n  url?: string;\n  category?: string;\n  product?: string;\n  contentPage?: string;\n}\n\nexport enum ContainerBackgroundOptions {\n  NO_BACKGROUND = 'NO_BACKGROUND',\n  UPLOAD_RESPONSIVE_IMAGE = 'UPLOAD_RESPONSIVE_IMAGE',\n  UPLOAD_THUMBNAIL = 'UPLOAD_THUMBNAIL',\n}\n\nexport enum ContainerSizeOptions {\n  FIT_TO_CONTENT_SIZE = 'FIT_TO_CONTENT_SIZE',\n  DEFINE_CONTAINER_HEIGHT = 'DEFINE_CONTAINER_HEIGHT',\n}\n\nexport interface CmsPickupItemDetails extends CmsComponent {\n  showEdit: boolean;\n  context: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface ConsentTemplate {\n  id?: string;\n  name?: string;\n  description?: string;\n  version?: number;\n  currentConsent?: Consent;\n}\n\nexport interface Consent {\n  code?: string;\n  consentGivenDate?: Date;\n  consentWithdrawnDate?: Date;\n}\n\nexport interface AnonymousConsent {\n  templateCode?: string;\n  templateVersion?: number;\n  consentState?: ANONYMOUS_CONSENT_STATUS;\n}\n\nexport enum ANONYMOUS_CONSENT_STATUS {\n  GIVEN = 'GIVEN',\n  WITHDRAWN = 'WITHDRAWN',\n}\n\nexport const ANONYMOUS_CONSENTS_HEADER = 'X-Anonymous-Consents';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { User } from './misc.model';\nimport { Pagination, Sort } from './unused.model';\n\nexport interface CustomerCoupon {\n  couponId?: string;\n  name?: string;\n  startDate?: string;\n  endDate?: string;\n  status?: string;\n  description?: string;\n  notificationOn?: boolean;\n  allProductsApplicable?: boolean;\n}\n\nexport interface CustomerCouponNotification {\n  coupon?: CustomerCoupon;\n  customer?: User;\n  status?: string;\n}\n\nexport interface CustomerCouponSearchResult {\n  coupons?: CustomerCoupon[];\n  sorts?: Sort[];\n  pagination?: Pagination;\n}\n\nexport interface CustomerCoupon2Customer {\n  coupon?: CustomerCoupon;\n  customer?: User;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface Images {\n  [imageType: string]: ImageGroup | ImageGroup[];\n}\n\nexport interface Image {\n  altText?: string;\n  role?: string;\n  format?: string;\n  galleryIndex?: number;\n  imageType?: ImageType;\n  url?: string;\n}\n\nexport enum ImageType {\n  PRIMARY = 'PRIMARY',\n  GALLERY = 'GALLERY',\n}\n\nexport interface ImageGroup {\n  [format: string]: Image;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address } from './address.model';\n\nexport interface Currency {\n  active?: boolean;\n  isocode?: string;\n  name?: string;\n  symbol?: string;\n}\n\nexport interface Time {\n  formattedHour?: string;\n  hour?: number;\n  minute?: number;\n}\n\nexport interface GeoPoint {\n  latitude?: number;\n  longitude?: number;\n}\n\nexport interface Language {\n  active?: boolean;\n  isocode?: string;\n  name?: string;\n  nativeName?: string;\n}\n\nexport interface Principal {\n  name?: string;\n  uid?: string;\n}\n\nexport interface User {\n  currency?: Currency;\n  customerId?: string;\n  deactivationDate?: Date;\n  defaultAddress?: Address;\n  defaultPointOfServiceName?: string;\n  displayUid?: string;\n  firstName?: string;\n  language?: Language;\n  lastName?: string;\n  name?: string;\n  title?: string;\n  titleCode?: string;\n  uid?: string;\n  roles?: string[];\n}\n\nexport interface ListModel {\n  ids: string[];\n  pagination?: PaginationModel;\n  sorts?: SortModel[];\n}\n\n// TODO(#8875): Do we need it here?\nexport interface EntitiesModel<T> {\n  values: T[];\n  pagination?: PaginationModel;\n  sorts?: SortModel[];\n}\n\nexport interface PaginationModel {\n  currentPage?: number;\n  pageSize?: number;\n  sort?: string;\n  totalPages?: number;\n  totalResults?: number;\n}\n\nexport interface SortModel {\n  code?: string;\n  name?: string;\n  selected?: boolean;\n}\n\nexport interface Title {\n  code?: string;\n  name?: string;\n}\n\nexport interface ErrorModel {\n  message?: string;\n  reason?: string;\n  subject?: string;\n  subjectType?: string;\n  type?: string;\n}\n\nexport class HttpErrorModel {\n  message?: string;\n  status?: number;\n  statusText?: string;\n  url?: string | null;\n  details?: ErrorModel[];\n}\n\nexport interface BaseStore {\n  currencies?: Currency[];\n  defaultCurrency?: Currency;\n  languages?: Language[];\n  defaultLanguage?: Language;\n}\n\nexport interface BaseSite {\n  channel?: string;\n  defaultLanguage?: Language;\n  defaultPreviewCatalogId?: string;\n  defaultPreviewCategoryCode?: string;\n  defaultPreviewProductCode?: string;\n  locale?: string;\n  name?: string;\n  theme?: string;\n  uid?: string;\n  stores?: BaseStore[];\n  urlPatterns?: string[];\n  urlEncodingAttributes?: string[];\n  baseStore?: BaseStore;\n  requiresAuthentication?: boolean;\n  isolated?: boolean;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface NotificationPreference {\n  channel?: string;\n  value?: string;\n  enabled?: boolean;\n  visible?: boolean;\n}\n\nexport interface NotificationPreferenceList {\n  preferences?: NotificationPreference[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address } from './address.model';\nimport { User } from './misc.model';\n\n// TODO(#8876): Should we simplify the models only for the fields required by the B2B checkout?\nexport interface CostCenter {\n  active?: boolean;\n  code?: string;\n  name?: string;\n  unit?: B2BUnit;\n}\n\nexport enum B2BUserRole {\n  ADMIN = 'b2badmingroup',\n  CUSTOMER = 'b2bcustomergroup',\n  MANAGER = 'b2bmanagergroup',\n  APPROVER = 'b2bapprovergroup',\n}\n\nexport enum B2BUserRight {\n  UNITORDERVIEWER = 'unitorderviewergroup',\n}\n\nexport interface B2BUnit {\n  active?: boolean;\n  addresses?: Address[];\n  uid?: string;\n  name?: string;\n}\n\nexport interface B2BUser extends User {\n  active?: boolean;\n  email?: string;\n}\n\nexport interface B2BApprovalProcess {\n  code?: string;\n  name?: string;\n}\n\nexport interface OrderApprovalPermissionType {\n  code?: string;\n  name?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Time, GeoPoint } from './misc.model';\nimport { Address } from './address.model';\nimport { Image } from './image.model';\n\nexport interface PointOfService {\n  address?: Address;\n  description?: string;\n  displayName?: string;\n  distanceKm?: number;\n  features?: { [propertyName: string]: string };\n  formattedDistance?: string;\n  geoPoint?: GeoPoint;\n  mapIcon?: Image;\n  name?: string;\n  openingHours?: OpeningSchedule;\n  storeContent?: string;\n  storeImages?: Image[];\n  url?: string;\n}\n\nexport interface SpecialOpeningDay {\n  closed?: boolean;\n  closingTime?: Time;\n  comment?: string;\n  date?: Date;\n  formattedDate?: string;\n  name?: string;\n  openingTime?: Time;\n}\n\nexport interface WeekdayOpeningDay {\n  closed?: boolean;\n  closingTime?: Time;\n  openingTime?: Time;\n  weekDay?: string;\n}\n\nexport interface OpeningSchedule {\n  code?: string;\n  name?: string;\n  specialDayOpeningList?: SpecialOpeningDay[];\n  weekDayOpeningList?: WeekdayOpeningDay[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Product } from './product.model';\nimport { Pagination, Sort } from './unused.model';\n\nexport interface ProductInterestEntry {\n  interestType?: NotificationType;\n  dateAdded?: string;\n  expirationDate?: string;\n}\n\nexport interface ProductInterestEntryRelation {\n  product?: Product;\n  productInterestEntry?: ProductInterestEntry[];\n}\n\nexport interface ProductInterestSearchResult {\n  results?: ProductInterestEntryRelation[];\n  sorts?: Sort[];\n  pagination?: Pagination;\n}\n\nexport enum NotificationType {\n  BACK_IN_STOCK = 'BACK_IN_STOCK',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PaginationModel, SortModel } from './misc.model';\nimport { Product } from './product.model';\n\nexport interface SearchQuery {\n  value?: string;\n}\n\nexport interface SearchState {\n  query?: SearchQuery;\n  url?: string;\n}\n\nexport interface FacetValue {\n  count?: number;\n  name?: string;\n  query?: SearchState;\n  selected?: boolean;\n}\n\nexport interface Breadcrumb {\n  facetCode?: string;\n  facetName?: string;\n  facetValueCode?: string;\n  facetValueName?: string;\n  removeQuery?: SearchState;\n  truncateQuery?: SearchState;\n}\n\nexport interface Facet {\n  category?: boolean;\n  multiSelect?: boolean;\n  name?: string;\n  priority?: number;\n  values?: FacetValue[];\n  visible?: boolean;\n\n  /**\n   * Indicates whether the facet group is expanded in the UI. An expanded\n   * does not necessarily show all facet value at once, this can be limited\n   * by the so-called `topValueCount`.\n   */\n  expanded?: boolean;\n\n  /**\n   * Indicates the top values that will be shown instantly. The top values can be\n   * controlled by business users per facet.\n   */\n  topValueCount?: number;\n\n  /**\n   * The OCC backend has topValues with duplicated facet data.\n   * This is not used in the UI, but normalized in the `topValueCount` property.\n   */\n  topValues?: FacetValue[];\n}\n\nexport interface SpellingSuggestion {\n  query?: string;\n  suggestion?: string;\n}\n\nexport interface ProductSearchPage {\n  breadcrumbs?: Breadcrumb[];\n  categoryCode?: string;\n  currentQuery?: SearchState;\n  facets?: Facet[];\n  freeTextSearch?: string;\n  keywordRedirectUrl?: string;\n  pagination?: PaginationModel;\n  products?: Product[];\n  sorts?: SortModel[];\n  spellingSuggestion?: SpellingSuggestion;\n}\n\nexport interface Suggestion {\n  value?: string;\n}\n\nexport interface ClearSearch {\n  clearPageResults?: boolean;\n  clearSearchboxResults?: boolean;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address } from './address.model';\nimport { Image, Images } from './image.model';\nimport { GeoPoint, User, PaginationModel, SortModel } from './misc.model';\nimport { OpeningSchedule } from './point-of-service.model';\n\nexport interface VariantOptionQualifier {\n  image?: Image;\n  name?: string;\n  qualifier?: VariantQualifier;\n  value?: string;\n}\n\nexport interface PromotionRestriction {\n  description?: string;\n  restrictionType?: string;\n}\n\nexport interface FeatureUnit {\n  name?: string;\n  symbol?: string;\n  unitType?: string;\n}\n\nexport interface FeatureValue {\n  value?: string;\n}\n\nexport interface Feature {\n  code?: string;\n  comparable?: boolean;\n  description?: string;\n  featureUnit?: FeatureUnit;\n  featureValues?: FeatureValue[];\n  name?: string;\n  range?: boolean;\n  type?: string;\n}\n\nexport interface VariantCategory {\n  hasImage?: boolean;\n  name?: string;\n  priority?: number;\n}\n\nexport interface VariantValueCategory {\n  name?: string;\n  sequence?: number;\n  superCategories?: VariantCategory[];\n}\n\nexport enum VariantType {\n  SIZE = 'ApparelSizeVariantProduct',\n  STYLE = 'ApparelStyleVariantProduct',\n  COLOR = 'ElectronicsColorVariantProduct',\n}\n\nexport enum PriceType {\n  BUY = 'BUY',\n  FROM = 'FROM',\n}\n\nexport interface Price {\n  currencyIso?: string;\n  formattedValue?: string;\n  maxQuantity?: number;\n  minQuantity?: number;\n  priceType?: PriceType;\n  value?: number;\n}\n\nexport interface Stock {\n  isValueRounded?: boolean;\n  stockLevel?: number;\n  stockLevelStatus?: string;\n}\n\nexport interface VariantOption {\n  code?: string;\n  priceData?: Price;\n  stock?: Stock;\n  url?: string;\n  variantOptionQualifiers?: VariantOptionQualifier[];\n}\n\nexport interface Promotion {\n  code?: string;\n  couldFireMessages?: string[];\n  description?: string;\n  enabled?: boolean;\n  endDate?: Date;\n  firedMessages?: string[];\n  priority?: number;\n  productBanner?: Image;\n  promotionGroup?: string;\n  promotionType?: string;\n  restrictions?: PromotionRestriction[];\n  startDate?: Date;\n  title?: string;\n}\n\nexport interface Category {\n  code?: string;\n  name?: string;\n  image?: Image;\n  url?: string;\n}\n\nexport interface Classification {\n  code?: string;\n  features?: Feature[];\n  name?: string;\n}\n\nexport interface FutureStock {\n  date?: Date;\n  formattedDate?: string;\n  stock?: Stock;\n}\n\nexport interface PriceRange {\n  maxPrice?: Price;\n  minPrice?: Price;\n}\n\nexport interface ProductReference {\n  description?: string;\n  preselected?: boolean;\n  quantity?: number;\n  referenceType?: string;\n  target?: Product;\n}\n\nexport interface Review {\n  alias?: string;\n  comment?: string;\n  date?: Date;\n  headline?: string;\n  id?: string;\n  principal?: User;\n  rating?: number;\n}\n\nexport interface VariantMatrixElement {\n  elements?: VariantMatrixElement[];\n  isLeaf?: boolean;\n  parentVariantCategory?: VariantCategory;\n  variantOption?: VariantOption;\n  variantValueCategory?: VariantValueCategory;\n}\n\nexport interface ProductReferences {\n  [referenceType: string]: ProductReference[];\n}\n\nexport interface BaseOption {\n  options?: VariantOption[];\n  selected?: VariantOption;\n  variantType?: VariantType;\n}\n\nexport interface Product {\n  availableForPickup?: boolean;\n  averageRating?: number;\n  baseOptions?: BaseOption[];\n  baseProduct?: string;\n  categories?: Category[];\n  classifications?: Classification[];\n  code?: string;\n  description?: string;\n  futureStocks?: FutureStock[];\n  images?: Images;\n  manufacturer?: string;\n  multidimensional?: boolean;\n  name?: string;\n  /**\n   * The product slug is used to create pretty URL for links to product detail pages.\n   *\n   * The slug typically avoid spaces (`%20`) or other characters that are encoded in the URL.\n   */\n  slug?: string;\n  nameHtml?: string;\n\n  numberOfReviews?: number;\n  potentialPromotions?: Promotion[];\n  price?: Price;\n  priceRange?: PriceRange;\n  productReferences?: ProductReferences;\n  purchasable?: boolean;\n  reviews?: Review[];\n  stock?: Stock;\n  summary?: string;\n  url?: string;\n  variantMatrix?: VariantMatrixElement[];\n  variantOptions?: VariantOption[];\n  variantType?: VariantType;\n  volumePrices?: Price[];\n  volumePricesFlag?: boolean;\n}\n\nexport enum VariantQualifier {\n  SIZE = 'size',\n  STYLE = 'style',\n  COLOR = 'color',\n  THUMBNAIL = 'thumbnail',\n  PRODUCT = 'product',\n  ROLLUP_PROPERTY = 'rollupProperty',\n}\n\nexport interface PointOfServiceStock {\n  address?: Address;\n  description?: string;\n  displayName?: string;\n  distanceKm?: number;\n  features?: { [propertyName: string]: string };\n  formattedDistance?: string;\n  geoPoint?: GeoPoint;\n  mapIcon?: Image;\n  name?: string;\n  openingHours?: OpeningSchedule;\n  stockInfo?: Stock;\n  storeContent?: string;\n  storeImages?: Image[];\n  url?: string;\n}\n\nexport interface StoreFinderStockSearchPage {\n  boundEastLongitude?: number;\n  boundSouthLatitude?: number;\n  boundWestLongitude?: number;\n  locationText?: string;\n  pagination?: PaginationModel;\n  product?: Product;\n  sorts?: SortModel[];\n  sourceLatitude?: number;\n  sourceLongitude?: number;\n  stores?: PointOfServiceStock[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\n\n/**\n * Used to envelope data observable together with specified scope\n */\nexport interface ScopedData<T> {\n  scope?: string;\n  data$?: Observable<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './address.model';\nexport * from './payment.model';\nexport * from './cms.model';\nexport * from './consent.model';\nexport * from './customer-coupon.model';\nexport * from './image.model';\nexport * from './misc.model';\nexport * from './notification-preference.model';\nexport * from './org-unit.model';\nexport * from './point-of-service.model';\nexport * from './product-interest.model';\nexport * from './product-search.model';\nexport * from './product.model';\nexport * from './scoped-data';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const ENTITY_REMOVE_ACTION = '[ENTITY] REMOVE';\nexport const ENTITY_REMOVE_ALL_ACTION = '[ENTITY] REMOVE ALL';\n\nexport interface EntityMeta {\n  entityType: string;\n  entityId?: string | string[] | null;\n  entityRemove?: boolean;\n}\n\nexport function entityMeta(\n  type: string,\n  id?: string | string[] | null\n): EntityMeta {\n  return {\n    entityType: type,\n    entityId: id,\n  };\n}\n\nexport function entityRemoveMeta(\n  type: string,\n  id: string | string[] | null\n): EntityMeta {\n  return {\n    entityId: id,\n    entityType: type,\n    entityRemove: true,\n  };\n}\n\nexport function entityRemoveAllMeta(type: string): EntityMeta {\n  return {\n    entityId: null,\n    entityType: type,\n    entityRemove: true,\n  };\n}\n\nexport interface EntityAction extends Action {\n  readonly payload?: any;\n  readonly meta?: EntityMeta;\n}\n\nexport class EntityRemoveAction implements EntityAction {\n  type = ENTITY_REMOVE_ACTION;\n  readonly meta: EntityMeta;\n  constructor(entityType: string, id: string | string[] | null) {\n    this.meta = entityRemoveMeta(entityType, id);\n  }\n}\n\nexport class EntityRemoveAllAction implements EntityAction {\n  type = ENTITY_REMOVE_ALL_ACTION;\n  readonly meta: EntityMeta;\n  constructor(entityType: string) {\n    this.meta = entityRemoveAllMeta(entityType);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const LOADER_LOAD_ACTION = '[LOADER] LOAD';\nexport const LOADER_FAIL_ACTION = '[LOADER] FAIL';\nexport const LOADER_SUCCESS_ACTION = '[LOADER] SUCCESS';\nexport const LOADER_RESET_ACTION = '[LOADER] RESET';\n\nexport interface LoaderMeta {\n  entityType: string;\n  loader:\n    | {\n        load?: boolean;\n        error?: any;\n        success?: boolean;\n      }\n    | undefined;\n}\n\nexport interface LoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: LoaderMeta;\n}\n\nexport function loadMeta(entityType: string): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {\n      load: true,\n    },\n  };\n}\n\nexport function failMeta(entityType: string, error?: any): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {\n      error: error ? error : true,\n    },\n  };\n}\n\nexport function successMeta(entityType: string): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {\n      success: true,\n    },\n  };\n}\n\nexport function resetMeta(entityType: string): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {},\n  };\n}\nexport class LoaderLoadAction implements LoaderAction {\n  type = LOADER_LOAD_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string) {\n    this.meta = loadMeta(entityType);\n  }\n}\n\nexport class LoaderFailAction implements LoaderAction {\n  type = LOADER_FAIL_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string, error?: any) {\n    this.meta = failMeta(entityType, error);\n  }\n}\n\nexport class LoaderSuccessAction implements LoaderAction {\n  type = LOADER_SUCCESS_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string) {\n    this.meta = successMeta(entityType);\n  }\n}\n\nexport class LoaderResetAction implements LoaderAction {\n  type = LOADER_RESET_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string) {\n    this.meta = resetMeta(entityType);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { entityMeta, EntityMeta } from '../entity/entity.action';\nimport {\n  failMeta,\n  LoaderMeta,\n  loadMeta,\n  resetMeta,\n  successMeta,\n} from '../loader/loader.action';\n\nexport const ENTITY_LOAD_ACTION = '[ENTITY] LOAD';\nexport const ENTITY_FAIL_ACTION = '[ENTITY] LOAD FAIL';\nexport const ENTITY_SUCCESS_ACTION = '[ENTITY] LOAD SUCCESS';\nexport const ENTITY_RESET_ACTION = '[ENTITY] RESET';\n\nexport interface EntityLoaderMeta extends EntityMeta, LoaderMeta {}\n\nexport interface EntityLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: EntityLoaderMeta;\n}\n\nexport function entityLoadMeta(\n  entityType: string,\n  id: string | string[] | null\n): EntityLoaderMeta {\n  return {\n    ...loadMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityFailMeta(\n  entityType: string,\n  id: string | string[] | null,\n  error?: any\n): EntityLoaderMeta {\n  return {\n    ...failMeta(entityType, error),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entitySuccessMeta(\n  entityType: string,\n  id: string | string[] | null\n): EntityLoaderMeta {\n  return {\n    ...successMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityResetMeta(\n  entityType: string,\n  id?: string | string[] | null\n): EntityLoaderMeta {\n  return {\n    ...resetMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport class EntityLoadAction implements EntityLoaderAction {\n  type = ENTITY_LOAD_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(entityType: string, id: string | string[] | null) {\n    this.meta = entityLoadMeta(entityType, id);\n  }\n}\n\nexport class EntityFailAction implements EntityLoaderAction {\n  type = ENTITY_FAIL_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(entityType: string, id: string | string[] | null, error?: any) {\n    this.meta = entityFailMeta(entityType, id, error);\n  }\n}\n\nexport class EntitySuccessAction implements EntityLoaderAction {\n  type = ENTITY_SUCCESS_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(\n    entityType: string,\n    id: string | string[] | null,\n    public payload?: any\n  ) {\n    this.meta = entitySuccessMeta(entityType, id);\n  }\n}\n\nexport class EntityLoaderResetAction implements EntityLoaderAction {\n  type = ENTITY_RESET_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(entityType: string, id: string | string[] | null) {\n    this.meta = entityResetMeta(entityType, id);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoaderState } from './loader-state';\n\nexport function loaderValueSelector<T>(state: LoaderState<T>): T {\n  return state.value as T;\n}\n\nexport function loaderLoadingSelector<T>(state: LoaderState<T>): boolean {\n  return state.loading ?? false;\n}\n\nexport function loaderErrorSelector<T>(state: LoaderState<T>): boolean {\n  return state.error ?? false;\n}\n\nexport function loaderSuccessSelector<T>(state: LoaderState<T>): boolean {\n  return state.success ?? false;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface LoaderState<T> {\n  loading?: boolean;\n  error?: boolean;\n  success?: boolean;\n  value?: T;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { LoaderState } from './loader-state';\nimport { LoaderAction } from './loader.action';\n\nexport const initialLoaderState: LoaderState<any> = {\n  loading: false,\n  error: false,\n  success: false,\n  value: undefined,\n};\n\n/**\n * Higher order reducer that adds generic loading flag to chunk of the state\n *\n * Utilizes \"loader\" meta field of actions to set specific flags for specific\n * action (LOAD, SUCCESS, FAIL, RESET)\n */\nexport function loaderReducer<T, V extends Action = Action>(\n  entityType: string,\n  reducer?: (state: T | undefined, action: Action | V) => T | undefined\n): (state: LoaderState<T> | undefined, action: LoaderAction) => LoaderState<T> {\n  return (\n    state: LoaderState<T> = initialLoaderState,\n    action: LoaderAction\n  ): LoaderState<T> => {\n    if (\n      action.meta &&\n      action.meta.loader &&\n      action.meta.entityType === entityType\n    ) {\n      const entity = action.meta.loader;\n\n      if (entity.load) {\n        return {\n          ...state,\n          loading: true,\n          value: getReducerIfExists(state.value),\n        };\n      } else if (entity.error) {\n        return {\n          ...state,\n          loading: false,\n          error: true,\n          success: false,\n          value: getReducerIfExists(undefined),\n        };\n      } else if (entity.success) {\n        return {\n          ...state,\n          value: getReducerIfExists(action.payload),\n          loading: false,\n          error: false,\n          success: true,\n        };\n      } else {\n        // reset state action\n        return {\n          ...initialLoaderState,\n          value: reducer\n            ? reducer(initialLoaderState.value, action)\n            : initialLoaderState.value,\n        };\n      }\n    }\n\n    if (reducer) {\n      const newValue = reducer(state.value, action);\n      if (newValue !== state.value) {\n        return { ...state, value: newValue };\n      }\n    }\n    return state;\n\n    function getReducerIfExists(fallbackValue: any) {\n      return reducer ? reducer(state.value, action) : fallbackValue;\n    }\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './loader.action';\nexport * from './loader.selectors';\nexport * from './loader-state';\nexport * from './loader.reducer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  loaderErrorSelector,\n  loaderLoadingSelector,\n  loaderSuccessSelector,\n  loaderValueSelector,\n} from '../loader';\nimport { LoaderState } from '../loader/loader-state';\nimport { initialLoaderState } from '../loader/loader.reducer';\nimport { EntityLoaderState } from './entity-loader-state';\n\nexport function entityLoaderStateSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): LoaderState<T> {\n  return state.entities[id] || initialLoaderState;\n}\n\nexport function entityValueSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): T {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderValueSelector(entityState);\n}\n\nexport function entityLoadingSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderLoadingSelector(entityState);\n}\n\nexport function entityErrorSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderErrorSelector(entityState);\n}\n\nexport function entitySuccessSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderSuccessSelector(entityState);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntityState } from '../entity/entity-state';\nimport { LoaderState } from '../loader/loader-state';\n\nexport type EntityLoaderState<T> = EntityState<LoaderState<T>>;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { EntityState } from './entity-state';\nimport { EntityAction } from './entity.action';\n\nexport const initialEntityState: EntityState<any> = { entities: {} };\n\n/**\n * Higher order reducer for reusing reducer logic for multiple entities\n *\n * Utilizes entityId meta field to target entity by id in actions\n */\nexport function entityReducer<T, V extends Action = Action>(\n  entityType: string,\n  reducer: (state: T, action: Action | V) => T\n) {\n  return (\n    state: EntityState<T> = initialEntityState,\n    action: EntityAction\n  ): EntityState<T> => {\n    let ids: string[] = [];\n    let partitionPayload = false;\n    if (\n      action.meta &&\n      action.meta.entityType === entityType &&\n      action.meta.entityId !== undefined\n    ) {\n      if (action.meta.entityId !== null) {\n        ids = ([] as string[]).concat(action.meta.entityId);\n      }\n\n      // remove selected entities\n      if (action.meta.entityRemove) {\n        return removeSelectedEntities(action, state, ids);\n      }\n\n      partitionPayload =\n        Array.isArray(action.meta.entityId) && Array.isArray(action.payload);\n    } else {\n      ids = Object.keys(state.entities);\n    }\n\n    const entityUpdates: { [id: string]: T } = {};\n\n    for (let i = 0; i < ids.length; i++) {\n      const id = ids[i];\n      const subAction = partitionPayload\n        ? { ...action, payload: action.payload[i] }\n        : action;\n      const newState = reducer(state.entities[id], subAction);\n      if (newState) {\n        entityUpdates[id] = newState;\n      }\n    }\n\n    if (Object.keys(entityUpdates).length > 0) {\n      return {\n        ...state,\n        entities: { ...state.entities, ...entityUpdates },\n      };\n    }\n\n    return state;\n  };\n\n  function removeSelectedEntities(\n    action: EntityAction,\n    state: EntityState<T>,\n    ids: string | string[]\n  ) {\n    if (action?.meta?.entityId === null) {\n      return initialEntityState;\n    } else {\n      let removed = false;\n      const newEntities = Object.keys(state.entities).reduce(\n        (acc: any, cur) => {\n          if (ids.includes(cur)) {\n            removed = true;\n          } else {\n            acc[cur] = state.entities[cur];\n          }\n          return acc;\n        },\n        {}\n      );\n\n      return removed ? { entities: newEntities } : state;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { entityReducer } from '../entity/entity.reducer';\nimport { LoaderAction } from '../loader/loader.action';\nimport { loaderReducer } from '../loader/loader.reducer';\nimport { EntityLoaderState } from './entity-loader-state';\nimport { EntityLoaderAction } from './entity-loader.action';\n\n/**\n * Higher order reducer that wraps LoaderReducer and EntityReducer enhancing\n * single state reducer to support multiple entities with generic loading flags\n */\nexport function entityLoaderReducer<T, V extends LoaderAction = LoaderAction>(\n  entityType: string,\n  reducer?: (state: T | undefined, action: V | LoaderAction) => T | undefined\n): (\n  state: EntityLoaderState<T> | undefined,\n  action: EntityLoaderAction\n) => EntityLoaderState<T> {\n  return entityReducer(entityType, loaderReducer(entityType, reducer));\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './entity-loader.action';\nexport * from './entity-loader.selectors';\nexport * from './entity-loader-state';\nexport * from './entity-loader.reducer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport {\n  LoaderMeta,\n  resetMeta as loaderResetMeta,\n} from '../loader/loader.action';\n\nexport const PROCESSES_INCREMENT_ACTION = '[PROCESSES LOADER] INCREMENT';\nexport const PROCESSES_DECREMENT_ACTION = '[PROCESSES LOADER] DECREMENT';\nexport const PROCESSES_LOADER_RESET_ACTION = '[PROCESSES LOADER] RESET';\n\nexport interface ProcessesLoaderMeta extends LoaderMeta {\n  entityType: string;\n  processesCountDiff?: number | null;\n}\n\nexport interface ProcessesLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: ProcessesLoaderMeta;\n}\n\nexport function processesIncrementMeta(\n  entityType: string\n): ProcessesLoaderMeta {\n  return {\n    entityType: entityType,\n    loader: undefined,\n    processesCountDiff: 1,\n  };\n}\n\nexport function processesDecrementMeta(\n  entityType: string\n): ProcessesLoaderMeta {\n  return {\n    entityType: entityType,\n    loader: undefined,\n    processesCountDiff: -1,\n  };\n}\n\nexport function processesLoaderResetMeta(\n  entityType: string\n): ProcessesLoaderMeta {\n  // processes reset action is a reset action for loader reducer, but not the other way around\n  return {\n    ...loaderResetMeta(entityType),\n    processesCountDiff: null,\n  };\n}\n\nexport class ProcessesLoaderResetAction implements ProcessesLoaderAction {\n  type = PROCESSES_LOADER_RESET_ACTION;\n  readonly meta: ProcessesLoaderMeta;\n  constructor(entityType: string) {\n    this.meta = processesLoaderResetMeta(entityType);\n  }\n}\n\nexport class ProcessesIncrementAction implements ProcessesLoaderAction {\n  type = PROCESSES_INCREMENT_ACTION;\n  readonly meta: ProcessesLoaderMeta;\n  constructor(entityType: string) {\n    this.meta = processesIncrementMeta(entityType);\n  }\n}\n\nexport class ProcessesDecrementAction implements ProcessesLoaderAction {\n  type = PROCESSES_DECREMENT_ACTION;\n  readonly meta: ProcessesLoaderMeta;\n  constructor(entityType: string) {\n    this.meta = processesDecrementMeta(entityType);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { entityMeta, EntityMeta } from '../entity/entity.action';\nimport {\n  processesDecrementMeta,\n  processesIncrementMeta,\n  ProcessesLoaderMeta,\n  processesLoaderResetMeta,\n} from '../processes-loader/processes-loader.action';\n\nexport const ENTITY_PROCESSES_LOADER_RESET_ACTION =\n  '[ENTITY] PROCESSES LOADER RESET';\nexport const ENTITY_PROCESSES_INCREMENT_ACTION = '[ENTITY] PROCESSES INCREMENT';\nexport const ENTITY_PROCESSES_DECREMENT_ACTION = '[ENTITY] PROCESSES DECREMENT';\n\nexport interface EntityProcessesLoaderMeta\n  extends EntityMeta,\n    ProcessesLoaderMeta {}\n\nexport interface EntityProcessesLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: EntityProcessesLoaderMeta;\n}\n\nexport function entityProcessesLoaderResetMeta(\n  entityType: string,\n  id: string | string[]\n): EntityProcessesLoaderMeta {\n  return {\n    ...processesLoaderResetMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityProcessesIncrementMeta(\n  entityType: string,\n  id: string | string[]\n): EntityProcessesLoaderMeta {\n  return {\n    ...processesIncrementMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityProcessesDecrementMeta(\n  entityType: string,\n  id: string | string[]\n): EntityProcessesLoaderMeta {\n  return {\n    ...processesDecrementMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport class EntityProcessesLoaderResetAction\n  implements EntityProcessesLoaderAction\n{\n  type = ENTITY_PROCESSES_LOADER_RESET_ACTION;\n  readonly meta: EntityProcessesLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityProcessesLoaderResetMeta(entityType, id);\n  }\n}\n\nexport class EntityProcessesIncrementAction\n  implements EntityProcessesLoaderAction\n{\n  type = ENTITY_PROCESSES_INCREMENT_ACTION;\n  readonly meta: EntityProcessesLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityProcessesIncrementMeta(entityType, id);\n  }\n}\n\nexport class EntityProcessesDecrementAction\n  implements EntityProcessesLoaderAction\n{\n  type = ENTITY_PROCESSES_DECREMENT_ACTION;\n  readonly meta: EntityProcessesLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityProcessesDecrementMeta(entityType, id);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ProcessesLoaderState } from './processes-loader-state';\n\nexport function isStableSelector<T>(state: ProcessesLoaderState<T>): boolean {\n  return !state.processesCount && !state.loading;\n}\n\nexport function hasPendingProcessesSelector<T>(\n  state: ProcessesLoaderState<T>\n): boolean {\n  return state.processesCount !== undefined && state.processesCount > 0;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoaderState } from '../loader/loader-state';\n\nexport interface ProcessesLoaderState<T> extends LoaderState<T> {\n  processesCount?: number;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isDevMode } from '@angular/core';\nimport { Action } from '@ngrx/store';\nimport { initialLoaderState, loaderReducer } from '../loader/loader.reducer';\nimport { ProcessesLoaderState } from './processes-loader-state';\nimport { ProcessesLoaderAction } from './processes-loader.action';\n\nexport const initialProcessesState: ProcessesLoaderState<any> = {\n  processesCount: 0,\n};\n\n/**\n * Higher order reducer that adds processes count\n */\nexport function processesLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T | undefined, action: Action) => T\n): (\n  state: ProcessesLoaderState<T>,\n  action: ProcessesLoaderAction\n) => ProcessesLoaderState<T> {\n  return (\n    state: ProcessesLoaderState<T> = {\n      ...initialProcessesState,\n      ...initialLoaderState,\n    },\n    action: ProcessesLoaderAction\n  ): ProcessesLoaderState<T> => {\n    const loaderState = loaderReducer(entityType, reducer)(state, action);\n    if (action.meta && action.meta.entityType === entityType) {\n      const processesCountDiff = action.meta.processesCountDiff;\n      if (\n        isDevMode() &&\n        state.processesCount &&\n        processesCountDiff &&\n        state.processesCount + processesCountDiff < 0\n      ) {\n        console.error(\n          `Action '${action.type}' sets processesCount to value < 0!\\n` +\n            'Make sure to keep processesCount in sync.\\n' +\n            'There should always be only one decrement action for each increment action.\\n' +\n            \"Make sure that you don't reset state in between those actions.\\n\",\n          action\n        );\n      }\n      if (processesCountDiff) {\n        return {\n          ...loaderState,\n          processesCount: state.processesCount\n            ? state.processesCount + processesCountDiff\n            : processesCountDiff,\n        };\n      } else if (processesCountDiff === null) {\n        // reset action\n        return {\n          ...loaderState,\n          ...initialProcessesState,\n        };\n      }\n    }\n\n    return loaderState;\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './processes-loader.action';\nexport * from './processes-loader.selectors';\nexport * from './processes-loader-state';\nexport * from './processes-loader.reducer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { entityLoaderStateSelector } from '../entity-loader/entity-loader.selectors';\nimport { initialLoaderState } from '../loader/loader.reducer';\nimport {\n  initialProcessesState,\n  ProcessesLoaderState,\n} from '../processes-loader';\nimport {\n  hasPendingProcessesSelector,\n  isStableSelector,\n} from '../processes-loader/processes-loader.selectors';\nimport { EntityProcessesLoaderState } from './entity-processes-loader-state';\n\nconst initialProcessesLoaderState = {\n  ...initialLoaderState,\n  ...initialProcessesState,\n};\n\nexport function entityHasPendingProcessesSelector<T>(\n  state: EntityProcessesLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return hasPendingProcessesSelector(entityState);\n}\n\nexport function entityIsStableSelector<T>(\n  state: EntityProcessesLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return isStableSelector(entityState);\n}\n\nexport function entityProcessesLoaderStateSelector<T>(\n  state: EntityProcessesLoaderState<T>,\n  id: string\n): ProcessesLoaderState<T> {\n  return state.entities[id] || initialProcessesLoaderState;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntityState } from '../entity/entity-state';\nimport { ProcessesLoaderState } from '../processes-loader/processes-loader-state';\n\nexport type EntityProcessesLoaderState<T> = EntityState<\n  ProcessesLoaderState<T>\n>;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { entityReducer } from '../entity/entity.reducer';\nimport { processesLoaderReducer } from '../processes-loader';\nimport { ProcessesLoaderAction } from '../processes-loader/processes-loader.action';\nimport { EntityProcessesLoaderState } from './entity-processes-loader-state';\nimport { EntityProcessesLoaderAction } from './entity-processes-loader.action';\n\n/**\n * Higher order reducer that wraps ProcessesLoaderReducer and EntityReducer enhancing\n * single state reducer to support multiple entities with generic processesCount flag\n */\nexport function entityProcessesLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T | undefined, action: ProcessesLoaderAction) => T\n): (\n  state: EntityProcessesLoaderState<T> | undefined,\n  action: EntityProcessesLoaderAction\n) => EntityProcessesLoaderState<T> {\n  return entityReducer(entityType, processesLoaderReducer(entityType, reducer));\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './entity-processes-loader.action';\nexport * from './entity-processes-loader.selectors';\nexport * from './entity-processes-loader-state';\nexport * from './entity-processes-loader.reducer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntityState } from './entity-state';\n\nexport function entitySelector<T>(\n  state: EntityState<T>,\n  id: string\n): T | undefined {\n  return state.entities[id] || undefined;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface EntityState<T> {\n  entities: {\n    [id: string]: T;\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './entity.action';\nexport * from './entity.selectors';\nexport * from './entity-state';\nexport * from './entity.reducer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { deepMerge } from '../../config/utils/deep-merge';\nimport { StateTransferType, StorageSyncType } from '../config/state-config';\n\nconst OBJECT_SEPARATOR = '.';\n\nexport function getStateSliceValue<T, E>(keys: string, state: T): E {\n  const stateSliceValue = keys\n    .split(OBJECT_SEPARATOR)\n    .reduce(\n      (previous: any, current) => (previous ? previous[current] : undefined),\n      state\n    );\n\n  return stateSliceValue as E;\n}\n\nexport function createShellObject<T, E>(\n  key: string,\n  excludeKeys: string[],\n  value: T\n): E {\n  if (!key || !value || Object.keys(value).length === 0) {\n    return {} as E;\n  }\n\n  const shell = key.split(OBJECT_SEPARATOR).reduceRight((acc, previous) => {\n    return { [previous]: acc } as unknown as NonNullable<T>;\n  }, value);\n  return handleExclusions(key, excludeKeys, shell);\n}\n\nexport function getStateSlice<T, E>(\n  keys: string[],\n  excludeKeys: string[],\n  state: T\n): E {\n  if (keys && keys.length === 0) {\n    return {} as E;\n  }\n\n  let stateSlices = {};\n  for (const currentKey of keys) {\n    const stateValue = getStateSliceValue(currentKey, state);\n    const shell = createShellObject(currentKey, excludeKeys, stateValue);\n    stateSlices = deepMerge(stateSlices, shell);\n  }\n\n  return stateSlices as E;\n}\n\nexport function handleExclusions(\n  key: string,\n  excludeKeys: string[],\n  value: any\n): any {\n  const exclusionKeys = getExclusionKeys(key, excludeKeys);\n  if (exclusionKeys.length === 0) {\n    return value;\n  }\n\n  const finalValue = deepMerge({}, value);\n  for (const currentExclusionKey of exclusionKeys) {\n    const exclusionChunksSplit = currentExclusionKey.split(OBJECT_SEPARATOR);\n\n    let nestedTemp = finalValue;\n    for (let i = 0; i < exclusionChunksSplit.length; i++) {\n      const currentChunk = exclusionChunksSplit[i];\n\n      // last iteration\n      if (i === exclusionChunksSplit.length - 1) {\n        if (nestedTemp && nestedTemp[currentChunk]) {\n          delete nestedTemp[currentChunk];\n        }\n      } else {\n        nestedTemp = nestedTemp[currentChunk];\n      }\n    }\n  }\n\n  return finalValue;\n}\n\nexport function getExclusionKeys(key: string, excludeKeys: string[]): string[] {\n  if (!key || !excludeKeys) {\n    return [];\n  }\n\n  const exclusionKeys: string[] = [];\n  for (const exclusionKey of excludeKeys) {\n    if (exclusionKey.includes(key)) {\n      exclusionKeys.push(exclusionKey);\n    }\n  }\n\n  return exclusionKeys;\n}\n\nexport function filterKeysByType(\n  keys: { [key: string]: StorageSyncType | StateTransferType },\n  type: StorageSyncType | StateTransferType\n): string[] {\n  if (!keys) {\n    return [];\n  }\n  return Object.keys(keys).filter((key) => keys[key] === type);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel } from '../../model/misc.model';\nimport { EntityLoaderState } from './entity-loader/entity-loader-state';\n\nexport interface EntityListState<Type> {\n  list: EntityLoaderState<ListModel>;\n  entities: EntityLoaderState<Type>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntitiesModel, ListModel } from '../../model/index';\nimport { SearchConfig } from '../../product/model/search-config';\nimport { EntityListState } from './entity-list-state';\nimport { EntityLoaderState } from './entity-loader/entity-loader-state';\nimport { entityLoaderStateSelector } from './entity-loader/entity-loader.selectors';\nimport { LoaderState } from './loader/loader-state';\n\nconst ALL = 'all';\n\nexport function serializeSearchConfig(\n  config: SearchConfig,\n  id?: string\n): string {\n  return `${id ?? ''}?pageSize=${config.pageSize ?? ''}&currentPage=${\n    config.currentPage ?? ''\n  }&sort=${config.sort ?? ''}`;\n}\n\nexport function denormalizeSearch<T>(\n  state: EntityListState<T>,\n  params?: SearchConfig\n): LoaderState<EntitiesModel<T>> {\n  return denormalizeCustomB2BSearch<T>(state.list, state.entities, params);\n}\n\nexport function denormalizeCustomB2BSearch<T>(\n  list: EntityLoaderState<ListModel>,\n  entities: EntityLoaderState<T>,\n  params?: SearchConfig,\n  id?: string\n): LoaderState<EntitiesModel<T>> {\n  const serializedList: any = entityLoaderStateSelector(\n    list,\n    params ? serializeSearchConfig(params, id) : id ?? ALL\n  );\n  if (!serializedList.value || !serializedList.value.ids) {\n    return serializedList;\n  }\n  const res: LoaderState<EntitiesModel<T>> = Object.assign({}, serializedList, {\n    value: {\n      values: serializedList.value.ids.map(\n        (code: string) => entityLoaderStateSelector(entities, code).value\n      ),\n    },\n  });\n  if (params && res.value) {\n    res.value.pagination = serializedList.value.pagination;\n    res.value.sorts = serializedList.value.sorts;\n  }\n  return res;\n}\n\nexport function normalizeListPage<T>(\n  list: EntitiesModel<T>,\n  id: string\n): { values: T[]; page: ListModel } {\n  const values = list.values || [];\n  const page: ListModel = {\n    ids: values.map((data) => (<any>data)[id]),\n  };\n  if (list.pagination) {\n    page.pagination = list.pagination;\n  }\n  if (list.sorts) {\n    page.sorts = list.sorts;\n  }\n  return { values, page };\n}\n\nexport function serializeParams(\n  params: string | string[],\n  searchConfig: SearchConfig\n): string {\n  return [params, serializeSearchConfig(searchConfig)].toString();\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './entity-loader/index';\nexport * from './entity-processes-loader/index';\nexport * from './entity/index';\nexport { getStateSlice } from './get-state-slice';\nexport * from './loader/index';\nexport * from './processes-loader/index';\nexport * from './entity-list-state';\nexport * from './serializer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as StateUtils from './utils-group';\nexport { StateUtils };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AnonymousConsent, ConsentTemplate } from '../../model/consent.model';\nimport { StateUtils } from '../../state';\n\nexport const ANONYMOUS_CONSENTS_STORE_FEATURE = 'anonymous-consents';\nexport const ANONYMOUS_CONSENTS = '[Anonymous Consents] Anonymous Consents';\n\nexport interface StateWithAnonymousConsents {\n  [ANONYMOUS_CONSENTS_STORE_FEATURE]: AnonymousConsentsState;\n}\n\nexport interface AnonymousConsentsState {\n  templates: StateUtils.LoaderState<ConsentTemplate[]>;\n  consents: AnonymousConsent[];\n  ui: {\n    bannerDismissed: boolean;\n    updated: boolean;\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AnonymousConsent,\n  ConsentTemplate,\n} from '../../../model/consent.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { ANONYMOUS_CONSENTS } from '../anonymous-consents-state';\n\nexport const LOAD_ANONYMOUS_CONSENT_TEMPLATES =\n  '[Anonymous Consents] Load Anonymous Consent Templates';\nexport const LOAD_ANONYMOUS_CONSENT_TEMPLATES_SUCCESS =\n  '[Anonymous Consents] Load Anonymous Consent Templates Success';\nexport const LOAD_ANONYMOUS_CONSENT_TEMPLATES_FAIL =\n  '[Anonymous Consents] Load Anonymous Consent Templates Fail';\nexport const RESET_LOAD_ANONYMOUS_CONSENT_TEMPLATES =\n  '[Anonymous Consents] Reset Load Anonymous Consent Templates';\n\nexport const GET_ALL_ANONYMOUS_CONSENTS =\n  '[Anonymous Consents] Get All Anonymous Consents';\nexport const GET_ANONYMOUS_CONSENT =\n  '[Anonymous Consents] Get Anonymous Consent';\nexport const SET_ANONYMOUS_CONSENTS =\n  '[Anonymous Consents] Set Anonymous Consents';\nexport const GIVE_ANONYMOUS_CONSENT =\n  '[Anonymous Consents] Give Anonymous Consent';\nexport const WITHDRAW_ANONYMOUS_CONSENT =\n  '[Anonymous Consents] Withdraw Anonymous Consent';\n\nexport const TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED =\n  '[Anonymous Consents] Toggle Anonymous Consents Banner Dismissed';\nexport const TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED =\n  '[Anonymous Consents] Anonymous Consent Templates Updated';\nexport const ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS =\n  '[Anonymous Consents] Check Updated Versions';\n\nexport class LoadAnonymousConsentTemplates extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_ANONYMOUS_CONSENT_TEMPLATES;\n  constructor() {\n    super(ANONYMOUS_CONSENTS);\n  }\n}\n\nexport class LoadAnonymousConsentTemplatesSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_ANONYMOUS_CONSENT_TEMPLATES_SUCCESS;\n  constructor(public payload: ConsentTemplate[]) {\n    super(ANONYMOUS_CONSENTS);\n  }\n}\nexport class LoadAnonymousConsentTemplatesFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_ANONYMOUS_CONSENT_TEMPLATES_FAIL;\n  constructor(payload: any) {\n    super(ANONYMOUS_CONSENTS, payload);\n  }\n}\n\nexport class ResetLoadAnonymousConsentTemplates extends StateUtils.LoaderResetAction {\n  readonly type = RESET_LOAD_ANONYMOUS_CONSENT_TEMPLATES;\n  constructor() {\n    super(ANONYMOUS_CONSENTS);\n  }\n}\n\nexport class GetAllAnonymousConsents {\n  readonly type = GET_ALL_ANONYMOUS_CONSENTS;\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n\nexport class GetAnonymousConsent {\n  readonly type = GET_ANONYMOUS_CONSENT;\n  constructor(public templateCode: string) {}\n}\n\nexport class SetAnonymousConsents {\n  readonly type = SET_ANONYMOUS_CONSENTS;\n  constructor(public payload: AnonymousConsent[]) {}\n}\n\nexport class GiveAnonymousConsent {\n  readonly type = GIVE_ANONYMOUS_CONSENT;\n  constructor(public templateCode: string) {}\n}\n\nexport class WithdrawAnonymousConsent {\n  readonly type = WITHDRAW_ANONYMOUS_CONSENT;\n  constructor(public templateCode: string) {}\n}\n\nexport class ToggleAnonymousConsentsBannerDissmissed {\n  readonly type = TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED;\n  constructor(public dismissed: boolean) {}\n}\n\nexport class ToggleAnonymousConsentTemplatesUpdated {\n  readonly type = TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED;\n  constructor(public updated: boolean) {}\n}\n\nexport class AnonymousConsentCheckUpdatedVersions {\n  readonly type = ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS;\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n\nexport type AnonymousConsentsActions =\n  | LoadAnonymousConsentTemplates\n  | LoadAnonymousConsentTemplatesSuccess\n  | LoadAnonymousConsentTemplatesFail\n  | ResetLoadAnonymousConsentTemplates\n  | GetAllAnonymousConsents\n  | SetAnonymousConsents\n  | GetAnonymousConsent\n  | GiveAnonymousConsent\n  | WithdrawAnonymousConsent\n  | ToggleAnonymousConsentsBannerDissmissed\n  | ToggleAnonymousConsentTemplatesUpdated\n  | AnonymousConsentCheckUpdatedVersions;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consents.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as AnonymousConsentsActions from './anonymous-consents-group';\nexport { AnonymousConsentsActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  AnonymousConsentsState,\n  ANONYMOUS_CONSENTS_STORE_FEATURE,\n  StateWithAnonymousConsents,\n} from '../anonymous-consents-state';\n\nexport const getAnonymousConsentState: MemoizedSelector<\n  StateWithAnonymousConsents,\n  AnonymousConsentsState\n> = createFeatureSelector<AnonymousConsentsState>(\n  ANONYMOUS_CONSENTS_STORE_FEATURE\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithAnonymousConsents } from '../anonymous-consents-state';\nimport { getAnonymousConsentState } from './feature.selector';\n\nexport const getAnonymousConsentTemplatesState: MemoizedSelector<\n  StateWithAnonymousConsents,\n  LoaderState<ConsentTemplate[]>\n> = createSelector(getAnonymousConsentState, (state) => state.templates);\n\nexport const getAnonymousConsentTemplatesValue: MemoizedSelector<\n  StateWithAnonymousConsents,\n  ConsentTemplate[]\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  (state: StateUtils.LoaderState<ConsentTemplate[]>) =>\n    StateUtils.loaderValueSelector(state)\n);\n\nexport const getAnonymousConsentTemplatesLoading: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  StateUtils.loaderLoadingSelector\n);\n\nexport const getAnonymousConsentTemplatesSuccess: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  StateUtils.loaderSuccessSelector\n);\n\nexport const getAnonymousConsentTemplatesError: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  StateUtils.loaderErrorSelector\n);\n\nexport const getAnonymousConsentTemplate = (\n  templateCode: string\n): MemoizedSelector<\n  StateWithAnonymousConsents,\n  ConsentTemplate | undefined\n> => {\n  return createSelector(getAnonymousConsentTemplatesValue, (templates) => {\n    return templates\n      ? templates.find((template) => template.id === templateCode)\n      : undefined;\n  });\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateWithAnonymousConsents } from '../anonymous-consents-state';\nimport { getAnonymousConsentState } from './feature.selector';\n\nexport const getAnonymousConsentTemplatesUpdate: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(getAnonymousConsentState, (state) => state.ui.updated);\n\nexport const getAnonymousConsentsBannerDismissed: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentState,\n  (state) => state.ui.bannerDismissed\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { AnonymousConsent } from '../../../model/consent.model';\nimport { StateWithAnonymousConsents } from '../anonymous-consents-state';\nimport { getAnonymousConsentState } from './feature.selector';\n\nexport const getAnonymousConsents: MemoizedSelector<\n  StateWithAnonymousConsents,\n  AnonymousConsent[]\n> = createSelector(getAnonymousConsentState, (state) => state.consents);\n\nexport const getAnonymousConsentByTemplateCode = (\n  templateCode: string\n): MemoizedSelector<StateWithAnonymousConsents, AnonymousConsent | undefined> =>\n  createSelector(getAnonymousConsents, (consents) =>\n    consents.find((consent) => consent.templateCode === templateCode)\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consent-templates.selectors';\nexport * from './anonymous-consent-ui.selectors';\nexport * from './anonymous-consents.selectors';\nexport * from './feature.selector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as AnonymousConsentsSelectors from './anonymous-consents-group.selectors';\nexport { AnonymousConsentsSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const OCC_USER_ID_CURRENT = 'current';\nexport const OCC_USER_ID_ANONYMOUS = 'anonymous';\nexport const OCC_USER_ID_GUEST = 'guest';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const OCC_CART_ID_CURRENT = 'current';\n\nexport * from './occ-user-ids';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const LOGIN = '[Auth] Login';\nexport const LOGOUT = '[Auth] Logout';\n\nexport class Login implements Action {\n  readonly type = LOGIN;\n}\n\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n}\n\n// action types\nexport type LoginLogoutAction = Login | Logout;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './login-logout.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as AuthActions from './auth-group.actions';\nexport { AuthActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport {\n  OCC_USER_ID_ANONYMOUS,\n  OCC_USER_ID_CURRENT,\n} from '../../../occ/utils/occ-constants';\n\n/**\n * This implementation is OCC specific.\n * Different backend might have completely different need regarding user id.\n * It might not need user id at all and work based on access_token.\n * To implement custom solution provide your own implementation and customize services that use UserIdService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserIdService {\n  private _userId: Observable<string> = new ReplaySubject<string>(1);\n\n  /**\n   * Sets current user id.\n   *\n   * @param userId\n   */\n  public setUserId(userId: string): void {\n    (this._userId as ReplaySubject<string>).next(userId);\n  }\n\n  /**\n   * This function provides the userId the OCC calls should use, depending\n   * on whether there is an active storefront session or not.\n   *\n   * It returns the userId of the current storefront user or 'anonymous'\n   * in the case there are no signed in user in the storefront.\n   *\n   * The user id of a regular customer session is 'current'. In the case of an\n   * asm customer emulation session, the userId will be the customerId.\n   */\n  public getUserId(): Observable<string> {\n    return this._userId;\n  }\n\n  /**\n   * Utility method if you need userId to perform single action (eg. dispatch call to API).\n   *\n   * @param loggedIn Set to true if you want the observable to emit id only for logged in user. Throws in case of anonymous user.\n   *\n   * @returns Observable that emits once and completes with the last userId value.\n   */\n  public takeUserId(loggedIn = false): Observable<string> {\n    return this.getUserId().pipe(\n      take(1),\n      map((userId) => {\n        if (loggedIn && userId === OCC_USER_ID_ANONYMOUS) {\n          throw new Error(\n            'Requested user id for logged user while user is not logged in.'\n          );\n        }\n        return userId;\n      })\n    );\n  }\n\n  /**\n   * Sets user id to the default value for logged out user.\n   */\n  public clearUserId(): void {\n    this.setUserId(OCC_USER_ID_ANONYMOUS);\n  }\n\n  /**\n   * Checks if the userId is of emulated user type.\n   */\n  public isEmulated(): Observable<boolean> {\n    return this.getUserId().pipe(\n      map(\n        (userId) =>\n          userId !== OCC_USER_ID_ANONYMOUS && userId !== OCC_USER_ID_CURRENT\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Supported OAuth flows.\n */\nexport enum OAuthFlow {\n  /**\n   * Flow when username and password is passed to the application and then the application through API fetches tokens from OAuth server.\n   */\n  ResourceOwnerPasswordFlow,\n  /**\n   * Flow with redirect to OAuth server where user inputs credentials and the are redirected back with token.\n   */\n  ImplicitFlow,\n  /**\n   * Similar to Implicit flow, but user is redirected with code that need to later exchange through API for a token.\n   */\n  AuthorizationCode,\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { AuthConfig as LibConfig } from 'angular-oauth2-oidc';\nimport { Config } from '../../../config/config-tokens';\n\n// siletRefreshTimeout - omitted as it is deprecated of typo\n// clientId - we need it for client credentials flow\n// dummyClientSecret - we need it for client credentials flow\n// loginUrl - similarly like the rest of endpoints we want to have full control over that\n// logoutUrl - similarly like the rest of endpoints we want to have full control over that\n// tokenEndpoint - similarly like the rest of endpoints we want to have full control over that\n// revocationEndpoint - similarly like the rest of endpoints we want to have full control over that\n// userinfoEndpoint - similarly like the rest of endpoints we want to have full control over that\n//\nexport type AuthLibConfig = Omit<\n  LibConfig,\n  | 'clientId'\n  | 'dummyClientSecret'\n  | 'siletRefreshTimeout'\n  | 'loginUrl'\n  | 'logoutUrl'\n  | 'tokenEndpoint'\n  | 'revocationEndpoint'\n  | 'userinfoEndpoint'\n>;\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class AuthConfig {\n  authentication?: {\n    /**\n     * OAuth client id.\n     */\n    client_id?: string;\n    /**\n     * Secret for client required by Hybris OAuth.\n     */\n    client_secret?: string;\n    /**\n     * Base url for auth server (for login, token, revoke endpoints).\n     */\n    baseUrl?: string;\n    /**\n     * Endpoint for getting token.\n     */\n    tokenEndpoint?: string;\n    /**\n     * Endpoint url for revoking tokens.\n     */\n    revokeEndpoint?: string;\n    /**\n     * Url for login redirect for Implicit and Authorization Code Flow.\n     */\n    loginUrl?: string;\n    /**\n     * Redirect url after logout.\n     */\n    logoutUrl?: string;\n    /**\n     * Userinfo endpoint.\n     */\n    userinfoEndpoint?: string;\n    /**\n     * Config for angular-oauth-oidc library.\n     */\n    OAuthLibConfig?: AuthLibConfig;\n  };\n}\n\ndeclare module '../../../config/config-tokens' {\n  interface Config extends AuthConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SiteContextConfig {\n  context?: {\n    urlParameters?: string[];\n    [contextName: string]: string[] | undefined;\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends SiteContextConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\nimport { SiteContextConfig } from '../../site-context/config/site-context-config';\nimport { OccEndpoints } from '../occ-models/occ-endpoints.model';\nimport { LoadingScopes } from './loading-scopes-config';\n\nexport interface BackendConfig {\n  occ?: {\n    baseUrl?: string;\n    prefix?: string;\n    /**\n     * Indicates whether or not cross-site Access-Control requests should be made\n     * using credentials such as cookies, authorization headers or TLS client certificates\n     */\n    useWithCredentials?: boolean;\n\n    endpoints?: OccEndpoints;\n  };\n  media?: {\n    /**\n     * Media URLs are typically relative, so that the host can be configured.\n     * Configurable media baseURLs are useful for SEO, multi-site,\n     * switching environments, etc.\n     */\n    baseUrl?: string;\n  };\n  loadingScopes?: LoadingScopes;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class OccConfig extends SiteContextConfig {\n  backend?: BackendConfig;\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends OccConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { OccConfig } from '../../../occ/config/occ-config';\nimport { AuthConfig, AuthLibConfig } from '../config/auth-config';\nimport { OAuthFlow } from '../models/oauth-flow';\n\n/**\n * Utility service on top of the authorization config.\n * Provides handy defaults, when not everything is set in the configuration.\n * Use this service instead of direct configuration.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthConfigService {\n  constructor(\n    protected authConfig: AuthConfig,\n    protected occConfig: OccConfig\n  ) {}\n\n  /**\n   * Utility to make access to authentication config easier.\n   */\n  private get config(): AuthConfig['authentication'] {\n    return this.authConfig?.authentication ?? {};\n  }\n\n  /**\n   * Get client_id\n   *\n   * @return client_id\n   */\n  public getClientId(): string {\n    return this.config?.client_id ?? '';\n  }\n\n  /**\n   * Get client_secret. OAuth server shouldn't require it from web apps (but Hybris OAuth server requires).\n   *\n   * @return client_secret\n   */\n  public getClientSecret(): string {\n    return this.config?.client_secret ?? '';\n  }\n\n  /**\n   * Returns base url of the authorization server\n   */\n  public getBaseUrl(): string {\n    return (\n      this.config?.baseUrl ??\n      (this.occConfig?.backend?.occ?.baseUrl ?? '') + '/authorizationserver'\n    );\n  }\n\n  /**\n   * Returns endpoint for getting the auth token\n   */\n  public getTokenEndpoint(): string {\n    const tokenEndpoint = this.config?.tokenEndpoint ?? '';\n    return this.prefixEndpoint(tokenEndpoint);\n  }\n\n  /**\n   * Returns url for redirect to the authorization server to get token/code\n   */\n  public getLoginUrl(): string {\n    const loginUrl = this.config?.loginUrl ?? '';\n    return this.prefixEndpoint(loginUrl);\n  }\n\n  /**\n   * Returns endpoint for token revocation (both access and refresh token).\n   */\n  public getRevokeEndpoint(): string {\n    const revokeEndpoint = this.config?.revokeEndpoint ?? '';\n    return this.prefixEndpoint(revokeEndpoint);\n  }\n\n  /**\n   * Returns logout url to redirect to on logout.\n   */\n  public getLogoutUrl(): string {\n    const logoutUrl = this.config?.logoutUrl ?? '';\n    return this.prefixEndpoint(logoutUrl);\n  }\n\n  /**\n   * Returns userinfo endpoint of the OAuth server.\n   */\n  public getUserinfoEndpoint(): string {\n    const userinfoEndpoint = this.config?.userinfoEndpoint ?? '';\n    return this.prefixEndpoint(userinfoEndpoint);\n  }\n\n  /**\n   * Returns configuration specific for the angular-oauth2-oidc library.\n   */\n  public getOAuthLibConfig(): AuthLibConfig {\n    return this.config?.OAuthLibConfig ?? {};\n  }\n\n  protected prefixEndpoint(endpoint: string): string {\n    let url = endpoint;\n    if (!url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return `${this.getBaseUrl()}${url}`;\n  }\n\n  /**\n   * Returns the type of the OAuth flow based on auth config.\n   * Use when you have to perform particular action only in some of the OAuth flow scenarios.\n   */\n  public getOAuthFlow(): OAuthFlow {\n    const responseType = this.config?.OAuthLibConfig?.responseType;\n    if (responseType) {\n      const types = responseType.split(' ');\n      if (types.includes('code')) {\n        return OAuthFlow.AuthorizationCode;\n      } else if (types.includes('token')) {\n        return OAuthFlow.ImplicitFlow;\n      } else {\n        return OAuthFlow.ResourceOwnerPasswordFlow;\n      }\n    }\n    return OAuthFlow.ResourceOwnerPasswordFlow;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\n\n/**\n * The url of the server request when running SSR\n * */\nexport const SERVER_REQUEST_URL = new InjectionToken<string>(\n  'SERVER_REQUEST_URL'\n);\n\n/**\n * The url of the server request host when running SSR\n * */\nexport const SERVER_REQUEST_ORIGIN = new InjectionToken<string>(\n  'SERVER_REQUEST_ORIGIN'\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { fromEvent, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, startWith } from 'rxjs/operators';\nimport { SERVER_REQUEST_ORIGIN, SERVER_REQUEST_URL } from '../util/ssr.tokens';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowRef {\n  readonly document: Document;\n\n  constructor(\n    // https://github.com/angular/angular/issues/20351\n    @Inject(DOCUMENT) document: any,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    @Optional() @Inject(SERVER_REQUEST_URL) protected serverUrl?: string,\n    @Optional() @Inject(SERVER_REQUEST_ORIGIN) protected serverOrigin?: string\n  ) {\n    this.document = document as Document;\n  }\n\n  /**\n   * Returns true when invoked in browser context.\n   * Use this method to check if you can access `window` and other browser globals.\n   */\n  isBrowser(): boolean {\n    return isPlatformBrowser(this.platformId);\n  }\n\n  /**\n   * Exposes global `window` object. In SSR when `window` is not available it returns `undefined`.\n   * To detect if you can safely use `nativeWindow` use `isBrowser` to check execution platform.\n   */\n  get nativeWindow(): Window | undefined {\n    // TODO(#11133): Consider throwing in SSR\n    return this.isBrowser() ? window : undefined;\n  }\n\n  /**\n   * Exposes global `sessionStorage` object. In SSR when `sessionStorage` is not available it returns `undefined`.\n   * To detect if you can safely use `sessionStorage` use `isBrowser` to check execution platform.\n   */\n  get sessionStorage(): Storage | undefined {\n    return this.nativeWindow ? this.nativeWindow.sessionStorage : undefined;\n  }\n\n  /**\n   * Exposes global `localStorage` object. In SSR when `localStorage` is not available it returns `undefined`.\n   * To detect if you can safely use `localStorage` use `isBrowser` to check execution platform.\n   */\n  get localStorage(): Storage | undefined {\n    return this.nativeWindow ? this.nativeWindow.localStorage : undefined;\n  }\n\n  /**\n   * Returns the window/document location, unless it's not available (i.e. SSR).\n   *\n   * When there's no access to the location object, we mimic the location partially, by resolving\n   * the request url (`SERVER_REQUEST_URL`) and origin (`SERVER_REQUEST_ORIGIN`) from the injector.\n   * These values are injected in the server implementation so that we can resolve some of the location\n   * values when we do server side rendering.\n   */\n  get location(): Partial<Location> {\n    if (this.isBrowser()) {\n      return this.document.location;\n    } else {\n      if (!this.serverUrl) {\n        throw new Error(\n          'Cannot resolve the href as the SERVER_REQUEST_URL is undefined'\n        );\n      }\n      if (!this.serverOrigin) {\n        throw new Error(\n          'Cannot resolve the origin as the SERVER_REQUEST_ORIGIN is undefined'\n        );\n      }\n      return {\n        href: this.serverUrl,\n        origin: this.serverOrigin,\n      };\n    }\n  }\n\n  /**\n   * Returns an observable for the window resize event and emits an event\n   * every 300ms in case of resizing. An event is simulated initially.\n   *\n   * If there's no window object available (i.e. in SSR), a null value is emitted.\n   */\n  get resize$(): Observable<any> {\n    if (!this.nativeWindow) {\n      return of(null);\n    } else {\n      return fromEvent(this.nativeWindow, 'resize').pipe(\n        debounceTime(300),\n        startWith({ target: this.nativeWindow }),\n        distinctUntilChanged()\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { OAuthEvent, OAuthService, TokenResponse } from 'angular-oauth2-oidc';\nimport { Observable } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { WindowRef } from '../../../window/window-ref';\nimport { OAuthTryLoginResult } from '../models/oauth-try-login-response';\nimport { AuthConfigService } from './auth-config.service';\n\n/**\n * Wrapper service on the library OAuthService. Normalizes the lib API for services.\n * Use this service when you want to access low level OAuth library methods.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OAuthLibWrapperService {\n  events$: Observable<OAuthEvent> = this.oAuthService.events;\n\n  // TODO: Remove platformId dependency in 4.0\n  constructor(\n    protected oAuthService: OAuthService,\n    protected authConfigService: AuthConfigService,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected winRef: WindowRef\n  ) {\n    this.initialize();\n  }\n\n  protected initialize() {\n    const isSSR = !this.winRef.isBrowser();\n    this.oAuthService.configure({\n      tokenEndpoint: this.authConfigService.getTokenEndpoint(),\n      loginUrl: this.authConfigService.getLoginUrl(),\n      clientId: this.authConfigService.getClientId(),\n      dummyClientSecret: this.authConfigService.getClientSecret(),\n      revocationEndpoint: this.authConfigService.getRevokeEndpoint(),\n      logoutUrl: this.authConfigService.getLogoutUrl(),\n      userinfoEndpoint: this.authConfigService.getUserinfoEndpoint(),\n      issuer:\n        this.authConfigService.getOAuthLibConfig()?.issuer ??\n        this.authConfigService.getBaseUrl(),\n      redirectUri:\n        this.authConfigService.getOAuthLibConfig()?.redirectUri ??\n        (!isSSR\n          ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.winRef.nativeWindow!.location.origin\n          : ''),\n      ...this.authConfigService.getOAuthLibConfig(),\n    });\n  }\n\n  /**\n   * Authorize with ResourceOwnerPasswordFlow.\n   *\n   * @param userId\n   * @param password\n   *\n   * @return token response from the lib\n   */\n  authorizeWithPasswordFlow(\n    userId: string,\n    password: string\n  ): Promise<TokenResponse> {\n    return this.oAuthService.fetchTokenUsingPasswordFlow(userId, password);\n  }\n\n  /**\n   * Refresh access_token.\n   */\n  refreshToken(): void {\n    this.oAuthService.refreshToken();\n  }\n\n  /**\n   * Revoke access tokens and clear tokens in lib state.\n   */\n  revokeAndLogout(): Promise<void> {\n    return new Promise((resolve) => {\n      this.oAuthService\n        .revokeTokenAndLogout(true)\n        .catch(() => {\n          // when there would be some kind of error during revocation we can't do anything else, so at least we logout user.\n          this.oAuthService.logOut(true);\n        })\n        .finally(() => {\n          resolve();\n        });\n    });\n  }\n\n  /**\n   * Clear tokens in library state (no revocation).\n   */\n  logout(): void {\n    this.oAuthService.logOut(true);\n  }\n\n  /**\n   * Returns Open Id token. Might be empty, when it was not requested with the `responseType` config.\n   *\n   * @return id token\n   */\n  getIdToken(): string {\n    return this.oAuthService.getIdToken();\n  }\n\n  /**\n   * Initialize Implicit Flow or Authorization Code flows with the redirect to OAuth login url.\n   */\n  initLoginFlow() {\n    return this.oAuthService.initLoginFlow();\n  }\n\n  /**\n   * Tries to login user based on `code` or `token` present in the url.\n   *\n   * @param result The result returned by `OAuthService.tryLogin()`.\n   *\n   * @param tokenReceived Whether the event 'token_received' is emitted during `OAuthService.tryLogin()`.\n   * We can use this identify that we have returned from an external authorization page to Spartacus).\n   * In cases where we don't receive this event, the token has been obtained from storage.\n   */\n  tryLogin(): Promise<OAuthTryLoginResult> {\n    return new Promise((resolve) => {\n      // We use the 'token_received' event to check if we have returned\n      // from the auth server.\n      let tokenReceivedEvent: OAuthEvent | undefined;\n      const subscription = this.events$\n        .pipe(\n          filter((event) => event.type === 'token_received'),\n          take(1)\n        )\n        .subscribe((event) => (tokenReceivedEvent = event));\n\n      this.oAuthService\n        .tryLogin({\n          // We don't load discovery document, because it doesn't contain revoke endpoint information\n          disableOAuth2StateCheck: true,\n        })\n        .then((result: boolean) => {\n          resolve({\n            result: result,\n            tokenReceived: !!tokenReceivedEvent,\n          });\n        })\n        .finally(() => {\n          subscription.unsubscribe();\n        });\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { OAuthStorage } from 'angular-oauth2-oidc';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthToken } from '../models/auth-token.model';\n\n/**\n * Storage service for AuthToken. Used as a storage for angular-oauth2-oidc library.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthStorageService extends OAuthStorage {\n  /**\n   * Extracted keys that are not `JSON.stringify` from reading the angular-oauth2-oidc source code\n   */\n  protected static readonly nonStringifiedOAuthLibKeys = [\n    'PKCE_verifier',\n    'access_token',\n    'refresh_token',\n    'expires_at',\n    'access_token_stored_at',\n    'id_token',\n    'id_token_expires_at',\n    'id_token_stored_at',\n    'session_state',\n    'nonce',\n  ];\n\n  protected _token$: Observable<AuthToken> = new BehaviorSubject<AuthToken>(\n    {} as AuthToken\n  );\n\n  protected decode(key: string, value: any) {\n    if (AuthStorageService.nonStringifiedOAuthLibKeys.includes(key)) {\n      return value;\n    }\n    return JSON.stringify(value);\n  }\n\n  protected encode(key: string, value: any) {\n    if (AuthStorageService.nonStringifiedOAuthLibKeys.includes(key)) {\n      return value;\n    } else {\n      try {\n        return JSON.parse(value);\n      } catch {\n        return value;\n      }\n    }\n  }\n\n  /* Async API for spartacus use */\n\n  /**\n   * Returns complete token (all fields).\n   *\n   * @return observable emitting AuthToken\n   */\n  getToken(): Observable<AuthToken> {\n    return this._token$;\n  }\n\n  /**\n   * Set current value of token.\n   *\n   * @param token\n   */\n  setToken(token: AuthToken): void {\n    (this._token$ as BehaviorSubject<AuthToken>).next(token);\n  }\n\n  /* Sync API for OAuth lib use */\n\n  /**\n   * Get parameter from the token (eg. access_token)\n   *\n   * @param key\n   */\n  getItem(key: string): any {\n    let token;\n    this.getToken()\n      .subscribe((currentToken) => (token = currentToken))\n      .unsubscribe();\n    return this.decode(key, token?.[key]);\n  }\n\n  /**\n   * Removes parameter from the token (eg. access_token)\n   *\n   * @param key\n   */\n  removeItem(key: string): void {\n    const val: any = { ...(this._token$ as BehaviorSubject<AuthToken>).value };\n    delete val[key];\n    (this._token$ as BehaviorSubject<AuthToken>).next({\n      ...val,\n    });\n  }\n\n  /**\n   * Sets parameter of the token (eg. access_token)\n   *\n   * @param key\n   */\n  setItem(key: string, data: any): void {\n    if (key) {\n      (this._token$ as BehaviorSubject<AuthToken>).next({\n        ...(this._token$ as BehaviorSubject<AuthToken>).value,\n        [key]: this.encode(key, data),\n      });\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { PageContext } from '../../../routing/models/page-context.model';\n\nexport const CHANGE_NEXT_PAGE_CONTEXT = '[Router] Change Next PageContext';\n\nexport class ChangeNextPageContext implements Action {\n  readonly type = CHANGE_NEXT_PAGE_CONTEXT;\n  constructor(public payload: PageContext) {}\n}\n\nexport type RoutingAction = ChangeNextPageContext;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './router.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as RoutingActions from './routing-group.actions';\nexport { RoutingActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Params } from '@angular/router';\nimport * as fromNgrxRouter from '@ngrx/router-store';\nimport { PageContext } from '../models/page-context.model';\n\nexport const ROUTING_FEATURE = 'router';\n\nexport interface RouterState\n  extends fromNgrxRouter.RouterReducerState<ActivatedRouterStateSnapshot> {\n  nextState?: ActivatedRouterStateSnapshot;\n}\n\nexport interface ActivatedRouterStateSnapshot {\n  url: string;\n  queryParams: Params;\n  params: Params;\n  context: PageContext;\n  cmsRequired: boolean;\n  semanticRoute?: string;\n}\n\nexport interface State {\n  [ROUTING_FEATURE]: RouterState;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  createFeatureSelector,\n  createSelector,\n  MemoizedSelector,\n} from '@ngrx/store';\nimport { PageContext } from '../../models/page-context.model';\nimport { RouterState, ROUTING_FEATURE, State } from '../routing-state';\n\nexport const getRouterFeatureState: MemoizedSelector<any, State> =\n  createFeatureSelector<State>(ROUTING_FEATURE);\n\nexport const getRouterState: MemoizedSelector<any, RouterState> =\n  createSelector(getRouterFeatureState, (state) => state.router);\n\nexport const getSemanticRoute: MemoizedSelector<any, string> = createSelector(\n  getRouterState,\n  (routingState: RouterState) =>\n    (routingState.state && routingState.state.semanticRoute) || ''\n);\n\nexport const getPageContext: MemoizedSelector<any, PageContext> =\n  createSelector(\n    getRouterState,\n    (routingState: RouterState) =>\n      (routingState.state && routingState.state.context) || { id: '' }\n  );\n\nexport const getNextPageContext: MemoizedSelector<\n  any,\n  PageContext | undefined\n> = createSelector(\n  getRouterState,\n  (routingState: RouterState) =>\n    routingState.nextState && routingState.nextState.context\n);\n\nexport const isNavigating: MemoizedSelector<any, boolean> = createSelector(\n  getNextPageContext,\n  (context) => !!context\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './routing.selector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as RoutingSelector from './routing-group.selectors';\nexport { RoutingSelector };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const isParam = (segment: string): boolean => segment.startsWith(':');\n\nexport const getParamName = (segment: string): string => segment.slice(1); // it just removes leading ':'\n\nexport const ensureLeadingSlash = (path: string): string =>\n  path.startsWith('/') ? path : '/' + path;\n\nexport const removeLeadingSlash = (path: string): string =>\n  path.startsWith('/') ? path.slice(1) : path;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../../config/config-tokens';\nimport { RoutesConfig } from '../routes-config';\n\nexport const enum RouteLoadStrategy {\n  /**\n   * Don't reload the data on navigation if it was loaded before\n   */\n  ONCE = 'once',\n  /**\n   * Always reload the data on navigation\n   */\n  ALWAYS = 'always',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class RoutingConfig {\n  routing?: RoutingConfigDefinition;\n}\n\nexport interface RoutingConfigDefinition {\n  /**\n   * Configuration of semantic routes. Key is route's name. Value is the config specific to this route.\n   */\n  routes?: RoutesConfig;\n\n  /**\n   * When true, it closes the storefront for unauthorized users, except from routes that have individual config flag `protected: false`\n   */\n  protected?: boolean;\n\n  /**\n   * Global load strategy which is used as a fallback for loading data on each navigation\n   */\n  loadStrategy?: RouteLoadStrategy;\n}\n\ndeclare module '../../../config/config-tokens' {\n  interface Config extends RoutingConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport { RouteLoadStrategy, RoutingConfig } from './config/routing-config';\nimport { RouteConfig } from './routes-config';\n\n@Injectable({ providedIn: 'root' })\nexport class RoutingConfigService {\n  /**\n   * Reversed routing config for quick lookup of the route name by the configured path.\n   */\n  protected routeNamesByPath: { [path: string]: string };\n\n  constructor(protected config: RoutingConfig) {}\n\n  /**\n   * Returns the route config for the given route name.\n   */\n  getRouteConfig(routeName: string): RouteConfig | undefined {\n    const routeConfig = this.config?.routing?.routes;\n\n    const result = routeConfig && routeConfig[routeName];\n    if (!routeConfig || result === undefined) {\n      this.warn(`No path was configured for the named route '${routeName}'!`);\n    }\n    return result;\n  }\n\n  private warn(...args: string[]): void {\n    if (isDevMode()) {\n      console.warn(...args);\n    }\n  }\n\n  /**\n   * Returns the configured route loading strategy.\n   */\n  getLoadStrategy(): RouteLoadStrategy {\n    return this.config?.routing?.loadStrategy ?? RouteLoadStrategy.ALWAYS;\n  }\n\n  /**\n   * Returns the route name of the configured path.\n   *\n   * For example, when the config is:\n   * ```\n   * routing: {\n   *   routes: {\n   *      addressBook: { paths: ['my-account/address-book'] }\n   *   }\n   * }\n   * ```\n   *\n   * the `getRouteName('my-account/address-book')` returns `'addressBook'`.\n   */\n  getRouteName(path: string): string {\n    if (!this.routeNamesByPath) {\n      this.initRouteNamesByPath();\n    }\n    return this.routeNamesByPath[path];\n  }\n\n  /**\n   * Initializes the property `routeNamesByPath`.\n   *\n   * The original config allows for reading configured path by the route name.\n   * But this method builds up a structure with a 'reversed config'\n   * to read quickly the route name by the path.\n   */\n  protected initRouteNamesByPath(): void {\n    this.routeNamesByPath = {};\n\n    for (const [routeName, routeConfig] of Object.entries(\n      this.config?.routing?.routes ?? {}\n    )) {\n      routeConfig?.paths?.forEach((path) => {\n        if (isDevMode() && this.routeNamesByPath[path]) {\n          console.error(\n            `The same path '${path}' is configured for two different route names: '${this.routeNamesByPath[path]}' and '${routeName}`\n          );\n        }\n        this.routeNamesByPath[path] = routeName;\n      });\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PRIMARY_OUTLET, Router, UrlSegmentGroup } from '@angular/router';\nimport { isParam } from './path-utils';\n\n@Injectable({ providedIn: 'root' })\nexport class UrlParsingService {\n  constructor(private router: Router) {}\n\n  getPrimarySegments(url: string): string[] {\n    const urlTree = this.router.parseUrl(url);\n    return this._getPrimarySegmentsFromUrlTree(urlTree.root);\n  }\n\n  private _getPrimarySegmentsFromUrlTree(tree: UrlSegmentGroup): string[] {\n    const segments = tree.segments.map((s) => s.path);\n    const childrenSegments = tree.children[PRIMARY_OUTLET]\n      ? this._getPrimarySegmentsFromUrlTree(tree.children[PRIMARY_OUTLET])\n      : [];\n    return segments.concat(childrenSegments);\n  }\n\n  /**\n   * Tells whether the given url matches the given path.\n   *\n   * @param urlSegments   string or array of url segments. When it's a string, the preceding\n   *                      site-context params are ignored (i.e. '/electronics-spa/en/USD/...')\n   *\n   * @param pathSegments  string or array of path segments. Dynamic params are allowed in the\n   *                      path shape, i.e. `/url/:param1/with/:param2`.\n   */\n  matchPath(\n    urlSegments: string | string[],\n    pathSegments: string | string[]\n  ): boolean {\n    urlSegments = Array.isArray(urlSegments)\n      ? urlSegments\n      : this.getPrimarySegments(urlSegments);\n\n    pathSegments = Array.isArray(pathSegments)\n      ? pathSegments\n      : this.getPrimarySegments(pathSegments);\n\n    if (urlSegments.length !== pathSegments.length) {\n      return false;\n    }\n\n    for (let i = 0; i < pathSegments.length; i++) {\n      const pathSeg = pathSegments[i];\n      const urlSeg = urlSegments[i];\n\n      // compare only static segments:\n      if (!isParam(pathSeg) && pathSeg !== urlSeg) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ParamsMapping, RouteConfig } from '../routes-config';\nimport { RoutingConfigService } from '../routing-config.service';\nimport { getParamName, isParam } from './path-utils';\nimport { UrlCommand, UrlCommandRoute, UrlCommands } from './url-command';\nimport { UrlParsingService } from './url-parsing.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SemanticPathService {\n  readonly ROOT_URL = ['/'];\n\n  constructor(\n    protected routingConfigService: RoutingConfigService,\n    protected urlParser: UrlParsingService\n  ) {}\n\n  /**\n   * Returns the first path alias configured for a given route name. It adds `/` at the beginning.\n   */\n  get(routeName: string): string | undefined {\n    const routeConfig = this.routingConfigService.getRouteConfig(routeName);\n    return routeConfig && Array.isArray(routeConfig.paths)\n      ? '/' + routeConfig.paths[0]\n      : undefined;\n  }\n\n  /**\n   * Transforms the array of url commands. Each command can be:\n   * a) string - will be left untouched\n   * b) object { cxRoute: <route name> } - will be replaced with semantic path\n   * c) object { cxRoute: <route name>, params: { ... } } - same as above, but with passed params\n   *\n   * If the first command is the object with the `cxRoute` property, returns an absolute url (with the first element of the array `'/'`)\n   */\n  transform(commands: UrlCommands): any[] {\n    if (!Array.isArray(commands)) {\n      commands = [commands];\n    }\n\n    const result: (string | undefined)[] = [];\n    for (const command of commands) {\n      if (!this.isRouteCommand(command)) {\n        // don't modify segment that is not route command:\n        result.push(command);\n      } else {\n        // generate array with url segments for given route command:\n        const partialResult = this.generateUrlPart(command);\n\n        if (partialResult === null) {\n          return this.ROOT_URL;\n        }\n\n        result.push(...partialResult);\n      }\n    }\n\n    if (this.shouldOutputAbsolute(commands)) {\n      result.unshift('/');\n    }\n\n    return result;\n  }\n\n  private isRouteCommand(command: UrlCommand): boolean {\n    return command && Boolean(command.cxRoute);\n  }\n\n  private shouldOutputAbsolute(commands: UrlCommands): boolean {\n    return this.isRouteCommand(commands[0]);\n  }\n\n  private generateUrlPart(\n    command: UrlCommandRoute\n  ): (string | undefined)[] | null {\n    this.standarizeRouteCommand(command);\n\n    if (!command.cxRoute) {\n      return null;\n    }\n\n    const routeConfig = this.routingConfigService.getRouteConfig(\n      command.cxRoute\n    );\n\n    // if no route translation was configured, return null:\n    if (!routeConfig || !routeConfig.paths) {\n      return null;\n    }\n\n    // find first path that can satisfy it's parameters with given parameters\n    const path = this.findPathWithFillableParams(routeConfig, command.params);\n\n    // if there is no configured path that can be satisfied with given params, return null\n    if (!path) {\n      return null;\n    }\n\n    const result = this.provideParamsValues(\n      path,\n      command.params,\n      routeConfig.paramsMapping\n    );\n\n    return result;\n  }\n\n  private standarizeRouteCommand(command: UrlCommandRoute): void {\n    command.params = command.params || {};\n  }\n\n  private provideParamsValues(\n    path: string,\n    params?: object,\n    paramsMapping?: ParamsMapping\n  ): (string | undefined)[] {\n    return this.urlParser.getPrimarySegments(path).map((segment) => {\n      if (isParam(segment)) {\n        const paramName = getParamName(segment);\n        const mappedParamName = this.getMappedParamName(\n          paramName,\n          paramsMapping\n        );\n        return params?.[mappedParamName as keyof object];\n      }\n      return segment;\n    });\n  }\n\n  private findPathWithFillableParams(\n    routeConfig: RouteConfig,\n    params?: object\n  ): string | null {\n    const foundPath = routeConfig.paths?.find((path) =>\n      this.getParams(path).every((paramName) => {\n        const mappedParamName = this.getMappedParamName(\n          paramName,\n          routeConfig.paramsMapping\n        );\n\n        return params?.[mappedParamName as keyof object] !== undefined;\n      })\n    );\n\n    if (foundPath === undefined || foundPath === null) {\n      return null;\n    }\n    return foundPath;\n  }\n\n  private getParams(path: string) {\n    return this.urlParser\n      .getPrimarySegments(path)\n      .filter(isParam)\n      .map(getParamName);\n  }\n\n  private getMappedParamName(\n    paramName: string,\n    paramsMapping?: object\n  ): string {\n    if (paramsMapping) {\n      return paramsMapping[paramName as keyof object] || paramName;\n    }\n    return paramName;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, NavigationEnd, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map, shareReplay, startWith } from 'rxjs/operators';\n\n/**\n * Helper service to expose all activated routes\n */\n@Injectable({ providedIn: 'root' })\nexport class ActivatedRoutesService {\n  constructor(protected router: Router) {}\n\n  /**\n   * Array of currently activated routes (from the root route to the leaf route).\n   */\n  readonly routes$: Observable<ActivatedRouteSnapshot[]> =\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd),\n      // eslint-disable-next-line import/no-deprecated\n      startWith(undefined), // emit value for consumer who subscribed lately after NavigationEnd event\n      map(() => {\n        let route: ActivatedRouteSnapshot | null =\n          this.router.routerState.snapshot.root;\n        const routes: ActivatedRouteSnapshot[] = [route];\n\n        // traverse to the leaf route:\n        while ((route = route.firstChild)) {\n          routes.push(route);\n        }\n\n        return routes;\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ActivatedRoutesService } from '../services/activated-routes.service';\n\n/**\n * Service to expose all parameters for the router, including child routes.\n * This is convenient in case the parent route (component) requires awareness\n * of child routes parameters.\n */\n@Injectable({ providedIn: 'root' })\nexport class RoutingParamsService {\n  protected readonly params$: Observable<{\n    [key: string]: string;\n  }> = this.activatedRoutesService.routes$.pipe(\n    map((routes) => this.findAllParam(routes)),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  constructor(\n    protected router: Router,\n    protected activatedRoutesService: ActivatedRoutesService\n  ) {}\n\n  /**\n   * Get the list of all parameters of the full route. This includes\n   * active child routes.\n   */\n  getParams(): Observable<{ [key: string]: string }> {\n    return this.params$;\n  }\n\n  protected findAllParam(routes: ActivatedRouteSnapshot[]): {\n    [key: string]: string;\n  } {\n    return Object.assign({}, ...routes.map((route) => route.params));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport {\n  NavigationBehaviorOptions,\n  NavigationExtras,\n  Router,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { WindowRef } from '../../window/window-ref';\nimport { SemanticPathService } from '../configurable-routes/url-translation/semantic-path.service';\nimport { UrlCommands } from '../configurable-routes/url-translation/url-command';\nimport { PageContext } from '../models/page-context.model';\nimport { RoutingActions } from '../store/actions/index';\nimport { RouterState } from '../store/routing-state';\nimport { RoutingSelector } from '../store/selectors/index';\nimport { RoutingParamsService } from './routing-params.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoutingService {\n  constructor(\n    protected store: Store<RouterState>,\n    protected winRef: WindowRef,\n    protected semanticPathService: SemanticPathService,\n    protected routingParamsService: RoutingParamsService,\n    protected router: Router,\n    protected location: Location\n  ) {}\n\n  /**\n   * Get the list of all parameters of the full route. This includes\n   * active child routes.\n   */\n  getParams(): Observable<{ [key: string]: string }> {\n    return this.routingParamsService.getParams();\n  }\n\n  /**\n   * Get the current router state\n   */\n  getRouterState(): Observable<RouterState> {\n    return this.store.pipe(select(RoutingSelector.getRouterState));\n  }\n\n  /**\n   * Get the `PageContext` from the state\n   */\n  getPageContext(): Observable<PageContext> {\n    return this.store.pipe(select(RoutingSelector.getPageContext));\n  }\n\n  /**\n   * Get the next `PageContext` from the state\n   */\n  getNextPageContext(): Observable<PageContext | undefined> {\n    return this.store.pipe(select(RoutingSelector.getNextPageContext));\n  }\n\n  /**\n   * Allow to change next page context for the ongoing navigation\n   *\n   * @param pageContext\n   */\n  changeNextPageContext(pageContext: PageContext) {\n    this.store.dispatch(new RoutingActions.ChangeNextPageContext(pageContext));\n  }\n\n  /**\n   * Get the `isNavigating` info from the state\n   */\n  isNavigating(): Observable<boolean> {\n    return this.store.pipe(select(RoutingSelector.isNavigating));\n  }\n\n  /**\n   * Navigation with a new state into history\n   * @param commands: url commands\n   * @param extras: Represents the extra options used during navigation.\n   *\n   * @returns Promise that resolves to `true` when navigation succeeds,\n   *          to `false` when navigation fails, or is rejected on error.\n   */\n  go(commands: UrlCommands, extras?: NavigationExtras): Promise<boolean> {\n    const path = this.semanticPathService.transform(commands);\n    return this.navigate(path, extras);\n  }\n\n  /**\n   * Resolves the relative url for the given `UrlCommands` and `NavigationExtras`.\n   *\n   * The absolute url can be resolved using `getFullUrl()`.\n   */\n  getUrl(commands: UrlCommands, extras?: NavigationExtras): string {\n    let url = this.router.serializeUrl(\n      this.router.createUrlTree(\n        this.semanticPathService.transform(commands),\n        extras\n      )\n    );\n    if (!url.startsWith('/')) {\n      url = `/${url}`;\n    }\n    return url;\n  }\n\n  /**\n   * Returns the absolute url for the given `UrlCommands` and `NavigationExtras`.\n   *\n   * The absolute url uses the origin of the current location.\n   */\n  getFullUrl(commands: UrlCommands, extras?: NavigationExtras) {\n    return `${this.winRef.document.location.origin}${this.getUrl(\n      commands,\n      extras\n    )}`;\n  }\n\n  /**\n   * Navigation using absolute route path\n   * @param url\n   * @param extras: Represents the extra options used during navigation.\n   *\n   * @returns Promise that resolves to `true` when navigation succeeds,\n   *          to `false` when navigation fails, or is rejected on error.\n   */\n  goByUrl(url: string, extras?: NavigationBehaviorOptions): Promise<boolean> {\n    return this.router.navigateByUrl(url, extras);\n  }\n\n  /**\n   * Navigating back\n   */\n  back(): void {\n    const isLastPageInApp =\n      this.winRef.nativeWindow &&\n      this.winRef.document.referrer.includes(\n        this.winRef.nativeWindow.location.origin\n      );\n    if (isLastPageInApp) {\n      this.location.back();\n      return;\n    }\n    this.go(['/']);\n    return;\n  }\n\n  /**\n   * Navigating forward\n   */\n  forward(): void {\n    this.location.forward();\n  }\n\n  /**\n   * Navigation with a new state into history\n   * @param path\n   * @param extras: Represents the extra options used during navigation.\n   *\n   * @returns Promise that resolves to `true` when navigation succeeds,\n   *          to `false` when navigation fails, or is rejected on error.\n   */\n  protected navigate(path: any[], extras?: NavigationExtras): Promise<boolean> {\n    return this.router.navigate(path, extras);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Service serves storage role for AuthRedirectService.\n * Used by AuthStatePersistenceService to store redirect url for OAuth flows that rely on redirects.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRedirectStorageService {\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  private redirectUrl$: Observable<string | undefined> = new BehaviorSubject<\n    string | undefined\n  >(undefined);\n\n  /**\n   * Get redirect url after logging in.\n   *\n   * @returns observable with the redirect url as string\n   */\n  getRedirectUrl(): Observable<string | undefined> {\n    return this.redirectUrl$;\n  }\n\n  /**\n   * Set url to redirect to after login.\n   *\n   * @param redirectUrl\n   */\n  setRedirectUrl(redirectUrl: string | undefined): void {\n    (this.redirectUrl$ as BehaviorSubject<string | undefined>).next(\n      redirectUrl\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { RoutingConfig } from '../../../routing/configurable-routes/config/routing-config';\nimport { UrlParsingService } from '../../../routing/configurable-routes/url-translation/url-parsing.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthFlowRoutesService {\n  constructor(\n    protected config: RoutingConfig,\n    protected urlParsingService: UrlParsingService\n  ) {}\n\n  protected _authFlowPaths: string[];\n\n  /**\n   * List of paths that are part user auth flow\n   */\n  protected get authFlowPaths(): string[] {\n    if (!this._authFlowPaths) {\n      // extract from the routing config the paths that are part of the user auth flow\n      this._authFlowPaths = Object.values(\n        this.config?.routing?.routes || {}\n      ).reduce(\n        (acc, routeConfig) =>\n          routeConfig.authFlow === true && routeConfig.paths?.length\n            ? acc.concat(routeConfig?.paths)\n            : acc,\n        [] as string[]\n      );\n    }\n    return this._authFlowPaths;\n  }\n\n  /**\n   * Tells whether the given URL is a part of the user auth flow\n   */\n  isAuthFlow(url: string) {\n    return this.authFlowPaths.some((path) =>\n      this.urlParsingService.matchPath(url, path)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { RoutingService } from '../../../routing/facade/routing.service';\nimport { AuthFlowRoutesService } from './auth-flow-routes.service';\nimport { AuthRedirectStorageService } from './auth-redirect-storage.service';\n\n/**\n * Responsible for saving last accessed page (or attempted) before login and for redirecting to that page after login.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRedirectService implements OnDestroy {\n  /**\n   * This service is responsible for remembering the last page before the authentication. \"The last page\" can be:\n   * 1. Just the previously opened page; or\n   * 2. The page that we just tried to open, but AuthGuard cancelled it\n   *\n   * Then, after successful authentication it allows for redirecting to that remembered page via the `redirect()` method.\n   *\n   * For example:\n   * 1. The user opens the product page, then clicks /login link and signs in\n   *    -> Then we should redirect to the product page; or\n   * 2. The user opens the product page, then he clicks /my-account link,\n   *    but is automatically redirected to the login page by the AuthGuard, and he signs in\n   *    -> Then we should redirect to the my-account page, not the product page\n   */\n  constructor(\n    protected routing: RoutingService,\n    protected router: Router,\n    protected authRedirectStorageService: AuthRedirectStorageService,\n    protected authFlowRoutesService: AuthFlowRoutesService\n  ) {\n    this.init();\n  }\n\n  protected subscription: Subscription;\n\n  protected init() {\n    this.subscription = this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.setRedirectUrl(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /**\n   * Redirect to saved url (homepage if nothing is saved).\n   */\n  redirect() {\n    this.authRedirectStorageService\n      .getRedirectUrl()\n      .pipe(take(1))\n      .subscribe((redirectUrl) => {\n        if (redirectUrl === undefined) {\n          this.routing.go('/');\n        } else {\n          this.routing.goByUrl(redirectUrl);\n        }\n        this.clearRedirectUrl();\n      });\n  }\n\n  /**\n   * Saves the url of the current navigation as the redirect url, unless\n   * the url is a part of the user login flow.\n   */\n  saveCurrentNavigationUrl(): void {\n    const navigation = this.router.getCurrentNavigation();\n    if (!navigation?.finalUrl) {\n      return;\n    }\n\n    const url = this.router.serializeUrl(navigation.finalUrl);\n    this.setRedirectUrl(url);\n  }\n\n  /**\n   * Save the url as the redirect url, unless it's a part of the user login flow.\n   */\n  setRedirectUrl(url: string): void {\n    if (!this.authFlowRoutesService.isAuthFlow(url)) {\n      this.authRedirectStorageService.setRedirectUrl(url);\n    }\n  }\n\n  /**\n   * Sets the redirect URL to undefined.\n   */\n  protected clearRedirectUrl(): void {\n    this.authRedirectStorageService.setRedirectUrl(undefined);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function isNotUndefined<T>(value: T | undefined): value is T {\n  return typeof value !== 'undefined';\n}\n\nexport function isNotNullable<T>(value: T): value is NonNullable<T> {\n  return isNotUndefined(value) && value !== null;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SiteContextConfig } from './site-context-config';\n\n/**\n * Helper function for safely getting context parameter config\n *\n * @param config\n * @param parameter\n */\nexport function getContextParameterValues(\n  config: SiteContextConfig,\n  parameter: string\n): string[] {\n  return (config.context && config.context[parameter]) || [];\n}\n\n/**\n * Helper function for calculating default value for context parameter from config\n *\n * @param config\n * @param parameter\n */\nexport function getContextParameterDefault(\n  config: SiteContextConfig,\n  parameter: string\n): string | undefined {\n  const param = getContextParameterValues(config, parameter);\n  return param && param.length ? param[0] : undefined;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const LANGUAGE_CONTEXT_ID = 'language';\nexport const CURRENCY_CONTEXT_ID = 'currency';\nexport const BASE_SITE_CONTEXT_ID = 'baseSite';\nexport const THEME_CONTEXT_ID = 'theme';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { BaseSite } from '../../../model/misc.model';\n\nexport const LOAD_BASE_SITE = '[Site-context] Load BaseSite';\nexport const LOAD_BASE_SITE_FAIL = '[Site-context] Load BaseSite Fail';\nexport const LOAD_BASE_SITE_SUCCESS = '[Site-context] Load BaseSite Success';\n\nexport const LOAD_BASE_SITES = '[Site-context] Load BaseSites';\nexport const LOAD_BASE_SITES_FAIL = '[Site-context] Load BaseSites Fail';\nexport const LOAD_BASE_SITES_SUCCESS = '[Site-context] Load BaseSites Success';\n\nexport const SET_ACTIVE_BASE_SITE = '[Site-context] Set Active BaseSite';\nexport const BASE_SITE_CHANGE = '[Site-context] BaseSite Change';\n\nexport class LoadBaseSite implements Action {\n  readonly type = LOAD_BASE_SITE;\n}\n\nexport class LoadBaseSiteFail implements Action {\n  readonly type = LOAD_BASE_SITE_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadBaseSiteSuccess implements Action {\n  readonly type = LOAD_BASE_SITE_SUCCESS;\n  constructor(public payload: BaseSite) {}\n}\n\nexport class LoadBaseSites implements Action {\n  readonly type = LOAD_BASE_SITES;\n}\n\nexport class LoadBaseSitesFail implements Action {\n  readonly type = LOAD_BASE_SITES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadBaseSitesSuccess implements Action {\n  readonly type = LOAD_BASE_SITES_SUCCESS;\n  constructor(public payload: BaseSite[]) {}\n}\n\nexport class SetActiveBaseSite implements Action {\n  readonly type = SET_ACTIVE_BASE_SITE;\n  constructor(public payload: string) {}\n}\n\nexport class BaseSiteChange implements Action {\n  readonly type = BASE_SITE_CHANGE;\n}\n\n// action types\nexport type BaseSiteAction =\n  | LoadBaseSite\n  | LoadBaseSiteFail\n  | LoadBaseSiteSuccess\n  | LoadBaseSites\n  | LoadBaseSitesFail\n  | LoadBaseSitesSuccess\n  | SetActiveBaseSite\n  | BaseSiteChange;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { Currency } from '../../../model/misc.model';\n\nexport const LOAD_CURRENCIES = '[Site-context] Load Currencies';\nexport const LOAD_CURRENCIES_FAIL = '[Site-context] Load Currencies Fail';\nexport const LOAD_CURRENCIES_SUCCESS = '[Site-context] Load Currencies Success';\nexport const SET_ACTIVE_CURRENCY = '[Site-context] Set Active Currency';\nexport const CURRENCY_CHANGE = '[Site-context] Currency Change';\n\nexport class LoadCurrencies implements Action {\n  readonly type = LOAD_CURRENCIES;\n}\n\nexport class LoadCurrenciesFail implements Action {\n  readonly type = LOAD_CURRENCIES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadCurrenciesSuccess implements Action {\n  readonly type = LOAD_CURRENCIES_SUCCESS;\n  constructor(public payload: Currency[]) {}\n}\n\nexport class SetActiveCurrency implements Action {\n  readonly type = SET_ACTIVE_CURRENCY;\n  constructor(public payload: string) {}\n}\n\nexport class CurrencyChange implements Action {\n  readonly type = CURRENCY_CHANGE;\n  constructor(\n    public payload: { previous: string | null; current: string | null }\n  ) {}\n}\n\n// action types\nexport type CurrenciesAction =\n  | LoadCurrencies\n  | LoadCurrenciesFail\n  | LoadCurrenciesSuccess\n  | SetActiveCurrency\n  | CurrencyChange;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { Language } from '../../../model/misc.model';\n\nexport const LOAD_LANGUAGES = '[Site-context] Load Languages';\nexport const LOAD_LANGUAGES_FAIL = '[Site-context] Load Languages Fail';\nexport const LOAD_LANGUAGES_SUCCESS = '[Site-context] Load Languages Success';\nexport const SET_ACTIVE_LANGUAGE = '[Site-context] Set Active Language';\nexport const LANGUAGE_CHANGE = '[Site-context] Language Change';\n\nexport class LoadLanguages implements Action {\n  readonly type = LOAD_LANGUAGES;\n}\n\nexport class LoadLanguagesFail implements Action {\n  readonly type = LOAD_LANGUAGES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadLanguagesSuccess implements Action {\n  readonly type = LOAD_LANGUAGES_SUCCESS;\n  constructor(public payload: Language[]) {}\n}\n\nexport class SetActiveLanguage implements Action {\n  readonly type = SET_ACTIVE_LANGUAGE;\n  constructor(public payload: string) {}\n}\n\nexport class LanguageChange implements Action {\n  readonly type = LANGUAGE_CHANGE;\n  constructor(\n    public payload: { previous: string | null; current: string | null }\n  ) {}\n}\n\n// action types\nexport type LanguagesAction =\n  | LoadLanguages\n  | LoadLanguagesFail\n  | LoadLanguagesSuccess\n  | SetActiveLanguage\n  | LanguageChange;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './base-site.action';\nexport * from './currencies.action';\nexport * from './languages.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as SiteContextActions from './site-context-group.actions';\nexport { SiteContextActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BaseSite, Currency, Language } from '../../model/misc.model';\nexport const SITE_CONTEXT_FEATURE = 'siteContext';\n\nexport interface StateWithSiteContext {\n  [SITE_CONTEXT_FEATURE]: SiteContextState;\n}\n\nexport interface SiteContextState {\n  languages: LanguagesState;\n  currencies: CurrenciesState;\n  baseSite: BaseSiteState;\n}\n\nexport interface CurrencyEntities {\n  [isocode: string]: Currency;\n}\n\nexport interface CurrenciesState {\n  entities: CurrencyEntities | null;\n  activeCurrency: string | null;\n}\nexport interface LanguagesEntities {\n  [isocode: string]: Language;\n}\n\nexport interface LanguagesState {\n  entities: LanguagesEntities | null;\n  activeLanguage: string | null;\n}\n\nexport interface BaseSiteState {\n  entities: BaseSiteEntities | null;\n  activeSite: string;\n  details: BaseSite;\n}\n\nexport interface BaseSiteEntities {\n  [uid: string]: BaseSite;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  SiteContextState,\n  SITE_CONTEXT_FEATURE,\n  StateWithSiteContext,\n} from '../state';\n\nexport const getSiteContextState: MemoizedSelector<\n  StateWithSiteContext,\n  SiteContextState\n> = createFeatureSelector<SiteContextState>(SITE_CONTEXT_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { BaseSite } from '../../../model/misc.model';\nimport {\n  BaseSiteEntities,\n  BaseSiteState,\n  SiteContextState,\n  StateWithSiteContext,\n} from '../state';\nimport { getSiteContextState } from './site-context.selector';\n\nconst sitesEntitiesSelector = (state: BaseSiteState) => state.entities;\n\nexport const getBaseSiteState: MemoizedSelector<\n  StateWithSiteContext,\n  BaseSiteState\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) => state.baseSite\n);\n\nexport const getActiveBaseSite: MemoizedSelector<StateWithSiteContext, string> =\n  createSelector(\n    getSiteContextState,\n    (state: SiteContextState) =>\n      state && state.baseSite && state.baseSite.activeSite\n  );\n\nexport const getBaseSiteData: MemoizedSelector<StateWithSiteContext, BaseSite> =\n  createSelector(\n    getSiteContextState,\n    (state: SiteContextState) =>\n      state && state.baseSite && state.baseSite.details\n  );\n\nexport const getBaseSitesEntities: MemoizedSelector<\n  StateWithSiteContext,\n  BaseSiteEntities | null\n> = createSelector(getBaseSiteState, sitesEntitiesSelector);\n\nexport const getAllBaseSites: MemoizedSelector<\n  StateWithSiteContext,\n  BaseSite[] | null\n> = createSelector(getBaseSitesEntities, (entities) => {\n  return entities ? Object.keys(entities).map((uid) => entities[uid]) : null;\n});\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Currency } from '../../../model/misc.model';\nimport {\n  CurrenciesState,\n  CurrencyEntities,\n  SiteContextState,\n  StateWithSiteContext,\n} from '../state';\nimport { getSiteContextState } from './site-context.selector';\n\nconst currenciesEntitiesSelector = (state: CurrenciesState) => state.entities;\nconst activeCurrencySelector = (state: CurrenciesState) => state.activeCurrency;\n\nexport const getCurrenciesState: MemoizedSelector<\n  StateWithSiteContext,\n  CurrenciesState\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) => state.currencies\n);\n\nexport const getCurrenciesEntities: MemoizedSelector<\n  StateWithSiteContext,\n  CurrencyEntities | null\n> = createSelector(getCurrenciesState, currenciesEntitiesSelector);\n\nexport const getActiveCurrency: MemoizedSelector<\n  StateWithSiteContext,\n  string | null\n> = createSelector(getCurrenciesState, activeCurrencySelector);\n\nexport const getAllCurrencies: MemoizedSelector<\n  StateWithSiteContext,\n  Currency[] | null\n> = createSelector(getCurrenciesEntities, (entities) => {\n  return entities\n    ? Object.keys(entities).map((isocode) => entities[isocode])\n    : null;\n});\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Language } from '../../../model/misc.model';\nimport {\n  LanguagesEntities,\n  LanguagesState,\n  SiteContextState,\n  StateWithSiteContext,\n} from '../state';\nimport { getSiteContextState } from './site-context.selector';\n\nconst activeLanguageSelector = (state: LanguagesState) => state.activeLanguage;\nconst languagesEntitiesSelector = (state: LanguagesState) => state.entities;\n\nexport const getLanguagesState: MemoizedSelector<\n  StateWithSiteContext,\n  LanguagesState\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) => state.languages\n);\n\nexport const getLanguagesEntities: MemoizedSelector<\n  StateWithSiteContext,\n  LanguagesEntities | null\n> = createSelector(getLanguagesState, languagesEntitiesSelector);\n\nexport const getActiveLanguage: MemoizedSelector<\n  StateWithSiteContext,\n  string | null\n> = createSelector(getLanguagesState, activeLanguageSelector);\n\nexport const getAllLanguages: MemoizedSelector<\n  StateWithSiteContext,\n  Language[] | null\n> = createSelector(getLanguagesEntities, (entities) => {\n  return entities\n    ? Object.keys(entities).map((isocode) => entities[isocode])\n    : null;\n});\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './base-site.selectors';\nexport * from './currencies.selectors';\nexport * from './languages.selectors';\nexport * from './site-context.selector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as SiteContextSelectors from './site-context-group.selectors';\nexport { SiteContextSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take, tap } from 'rxjs/operators';\nimport { BaseSite } from '../../model/misc.model';\nimport { isNotNullable } from '../../util/type-guards';\nimport { getContextParameterValues } from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { BASE_SITE_CONTEXT_ID } from '../providers/context-ids';\nimport { SiteContextActions } from '../store/actions/index';\nimport { SiteContextSelectors } from '../store/selectors/index';\nimport { StateWithSiteContext } from '../store/state';\nimport { SiteContext } from './site-context.interface';\n\n@Injectable()\nexport class BaseSiteService implements SiteContext<BaseSite> {\n  constructor(\n    protected store: Store<StateWithSiteContext>,\n    protected config: SiteContextConfig\n  ) {}\n\n  /**\n   * Represents the current baseSite uid.\n   */\n  getActive(): Observable<string> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getActiveBaseSite),\n      filter((active) => Boolean(active))\n    );\n  }\n\n  /**\n   * Get all base sites data\n   */\n  getAll(): Observable<BaseSite[]> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getAllBaseSites),\n      tap((sites) => {\n        if (!sites) {\n          this.store.dispatch(new SiteContextActions.LoadBaseSites());\n        }\n      }),\n      filter(isNotNullable)\n    );\n  }\n\n  /**\n   * Get base site data based on site uid\n   */\n  get(siteUid?: string): Observable<BaseSite | undefined> {\n    if (siteUid) {\n      return this.getAll().pipe(\n        map((sites) => sites.find((site) => site.uid === siteUid))\n      );\n    }\n\n    return this.getActive().pipe(\n      switchMap((activeSiteUid) =>\n        this.getAll().pipe(\n          map((sites) => sites.find((site) => site.uid === activeSiteUid))\n        )\n      )\n    );\n  }\n\n  setActive(baseSite: string): void {\n    this.store\n      .pipe(select(SiteContextSelectors.getActiveBaseSite), take(1))\n      .subscribe((activeBaseSite) => {\n        if (baseSite && activeBaseSite !== baseSite) {\n          this.store.dispatch(\n            new SiteContextActions.SetActiveBaseSite(baseSite)\n          );\n        }\n      });\n  }\n\n  /**\n   * Tells whether the value of the base site has been already initialized\n   */\n  isInitialized(): boolean {\n    let valueInitialized = false;\n    this.getActive()\n      .subscribe(() => (valueInitialized = true))\n      .unsubscribe();\n\n    return valueInitialized;\n  }\n\n  /**\n   * Tells whether the given iso code is allowed.\n   *\n   * The list of allowed iso codes can be configured in the `context` config of Spartacus.\n   */\n  protected isValid(value: string): boolean {\n    return (\n      !!value &&\n      getContextParameterValues(this.config, BASE_SITE_CONTEXT_ID).includes(\n        value\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { BaseSiteService } from '../../../site-context/facade/base-site.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthMultisiteIsolationService {\n  protected readonly MULTISITE_SEPARATOR = '|';\n\n  constructor(protected baseSiteService: BaseSiteService) {}\n\n  /**\n   * When isolation is turned on, a customer who registers for baseSiteA\n   * can only log into baseSiteA, not baseSiteB.\n   * To login into baseSiteB customer have to use the same e-mail and register an account\n   * on baseSiteB.\n   *\n   * The strategy how to handle isolation is to use an additional decorator\n   * passed as a suffix to the uid field.\n   *\n   * Example uid value for baseSiteA will be email@example.com|baseSiteA\n   */\n  getBaseSiteDecorator(): Observable<string> {\n    return this.baseSiteService.get().pipe(\n      take(1),\n      map((baseSite) =>\n        Boolean(baseSite?.isolated)\n          ? this.MULTISITE_SEPARATOR + baseSite?.uid\n          : ''\n      )\n    );\n  }\n\n  /**\n   * Method returns concatenated `userId` with the decorator suffix.\n   *\n   * @param userId The `userId` for given user\n   */\n  decorateUserId(userId: string): Observable<string> {\n    return this.getBaseSiteDecorator().pipe(\n      map((decorator) => userId + decorator)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OCC_USER_ID_CURRENT } from '../../../occ/utils/occ-constants';\nimport { RoutingService } from '../../../routing/facade/routing.service';\nimport { StateWithClientAuth } from '../../client-auth/store/client-auth-state';\nimport { OAuthTryLoginResult } from '../models/oauth-try-login-response';\nimport { AuthMultisiteIsolationService } from '../services/auth-multisite-isolation.service';\nimport { AuthRedirectService } from '../services/auth-redirect.service';\nimport { AuthStorageService } from '../services/auth-storage.service';\nimport { OAuthLibWrapperService } from '../services/oauth-lib-wrapper.service';\nimport { AuthActions } from '../store/actions/index';\nimport { UserIdService } from './user-id.service';\n\n/**\n * Auth service for normal user authentication.\n * Use to check auth status, login/logout with different OAuth flows.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  /**\n   * Indicates whether the access token is being refreshed\n   */\n  refreshInProgress$: Observable<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Indicates whether the logout is being performed\n   */\n  logoutInProgress$: Observable<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    protected store: Store<StateWithClientAuth>,\n    protected userIdService: UserIdService,\n    protected oAuthLibWrapperService: OAuthLibWrapperService,\n    protected authStorageService: AuthStorageService,\n    protected authRedirectService: AuthRedirectService,\n    protected routingService: RoutingService,\n    protected authMultisiteIsolationService?: AuthMultisiteIsolationService\n  ) {}\n\n  /**\n   * Check params in url and if there is an code/token then try to login with those.\n   */\n  async checkOAuthParamsInUrl(): Promise<void> {\n    try {\n      const loginResult: OAuthTryLoginResult =\n        await this.oAuthLibWrapperService.tryLogin();\n\n      const token = this.authStorageService.getItem('access_token');\n\n      // We get the value `true` of `result` in the _code flow_ even if we did not log in successfully\n      // (see source code https://github.com/manfredsteyer/angular-oauth2-oidc/blob/d95d7da788e2c1390346c66de62dc31f10d2b852/projects/lib/src/oauth-service.ts#L1711),\n      // that why we also need to check if we have access_token\n      if (loginResult.result && token) {\n        this.userIdService.setUserId(OCC_USER_ID_CURRENT);\n        this.store.dispatch(new AuthActions.Login());\n\n        // We check if the token was received during the `tryLogin()` attempt.\n        // If so, we will redirect as we can deduce we are returning from the authentication server.\n        // Redirection should not be done in cases we get the token from storage (eg. refreshing the page).\n        if (loginResult.tokenReceived) {\n          this.authRedirectService.redirect();\n        }\n      }\n    } catch {}\n  }\n\n  /**\n   * Initialize Implicit/Authorization Code flow by redirecting to OAuth server.\n   */\n  loginWithRedirect(): boolean {\n    this.oAuthLibWrapperService.initLoginFlow();\n    return true;\n  }\n\n  /**\n   * Loads a new user token with Resource Owner Password Flow.\n   * @param userId\n   * @param password\n   */\n  async loginWithCredentials(userId: string, password: string): Promise<void> {\n    let uid = userId;\n\n    if (this.authMultisiteIsolationService) {\n      uid = await this.authMultisiteIsolationService\n        .decorateUserId(uid)\n        .toPromise();\n    }\n\n    try {\n      await this.oAuthLibWrapperService.authorizeWithPasswordFlow(\n        uid,\n        password\n      );\n\n      // OCC specific user id handling. Customize when implementing different backend\n      this.userIdService.setUserId(OCC_USER_ID_CURRENT);\n\n      this.store.dispatch(new AuthActions.Login());\n\n      this.authRedirectService.redirect();\n    } catch {}\n  }\n\n  /**\n   * Revokes tokens and clears state for logged user (tokens, userId).\n   * To perform logout it is best to use `logout` method. Use this method with caution.\n   */\n  coreLogout(): Promise<void> {\n    this.setLogoutProgress(true);\n    this.userIdService.clearUserId();\n    return new Promise((resolve) => {\n      this.oAuthLibWrapperService.revokeAndLogout().finally(() => {\n        this.store.dispatch(new AuthActions.Logout());\n        this.setLogoutProgress(false);\n        resolve();\n      });\n    });\n  }\n\n  /**\n   * Returns `true` if the user is logged in; and `false` if the user is anonymous.\n   */\n  isUserLoggedIn(): Observable<boolean> {\n    return this.authStorageService.getToken().pipe(\n      map((userToken) => Boolean(userToken?.access_token)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Logout a storefront customer. It will initialize logout procedure by redirecting to the `logout` endpoint.\n   */\n  logout(): void {\n    this.routingService.go({ cxRoute: 'logout' });\n  }\n\n  /**\n   * Start or stop the refresh process\n   */\n  setRefreshProgress(progress: boolean): void {\n    (this.refreshInProgress$ as BehaviorSubject<boolean>).next(progress);\n  }\n\n  /**\n   * Start or stop the logout process\n   */\n  setLogoutProgress(progress: boolean): void {\n    (this.logoutInProgress$ as BehaviorSubject<boolean>).next(progress);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, iif, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '../../model/index';\nimport { AnonymousConsentsActions } from '../store/actions/index';\nimport { StateWithAnonymousConsents } from '../store/anonymous-consents-state';\nimport { AnonymousConsentsSelectors } from '../store/selectors/index';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentsService {\n  constructor(\n    protected store: Store<StateWithAnonymousConsents>,\n    protected authService: AuthService\n  ) {}\n\n  /**\n   * Retrieves the anonymous consent templates.\n   */\n  loadTemplates(): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.LoadAnonymousConsentTemplates()\n    );\n  }\n\n  /**\n   * Conditionally triggers the load of the anonymous consent templates if:\n   *   - `loadIfMissing` parameter is set to `true`\n   *   - the `templates` in the store are `undefined`\n   *\n   * Otherwise it just returns the value from the store.\n   *\n   * @param loadIfMissing setting to `true` will trigger the load of the templates if the currently stored templates are `undefined`\n   */\n  getTemplates(loadIfMissing = false): Observable<ConsentTemplate[]> {\n    return iif(\n      () => loadIfMissing,\n      this.store.pipe(\n        select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesValue),\n        withLatestFrom(this.getLoadTemplatesLoading()),\n        filter(([_templates, loading]) => !loading),\n        tap(([templates, _loading]) => {\n          if (!Boolean(templates)) {\n            this.loadTemplates();\n          }\n        }),\n        filter(([templates, _loading]) => Boolean(templates)),\n        map(([templates, _loading]) => templates)\n      ),\n      this.store.pipe(\n        select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesValue)\n      )\n    );\n  }\n\n  /**\n   * Returns the anonymous consent templates with the given template code.\n   * @param templateCode a template code by which to filter anonymous consent templates.\n   */\n  getTemplate(templateCode: string): Observable<ConsentTemplate | undefined> {\n    return this.store.pipe(\n      select(\n        AnonymousConsentsSelectors.getAnonymousConsentTemplate(templateCode)\n      )\n    );\n  }\n\n  /**\n   * Returns an indicator for the loading status for the anonymous consent templates.\n   */\n  getLoadTemplatesLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesLoading)\n    );\n  }\n\n  /**\n   * Returns an indicator for the success status for the anonymous consent templates.\n   */\n  getLoadTemplatesSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesSuccess)\n    );\n  }\n\n  /**\n   * Returns an indicator for the error status for the anonymous consent templates.\n   */\n  getLoadTemplatesError(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesError)\n    );\n  }\n\n  /**\n   * Resets the loading, success and error indicators for the anonymous consent templates.\n   */\n  resetLoadTemplatesState(): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.ResetLoadAnonymousConsentTemplates()\n    );\n  }\n\n  /**\n   * Returns all the anonymous consents.\n   */\n  getConsents(): Observable<AnonymousConsent[]> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsents)\n    );\n  }\n\n  /**\n   * Puts the provided anonymous consents into the store.\n   */\n  setConsents(consents: AnonymousConsent[]): void {\n    return this.store.dispatch(\n      new AnonymousConsentsActions.SetAnonymousConsents(consents)\n    );\n  }\n\n  /**\n   * Returns the anonymous consent for the given template ID.\n   *\n   * As a side-effect, the method will call `getTemplates(true)` to load the templates if those are not present.\n   *\n   * @param templateId a template ID by which to filter anonymous consent templates.\n   */\n  getConsent(templateId: string): Observable<AnonymousConsent | undefined> {\n    return this.authService.isUserLoggedIn().pipe(\n      filter((authenticated) => !authenticated),\n      tap(() => this.getTemplates(true)),\n      switchMap(() =>\n        this.store.pipe(\n          select(\n            AnonymousConsentsSelectors.getAnonymousConsentByTemplateCode(\n              templateId\n            )\n          )\n        )\n      )\n    );\n  }\n\n  /**\n   * Give a consent for the given `templateCode`\n   * @param templateCode for which to give the consent\n   */\n  giveConsent(templateCode: string): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.GiveAnonymousConsent(templateCode)\n    );\n  }\n\n  /**\n   * Sets all the anonymous consents' state to given.\n   */\n  giveAllConsents(): Observable<ConsentTemplate[]> {\n    return this.getTemplates(true).pipe(\n      tap((templates) =>\n        templates.forEach((template) => {\n          if (template.id) {\n            this.giveConsent(template.id);\n          }\n        })\n      )\n    );\n  }\n\n  /**\n   * Returns `true` if the provided `consent` is given.\n   * @param consent a consent to test\n   */\n  isConsentGiven(consent: AnonymousConsent | undefined): boolean {\n    return (\n      (consent && consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN) ??\n      false\n    );\n  }\n\n  /**\n   * Withdraw a consent for the given `templateCode`\n   * @param templateCode for which to withdraw the consent\n   */\n  withdrawConsent(templateCode: string): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.WithdrawAnonymousConsent(templateCode)\n    );\n  }\n\n  /**\n   * Sets all the anonymous consents' state to withdrawn.\n   */\n  withdrawAllConsents(): Observable<ConsentTemplate[]> {\n    return this.getTemplates(true).pipe(\n      tap((templates) =>\n        templates.forEach((template) => {\n          if (template.id) {\n            this.withdrawConsent(template.id);\n          }\n        })\n      )\n    );\n  }\n\n  /**\n   * Returns `true` if the provided `consent` is withdrawn.\n   * @param consent a consent to test\n   */\n  isConsentWithdrawn(consent: AnonymousConsent): boolean {\n    return (\n      consent && consent.consentState === ANONYMOUS_CONSENT_STATUS.WITHDRAWN\n    );\n  }\n\n  /**\n   * Toggles the dismissed state of the anonymous consents banner.\n   * @param dismissed the banner will be dismissed if `true` is passed, otherwise it will be visible.\n   */\n  toggleBannerDismissed(dismissed: boolean): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.ToggleAnonymousConsentsBannerDissmissed(\n        dismissed\n      )\n    );\n    if (dismissed) {\n      this.toggleTemplatesUpdated(false);\n    }\n  }\n\n  /**\n   * Returns `true` if the banner was dismissed, `false` otherwise.\n   */\n  isBannerDismissed(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentsBannerDismissed)\n    );\n  }\n\n  /**\n   * Returns `true` if the consent templates were updated on the back-end.\n   * If the templates are not present in the store, it triggers the load.\n   */\n  getTemplatesUpdated(): Observable<boolean> {\n    return this.getTemplates(true).pipe(\n      switchMap(() =>\n        this.store.pipe(\n          select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesUpdate)\n        )\n      )\n    );\n  }\n\n  /**\n   * Toggles the `updated` slice of the state\n   * @param updated\n   */\n  toggleTemplatesUpdated(updated: boolean): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated(\n        updated\n      )\n    );\n  }\n\n  /**\n   * Returns `true` if either the banner is not dismissed or if the templates were updated on the back-end.\n   * Otherwise, it returns `false`.\n   */\n  isBannerVisible(): Observable<boolean> {\n    return combineLatest([\n      this.isBannerDismissed(),\n      this.getTemplatesUpdated(),\n    ]).pipe(\n      tap(() => this.checkConsentVersions()),\n      map(([dismissed, updated]) => !dismissed || updated)\n    );\n  }\n\n  /**\n   * Dispatches an action to trigger the check\n   * whether the anonymous consent version have been updated\n   */\n  private checkConsentVersions(): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.AnonymousConsentCheckUpdatedVersions()\n    );\n  }\n\n  /**\n   * Returns `true` if there's a mismatch in template versions between the provided `currentTemplates` and `newTemplates`\n   * @param currentTemplates current templates to check\n   * @param newTemplates new templates to check\n   */\n  detectUpdatedTemplates(\n    currentTemplates: ConsentTemplate[],\n    newTemplates: ConsentTemplate[]\n  ): boolean {\n    if (newTemplates.length !== currentTemplates.length) {\n      return true;\n    }\n\n    for (let i = 0; i < newTemplates.length; i++) {\n      const newTemplate = newTemplates[i];\n      const currentTemplate = currentTemplates[i];\n      if (newTemplate.version !== currentTemplate.version) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Serializes using `JSON.stringify()` and encodes using `encodeURIComponent()` methods\n   * @param consents to serialize and encode\n   */\n  serializeAndEncode(consents: AnonymousConsent[]): string {\n    if (!consents) {\n      return '';\n    }\n    const serialized = JSON.stringify(consents);\n    const encoded = encodeURIComponent(serialized);\n    return encoded;\n  }\n\n  /**\n   * Decodes using `decodeURIComponent()` and deserializes using `JSON.parse()`\n   * @param rawConsents to decode an deserialize\n   */\n  decodeAndDeserialize(rawConsents: string): AnonymousConsent[] {\n    const decoded = decodeURIComponent(rawConsents);\n    if (decoded.length > 0) {\n      const unserialized = JSON.parse(decoded) as AnonymousConsent[];\n      return unserialized;\n    }\n    return [];\n  }\n\n  /**\n   *\n   * Compares the given `newConsents` and `previousConsents` and returns `true` if there are differences (the `newConsents` are updates).\n   * Otherwise it returns `false`.\n   *\n   * @param newConsents new consents to compare\n   * @param previousConsents old consents to compare\n   */\n  consentsUpdated(\n    newConsents: AnonymousConsent[],\n    previousConsents: AnonymousConsent[]\n  ): boolean {\n    const newRawConsents = this.serializeAndEncode(newConsents);\n    const previousRawConsents = this.serializeAndEncode(previousConsents);\n    return newRawConsents !== previousRawConsents;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\n\nexport const USE_CLIENT_TOKEN = 'cx-use-client-token';\nexport const USE_CUSTOMER_SUPPORT_AGENT_TOKEN = 'cx-use-csagent-token';\n\nexport class InterceptorUtil {\n  static createHeader<T>(\n    headerName: string,\n    interceptorParam: T,\n    headers?: HttpHeaders\n  ): HttpHeaders {\n    if (headers) {\n      return headers.append(headerName, JSON.stringify(interceptorParam));\n    }\n    headers = new HttpHeaders().set(\n      headerName,\n      JSON.stringify(interceptorParam)\n    );\n    return headers;\n  }\n\n  static removeHeader(\n    headerName: string,\n    request: HttpRequest<any>\n  ): HttpRequest<any> {\n    const updatedHeaders = request.headers.delete(headerName);\n    return request.clone({ headers: updatedHeaders });\n  }\n\n  static getInterceptorParam<T>(\n    headerName: string,\n    headers: HttpHeaders\n  ): T | undefined {\n    const rawValue = headers.get(headerName);\n    if (rawValue) {\n      return JSON.parse(rawValue);\n    }\n    return undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { ClientToken } from '../models/client-token.model';\n\nexport const CLIENT_AUTH_FEATURE = 'client-auth';\nexport const CLIENT_TOKEN_DATA = '[Client auth] Client Token Data';\n\nexport interface StateWithClientAuth {\n  [CLIENT_AUTH_FEATURE]: ClientAuthState;\n}\n\nexport interface ClientAuthState {\n  clientToken: LoaderState<ClientToken>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '../../../../state/utils/index';\nimport { ClientToken } from '../../models/client-token.model';\nimport { CLIENT_TOKEN_DATA } from '../client-auth-state';\n\nexport const LOAD_CLIENT_TOKEN = '[Token] Load Client Token';\nexport const LOAD_CLIENT_TOKEN_FAIL = '[Token] Load Client Token Fail';\nexport const LOAD_CLIENT_TOKEN_SUCCESS = '[Token] Load Client Token Success';\n\nexport class LoadClientToken extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_CLIENT_TOKEN;\n  constructor() {\n    super(CLIENT_TOKEN_DATA);\n  }\n}\n\nexport class LoadClientTokenFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_CLIENT_TOKEN_FAIL;\n  constructor(public payload: any) {\n    super(CLIENT_TOKEN_DATA, payload);\n  }\n}\n\nexport class LoadClientTokenSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_CLIENT_TOKEN_SUCCESS;\n  constructor(public payload: ClientToken) {\n    super(CLIENT_TOKEN_DATA);\n  }\n}\n\nexport type ClientTokenAction =\n  | LoadClientToken\n  | LoadClientTokenFail\n  | LoadClientTokenSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './client-token.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as ClientAuthActions from './client-token-group.actions';\nexport { ClientAuthActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ClientAuthState,\n  CLIENT_AUTH_FEATURE,\n  StateWithClientAuth,\n} from '../client-auth-state';\n\nexport const getClientAuthState: MemoizedSelector<\n  StateWithClientAuth,\n  ClientAuthState\n> = createFeatureSelector<ClientAuthState>(CLIENT_AUTH_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { LoaderState } from '../../../../state/utils/loader/loader-state';\nimport { ClientToken } from '../../models/client-token.model';\nimport { ClientAuthState, StateWithClientAuth } from '../client-auth-state';\nimport { getClientAuthState } from './feature.selector';\n\nexport const getClientTokenState: MemoizedSelector<\n  StateWithClientAuth,\n  LoaderState<ClientToken>\n> = createSelector(\n  getClientAuthState,\n  (state: ClientAuthState) => state.clientToken\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './client-token.selectors';\nexport * from './feature.selector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as ClientAuthSelectors from './client-token-group.selectors';\nexport { ClientAuthSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, queueScheduler } from 'rxjs';\nimport { filter, map, observeOn } from 'rxjs/operators';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { isNotUndefined } from '../../../util/type-guards';\nimport { ClientToken } from '../models/client-token.model';\nimport { ClientAuthActions } from '../store/actions/index';\nimport { StateWithClientAuth } from '../store/client-auth-state';\nimport { ClientAuthSelectors } from '../store/selectors/index';\n\n/**\n * Serves a role of a facade on client token store.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientTokenService {\n  constructor(protected store: Store<StateWithClientAuth>) {}\n\n  /**\n   * Returns a client token. The client token from the store is returned if there is one.\n   * Otherwise a new token is fetched from the backend and saved in the store.\n   */\n  getClientToken(): Observable<ClientToken | undefined> {\n    return this.store.pipe(\n      select(ClientAuthSelectors.getClientTokenState),\n      observeOn(queueScheduler),\n      filter((state: LoaderState<ClientToken>) => {\n        if (this.isClientTokenLoaded(state)) {\n          return true;\n        } else {\n          if (!state.loading) {\n            this.store.dispatch(new ClientAuthActions.LoadClientToken());\n          }\n          return false;\n        }\n      }),\n      map((state: LoaderState<ClientToken>) => state.value)\n    );\n  }\n\n  /**\n   * Fetches a clientToken from the backend and saves it in the store where getClientToken can use it.\n   * The new clientToken is returned.\n   */\n  refreshClientToken(): Observable<ClientToken> {\n    this.store.dispatch(new ClientAuthActions.LoadClientToken());\n\n    return this.store.pipe(\n      select(ClientAuthSelectors.getClientTokenState),\n      filter((state: LoaderState<ClientToken>) =>\n        this.isClientTokenLoaded(state)\n      ),\n      map((state: LoaderState<ClientToken>) => state.value),\n      filter(isNotUndefined)\n    );\n  }\n\n  protected isClientTokenLoaded(state: LoaderState<ClientToken>): boolean {\n    return Boolean((state.success || state.error) && !state.loading);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { ClientToken } from '../models/client-token.model';\nimport { ClientTokenService } from './client-token.service';\n\n/**\n * Service for handling `Authorization` header and errors for requests that\n * require client token (eg. user registration).\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientErrorHandlingService {\n  constructor(protected clientTokenService: ClientTokenService) {}\n\n  /**\n   * Refreshes client token and retries the request with the new token.\n   *\n   * @param request\n   * @param httpHandler\n   */\n  public handleExpiredClientToken(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<any> {\n    return this.clientTokenService.refreshClientToken().pipe(\n      take(1),\n      switchMap((token: ClientToken) => {\n        return next.handle(this.createNewRequestWithNewToken(request, token));\n      })\n    );\n  }\n\n  /**\n   * Clones the requests and provided `Authorization` header.\n   *\n   * @param request\n   * @param token\n   */\n  protected createNewRequestWithNewToken(\n    request: HttpRequest<any>,\n    token: ClientToken\n  ): HttpRequest<any> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${token.token_type || 'Bearer'} ${token.access_token}`,\n      },\n    });\n    return request;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class StringTemplate {\n  /**\n   * Populates the given template with the variables provided\n   *\n   * @param templateString template of the OCC endpoint\n   * @param templateVariables variables to replace in the template\n   * @param encodeVariable encode variable before placing it in the template\n   */\n  static resolve(\n    templateString: string,\n    templateVariables: Object,\n    encodeVariable?: boolean\n  ): string {\n    for (const variableLabel of Object.keys(templateVariables)) {\n      const placeholder = new RegExp('\\\\${' + variableLabel + '}', 'g');\n      templateString = templateString.replace(\n        placeholder,\n        // TODO 4.0: default to encodeVariable = true\n        encodeVariable\n          ? encodeURIComponent(templateVariables[variableLabel as keyof object])\n          : templateVariables[variableLabel as keyof object]\n      );\n    }\n    return templateString;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Angular uses the native encodeURIComponent function,\n * but then un-encoded some characters that are allowed\n * to be part of the query according to IETF RFC 3986.\n * So, to make these characters still encoded, this encoder only\n * uses the encodeURIComponent.\n */\nimport { HttpParameterCodec } from '@angular/common/http';\n\nexport class HttpParamsURIEncoder implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const DEFAULT_SCOPE = 'default';\n\nexport interface OccEndpoint {\n  default?: string;\n  [scope: string]: string | undefined;\n}\n\nexport interface ProductOccEndpoint extends OccEndpoint {\n  list?: string;\n  details?: string;\n  attributes?: string;\n  variants?: string;\n}\n\nexport interface OccEndpoints {\n  /**\n   * Get product details for scope\n   *\n   * @member Object\n   */\n  product?: string | ProductOccEndpoint;\n  /**\n   * Get reviews for a product\n   *\n   * @member {string}\n   */\n  productReviews?: string | OccEndpoint;\n  /**\n   * Get a list of product references\n   *\n   * @member {string}\n   */\n  productReferences?: string | OccEndpoint;\n  /**\n   * Get a list of products and additional data\n   *\n   * @member {string}\n   */\n  productSearch?: string | OccEndpoint;\n  /**\n   * Get a list of available suggestions\n   *\n   * @member {string}\n   */\n  productSuggestions?: string | OccEndpoint;\n  /**\n   * Get CMS component details\n   *\n   * @member {string}\n   */\n  component?: string | OccEndpoint;\n  /**\n   * Get a list of CMS component details\n   *\n   * @member {string}\n   */\n  components?: string | OccEndpoint;\n  /**\n   * Get page data with list of cms content slots\n   *\n   * @member {string}\n   */\n  pages?: string | OccEndpoint;\n  /**\n   * Get page data with list of cms content slots\n   *\n   * @member {string}\n   */\n  page?: string | OccEndpoint;\n  /**\n   * Get a list of available languages\n   *\n   * @member {string}\n   */\n  languages?: string | OccEndpoint;\n  /**\n   * Get a list of available currencies\n   *\n   * @member {string}\n   */\n  currencies?: string | OccEndpoint;\n  /**\n   * Get a list of countries\n   *\n   * @member {string}\n   */\n  countries?: string | OccEndpoint;\n  /**\n   * Fetch the list of regions for the provided country\n   *\n   * @member {string}\n   */\n  regions?: string | OccEndpoint;\n  /**\n   * Payment details root endpoint.\n   *\n   * @member {string}\n   */\n  paymentDetailsAll?: string | OccEndpoint;\n  /**\n   * Endpoint for a specific payment method.\n   *\n   * @member {string}\n   */\n  paymentDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for anonymous consent templates\n   *\n   * @member {string}\n   */\n  anonymousConsentTemplates?: string | OccEndpoint;\n  /**\n   * Endpoint for consent templates\n   *\n   * @member {string}\n   */\n  consentTemplates?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's consents\n   *\n   * @member {string}\n   */\n  consents?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's specific previously given consent.\n   *\n   * @member {string}\n   */\n  consentDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's addresses\n   *\n   * @member {string}\n   */\n  addresses?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's specific address\n   *\n   * @member {string}\n   */\n  addressDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for address verification\n   *\n   * @member {string}\n   */\n  addressVerification?: string | OccEndpoint;\n  /**\n   * Endpoint for create configuration\n   *\n   * @member {string}\n   */\n  createVariantConfiguration?: string;\n  /**\n   * Endpoint for create configuration for the textfield configurator\n   *\n   * @member {string}\n   */\n  createTextfieldConfiguration?: string;\n  /**\n   * Endpoint for add textfield configuration to cart\n   *\n   * @member {string}\n   */\n  addTextfieldConfigurationToCart?: string;\n  /**\n   * Endpoint for reading textfield configuration attached to the cart entry\n   */\n  readTextfieldConfigurationForCartEntry?: string;\n  /**\n   * Endpoint for updating textfield configuration attached to the cart entry\n   */\n  updateTextfieldConfigurationForCartEntry?: string;\n  /**\n   * Endpoint to read configuration\n   *\n   * @member {string}\n   */\n  readVariantConfiguration?: string;\n  /**\n   * Endpoint to update configuration\n   *\n   * @member {string}\n   */\n  updateVariantConfiguration?: string;\n  /**\n   * Endpoint to add configuration to cart\n   *\n   * @member {string}\n   */\n  addVariantConfigurationToCart?: string;\n  /**\n   * Endpoint for reading configuration attached to the cart entry\n   */\n  readVariantConfigurationForCartEntry?: string;\n  /**\n   * Endpoint for updating configuration attached to the cart entry\n   */\n  updateVariantConfigurationForCartEntry?: string;\n  /**\n   * Endpoint for reading configuration overview attached to the order entry\n   */\n  readVariantConfigurationOverviewForOrderEntry?: string;\n  /**\n   * Endpoint to read configuration price\n   *\n   * @member {string}\n   */\n  readVariantConfigurationPriceSummary?: string;\n  /**\n   * Endpoint to get configuration Overview\n   *\n   * @member {string}\n   */\n  getVariantConfigurationOverview?: string;\n  /**\n   * Endpoint for configurator variant search\n   *\n   * @member {string}\n   */\n  searchConfiguratorVariants?: string;\n  /**\n   * Endpoint for coupons\n   *\n   * @member {string}\n   */\n  customerCoupons?: string | OccEndpoint;\n  /**\n   * Endpoint for claiming coupon\n   *\n   * @member {string}\n   */\n  claimCoupon?: string | OccEndpoint;\n  /**\n   * Endpoint for coupons\n   *\n   * @member {string}\n   */\n  couponNotification?: string | OccEndpoint;\n  /**\n   * Endpoint for notification preference\n   *\n   * @member {string}\n   */\n  notificationPreference?: string | OccEndpoint;\n  /**\n   * Endpoint for product interests\n   *\n   * @member {string}\n   */\n  productInterests?: string | OccEndpoint;\n  /**\n   * Endpoint for getting product interests\n   *\n   * @member {string}\n   */\n  getProductInterests?: string | OccEndpoint;\n  /**\n   * Endpoint for getting all base sites\n   *\n   * @member {string}\n   */\n  baseSites?: string | OccEndpoint;\n  /** Endpoint to returns active cost centers\n   *\n   * @member {string}\n   */\n  getActiveCostCenters?: string | OccEndpoint;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Joins the multiple parts with '/' to create a url\n *\n * @param parts the distinct parts of the url to join\n */\nexport function urlPathJoin(...parts: string[]): string {\n  const paths: string[] = [];\n  parts = parts.filter((part) => Boolean(part));\n  for (const part of parts) {\n    paths.push(cleanSlashes(part));\n  }\n\n  if (parts[0]?.startsWith('/')) {\n    paths[0] = '/' + paths[0];\n  }\n  if (parts[parts.length - 1]?.endsWith('/')) {\n    paths[paths.length - 1] = paths[paths.length - 1] + '/';\n  }\n  return paths.join('/');\n}\n\nfunction cleanSlashes(path: string): string {\n  path = path.startsWith('/') ? path.slice(1) : path;\n  path = path.endsWith('/') ? path.slice(0, -1) : path;\n\n  return path;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpParams, HttpParamsOptions } from '@angular/common/http';\nimport { Injectable, isDevMode, Optional } from '@angular/core';\nimport { StringTemplate } from '../../config/utils/string-template';\nimport { getContextParameterDefault } from '../../site-context/config/context-config-utils';\nimport { BaseSiteService } from '../../site-context/facade/base-site.service';\nimport { BASE_SITE_CONTEXT_ID } from '../../site-context/providers/context-ids';\nimport { HttpParamsURIEncoder } from '../../util/http-params-uri.encoder';\nimport { OccConfig } from '../config/occ-config';\nimport { DEFAULT_SCOPE } from '../occ-models/occ-endpoints.model';\nimport { urlPathJoin } from '../utils/occ-url-util';\n\nexport interface BaseOccUrlProperties {\n  baseUrl?: boolean;\n  prefix?: boolean;\n  baseSite?: boolean;\n}\n\nexport interface DynamicAttributes {\n  urlParams?: object;\n  queryParams?: object;\n  scope?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccEndpointsService {\n  private _activeBaseSite: string;\n\n  private get activeBaseSite(): string {\n    return (\n      this._activeBaseSite ??\n      getContextParameterDefault(this.config, BASE_SITE_CONTEXT_ID)\n    );\n  }\n\n  constructor(\n    private config: OccConfig,\n    @Optional() private baseSiteService: BaseSiteService\n  ) {\n    if (this.baseSiteService) {\n      this.baseSiteService\n        .getActive()\n        .subscribe((value) => (this._activeBaseSite = value));\n    }\n  }\n\n  /**\n   * Returns the value configured for a specific endpoint\n   *\n   * @param endpointKey the configuration key for the endpoint to return\n   * @param scope endpoint configuration scope\n   */\n  getRawEndpointValue(endpoint: string, scope?: string): string {\n    const endpointValue = this.getEndpointForScope(endpoint, scope);\n\n    return endpointValue;\n  }\n\n  /**\n   * Returns true when the endpoint is configured\n   *\n   * @param endpointKey the configuration key for the endpoint to return\n   * @param scope endpoint configuration scope\n   */\n  isConfigured(endpoint: string, scope?: string): boolean {\n    return !(\n      typeof this.getEndpointFromConfig(endpoint, scope) === 'undefined'\n    );\n  }\n\n  /**\n   * Returns base OCC endpoint (baseUrl + prefix + baseSite) base on provided values\n   *\n   * @param baseUrlProperties Specify properties to not add to the url (baseUrl, prefix, baseSite)\n   */\n  getBaseUrl(\n    baseUrlProperties: BaseOccUrlProperties = {\n      baseUrl: true,\n      prefix: true,\n      baseSite: true,\n    }\n  ): string {\n    const baseUrl =\n      baseUrlProperties.baseUrl === false\n        ? ''\n        : this.config?.backend?.occ?.baseUrl ?? '';\n    const prefix = baseUrlProperties.prefix === false ? '' : this.getPrefix();\n    const baseSite =\n      baseUrlProperties.baseSite === false ? '' : this.activeBaseSite;\n\n    return urlPathJoin(baseUrl, prefix, baseSite);\n  }\n\n  /**\n   * Returns a fully qualified OCC Url\n   *\n   * @param endpoint Name of the OCC endpoint key\n   * @param attributes Dynamic attributes used to build the url\n   * @param propertiesToOmit Specify properties to not add to the url (baseUrl, prefix, baseSite)\n   */\n  buildUrl(\n    endpoint: string,\n    attributes?: DynamicAttributes,\n    propertiesToOmit?: BaseOccUrlProperties\n  ): string {\n    let url = this.getEndpointForScope(endpoint, attributes?.scope);\n\n    if (attributes) {\n      const { urlParams, queryParams } = attributes;\n\n      if (urlParams) {\n        url = StringTemplate.resolve(url, urlParams, true);\n      }\n\n      if (queryParams) {\n        let httpParamsOptions = { encoder: new HttpParamsURIEncoder() };\n\n        if (url.includes('?')) {\n          let queryParamsFromEndpoint: string;\n          [url, queryParamsFromEndpoint] = url.split('?');\n          httpParamsOptions = {\n            ...httpParamsOptions,\n            ...{ fromString: queryParamsFromEndpoint },\n          };\n        }\n\n        const httpParams = this.getHttpParamsFromQueryParams(\n          queryParams,\n          httpParamsOptions\n        );\n\n        const params = httpParams.toString();\n        if (params.length) {\n          url += '?' + params;\n        }\n      }\n    }\n\n    return this.buildUrlFromEndpointString(url, propertiesToOmit);\n  }\n\n  protected getHttpParamsFromQueryParams(\n    queryParams: any,\n    options: HttpParamsOptions\n  ) {\n    let httpParams = new HttpParams(options);\n    Object.keys(queryParams).forEach((key) => {\n      const value = queryParams[key as keyof object];\n      if (value !== undefined) {\n        if (value === null) {\n          httpParams = httpParams.delete(key);\n        } else {\n          httpParams = httpParams.set(key, value);\n        }\n      }\n    });\n    return httpParams;\n  }\n\n  private getEndpointFromConfig(\n    endpoint: string,\n    scope?: string\n  ): string | undefined {\n    const endpointsConfig = this.config.backend?.occ?.endpoints;\n\n    if (!endpointsConfig) {\n      return undefined;\n    }\n\n    const endpointConfig: any =\n      endpointsConfig[endpoint as keyof typeof endpointsConfig];\n\n    if (scope) {\n      if (scope === DEFAULT_SCOPE && typeof endpointConfig === 'string') {\n        return endpointConfig;\n      }\n      return endpointConfig?.[scope];\n    }\n\n    return typeof endpointConfig === 'string'\n      ? endpointConfig\n      : endpointConfig?.[DEFAULT_SCOPE];\n  }\n\n  // TODO: Can we reuse getEndpointFromConfig in this method? Should we change behavior of this function?\n  private getEndpointForScope(endpoint: string, scope?: string): string {\n    const endpointsConfig = this.config.backend?.occ?.endpoints;\n\n    if (!endpointsConfig) {\n      return '';\n    }\n\n    const endpointConfig: any =\n      endpointsConfig[endpoint as keyof typeof endpointsConfig];\n\n    if (scope) {\n      if (endpointConfig?.[scope]) {\n        return endpointConfig?.[scope];\n      }\n      if (scope === DEFAULT_SCOPE && typeof endpointConfig === 'string') {\n        return endpointConfig;\n      }\n      if (isDevMode()) {\n        console.warn(\n          `${endpoint} endpoint configuration missing for scope \"${scope}\"`\n        );\n      }\n    }\n\n    return (\n      (typeof endpointConfig === 'string'\n        ? endpointConfig\n        : endpointConfig?.[DEFAULT_SCOPE]) || endpoint\n    );\n  }\n\n  /**\n   * Add the base OCC url properties to the specified endpoint string\n   *\n   * @param endpointString String value for the url endpoint\n   * @param propertiesToOmit Specify properties to not add to the url (baseUrl, prefix, baseSite)\n   */\n  private buildUrlFromEndpointString(\n    endpointString: string,\n    propertiesToOmit?: BaseOccUrlProperties\n  ): string {\n    return urlPathJoin(this.getBaseUrl(propertiesToOmit), endpointString);\n  }\n\n  private getPrefix(): string {\n    if (\n      this.config?.backend?.occ?.prefix &&\n      !this.config.backend.occ.prefix.startsWith('/')\n    ) {\n      return '/' + this.config.backend.occ.prefix;\n    }\n    return this.config?.backend?.occ?.prefix ?? '';\n  }\n}\n\n// CHECK SONAR\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\nimport { OccEndpointsService } from '../../../occ/services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../../occ/utils/interceptor-util';\nimport { ClientToken } from '../models/client-token.model';\nimport { ClientErrorHandlingService } from '../services/client-error-handling.service';\nimport { ClientTokenService } from '../services/client-token.service';\n\n/**\n * Interceptor for handling requests with `USE_CLIENT_TOKEN` header.\n * Provides `Authorization` header with client token and handles errors related to client auth.\n */\n@Injectable({ providedIn: 'root' })\nexport class ClientTokenInterceptor implements HttpInterceptor {\n  constructor(\n    protected clientTokenService: ClientTokenService,\n    protected clientErrorHandlingService: ClientErrorHandlingService,\n    protected occEndpoints: OccEndpointsService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const isClientTokenRequest = this.isClientTokenRequest(request);\n    if (isClientTokenRequest) {\n      request = InterceptorUtil.removeHeader(USE_CLIENT_TOKEN, request);\n    }\n\n    return this.getClientToken(isClientTokenRequest).pipe(\n      take(1),\n      switchMap((token: ClientToken | undefined) => {\n        if (\n          token?.access_token &&\n          request.url.includes(this.occEndpoints.getBaseUrl())\n        ) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: `${token.token_type || 'Bearer'} ${\n                token.access_token\n              }`,\n            },\n          });\n        }\n\n        return next.handle(request).pipe(\n          catchError((errResponse: any) => {\n            if (\n              errResponse instanceof HttpErrorResponse &&\n              errResponse.status === 401 &&\n              isClientTokenRequest &&\n              this.isExpiredToken(errResponse)\n            ) {\n              return this.clientErrorHandlingService.handleExpiredClientToken(\n                request,\n                next\n              );\n            }\n            return throwError(errResponse);\n          })\n        );\n      })\n    );\n  }\n\n  protected getClientToken(\n    isClientTokenRequest: boolean\n  ): Observable<ClientToken | undefined> {\n    if (isClientTokenRequest) {\n      return this.clientTokenService.getClientToken();\n    }\n    return of(undefined);\n  }\n\n  protected isClientTokenRequest(request: HttpRequest<any>): boolean {\n    const isRequestMapping = InterceptorUtil.getInterceptorParam(\n      USE_CLIENT_TOKEN,\n      request.headers\n    );\n    return Boolean(isRequestMapping);\n  }\n\n  protected isExpiredToken(resp: HttpErrorResponse): boolean {\n    return resp.error?.errors?.[0]?.type === 'InvalidTokenError';\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { ClientTokenInterceptor } from './client-token.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: ClientTokenInterceptor,\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\nexport enum StorageSyncType {\n  NO_STORAGE = 'NO_STORAGE',\n  LOCAL_STORAGE = 'LOCAL_STORAGE',\n  SESSION_STORAGE = 'SESSION_STORAGE',\n}\n\nexport enum StateTransferType {\n  TRANSFER_STATE = 'SSR',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class StateConfig {\n  state?: {\n    ssrTransfer?: {\n      keys?: {\n        /**\n         * A set of state keys that should be transferred from server.\n         */\n        [key: string]: StateTransferType;\n      };\n    };\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends StateConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WindowRef } from '../../window/window-ref';\nimport { StorageSyncType } from '../config/state-config';\n\nexport function getStorage(\n  storageType: StorageSyncType,\n  winRef: WindowRef\n): Storage | undefined {\n  let storage: Storage | undefined;\n\n  switch (storageType) {\n    case StorageSyncType.LOCAL_STORAGE: {\n      storage = winRef.localStorage;\n      break;\n    }\n    case StorageSyncType.SESSION_STORAGE: {\n      storage = winRef.sessionStorage;\n      break;\n    }\n    case StorageSyncType.NO_STORAGE: {\n      storage = undefined;\n      break;\n    }\n\n    default: {\n      storage = winRef.sessionStorage;\n    }\n  }\n\n  return storage;\n}\n\nexport function persistToStorage(\n  configKey: string,\n  value: any,\n  storage: Storage\n): void {\n  if (!isSsr(storage) && value) {\n    storage.setItem(configKey, JSON.stringify(value));\n  }\n}\n\nexport function readFromStorage(storage: Storage, key: string): unknown {\n  if (isSsr(storage)) {\n    return;\n  }\n\n  const storageValue = storage.getItem(key);\n  if (!storageValue) {\n    return;\n  }\n\n  return JSON.parse(storageValue);\n}\n\nexport function isSsr(storage: Storage): boolean {\n  return !Boolean(storage);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { map, tap, withLatestFrom } from 'rxjs/operators';\nimport { StorageSyncType } from '../../state/config/state-config';\nimport { WindowRef } from '../../window/window-ref';\nimport {\n  getStorage,\n  persistToStorage,\n  readFromStorage,\n} from '../utils/browser-storage';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatePersistenceService {\n  constructor(protected winRef: WindowRef) {}\n\n  /**\n   * Helper to synchronize state to more persistent storage (localStorage, sessionStorage).\n   * It is context aware, so you can keep different state for te same feature based on specified context.\n   *\n   * Eg. cart is valid only under the same base site. So you want to synchronize cart only with the same base site.\n   * Usage for that case: `syncWithStorage({ key: 'cart', state$: activeCartSelector$, context$: this.siteContextParamsService.getValues([BASE_SITE_CONTEXT_ID]), onRead: (state) => setCorrectStateInStore(state) })`.\n   * Active cart for the `electronics` base site will be stored under `spartacus⚿electronics⚿cart` and for apparel under `spartacus⚿apparel⚿cart`.\n   *\n   * On each context change onRead function will be executed with state from storage provided as a parameter.\n   *\n   * Omitting context$ will trigger onRead only once at initialization.\n   *\n   * @param key Key to use in storage for the synchronized state. Should be unique for each feature.\n   * @param state$ State to be saved and later restored.\n   * @param context$ Context for state\n   * @param storageType Storage type to be used to persist state\n   * @param onRead Function to be executed on each storage read after context change\n   *\n   * @returns Subscriptions for reading/writing in storage on context/state change\n   */\n  syncWithStorage<T>({\n    key,\n    state$,\n    context$ = of(''),\n    storageType = StorageSyncType.LOCAL_STORAGE,\n    onRead = () => {\n      // Intentional empty arrow function\n    },\n  }: {\n    key: string;\n    state$: Observable<T>;\n    context$?: Observable<string | Array<string>>;\n    storageType?: StorageSyncType;\n    onRead?: (stateFromStorage: T | undefined) => void;\n  }): Subscription {\n    const storage = getStorage(storageType, this.winRef);\n\n    const subscriptions = new Subscription();\n\n    // Do not change order of subscription! Read should happen before write on context change.\n    subscriptions.add(\n      context$\n        .pipe(\n          map((context) => {\n            return storage\n              ? (readFromStorage(\n                  storage,\n                  this.generateKeyWithContext(context, key)\n                ) as T | undefined)\n              : undefined;\n          }),\n          tap((state) => onRead(state))\n        )\n        .subscribe()\n    );\n\n    if (storage) {\n      subscriptions.add(\n        state$.pipe(withLatestFrom(context$)).subscribe(([state, context]) => {\n          persistToStorage(\n            this.generateKeyWithContext(context, key),\n            state,\n            storage\n          );\n        })\n      );\n    }\n\n    return subscriptions;\n  }\n\n  /**\n   * Helper to read state from persistent storage (localStorage, sessionStorage).\n   * It is useful if you need synchronously access state saved with `syncWithStorage`.\n   *\n   * @param key Key to use in storage for state. Should be unique for each feature.\n   * @param context Context value for state\n   * @param storageType Storage type from to read state\n   *\n   * @returns State from the storage\n   */\n  readStateFromStorage<T>({\n    key,\n    context = '',\n    storageType = StorageSyncType.LOCAL_STORAGE,\n  }: {\n    key: string;\n    context?: string | Array<string>;\n    storageType?: StorageSyncType;\n  }): T | undefined {\n    const storage = getStorage(storageType, this.winRef);\n\n    if (storage) {\n      return readFromStorage(\n        storage,\n        this.generateKeyWithContext(context, key)\n      ) as T | undefined;\n    }\n  }\n\n  protected generateKeyWithContext(\n    context: string | Array<string>,\n    key: string\n  ): string {\n    return `spartacus⚿${([] as Array<string>)\n      .concat(context)\n      .join('⚿')}⚿${key}`;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StatePersistenceService } from '../../../state/services/state-persistence.service';\nimport { UserIdService } from '../facade/user-id.service';\nimport { AuthToken } from '../models/auth-token.model';\nimport { AuthRedirectStorageService } from './auth-redirect-storage.service';\nimport { AuthStorageService } from './auth-storage.service';\n\n/**\n * Auth state synced to browser storage.\n */\nexport interface SyncedAuthState {\n  userId?: string;\n  token?: AuthToken;\n  redirectUrl?: string;\n}\n\n/**\n * Responsible for saving the authorization data (userId, token, redirectUrl) in browser storage.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthStatePersistenceService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected userIdService: UserIdService,\n    protected authStorageService: AuthStorageService,\n    protected authRedirectStorageService: AuthRedirectStorageService\n  ) {}\n\n  /**\n   * Identifier used for storage key.\n   */\n  protected key = 'auth';\n\n  /**\n   * Initializes the synchronization between state and browser storage.\n   */\n  public initSync() {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage({\n        key: this.key,\n        state$: this.getAuthState(),\n        onRead: (state) => this.onRead(state),\n      })\n    );\n  }\n\n  /**\n   * Gets and transforms state from different sources into the form that should\n   * be saved in storage.\n   */\n  protected getAuthState(): Observable<SyncedAuthState> {\n    return combineLatest([\n      this.authStorageService.getToken().pipe(\n        filter((state) => !!state),\n        map((state) => {\n          return {\n            ...state,\n          };\n        })\n      ),\n      this.userIdService.getUserId(),\n      this.authRedirectStorageService.getRedirectUrl(),\n    ]).pipe(\n      map(([authToken, userId, redirectUrl]) => {\n        let token = authToken;\n        if (token) {\n          token = { ...token };\n          // To minimize risk of user account hijacking we don't persist user refresh_token\n          delete token.refresh_token;\n        }\n        return { token, userId, redirectUrl };\n      })\n    );\n  }\n\n  /**\n   * Function called on each browser storage read.\n   * Used to update state from browser -> state.\n   */\n  protected onRead(state: SyncedAuthState | undefined) {\n    if (state?.token) {\n      this.authStorageService.setToken(state.token);\n    }\n    if (state?.redirectUrl) {\n      this.authRedirectStorageService.setRedirectUrl(state.redirectUrl);\n    }\n    if (state?.userId) {\n      this.userIdService.setUserId(state.userId);\n    } else {\n      this.userIdService.clearUserId();\n    }\n  }\n\n  /**\n   * Reads synchronously state from storage and returns it.\n   */\n  protected readStateFromStorage() {\n    return this.statePersistenceService.readStateFromStorage<SyncedAuthState>({\n      key: this.key,\n    });\n  }\n\n  /**\n   * Check synchronously in browser storage if user is logged in (required by transfer state reducer).\n   * For most cases `isUserLoggedIn` from the `AuthService` should be used instead of this.\n   */\n  public isUserLoggedIn(): boolean {\n    return Boolean(this.readStateFromStorage()?.token?.access_token);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport {\n  makeStateKey,\n  StateKey,\n  TransferState,\n} from '@angular/platform-browser';\nimport { INIT } from '@ngrx/store';\nimport { AuthStatePersistenceService } from '../../auth/user-auth/services/auth-state-persistence.service';\nimport { deepMerge } from '../../config/utils/deep-merge';\nimport { StateConfig, StateTransferType } from '../config/state-config';\nimport { filterKeysByType, getStateSlice } from '../utils/get-state-slice';\n\nexport const CX_KEY: StateKey<string> = makeStateKey<string>('cx-state');\n\nexport function getTransferStateReducer(\n  platformId: Object,\n  transferState?: TransferState,\n  config?: StateConfig,\n  authStatePersistenceService?: AuthStatePersistenceService\n) {\n  if (transferState && config?.state?.ssrTransfer?.keys) {\n    if (isPlatformBrowser(platformId)) {\n      return getBrowserTransferStateReducer(\n        transferState,\n        config.state.ssrTransfer.keys,\n        Boolean(authStatePersistenceService?.isUserLoggedIn())\n      );\n    } else if (isPlatformServer(platformId)) {\n      return getServerTransferStateReducer(\n        transferState,\n        config.state.ssrTransfer.keys\n      );\n    }\n  }\n\n  return (reducer: any) => reducer;\n}\n\nexport function getServerTransferStateReducer(\n  transferState: TransferState,\n  keys: { [key: string]: StateTransferType }\n) {\n  const transferStateKeys = filterKeysByType(\n    keys,\n    StateTransferType.TRANSFER_STATE\n  );\n\n  return function (reducer: any) {\n    return function (state: any, action: any) {\n      const newState = reducer(state, action);\n      if (newState) {\n        const stateSlice = getStateSlice(transferStateKeys, [], newState);\n        transferState.set(CX_KEY, stateSlice);\n      }\n\n      return newState;\n    };\n  };\n}\n\nexport function getBrowserTransferStateReducer(\n  transferState: TransferState,\n  keys: { [key: string]: StateTransferType },\n  isLoggedIn: boolean\n) {\n  const transferStateKeys = filterKeysByType(\n    keys,\n    StateTransferType.TRANSFER_STATE\n  );\n\n  return function (reducer: any) {\n    return function (state: any, action: any) {\n      if (action.type === INIT) {\n        if (!state) {\n          state = reducer(state, action);\n        }\n\n        if (!isLoggedIn && transferState.hasKey(CX_KEY)) {\n          const cxKey = transferState.get<Object>(CX_KEY, {});\n          const transferredStateSlice = getStateSlice(\n            transferStateKeys,\n            [],\n            cxKey\n          );\n\n          state = deepMerge({}, state, transferredStateSlice);\n        }\n        return state;\n      }\n      return reducer(state, action);\n    };\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Optional, PLATFORM_ID, Provider } from '@angular/core';\nimport { TransferState } from '@angular/platform-browser';\nimport { META_REDUCERS } from '@ngrx/store';\nimport { AuthStatePersistenceService } from '../../auth/user-auth/services/auth-state-persistence.service';\nimport { Config } from '../../config/config-tokens';\nimport { getTransferStateReducer } from './transfer-state.reducer';\n\nexport { getStateSlice } from '../utils/get-state-slice';\nexport * from './transfer-state.reducer';\n\nexport const TRANSFER_STATE_META_REDUCER = new InjectionToken(\n  'TransferStateMetaReducer'\n);\n\nexport const stateMetaReducers: Provider[] = [\n  {\n    provide: TRANSFER_STATE_META_REDUCER,\n    useFactory: getTransferStateReducer,\n    deps: [\n      PLATFORM_ID,\n      [new Optional(), TransferState],\n      [new Optional(), Config],\n      [new Optional(), AuthStatePersistenceService],\n    ],\n  },\n  {\n    provide: META_REDUCERS,\n    useExisting: TRANSFER_STATE_META_REDUCER,\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { stateMetaReducers } from './reducers/index';\n\n@NgModule({})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders<StateModule> {\n    return {\n      ngModule: StateModule,\n      providers: [...stateMetaReducers],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { isDevMode } from '@angular/core';\nimport { HttpErrorModel } from '../model/misc.model';\n\n/**\n * Normalizes HttpErrorResponse to HttpErrorModel.\n *\n * Can be used as a safe and generic way for embodying http errors into\n * NgRx Action payload, as it will strip potentially unserializable parts from\n * it and warn in debug mode if passed error is not instance of HttpErrorModel\n * (which usually happens when logic in NgRx Effect is not sealed correctly)\n */\nexport function normalizeHttpError(\n  error: HttpErrorResponse | HttpErrorModel | any\n): HttpErrorModel | undefined {\n  if (error instanceof HttpErrorModel) {\n    return error;\n  }\n\n  if (error instanceof HttpErrorResponse) {\n    const normalizedError = new HttpErrorModel();\n    normalizedError.message = error.message;\n    normalizedError.status = error.status;\n    normalizedError.statusText = error.statusText;\n    normalizedError.url = error.url;\n\n    // include backend's error details\n    if (Array.isArray(error.error.errors)) {\n      normalizedError.details = error.error.errors;\n    } else if (typeof error.error.error === 'string') {\n      normalizedError.details = [\n        {\n          type: error.error.error,\n          message: error.error.error_description,\n        },\n      ];\n    }\n\n    return normalizedError;\n  }\n\n  if (isDevMode()) {\n    console.error(\n      'Error passed to normalizeHttpError is not HttpErrorResponse instance',\n      error\n    );\n  }\n\n  return undefined;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthConfigService } from '../../user-auth/services/auth-config.service';\nimport { ClientToken } from '../models/client-token.model';\n\n/**\n * Responsible for requesting from OAuth server `ClientToken` for a particular\n * auth client.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientAuthenticationTokenService {\n  constructor(\n    protected http: HttpClient,\n    protected authConfigService: AuthConfigService\n  ) {}\n\n  /**\n   * Loads token with client authentication flow.\n   *\n   * @returns observable with ClientToken\n   */\n  loadClientAuthenticationToken(): Observable<ClientToken> {\n    const url: string = this.authConfigService.getTokenEndpoint();\n    const params = new HttpParams()\n      .set(\n        'client_id',\n        encodeURIComponent(this.authConfigService.getClientId())\n      )\n      .set(\n        'client_secret',\n        encodeURIComponent(this.authConfigService.getClientSecret())\n      )\n      .set('grant_type', 'client_credentials');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    return this.http.post<ClientToken>(url, params, { headers });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../../util/normalize-http-error';\nimport { ClientToken } from '../../../client-auth/models/client-token.model';\nimport { ClientAuthenticationTokenService } from '../../services/client-authentication-token.service';\nimport { ClientAuthActions } from '../actions/index';\n\n@Injectable()\nexport class ClientTokenEffect {\n  loadClientToken$: Observable<ClientAuthActions.ClientTokenAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(ClientAuthActions.LOAD_CLIENT_TOKEN),\n        exhaustMap(() => {\n          return this.clientAuthenticationTokenService\n            .loadClientAuthenticationToken()\n            .pipe(\n              map((token: ClientToken) => {\n                return new ClientAuthActions.LoadClientTokenSuccess(token);\n              }),\n              catchError((error) =>\n                of(\n                  new ClientAuthActions.LoadClientTokenFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private clientAuthenticationTokenService: ClientAuthenticationTokenService\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ClientTokenEffect } from './client-token.effect';\n\nexport const effects: any[] = [ClientTokenEffect];\n\nexport * from './client-token.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { loaderReducer } from '../../../../state/utils/loader/loader.reducer';\nimport { ClientToken } from '../../models/client-token.model';\nimport { ClientAuthState, CLIENT_TOKEN_DATA } from '../client-auth-state';\n\nexport function getReducers(): ActionReducerMap<ClientAuthState> {\n  return {\n    clientToken: loaderReducer<ClientToken>(CLIENT_TOKEN_DATA),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<ClientAuthState>> =\n  new InjectionToken<ActionReducerMap<ClientAuthState>>('ClientAuthReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../../state/state.module';\nimport { CLIENT_AUTH_FEATURE } from './client-auth-state';\nimport { effects } from './effects/index';\nimport { reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    StateModule,\n    StoreModule.forFeature(CLIENT_AUTH_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class ClientAuthStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { interceptors } from './http-interceptors/index';\nimport { ClientAuthStoreModule } from './store/client-auth-store.module';\n\n/**\n * Some of the OCC endpoints require Authorization header with the client token (eg. user registration).\n * This pattern should not be used in the frontend apps, but until OCC changes this requirement\n * we provide this module to support using those endpoints.\n *\n * After OCC improvements regarding client authentication this module can be safely removed.\n */\n@NgModule({\n  imports: [CommonModule, ClientAuthStoreModule],\n})\nexport class ClientAuthModule {\n  static forRoot(): ModuleWithProviders<ClientAuthModule> {\n    return {\n      ngModule: ClientAuthModule,\n      providers: [...interceptors],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Config } from '../config-tokens';\n\nexport const CONFIG_INITIALIZER = new InjectionToken('ConfigInitializer');\n\n/**\n * Used to provide asynchronous config during app initialization\n */\nexport interface ConfigInitializer {\n  /**\n   * List of config parts that are resolved by configFactory, e.g.:\n   * 'context.baseSite', 'context.language'\n   */\n  scopes: string[];\n  /**\n   * Promise that returns config chunk\n   */\n  configFactory: () => Promise<Config>;\n}\n\nexport const CONFIG_INITIALIZER_FORROOT_GUARD = new InjectionToken<void>(\n  'CONFIG_INITIALIZER_FORROOT_GUARD'\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { filter, mapTo, take } from 'rxjs/operators';\nimport { Config, RootConfig } from '../config-tokens';\nimport { deepMerge } from '../utils/deep-merge';\nimport {\n  ConfigInitializer,\n  CONFIG_INITIALIZER_FORROOT_GUARD,\n} from './config-initializer';\n\n/**\n * Provides support for CONFIG_INITIALIZERS\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigInitializerService {\n  constructor(\n    protected config: Config,\n    @Optional()\n    @Inject(CONFIG_INITIALIZER_FORROOT_GUARD)\n    protected initializerGuard: any,\n    @Inject(RootConfig) protected rootConfig: Config\n  ) {}\n\n  protected ongoingScopes$ = new BehaviorSubject<string[] | undefined>(\n    undefined\n  );\n\n  /**\n   * Returns true if config is stable, i.e. all CONFIG_INITIALIZERS resolved correctly\n   */\n  get isStable(): boolean {\n    return !this.initializerGuard || this.ongoingScopes$.value?.length === 0;\n  }\n\n  /**\n   * Recommended way to get config for code that can run before app will finish\n   * initialization (APP_INITIALIZERS, selected service constructors)\n   *\n   * Used without parameters waits for the whole config to become stable\n   *\n   * Parameters allow to describe which part of the config should be stable using\n   * string describing config part, e.g.:\n   * 'siteContext', 'siteContext.language', etc.\n   *\n   * @param scopes String describing parts of the config we want to be sure are stable\n   */\n  getStable(...scopes: string[]): Observable<Config> {\n    if (this.isStable) {\n      return of(this.config);\n    }\n    return this.ongoingScopes$.pipe(\n      filter(\n        (ongoingScopes) =>\n          !!ongoingScopes && this.areReady(scopes, ongoingScopes)\n      ),\n      take(1),\n      mapTo(this.config)\n    );\n  }\n\n  /**\n   * Removes provided scopes from currently ongoingScopes\n   *\n   * @param scopes\n   */\n  protected finishScopes(scopes: string[]) {\n    const newScopes = [...(this.ongoingScopes$.value ?? [])];\n    for (const scope of scopes) {\n      newScopes.splice(newScopes.indexOf(scope), 1);\n    }\n    this.ongoingScopes$.next(newScopes);\n  }\n\n  /**\n   * Return true if provided scopes are not part of ongoingScopes\n   *\n   * @param scopes\n   * @param ongoingScopes\n   */\n  protected areReady(scopes: string[], ongoingScopes: string[]): boolean {\n    if (!scopes.length) {\n      return !ongoingScopes.length;\n    }\n    for (const scope of scopes) {\n      for (const ongoingScope of ongoingScopes) {\n        if (this.scopesOverlap(scope, ongoingScope)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if two scopes overlap.\n   *\n   * Example of scopes that overlap:\n   * 'test' and 'test', 'test.a' and 'test', 'test' and 'test.a'\n   *\n   * Example of scopes that do not overlap:\n   * 'test' and 'testA', 'test.a' and 'test.b', 'test.nested' and 'test.nest'\n   *\n   * @param a ScopeA\n   * @param b ScopeB\n   */\n  protected scopesOverlap(a: string, b: string): boolean {\n    if (b.length > a.length) {\n      [a, b] = [b, a];\n    }\n    return a.startsWith(b) && (a[b.length] || '.') === '.';\n  }\n\n  /**\n   * @internal\n   *\n   * Not a part of a public API, used by APP_INITIALIZER to initialize all provided CONFIG_INITIALIZERS\n   *\n   */\n  async initialize(initializers?: ConfigInitializer[]) {\n    if (this.ongoingScopes$.value) {\n      // guard for double initialization\n      return;\n    }\n\n    const ongoingScopes: string[] = [];\n\n    const asyncConfigs: Promise<void>[] = [];\n\n    for (const initializer of initializers || []) {\n      if (!initializer) {\n        continue;\n      }\n      if (!initializer.scopes || !initializer.scopes.length) {\n        throw new Error('CONFIG_INITIALIZER should provide scope!');\n      }\n\n      if (isDevMode() && !this.areReady(initializer.scopes, ongoingScopes)) {\n        console.warn(\n          'More than one CONFIG_INITIALIZER is initializing the same config scope.'\n        );\n      }\n\n      ongoingScopes.push(...initializer.scopes);\n\n      asyncConfigs.push(\n        (async () => {\n          const initializerConfig = await initializer.configFactory();\n          // contribute configuration to rootConfig\n          deepMerge(\n            this.rootConfig as Record<string, unknown>,\n            initializerConfig\n          );\n          // contribute configuration to global config\n          deepMerge(this.config as Record<string, unknown>, initializerConfig);\n          this.finishScopes(initializer.scopes);\n        })()\n      );\n    }\n    this.ongoingScopes$.next(ongoingScopes);\n\n    if (asyncConfigs.length) {\n      await Promise.all(asyncConfigs);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { Config } from '../config-tokens';\n\nexport const ConfigValidatorToken = new InjectionToken(\n  'ConfigurationValidator'\n);\n\n/**\n * ConfigValidator is used to validate config and display warning messages in development mode.\n *\n * In case of failed validation, should return a string with error message.\n */\nexport type ConfigValidator = (config: Config) => string | void;\n\n/**\n * Use to probide config validation at app bootstrap (when all config chunks are merged)\n *\n * @param configValidator\n */\nexport function provideConfigValidator(\n  configValidator: ConfigValidator\n): Provider {\n  return {\n    provide: ConfigValidatorToken,\n    useValue: configValidator,\n    multi: true,\n  };\n}\n\nexport function validateConfig(\n  config: Config,\n  configValidators: ConfigValidator[]\n) {\n  for (const validate of configValidators) {\n    const warning = validate(config);\n    if (warning) {\n      console.warn(warning);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '../../../occ/config/occ-config';\nimport { AuthConfig } from './auth-config';\n\nexport function baseUrlConfigValidator(config: OccConfig & AuthConfig) {\n  if (\n    typeof config?.authentication?.baseUrl === 'undefined' &&\n    typeof config?.backend?.occ?.baseUrl === 'undefined' &&\n    // Don't show warning when user tries to work around the issue.\n    config?.authentication?.OAuthLibConfig?.requireHttps !== false\n  ) {\n    return 'Authentication might not work correctly without setting either authentication.baseUrl or backend.occ.baseUrl configuration option! Workaround: To support relative urls in angular-oauth2-oidc library you can try setting authentication.OAuthLibConfig.requireHttps to false.';\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AuthConfig } from './auth-config';\n\nexport const defaultAuthConfig: AuthConfig = {\n  authentication: {\n    client_id: 'mobile_android',\n    client_secret: 'secret',\n    tokenEndpoint: '/oauth/token',\n    revokeEndpoint: '/oauth/revoke',\n    loginUrl: '/oauth/authorize',\n    OAuthLibConfig: {\n      scope: '',\n      customTokenParameters: ['token_type'],\n      strictDiscoveryDocumentValidation: false,\n      skipIssuerCheck: true,\n      disablePKCE: true,\n      oidc: false,\n      clearHashAfterLogin: false,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Type } from '@angular/core';\n\n/**\n * Creates an instance of the given class and fills its properties with the given data.\n *\n * @param type reference to the class\n * @param data object with properties to be copied to the class\n */\nexport function createFrom<T extends object>(type: Type<T>, data: T): T {\n  return Object.assign(new type(), data);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Intended to be inherited by all other Spartacus' events.\n *\n * \"One event to rule them all\".\n */\nexport abstract class CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type: string = 'CxEvent';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CxEvent } from '../../../event/cx-event';\n\n/**\n * Indicates that the user has logged out\n *\n * * The event is fired even for customer emulation\n * * The event is NOT fired for a ASM support agent authentication\n */\nexport class LogoutEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'LogoutEvent';\n}\n\n/**\n * Indicates that the user has logged in\n *\n * * The event is fired even for customer emulation\n * * The event is NOT fired for a ASM support agent authentication\n */\nexport class LoginEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'LoginEvent';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Type } from '@angular/core';\n\nexport interface ActionToEventMapping<T> {\n  /**\n   * String type of action (or types) to be mapped to the event\n   */\n  action: string | string[];\n\n  /**\n   * Event class type (constructor)\n   */\n  event: Type<T> | null;\n\n  /**\n   * Function mapping the instance of the action to the event\n   */\n  factory?: (action: any) => T;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable, Subscriber, Subscription } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n// PRIVATE API\n\n/**\n * Allows for dynamic adding and removing source observables\n * and exposes them as one merged observable at a property `output$`.\n *\n * Thanks to the `share()` operator used inside, it subscribes to source observables\n * only when someone subscribes to it. And it unsubscribes from source observables\n * when the counter of consumers drops to 0.\n *\n * **To avoid memory leaks**, all manually added sources should be manually removed\n * when not plan to emit values anymore. In particular closed event sources won't be\n * automatically removed.\n */\nexport class MergingSubject<T> {\n  /**\n   * List of already added sources (but not removed yet)\n   */\n  private sources: Observable<T>[] = [];\n\n  /**\n   * For each source: it stores a subscription responsible for\n   * passing all values from source to the consumer\n   */\n  private subscriptionsToSources = new Map<Observable<T>, Subscription>();\n\n  /**\n   * Observable with all sources merged.\n   *\n   * Only after subscribing to it, under the hood it subscribes to the source observables.\n   * When the number of subscribers drops to 0, it unsubscribes from all source observables.\n   * But if later on something subscribes to it again, it subscribes to the source observables again.\n   *\n   * It multicasts the emissions for each subscriber.\n   */\n  readonly output$: Observable<T> = new Observable<T>((consumer) => {\n    // There can be only 0 or 1 consumer of this observable coming from the `share()` operator\n    // that is piped right after this observable.\n    // `share()` not only multicasts the results but also  When all end-subscribers unsubscribe from `share()` operator, it will unsubscribe\n    // from this observable (by the nature `refCount`-nature of the `share()` operator).\n\n    this.consumer = consumer;\n    this.bindAllSourcesToConsumer(consumer);\n\n    return () => {\n      this.consumer = null;\n      this.unbindAllSourcesFromConsumer();\n    };\n  }).pipe(share());\n\n  /**\n   * Reference to the subscriber coming from the `share()` operator piped to the `output$` observable.\n   * For more, see docs of the `output$` observable;\n   */\n  private consumer: Subscriber<any> | null = null;\n\n  /**\n   * Registers the given source to pass its values to the `output$` observable.\n   *\n   * It does nothing, when the source has been already added (but not removed yet).\n   */\n  add(source: Observable<T>): void {\n    if (this.has(source)) {\n      return;\n    }\n\n    if (this.consumer) {\n      this.bindSourceToConsumer(source, this.consumer);\n    }\n    this.sources.push(source);\n  }\n\n  /**\n   * Starts passing all values from already added sources to consumer\n   */\n  private bindAllSourcesToConsumer(consumer: Subscriber<T>) {\n    this.sources.forEach((source) =>\n      this.bindSourceToConsumer(source, consumer)\n    );\n  }\n\n  /**\n   * Stops passing all values from already added sources to consumer\n   * (if any consumer is active at the moment)\n   */\n  private unbindAllSourcesFromConsumer() {\n    this.sources.forEach((source) => this.unbindSourceFromConsumer(source));\n  }\n\n  /**\n   * Starts passing all values from a single source to consumer\n   */\n  private bindSourceToConsumer(source: Observable<T>, consumer: Subscriber<T>) {\n    const subscriptionToSource = source.subscribe((val) => consumer.next(val)); // passes all emissions from source to consumer\n    this.subscriptionsToSources.set(source, subscriptionToSource);\n  }\n\n  /**\n   * Stops passing all values from a single source to consumer\n   * (if any consumer is active at the moment)\n   */\n  private unbindSourceFromConsumer(source: Observable<T>) {\n    const subscriptionToSource = this.subscriptionsToSources.get(source);\n    if (subscriptionToSource !== undefined) {\n      subscriptionToSource.unsubscribe();\n      this.subscriptionsToSources.delete(source);\n    }\n  }\n\n  /**\n   * Unregisters the given source so it stops passing its values to `output$` observable.\n   *\n   * Should be used when a source is no longer maintained **to avoid memory leaks**.\n   */\n  remove(source: Observable<T>): void {\n    // clear binding from source to consumer (if any consumer exists at the moment)\n    this.unbindSourceFromConsumer(source);\n\n    // remove source from array\n    let i: number;\n    if ((i = this.sources.findIndex((s) => s === source)) !== -1) {\n      this.sources.splice(i, 1);\n    }\n  }\n\n  /**\n   * Returns whether the given source has been already addded\n   */\n  has(source: Observable<T>): boolean {\n    return this.sources.includes(source);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AbstractType, Injectable, isDevMode, Type } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { createFrom } from '../util/create-from';\nimport { CxEvent } from './cx-event';\nimport { MergingSubject } from './utils/merging-subject';\n\n/**\n * The object holds registered source observables as well as the merged result observable.\n */\ninterface EventMeta<T> {\n  /**\n   * Input subject used for dispatching occasional event (without registering a source)\n   */\n  inputSubject$: Subject<T> | null;\n\n  /**\n   * A custom subject that allows for dynamic adding and removing sources to be merged as an output\n   */\n  mergingSubject: MergingSubject<T>;\n}\n\n/**\n * A service to register and observe event sources. Events are driven by event types, which are class signatures\n * for the given event.\n *\n * It is possible to register multiple sources to a single event, even without\n * knowing as multiple decoupled features can attach sources to the same\n * event type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventService {\n  /**\n   * The various events meta are collected in a map, stored by the event type class\n   */\n  private eventsMeta = new Map<AbstractType<any> | any, EventMeta<any>>();\n\n  /**\n   * Register an event source for the given event type.\n   *\n   * CAUTION: To avoid memory leaks, the returned teardown function should be called\n   *  when the event source is no longer maintained by its creator\n   * (i.e. in `ngOnDestroy` if the event source was registered in the component).\n   *\n   * @since 3.1 - registers the given `source$` for the parent classes of the given `eventType`.\n   *\n   * @param eventType the event type\n   * @param source$ an observable that represents the source\n   *\n   * @returns a teardown function which unregisters the given event source\n   */\n  register<T>(eventType: AbstractType<T>, source$: Observable<T>): () => void {\n    const eventMeta = this.getEventMeta(eventType);\n    if (eventMeta.mergingSubject.has(source$)) {\n      if (isDevMode()) {\n        console.warn(\n          `EventService: the event source`,\n          source$,\n          `has been already registered for the type`,\n          eventType\n        );\n      }\n    } else {\n      eventMeta.mergingSubject.add(source$);\n    }\n\n    return () => eventMeta.mergingSubject.remove(source$);\n  }\n\n  /**\n   * Returns a stream of events for the given event type\n   * @param eventTypes event type\n   */\n  get<T>(eventType: AbstractType<T>): Observable<T> {\n    let output$ = this.getEventMeta(eventType).mergingSubject.output$;\n    if (isDevMode()) {\n      output$ = this.getValidatedEventStream(output$, eventType);\n    }\n    return output$;\n  }\n\n  /**\n   * Dispatches an instance of an individual event.\n   * If the eventType is provided a new event will be created for that type and with the event data.\n   *\n   * @param event an event\n   * @param eventType (optional) - type of event\n   */\n  dispatch<T extends object>(event: T, eventType?: Type<T>): void {\n    if (!eventType) {\n      eventType = event.constructor as Type<T>;\n    } else if (!(event instanceof eventType)) {\n      event = createFrom(eventType, event);\n    }\n    const inputSubject$ = this.getInputSubject(eventType);\n    inputSubject$.next(event);\n  }\n\n  /**\n   * Returns the input subject used to dispatch a single event.\n   * The subject is created on demand, when it's needed for the first time.\n   * @param eventType type of event\n   */\n  private getInputSubject<T>(eventType: AbstractType<T>): Subject<T> {\n    const eventMeta = this.getEventMeta(eventType);\n\n    if (!eventMeta.inputSubject$) {\n      eventMeta.inputSubject$ = new Subject<any>();\n      this.register(eventType, eventMeta.inputSubject$);\n    }\n    return eventMeta.inputSubject$;\n  }\n\n  /**\n   * Returns the event meta object for the given event type\n   */\n  private getEventMeta<T>(eventType: AbstractType<T>): EventMeta<T> {\n    if (!this.eventsMeta.get(eventType)) {\n      if (isDevMode()) {\n        this.validateEventType(eventType);\n      }\n      this.createEventMeta(eventType);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.eventsMeta.get(eventType)!;\n  }\n\n  private createEventMeta<T>(eventType: AbstractType<T>): void {\n    const eventMeta: EventMeta<T> = {\n      inputSubject$: null, // will be created lazily by the `dispatch` method\n      mergingSubject: new MergingSubject<T>(),\n    };\n    this.eventsMeta.set(eventType, eventMeta);\n\n    let parentEvent = Object.getPrototypeOf(eventType);\n    while (\n      parentEvent !== null &&\n      Object.getPrototypeOf(parentEvent) !== Object.getPrototypeOf({})\n    ) {\n      this.register(parentEvent, eventMeta.mergingSubject.output$);\n      parentEvent = Object.getPrototypeOf(parentEvent);\n    }\n  }\n\n  /**\n   * Checks if the event type is a valid type (is a class with constructor).\n   *\n   * Should be used only in dev mode.\n   */\n  private validateEventType<T>(eventType: AbstractType<T>): void {\n    if (!eventType?.constructor) {\n      throw new Error(\n        `EventService:  ${eventType} is not a valid event type. Please provide a class reference.`\n      );\n    }\n\n    this.validateCxEvent(eventType);\n  }\n\n  /**\n   * Validates if the given type (or its prototype chain) extends from the CxEvent.\n   *\n   * Should be used only in the dev mode.\n   */\n  private validateCxEvent<T>(eventType: AbstractType<T>): void {\n    let parentType = eventType;\n    while (\n      parentType !== null &&\n      Object.getPrototypeOf(parentType) !== Object.getPrototypeOf({})\n    ) {\n      if ((parentType as any).type === CxEvent.type) {\n        return;\n      }\n\n      parentType = Object.getPrototypeOf(parentType);\n    }\n\n    console.warn(\n      `The ${eventType.name} (or one of its parent classes) does not inherit from the ${CxEvent.type}`\n    );\n  }\n\n  /**\n   * Returns the given event source with runtime validation whether the emitted values are instances of given event type.\n   *\n   * Should be used only in dev mode.\n   */\n  private getValidatedEventStream<T>(\n    source$: Observable<T>,\n    eventType: AbstractType<T>\n  ): Observable<T> {\n    return source$.pipe(\n      tap((event) => {\n        if (!(event instanceof eventType)) {\n          console.warn(\n            `EventService: The stream`,\n            source$,\n            `emitted the event`,\n            event,\n            `that is not an instance of the declared type`,\n            eventType.name\n          );\n        }\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EventService } from '../../event/event.service';\nimport { createFrom } from '../../util/create-from';\nimport { ActionToEventMapping } from './action-to-event-mapping';\n\n/**\n * Registers streams of ngrx actions as events source streams\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateEventService {\n  constructor(\n    protected actionsSubject: ActionsSubject,\n    protected eventService: EventService\n  ) {}\n\n  /**\n   * Registers an event source stream of specific events\n   * mapped from a given action type.\n   *\n   * @param mapping mapping from action to event\n   *\n   * @returns a teardown function that unregisters the event source\n   */\n  register<T>(mapping: ActionToEventMapping<T>): () => void {\n    return this.eventService.register(\n      mapping.event as Type<T>,\n      this.getFromAction(mapping)\n    );\n  }\n\n  /**\n   * Returns a stream of specific events mapped from a specific action.\n   * @param mapping mapping from action to event\n   */\n  protected getFromAction<T>(mapping: ActionToEventMapping<T>): Observable<T> {\n    return this.actionsSubject\n      .pipe(ofType(...([] as string[]).concat(mapping.action)))\n      .pipe(\n        map((action: { type: string; payload?: T }) =>\n          this.createEvent(action, mapping.event as Type<T>, mapping.factory)\n        )\n      );\n  }\n\n  /**\n   * Creates an event instance for given class out from the action object.\n   * Unless the `factory` parameter is given, the action's `payload` is used\n   * as the argument for the event's constructor.\n   *\n   * @param action instance of an Action\n   * @param mapping mapping from action to event\n   * @param factory optional function getting an action instance and returning an event instance\n   *\n   * @returns instance of an Event\n   */\n  protected createEvent<T>(\n    action: { type: string; payload?: any },\n    eventType: Type<T>,\n    factory?: (action: any) => T\n  ): T {\n    return factory\n      ? factory(action)\n      : createFrom(eventType, action.payload ?? {});\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './action-to-event-mapping';\nexport * from './state-event.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pairwise } from 'rxjs/operators';\nimport { EventService } from '../../../event/event.service';\nimport { StateEventService } from '../../../state/event/index';\nimport { createFrom } from '../../../util/create-from';\nimport { AuthService } from '../facade/auth.service';\nimport { AuthActions } from '../store/actions/index';\nimport { LoginEvent, LogoutEvent } from './user-auth.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAuthEventBuilder {\n  constructor(\n    protected stateEventService: StateEventService,\n    protected eventService: EventService,\n    protected authService: AuthService\n  ) {\n    this.register();\n  }\n\n  /**\n   * Registers user auth events\n   */\n  protected register(): void {\n    this.registerLoginEvent();\n    this.registerLogoutEvent();\n  }\n\n  /**\n   * Register a login event\n   */\n  protected registerLoginEvent(): void {\n    this.stateEventService.register({\n      action: AuthActions.LOGIN,\n      event: LoginEvent,\n    });\n  }\n\n  /**\n   * Register a logout event\n   */\n  protected registerLogoutEvent(): void {\n    this.eventService.register(LogoutEvent, this.buildLogoutEvent());\n  }\n\n  /**\n   * Returns logout event stream\n   */\n  protected buildLogoutEvent(): Observable<LogoutEvent> {\n    return this.authService.isUserLoggedIn().pipe(\n      pairwise(),\n      filter(([prev, curr]) => prev && !curr),\n      map(() => createFrom(LogoutEvent, {}))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { UserAuthEventBuilder } from './user-auth-event.builder';\n\n@NgModule({})\nexport class UserAuthEventModule {\n  constructor(_userAuthEventBuilder: UserAuthEventBuilder) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Translatable } from '../../i18n/translatable';\n\nexport enum GlobalMessageType {\n  MSG_TYPE_CONFIRMATION = '[GlobalMessage] Confirmation',\n  MSG_TYPE_ERROR = '[GlobalMessage] Error',\n  MSG_TYPE_INFO = '[GlobalMessage] Information',\n  MSG_TYPE_WARNING = '[GlobalMessage] Warning',\n  MSG_TYPE_ASSISTIVE = '[GlobalMessage] Assistive',\n}\n\nexport interface GlobalMessage {\n  text: Translatable;\n  type: GlobalMessageType;\n  timeout?: number;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport {\n  GlobalMessage,\n  GlobalMessageType,\n} from '../../models/global-message.model';\n\nexport const ADD_MESSAGE = '[Global-message] Add a Message';\nexport const REMOVE_MESSAGE = '[Global-message] Remove a Message';\nexport const REMOVE_MESSAGES_BY_TYPE =\n  '[Global-message] Remove messages by type';\n\nexport class AddMessage implements Action {\n  readonly type = ADD_MESSAGE;\n  constructor(public payload: GlobalMessage) {}\n}\n\nexport class RemoveMessage implements Action {\n  readonly type = REMOVE_MESSAGE;\n  constructor(public payload: { type: GlobalMessageType; index: number }) {}\n}\n\nexport class RemoveMessagesByType implements Action {\n  readonly type = REMOVE_MESSAGES_BY_TYPE;\n  constructor(public payload: GlobalMessageType) {}\n}\n\nexport type GlobalMessageAction =\n  | AddMessage\n  | RemoveMessage\n  | RemoveMessagesByType;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './global-message.actions';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as GlobalMessageActions from './global-message-group.actions';\nexport { GlobalMessageActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Translatable } from '../../i18n/translatable';\n\nexport const GLOBAL_MESSAGE_FEATURE = 'global-message';\n\nexport interface StateWithGlobalMessage {\n  [GLOBAL_MESSAGE_FEATURE]: GlobalMessageState;\n}\n\nexport interface GlobalMessageState {\n  entities: GlobalMessageEntities;\n}\n\nexport interface GlobalMessageEntities {\n  [messageType: string]: Translatable[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  GlobalMessageState,\n  GLOBAL_MESSAGE_FEATURE,\n  StateWithGlobalMessage,\n} from '../global-message-state';\n\nexport const getGlobalMessageState: MemoizedSelector<\n  StateWithGlobalMessage,\n  GlobalMessageState\n> = createFeatureSelector<GlobalMessageState>(GLOBAL_MESSAGE_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Translatable } from '../../../i18n/translatable';\nimport { GlobalMessageType } from '../../models/global-message.model';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageState,\n  StateWithGlobalMessage,\n} from '../global-message-state';\nimport { getGlobalMessageState } from './feature.selector';\n\nexport const getGlobalMessageEntities: MemoizedSelector<\n  StateWithGlobalMessage,\n  GlobalMessageEntities\n> = createSelector(\n  getGlobalMessageState,\n  (state: GlobalMessageState) => state.entities\n);\n\nexport const getGlobalMessageEntitiesByType = (\n  type: GlobalMessageType\n): MemoizedSelector<StateWithGlobalMessage, Translatable[]> => {\n  return createSelector(\n    getGlobalMessageEntities,\n    (entities) => entities && entities[type]\n  );\n};\n\nexport const getGlobalMessageCountByType = (\n  type: GlobalMessageType\n): MemoizedSelector<StateWithGlobalMessage, number> => {\n  return createSelector(\n    getGlobalMessageEntitiesByType(type),\n    (entities) => entities && entities.length\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './feature.selector';\nexport * from './global-message.selectors';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as GlobalMessageSelectors from './global-message-group.selectors';\nexport { GlobalMessageSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Translatable } from '../../i18n/translatable';\nimport { isNotUndefined } from '../../util/type-guards';\nimport { GlobalMessageType } from '../models/global-message.model';\nimport { GlobalMessageActions } from '../store/actions/index';\nimport {\n  GlobalMessageEntities,\n  StateWithGlobalMessage,\n} from '../store/global-message-state';\nimport { GlobalMessageSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalMessageService {\n  constructor(protected store: Store<StateWithGlobalMessage>) {}\n\n  /**\n   * Get all global messages\n   */\n  get(): Observable<GlobalMessageEntities> {\n    return this.store.pipe(\n      select(GlobalMessageSelectors.getGlobalMessageEntities),\n      filter(isNotUndefined)\n    );\n  }\n\n  /**\n   * Add one message into store\n   * @param text: string | Translatable\n   * @param type: GlobalMessageType object\n   * @param timeout: number\n   */\n  add(\n    text: string | Translatable,\n    type: GlobalMessageType,\n    timeout?: number\n  ): void {\n    this.store.dispatch(\n      new GlobalMessageActions.AddMessage({\n        text: typeof text === 'string' ? { raw: text } : text,\n        type,\n        timeout,\n      })\n    );\n  }\n\n  /**\n   * Remove message(s) from store\n   * @param type: GlobalMessageType\n   * @param index:optional. Without it, messages will be removed by type; otherwise,\n   * message will be removed from list by index.\n   */\n  remove(type: GlobalMessageType, index?: number): void {\n    this.store.dispatch(\n      index !== undefined\n        ? new GlobalMessageActions.RemoveMessage({\n            type: type,\n            index: index,\n          })\n        : new GlobalMessageActions.RemoveMessagesByType(type)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport {\n  combineLatest,\n  defer,\n  EMPTY,\n  Observable,\n  queueScheduler,\n  Subject,\n  Subscription,\n  using,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  observeOn,\n  pairwise,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { GlobalMessageService } from '../../../global-message/facade/global-message.service';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\nimport { OccEndpointsService } from '../../../occ/services/occ-endpoints.service';\nimport { RoutingService } from '../../../routing/facade/routing.service';\nimport { AuthService } from '../facade/auth.service';\nimport { AuthToken } from '../models/auth-token.model';\nimport { AuthRedirectService } from './auth-redirect.service';\nimport { AuthStorageService } from './auth-storage.service';\nimport { OAuthLibWrapperService } from './oauth-lib-wrapper.service';\n\n/**\n * Extendable service for `AuthInterceptor`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthHttpHeaderService implements OnDestroy {\n  /**\n   * Starts the refresh of the access token\n   */\n  protected refreshTokenTrigger$ = new Subject<AuthToken>();\n\n  /**\n   * Internal token streams which reads the latest from the storage.\n   * Emits the token or `undefined`\n   */\n  protected token$: Observable<AuthToken | undefined> = this.authStorageService\n    .getToken()\n    .pipe(map((token) => (token?.access_token ? token : undefined)));\n\n  /**\n   * Compares the previous and the new token in order to stop the refresh or logout processes\n   */\n  protected stopProgress$ = this.token$.pipe(\n    // Keeps the previous and the new token\n    pairwise(),\n    tap(([oldToken, newToken]) => {\n      // if we got the new token we know that either the refresh or logout finished\n      if (oldToken?.access_token !== newToken?.access_token) {\n        this.authService.setLogoutProgress(false);\n        this.authService.setRefreshProgress(false);\n      }\n    })\n  );\n\n  /**\n   * Refreshes the token only if currently there's no refresh nor logout in progress.\n   * If the refresh token is not present, it triggers the logout process\n   */\n  protected refreshToken$ = this.refreshTokenTrigger$.pipe(\n    withLatestFrom(\n      this.authService.refreshInProgress$,\n      this.authService.logoutInProgress$\n    ),\n    filter(\n      ([, refreshInProgress, logoutInProgress]) =>\n        !refreshInProgress && !logoutInProgress\n    ),\n    tap(([token]) => {\n      if (token?.refresh_token) {\n        this.oAuthLibWrapperService.refreshToken();\n        this.authService.setRefreshProgress(true);\n      } else {\n        this.handleExpiredRefreshToken();\n      }\n    })\n  );\n\n  /**\n   * Kicks of the process by listening to the new token and refresh token processes.\n   * This token should be used when retrying the failed http request.\n   */\n  protected tokenToRetryRequest$ = using(\n    () => this.refreshToken$.subscribe(),\n    () => this.getStableToken()\n  ).pipe(shareReplay({ refCount: true, bufferSize: 1 }));\n\n  protected subscriptions = new Subscription();\n\n  constructor(\n    protected authService: AuthService,\n    protected authStorageService: AuthStorageService,\n    protected oAuthLibWrapperService: OAuthLibWrapperService,\n    protected routingService: RoutingService,\n    protected occEndpoints: OccEndpointsService,\n    protected globalMessageService: GlobalMessageService,\n    protected authRedirectService: AuthRedirectService\n  ) {\n    // We need to have stopProgress$ stream active for the whole time,\n    // so when the logout finishes we finish it's process.\n    // It could happen when retryToken$ is not active.\n    this.subscriptions.add(this.stopProgress$.subscribe());\n  }\n\n  /**\n   * Checks if request should be handled by this service (if it's OCC call).\n   */\n  public shouldCatchError(request: HttpRequest<any>): boolean {\n    return this.isOccUrl(request.url);\n  }\n\n  public shouldAddAuthorizationHeader(request: HttpRequest<any>): boolean {\n    const hasAuthorizationHeader = !!this.getAuthorizationHeader(request);\n    const isOccUrl = this.isOccUrl(request.url);\n    return !hasAuthorizationHeader && isOccUrl;\n  }\n\n  /**\n   * Adds `Authorization` header for OCC calls.\n   */\n  public alterRequest(\n    request: HttpRequest<any>,\n    token?: AuthToken\n  ): HttpRequest<any> {\n    const hasAuthorizationHeader = !!this.getAuthorizationHeader(request);\n    const isBaseSitesRequest = this.isBaseSitesRequest(request);\n    const isOccUrl = this.isOccUrl(request.url);\n    if (!hasAuthorizationHeader && isOccUrl && !isBaseSitesRequest) {\n      return request.clone({\n        setHeaders: {\n          ...this.createAuthorizationHeader(token),\n        },\n      });\n    }\n    return request;\n  }\n\n  protected isOccUrl(url: string): boolean {\n    return url.includes(this.occEndpoints.getBaseUrl());\n  }\n\n  protected isBaseSitesRequest(request: HttpRequest<any>): boolean {\n    return request.url.includes(\n      this.occEndpoints.getRawEndpointValue('baseSites')\n    );\n  }\n\n  protected getAuthorizationHeader(request: HttpRequest<any>): string | null {\n    const rawValue = request.headers.get('Authorization');\n    return rawValue;\n  }\n\n  protected createAuthorizationHeader(\n    token?: AuthToken\n  ): { Authorization: string } | {} {\n    if (token?.access_token) {\n      return {\n        Authorization: `${token.token_type || 'Bearer'} ${token.access_token}`,\n      };\n    }\n    let currentToken: AuthToken | undefined;\n    this.authStorageService\n      .getToken()\n      .subscribe((authToken) => (currentToken = authToken))\n      .unsubscribe();\n\n    if (currentToken?.access_token) {\n      return {\n        Authorization: `${currentToken.token_type || 'Bearer'} ${\n          currentToken.access_token\n        }`,\n      };\n    }\n    return {};\n  }\n\n  /**\n   * Refreshes access_token and then retries the call with the new token.\n   */\n  public handleExpiredAccessToken(\n    request: HttpRequest<any>,\n    next: HttpHandler,\n    initialToken: AuthToken | undefined\n  ): Observable<HttpEvent<AuthToken>> {\n    return this.getValidToken(initialToken).pipe(\n      switchMap((token) =>\n        // we break the stream with EMPTY when we don't have the token. This prevents sending the requests with `Authorization: bearer undefined` header\n        token\n          ? next.handle(this.createNewRequestWithNewToken(request, token))\n          : EMPTY\n      )\n    );\n  }\n\n  /**\n   * Logout user, redirected to login page and informs about expired session.\n   */\n  public handleExpiredRefreshToken(): void {\n    // There might be 2 cases:\n    // 1. when user is already on some page (router is stable) and performs an UI action\n    // that triggers http call (i.e. button click to save data in backend)\n    // 2. when user is navigating to some page and a route guard triggers the http call\n    // (i.e. guard loading cms page data)\n    //\n    // In the second case, we want to remember the anticipated url before we navigate to\n    // the login page, so we can redirect back to that URL after user authenticates.\n    this.authRedirectService.saveCurrentNavigationUrl();\n\n    // Logout user\n    // TODO(#9638): Use logout route when it will support passing redirect url\n    this.authService.coreLogout().finally(() => {\n      this.routingService.go({ cxRoute: 'login' });\n\n      this.globalMessageService.add(\n        {\n          key: 'httpHandlers.sessionExpired',\n        },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    });\n  }\n\n  /**\n   * Emits the token or `undefined` only when the refresh or the logout processes are finished.\n   */\n  getStableToken(): Observable<AuthToken | undefined> {\n    return combineLatest([\n      this.token$,\n      this.authService.refreshInProgress$,\n      this.authService.logoutInProgress$,\n    ]).pipe(\n      observeOn(queueScheduler),\n      filter(\n        ([_, refreshInProgress, logoutInProgress]) =>\n          !refreshInProgress && !logoutInProgress\n      ),\n      switchMap(() => this.token$)\n    );\n  }\n\n  /**\n   * Returns a valid access token.\n   * It will attempt to refresh it if the current one expired; emits after the new one is retrieved.\n   */\n  protected getValidToken(\n    requestToken: AuthToken | undefined\n  ): Observable<AuthToken | undefined> {\n    return defer(() => {\n      // flag to only refresh token only on first emission\n      let refreshTriggered = false;\n      return this.tokenToRetryRequest$.pipe(\n        tap((token) => {\n          // we want to refresh the access token only when it is old.\n          // this is a guard for the case when there are multiple parallel http calls\n          if (\n            token?.access_token === requestToken?.access_token &&\n            !refreshTriggered\n          ) {\n            this.refreshTokenTrigger$.next(token);\n          }\n          refreshTriggered = true;\n        }),\n        skipWhile(\n          (token) => token?.access_token === requestToken?.access_token\n        ),\n        take(1)\n      );\n    });\n  }\n\n  protected createNewRequestWithNewToken(\n    request: HttpRequest<any>,\n    token: AuthToken\n  ): HttpRequest<any> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${token.token_type || 'Bearer'} ${token.access_token}`,\n      },\n    });\n    return request;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map, switchMap, take } from 'rxjs/operators';\nimport { AuthConfigService } from '../services/auth-config.service';\nimport { AuthHttpHeaderService } from '../services/auth-http-header.service';\n\n/**\n * Responsible for catching auth errors and providing `Authorization` header for API calls.\n * Uses AuthHttpHeaderService for request manipulation and error handling. Interceptor only hooks into request send/received events.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(\n    protected authHttpHeaderService: AuthHttpHeaderService,\n    protected authConfigService: AuthConfigService\n  ) {}\n\n  intercept(\n    httpRequest: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const shouldCatchError =\n      this.authHttpHeaderService.shouldCatchError(httpRequest);\n    const shouldAddAuthorizationHeader =\n      this.authHttpHeaderService.shouldAddAuthorizationHeader(httpRequest);\n\n    const token$ = shouldAddAuthorizationHeader\n      ? // emits sync, unless there is refresh or logout in progress, in which case it emits async\n        this.authHttpHeaderService.getStableToken().pipe(take(1))\n      : of(undefined);\n    const requestAndToken$ = token$.pipe(\n      map((token) => ({\n        token,\n        request: this.authHttpHeaderService.alterRequest(httpRequest, token),\n      }))\n    );\n\n    return requestAndToken$.pipe(\n      switchMap(({ request, token }) =>\n        next.handle(request).pipe(\n          catchError((errResponse: any) => {\n            switch (errResponse.status) {\n              case 401: // Unauthorized\n                if (this.isExpiredToken(errResponse) && shouldCatchError) {\n                  // request failed because of the expired access token\n                  // we should get refresh the token and retry the request, or logout if the refresh is missing / expired\n                  return this.authHttpHeaderService.handleExpiredAccessToken(\n                    request,\n                    next,\n                    token\n                  );\n                } else if (\n                  // Refresh the expired token\n                  // Check if the OAuth endpoint was called and the error is because the refresh token expired\n                  this.errorIsInvalidToken(errResponse)\n                ) {\n                  this.authHttpHeaderService.handleExpiredRefreshToken();\n                  return of<HttpEvent<any>>();\n                }\n                break;\n              case 400: // Bad Request\n                if (\n                  this.errorIsInvalidGrant(errResponse) &&\n                  request.body.get('grant_type') === 'refresh_token'\n                ) {\n                  this.authHttpHeaderService.handleExpiredRefreshToken();\n                }\n                break;\n            }\n            return throwError(errResponse);\n          })\n        )\n      )\n    );\n  }\n\n  protected errorIsInvalidToken(errResponse: HttpErrorResponse): boolean {\n    return (\n      (errResponse.url?.includes(this.authConfigService.getTokenEndpoint()) &&\n        errResponse.error.error === 'invalid_token') ??\n      false\n    );\n  }\n\n  protected errorIsInvalidGrant(errResponse: HttpErrorResponse): boolean {\n    return (\n      (errResponse.url?.includes(this.authConfigService.getTokenEndpoint()) &&\n        errResponse.error.error === 'invalid_grant') ??\n      false\n    );\n  }\n\n  protected isExpiredToken(resp: HttpErrorResponse): boolean {\n    return resp.error?.errors?.[0]?.type === 'InvalidTokenError';\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { AuthConfigService } from '../services/auth-config.service';\nimport { AuthStorageService } from '../services/auth-storage.service';\n\n/**\n * This interceptor is dedicated for Hybris OAuth server which requires `Authorization` header for revoke token calls.\n */\n@Injectable({ providedIn: 'root' })\nexport class TokenRevocationInterceptor implements HttpInterceptor {\n  constructor(\n    protected authStorageService: AuthStorageService,\n    protected authConfigService: AuthConfigService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const isTokenRevocationRequest = this.isTokenRevocationRequest(request);\n    return this.authStorageService.getToken().pipe(\n      take(1),\n      switchMap((token) => {\n        if (isTokenRevocationRequest) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: `${token.token_type || 'Bearer'} ${\n                token.access_token\n              }`,\n            },\n          });\n        }\n        return next.handle(request);\n      })\n    );\n  }\n\n  protected isTokenRevocationRequest(request: HttpRequest<any>): boolean {\n    return request.url === this.authConfigService.getRevokeEndpoint();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { TokenRevocationInterceptor } from './token-revocation.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: AuthInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: TokenRevocationInterceptor,\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\nimport { switchMap } from 'rxjs/operators';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { provideDefaultConfig } from '../../config/config-providers';\nimport { provideConfigValidator } from '../../config/config-validator/config-validator';\nimport { baseUrlConfigValidator } from './config/base-url-config-validator';\nimport { defaultAuthConfig } from './config/default-auth-config';\nimport { UserAuthEventModule } from './events/user-auth-event.module';\nimport { AuthService } from './facade/auth.service';\nimport { interceptors } from './http-interceptors/index';\nimport { AuthStatePersistenceService } from './services/auth-state-persistence.service';\nimport { AuthStorageService } from './services/auth-storage.service';\n\n/**\n * Initialize the check for `token` or `code` in the url returned from the OAuth server.\n */\nexport function checkOAuthParamsInUrl(\n  authService: AuthService,\n  configInit: ConfigInitializerService\n): () => Promise<void> {\n  const result = () =>\n    configInit\n      .getStable()\n      .pipe(\n        switchMap(() =>\n          // Wait for stable config is used, because with auth redirect would kick so quickly that the page would not be loaded correctly\n          authService.checkOAuthParamsInUrl()\n        )\n      )\n      .toPromise();\n\n  return result;\n}\n\nexport function authStatePersistenceFactory(\n  authStatePersistenceService: AuthStatePersistenceService\n) {\n  const result = () => authStatePersistenceService.initSync();\n  return result;\n}\n\n/**\n * Authentication module for a user. Handlers requests for logged in users,\n * provides authorization services and storage for tokens.\n */\n@NgModule({\n  imports: [CommonModule, OAuthModule.forRoot(), UserAuthEventModule],\n})\nexport class UserAuthModule {\n  static forRoot(): ModuleWithProviders<UserAuthModule> {\n    return {\n      ngModule: UserAuthModule,\n      providers: [\n        provideDefaultConfig(defaultAuthConfig),\n        provideConfigValidator(baseUrlConfigValidator),\n        ...interceptors,\n        {\n          provide: OAuthStorage,\n          useExisting: AuthStorageService,\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: authStatePersistenceFactory,\n          deps: [AuthStatePersistenceService],\n          multi: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: checkOAuthParamsInUrl,\n          deps: [AuthService, ConfigInitializerService],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ClientAuthModule } from './client-auth/client-auth.module';\nimport { UserAuthModule } from './user-auth/user-auth.module';\n\n@NgModule({\n  // ClientAuthModule should always be imported after UserAuthModule because the ClientTokenInterceptor must be imported after the AuthInterceptor.\n  // This way, the ClientTokenInterceptor is the first to handle 401 errors and attempt to refresh the client token.\n  // If the request is not for the client token, the AuthInterceptor handles the refresh.\n  imports: [CommonModule, UserAuthModule.forRoot(), ClientAuthModule.forRoot()],\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders<AuthModule> {\n    return {\n      ngModule: AuthModule,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface ClientToken {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  scope: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './client-authentication-token.service';\nexport * from './client-error-handling.service';\nexport * from './client-token.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './client-auth.module';\nexport * from './http-interceptors/client-token.interceptor';\nexport * from './models/client-token.model';\nexport * from './services/index';\nexport * from './store/actions/index';\nexport * from './store/client-auth-state';\nexport * from './store/selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-auth-event.builder';\nexport * from './user-auth-event.module';\nexport * from './user-auth.events';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './auth.service';\nexport * from './user-id.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SemanticPathService } from '../../../routing/configurable-routes/url-translation/semantic-path.service';\nimport { AuthService } from '../facade/auth.service';\nimport { AuthRedirectService } from '../services/auth-redirect.service';\n\n/**\n * Checks if there is currently logged in user.\n * Use to protect pages dedicated only for logged in users.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected router: Router,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.authService.isUserLoggedIn().pipe(\n      map((isLoggedIn) => {\n        if (!isLoggedIn) {\n          this.authRedirectService.saveCurrentNavigationUrl();\n          return this.router.parseUrl(\n            this.semanticPathService.get('login') ?? ''\n          );\n        }\n        return isLoggedIn;\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SemanticPathService } from '../../../routing/configurable-routes/url-translation/semantic-path.service';\nimport { AuthService } from '../facade/auth.service';\n\n/**\n * Checks if there isn't any logged in user.\n * Use to protect pages dedicated only for guests (eg. login page).\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotAuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    // redirect, if user is already logged in:\n    return this.authService.isUserLoggedIn().pipe(\n      map((isLoggedIn) => {\n        if (isLoggedIn) {\n          return this.router.parseUrl(\n            this.semanticPathService.get('home') ?? ''\n          );\n        }\n        return !isLoggedIn;\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './auth.guard';\nexport * from './not-auth.guard';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Structure of token used by the OAuth lib and across `UserAuthModule`.\n */\nexport interface AuthToken {\n  /**\n   * Token used for `Authorization` header.\n   */\n  access_token: string;\n  /**\n   * Token to refresh the `access_token` when it expires.\n   */\n  refresh_token?: string;\n  /**\n   * Time when `access_token` expires.\n   */\n  expires_at?: string;\n  /**\n   * Scopes granted by the OAuth server.\n   */\n  granted_scopes?: string[];\n  /**\n   * Time when `access_token` was fetched from OAuth server and saved.\n   */\n  access_token_stored_at: string;\n  /**\n   * Type of the `access_token`. Most often `Bearer`.\n   */\n  token_type?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface OAuthTryLoginResult {\n  /**\n   * Result returned by native `OAuthService.tryLogin()`.\n   */\n  result: boolean;\n\n  /**\n   * Indicated if the event 'token_received' was emitted during `OAuthService.tryLogin()`.\n   * We can use this identify that we have returned from an external authorization page to Spartacus.\n   * In cases where we don't receive this event, we can deduce that the token has been obtained from storage.\n   */\n  tokenReceived: boolean;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './auth-config.service';\nexport * from './auth-flow-routes.service';\nexport * from './auth-http-header.service';\nexport * from './auth-multisite-isolation.service';\nexport * from './auth-redirect-storage.service';\nexport * from './auth-redirect.service';\nexport * from './auth-state-persistence.service';\nexport * from './auth-storage.service';\nexport * from './oauth-lib-wrapper.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/auth-config';\nexport * from './events/index';\nexport * from './facade/index';\nexport * from './guards/index';\nexport * from './http-interceptors/auth.interceptor';\nexport * from './http-interceptors/token-revocation.interceptor';\nexport * from './models/auth-token.model';\nexport * from './models/oauth-flow';\nexport * from './models/oauth-try-login-response';\nexport * from './services/index';\nexport * from './store/actions';\nexport { UserAuthModule } from './user-auth.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './auth.module';\nexport * from './client-auth/index';\nexport * from './user-auth/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\nimport { OccConfig } from '../../occ/config/occ-config';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class AnonymousConsentsConfig extends OccConfig {\n  anonymousConsents?: {\n    /**\n     * Specify the consent template ID to be show on the registration page.\n     */\n    registerConsent?: string;\n    /**\n     * Show the legal description at the top of the anonymous consents dialog.\n     */\n    showLegalDescriptionInDialog?: boolean;\n    /**\n     * Specify the list of consent template IDs that are required and which can't be toggled off.\n     */\n    requiredConsents?: string[];\n    /**\n     * Consent management page configuration.\n     */\n    consentManagementPage?: {\n      /**\n       * Show all anonymous consents on the consent management page.\n       */\n      showAnonymousConsents?: boolean;\n      /**\n       * A list of consent template IDs that should be hidden on the consent management page.\n       */\n      hideConsents?: string[];\n    };\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends AnonymousConsentsConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { switchMap, take, tap } from 'rxjs/operators';\nimport { AuthService } from '../../auth/index';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENTS_HEADER,\n  ANONYMOUS_CONSENT_STATUS,\n} from '../../model/index';\nimport { OccEndpointsService } from '../../occ/services/occ-endpoints.service';\nimport { AnonymousConsentsConfig } from '../config/anonymous-consents-config';\nimport { AnonymousConsentsService } from '../facade/anonymous-consents.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentsInterceptor implements HttpInterceptor {\n  constructor(\n    private anonymousConsentsService: AnonymousConsentsService,\n    private authService: AuthService,\n    private occEndpoints: OccEndpointsService,\n    private config: AnonymousConsentsConfig\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return combineLatest([\n      this.anonymousConsentsService.getConsents(),\n      this.authService.isUserLoggedIn(),\n    ]).pipe(\n      take(1),\n      switchMap(([consents, isUserLoggedIn]) => {\n        if (!this.isOccUrl(request.url)) {\n          return next.handle(request);\n        }\n\n        const clonedRequest = this.handleRequest(consents, request);\n        return next.handle(clonedRequest).pipe(\n          tap((event) => {\n            if (\n              event instanceof HttpResponse &&\n              (event.url ?? '').startsWith(\n                this.occEndpoints.buildUrl('anonymousConsentTemplates')\n              )\n            ) {\n              this.handleResponse(\n                isUserLoggedIn,\n                event.headers.get(ANONYMOUS_CONSENTS_HEADER),\n                consents\n              );\n            }\n          })\n        );\n      })\n    );\n  }\n\n  private handleResponse(\n    isUserLoggedIn: boolean,\n    newRawConsents: string | null,\n    previousConsents: AnonymousConsent[]\n  ): void {\n    if (!isUserLoggedIn && newRawConsents) {\n      let newConsents: AnonymousConsent[] = [];\n      newConsents =\n        this.anonymousConsentsService.decodeAndDeserialize(newRawConsents);\n      newConsents = this.giveRequiredConsents(newConsents);\n\n      if (\n        this.anonymousConsentsService.consentsUpdated(\n          newConsents,\n          previousConsents\n        )\n      ) {\n        this.anonymousConsentsService.setConsents(newConsents);\n      }\n    }\n  }\n\n  private handleRequest(\n    consents: AnonymousConsent[],\n    request: HttpRequest<any>\n  ): HttpRequest<any> {\n    if (!consents) {\n      return request;\n    }\n\n    const rawConsents =\n      this.anonymousConsentsService.serializeAndEncode(consents);\n    return request.clone({\n      setHeaders: {\n        [ANONYMOUS_CONSENTS_HEADER]: rawConsents,\n      },\n    });\n  }\n\n  private isOccUrl(url: string): boolean {\n    return url.includes(this.occEndpoints.getBaseUrl());\n  }\n\n  private giveRequiredConsents(\n    consents: AnonymousConsent[]\n  ): AnonymousConsent[] {\n    const givenConsents = [...consents];\n\n    if (\n      this.config.anonymousConsents &&\n      this.config.anonymousConsents.requiredConsents\n    ) {\n      for (const consent of givenConsents) {\n        if (\n          consent.templateCode &&\n          this.config.anonymousConsents.requiredConsents.includes(\n            consent.templateCode\n          )\n        ) {\n          consent.consentState = ANONYMOUS_CONSENT_STATUS.GIVEN;\n        }\n      }\n    }\n    return givenConsents;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { AnonymousConsentsInterceptor } from './anonymous-consents-interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: AnonymousConsentsInterceptor,\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const LOAD_BILLING_COUNTRIES = '[User] Load Billing Countries';\nexport const LOAD_BILLING_COUNTRIES_FAIL = '[User] Load Billing Countries Fail';\nexport const LOAD_BILLING_COUNTRIES_SUCCESS =\n  '[User] Load Billing Countries Success';\n\nexport class LoadBillingCountries implements Action {\n  readonly type = LOAD_BILLING_COUNTRIES;\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n\nexport class LoadBillingCountriesFail implements Action {\n  readonly type = LOAD_BILLING_COUNTRIES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadBillingCountriesSuccess implements Action {\n  readonly type = LOAD_BILLING_COUNTRIES_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport type BillingCountriesAction =\n  | LoadBillingCountries\n  | LoadBillingCountriesFail\n  | LoadBillingCountriesSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntityLoaderState } from '../../state/utils/entity-loader/entity-loader-state';\n\nexport const PROCESS_FEATURE = 'process';\n\nexport interface StateWithProcess<T> {\n  [PROCESS_FEATURE]: EntityLoaderState<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MemoizedSelector, createFeatureSelector } from '@ngrx/store';\n\nimport { StateWithProcess, PROCESS_FEATURE } from '../process-state';\nimport { EntityLoaderState } from '../../../state/utils/entity-loader/entity-loader-state';\n\nexport function getProcessState<T>(): MemoizedSelector<\n  StateWithProcess<T>,\n  EntityLoaderState<T>\n> {\n  return createFeatureSelector<EntityLoaderState<T>>(PROCESS_FEATURE);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport {\n  loaderErrorSelector,\n  loaderLoadingSelector,\n  loaderSuccessSelector,\n} from '../../../state/utils/loader/loader.selectors';\nimport { StateWithProcess } from '../process-state';\nimport { getProcessState } from './feature.selector';\n\nexport function getProcessStateFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, LoaderState<T>> {\n  return createSelector(\n    getProcessState(),\n    (entityState: StateUtils.EntityLoaderState<T>) =>\n      StateUtils.entityLoaderStateSelector(entityState, processId)\n  );\n}\n\nexport function getProcessLoadingFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, boolean> {\n  return createSelector(\n    getProcessStateFactory<T>(processId),\n    (loaderState: LoaderState<T>) => loaderLoadingSelector(loaderState)\n  );\n}\n\nexport function getProcessSuccessFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, boolean> {\n  return createSelector(\n    getProcessStateFactory<T>(processId),\n    (loaderState: LoaderState<T>) => loaderSuccessSelector(loaderState)\n  );\n}\n\nexport function getProcessErrorFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, boolean> {\n  return createSelector(\n    getProcessStateFactory<T>(processId),\n    (loaderState: LoaderState<T>) => loaderErrorSelector(loaderState)\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as ProcessSelectors from './process.selectors';\nexport { ProcessSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './process-state';\nexport * from './selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address, Country, Region } from '../../model/address.model';\nimport { ConsentTemplate } from '../../model/consent.model';\nimport { CustomerCouponSearchResult } from '../../model/customer-coupon.model';\nimport { NotificationPreference } from '../../model/notification-preference.model';\nimport { CostCenter } from '../../model/org-unit.model';\nimport { PaymentDetails } from '../../model/payment.model';\nimport { ProductInterestSearchResult } from '../../model/product-interest.model';\nimport { StateUtils } from '../../state/utils/index';\n\nexport const USER_FEATURE = 'user';\nexport const REGISTER_USER_PROCESS_ID = 'registerUser';\nexport const GIVE_CONSENT_PROCESS_ID = 'giveConsent';\nexport const WITHDRAW_CONSENT_PROCESS_ID = 'withdrawConsent';\nexport const UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID =\n  'updateNotificationPreferences';\nexport const ADD_PRODUCT_INTEREST_PROCESS_ID = 'addProductInterests';\nexport const REMOVE_PRODUCT_INTERESTS_PROCESS_ID = 'removeProductInterests';\n\nexport const USER_CONSENTS = '[User] User Consents';\nexport const USER_PAYMENT_METHODS = '[User] User Payment Methods';\nexport const USER_ADDRESSES = '[User] User Addresses';\nexport const USER_COST_CENTERS = '[User] User Cost Centers';\nexport const REGIONS = '[User] Regions';\n\nexport const CUSTOMER_COUPONS = '[User] Customer Coupons';\nexport const SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID = 'subscribeCustomerCoupon';\nexport const UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID =\n  'unsubscribeCustomerCoupon';\nexport const CLAIM_CUSTOMER_COUPON_PROCESS_ID = 'claimCustomerCoupon';\nexport const NOTIFICATION_PREFERENCES = '[User] Notification Preferences';\nexport const PRODUCT_INTERESTS = '[User] Product Interests';\n\nexport interface StateWithUser {\n  [USER_FEATURE]: UserState;\n}\n\n/**\n * @deprecated since 3.2, moved to the `@spartacus/user` package.\n */\nexport interface UserState {\n  addresses: StateUtils.LoaderState<Address[]>;\n  consents: StateUtils.LoaderState<ConsentTemplate[]>;\n  billingCountries: BillingCountriesState;\n  countries: DeliveryCountriesState;\n  payments: StateUtils.LoaderState<PaymentDetails[]>;\n  regions: StateUtils.LoaderState<RegionsState>;\n  customerCoupons: StateUtils.LoaderState<CustomerCouponSearchResult>;\n  notificationPreferences: StateUtils.LoaderState<NotificationPreference[]>;\n  productInterests: StateUtils.LoaderState<ProductInterestSearchResult>;\n  costCenters: StateUtils.LoaderState<CostCenter[]>;\n}\n\nexport interface RegionsState {\n  entities: Region[];\n  country: string | null;\n}\n\nexport interface BillingCountryEntities {\n  [key: string]: Country;\n}\n\nexport interface BillingCountriesState {\n  entities: BillingCountryEntities;\n}\n\nexport interface DeliveryCountryEntities {\n  [key: string]: Country;\n}\n\nexport interface DeliveryCountriesState {\n  entities: DeliveryCountryEntities;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  CustomerCoupon2Customer,\n  CustomerCouponNotification,\n  CustomerCouponSearchResult,\n} from '../../../model/customer-coupon.model';\nimport { PROCESS_FEATURE } from '../../../process/store';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntityLoaderResetAction,\n  EntitySuccessAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport {\n  LoaderFailAction,\n  LoaderLoadAction,\n  LoaderResetAction,\n  LoaderSuccessAction,\n} from '../../../state/utils/loader/loader.action';\nimport {\n  CLAIM_CUSTOMER_COUPON_PROCESS_ID,\n  CUSTOMER_COUPONS,\n  SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n  UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n} from '../user-state';\n\nexport const LOAD_CUSTOMER_COUPONS = '[User] Load Customer Coupons';\nexport const LOAD_CUSTOMER_COUPONS_FAIL = '[User] Load Customer Coupons Fail';\nexport const LOAD_CUSTOMER_COUPONS_SUCCESS =\n  '[User] Load Customer Coupons Success';\nexport const RESET_LOAD_CUSTOMER_COUPONS = '[User] Reset Load Customer Coupons';\n\nexport const SUBSCRIBE_CUSTOMER_COUPON =\n  '[User] Subscribe Customer Notification Coupon';\nexport const SUBSCRIBE_CUSTOMER_COUPON_FAIL =\n  '[User] Subscribe Customer Coupon Notification Fail';\nexport const SUBSCRIBE_CUSTOMER_COUPON_SUCCESS =\n  '[User] Subscribe Customer Coupon Notification Success';\nexport const RESET_SUBSCRIBE_CUSTOMER_COUPON_PROCESS =\n  '[User] Reset Subscribe Customer Coupon Process';\n\nexport const UNSUBSCRIBE_CUSTOMER_COUPON =\n  '[User] Unsubscribe Customer Notification Coupon';\nexport const UNSUBSCRIBE_CUSTOMER_COUPON_FAIL =\n  '[User] Unsubscribe Customer Coupon Notification Fail';\nexport const UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS =\n  '[User] Unsubscribe Customer Coupon Notification Success';\nexport const RESET_UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS =\n  '[User] Reset Unsubscribe Customer Coupon Process';\n\nexport const CLAIM_CUSTOMER_COUPON = '[User] Claim Customer';\nexport const CLAIM_CUSTOMER_COUPON_FAIL = '[User] Claim Customer Fail';\nexport const CLAIM_CUSTOMER_COUPON_SUCCESS = '[User] Claim Customer Success';\n\nexport class LoadCustomerCoupons extends LoaderLoadAction {\n  readonly type = LOAD_CUSTOMER_COUPONS;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize: number;\n      currentPage?: number;\n      sort?: string;\n    }\n  ) {\n    super(CUSTOMER_COUPONS);\n  }\n}\n\nexport class LoadCustomerCouponsFail extends LoaderFailAction {\n  readonly type = LOAD_CUSTOMER_COUPONS_FAIL;\n  constructor(public payload: any) {\n    super(CUSTOMER_COUPONS, payload);\n  }\n}\n\nexport class LoadCustomerCouponsSuccess extends LoaderSuccessAction {\n  readonly type = LOAD_CUSTOMER_COUPONS_SUCCESS;\n  constructor(public payload: CustomerCouponSearchResult) {\n    super(CUSTOMER_COUPONS);\n  }\n}\n\nexport class ResetLoadCustomerCoupons extends LoaderResetAction {\n  readonly type = RESET_LOAD_CUSTOMER_COUPONS;\n  constructor() {\n    super(CUSTOMER_COUPONS);\n  }\n}\n\n// Subscribe coupon notification actions\nexport class SubscribeCustomerCoupon extends EntityLoadAction {\n  readonly type = SUBSCRIBE_CUSTOMER_COUPON;\n  constructor(\n    public payload: {\n      userId: string;\n      couponCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class SubscribeCustomerCouponFail extends EntityFailAction {\n  readonly type = SUBSCRIBE_CUSTOMER_COUPON_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class SubscribeCustomerCouponSuccess extends EntitySuccessAction {\n  readonly type = SUBSCRIBE_CUSTOMER_COUPON_SUCCESS;\n  constructor(public payload: CustomerCouponNotification) {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class ResetSubscribeCustomerCouponProcess extends EntityLoaderResetAction {\n  readonly type = RESET_SUBSCRIBE_CUSTOMER_COUPON_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class UnsubscribeCustomerCoupon extends EntityLoadAction {\n  readonly type = UNSUBSCRIBE_CUSTOMER_COUPON;\n  constructor(\n    public payload: {\n      userId: string;\n      couponCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class UnsubscribeCustomerCouponFail extends EntityFailAction {\n  readonly type = UNSUBSCRIBE_CUSTOMER_COUPON_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class UnsubscribeCustomerCouponSuccess extends EntitySuccessAction {\n  readonly type = UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class ResetUnsubscribeCustomerCouponProcess extends EntityLoaderResetAction {\n  readonly type = RESET_UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class ClaimCustomerCoupon extends EntityLoadAction {\n  readonly type = CLAIM_CUSTOMER_COUPON;\n  constructor(\n    public payload: {\n      userId: string;\n      couponCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class ClaimCustomerCouponFail extends EntityFailAction {\n  readonly type = CLAIM_CUSTOMER_COUPON_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class ClaimCustomerCouponSuccess extends EntitySuccessAction {\n  readonly type = CLAIM_CUSTOMER_COUPON_SUCCESS;\n  constructor(public payload: CustomerCoupon2Customer) {\n    super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\n// action types\nexport type CustomerCouponAction =\n  | LoadCustomerCoupons\n  | LoadCustomerCouponsFail\n  | LoadCustomerCouponsSuccess\n  | ResetLoadCustomerCoupons\n  | SubscribeCustomerCoupon\n  | SubscribeCustomerCouponFail\n  | SubscribeCustomerCouponSuccess\n  | ResetSubscribeCustomerCouponProcess\n  | UnsubscribeCustomerCoupon\n  | UnsubscribeCustomerCouponFail\n  | UnsubscribeCustomerCouponSuccess\n  | ResetUnsubscribeCustomerCouponProcess\n  | ClaimCustomerCoupon\n  | ClaimCustomerCouponFail\n  | ClaimCustomerCouponSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { Country } from '../../../model/address.model';\n\nexport const LOAD_DELIVERY_COUNTRIES = '[User] Load Delivery Countries';\nexport const LOAD_DELIVERY_COUNTRIES_FAIL =\n  '[User] Load Delivery Countries Fail';\nexport const LOAD_DELIVERY_COUNTRIES_SUCCESS =\n  '[User] Load Delivery Countries Success';\n\nexport class LoadDeliveryCountries implements Action {\n  readonly type = LOAD_DELIVERY_COUNTRIES;\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n\nexport class LoadDeliveryCountriesFail implements Action {\n  readonly type = LOAD_DELIVERY_COUNTRIES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadDeliveryCountriesSuccess implements Action {\n  readonly type = LOAD_DELIVERY_COUNTRIES_SUCCESS;\n  constructor(public payload: Country[]) {}\n}\n\nexport type DeliveryCountriesAction =\n  | LoadDeliveryCountries\n  | LoadDeliveryCountriesFail\n  | LoadDeliveryCountriesSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '../../../state/utils/index';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntityLoaderResetAction,\n  EntitySuccessAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport {\n  UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID,\n  NOTIFICATION_PREFERENCES,\n} from '../user-state';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\n\nexport const LOAD_NOTIFICATION_PREFERENCES =\n  '[User] Load Notification Preferences';\nexport const LOAD_NOTIFICATION_PREFERENCES_FAIL =\n  '[User] Load Notification Preferences Fail';\nexport const LOAD_NOTIFICATION_PREFERENCES_SUCCESS =\n  '[User] Load Notification Preferences Success';\nexport const UPDATE_NOTIFICATION_PREFERENCES =\n  '[User] Update Notification Preferences';\nexport const UPDATE_NOTIFICATION_PREFERENCES_FAIL =\n  '[User] Update Notification Preferences Fail';\nexport const UPDATE_NOTIFICATION_PREFERENCES_SUCCESS =\n  '[User] Update Notification Preferences Success';\nexport const RESET_NOTIFICATION_PREFERENCES =\n  '[User] Reset Notification Preferences';\nexport const CLEAR_NOTIFICATION_PREFERENCES =\n  '[User] Clear Notification Preferences';\n\nexport class LoadNotificationPreferences extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_NOTIFICATION_PREFERENCES;\n  constructor(public payload: string) {\n    super(NOTIFICATION_PREFERENCES);\n  }\n}\n\nexport class LoadNotificationPreferencesFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_NOTIFICATION_PREFERENCES_FAIL;\n  constructor(public payload: any) {\n    super(NOTIFICATION_PREFERENCES, payload);\n  }\n}\n\nexport class LoadNotificationPreferencesSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_NOTIFICATION_PREFERENCES_SUCCESS;\n  constructor(public payload: NotificationPreference[]) {\n    super(NOTIFICATION_PREFERENCES);\n  }\n}\n\nexport class UpdateNotificationPreferences extends EntityLoadAction {\n  readonly type = UPDATE_NOTIFICATION_PREFERENCES;\n  constructor(\n    public payload: { userId: string; preferences: NotificationPreference[] }\n  ) {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID);\n  }\n}\n\nexport class UpdateNotificationPreferencesFail extends EntityFailAction {\n  readonly type = UPDATE_NOTIFICATION_PREFERENCES_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID, payload);\n  }\n}\n\nexport class UpdateNotificationPreferencesSuccess extends EntitySuccessAction {\n  readonly type = UPDATE_NOTIFICATION_PREFERENCES_SUCCESS;\n  constructor(public payload: NotificationPreference[]) {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID);\n  }\n}\n\nexport class ResetNotificationPreferences extends EntityLoaderResetAction {\n  readonly type = RESET_NOTIFICATION_PREFERENCES;\n  constructor() {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID);\n  }\n}\n\nexport class ClearNotificationPreferences extends StateUtils.LoaderResetAction {\n  readonly type = CLEAR_NOTIFICATION_PREFERENCES;\n  constructor() {\n    super(NOTIFICATION_PREFERENCES);\n  }\n}\n\nexport type NotificationPreferenceAction =\n  | LoadNotificationPreferences\n  | LoadNotificationPreferencesFail\n  | LoadNotificationPreferencesSuccess\n  | UpdateNotificationPreferences\n  | UpdateNotificationPreferencesFail\n  | UpdateNotificationPreferencesSuccess\n  | ResetNotificationPreferences\n  | ClearNotificationPreferences;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PaymentDetails } from '../../../model/payment.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_PAYMENT_METHODS } from '../user-state';\n\nexport const LOAD_USER_PAYMENT_METHODS = '[User] Load User Payment Methods';\nexport const LOAD_USER_PAYMENT_METHODS_FAIL =\n  '[User] Load User Payment Methods Fail';\nexport const LOAD_USER_PAYMENT_METHODS_SUCCESS =\n  '[User] Load User Payment Methods Success';\n\nexport const SET_DEFAULT_USER_PAYMENT_METHOD =\n  '[User] Set Default User Payment Method';\nexport const SET_DEFAULT_USER_PAYMENT_METHOD_FAIL =\n  '[User] Set Default User Payment Method Fail';\nexport const SET_DEFAULT_USER_PAYMENT_METHOD_SUCCESS =\n  '[User] Set Default User Payment Method Success';\n\nexport const DELETE_USER_PAYMENT_METHOD = '[User] Delete User Payment Method';\nexport const DELETE_USER_PAYMENT_METHOD_FAIL =\n  '[User] Delete User Payment Method Fail';\nexport const DELETE_USER_PAYMENT_METHOD_SUCCESS =\n  '[User] Delete User  Payment Method Success';\n\nexport class LoadUserPaymentMethods extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_PAYMENT_METHODS;\n  constructor(public payload: string) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class LoadUserPaymentMethodsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_PAYMENT_METHODS_FAIL;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS, payload);\n  }\n}\n\nexport class LoadUserPaymentMethodsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_PAYMENT_METHODS_SUCCESS;\n  constructor(public payload: PaymentDetails[]) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class SetDefaultUserPaymentMethod extends StateUtils.LoaderLoadAction {\n  readonly type = SET_DEFAULT_USER_PAYMENT_METHOD;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class SetDefaultUserPaymentMethodFail extends StateUtils.LoaderFailAction {\n  readonly type = SET_DEFAULT_USER_PAYMENT_METHOD_FAIL;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS, payload);\n  }\n}\n\nexport class SetDefaultUserPaymentMethodSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = SET_DEFAULT_USER_PAYMENT_METHOD_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class DeleteUserPaymentMethod extends StateUtils.LoaderLoadAction {\n  readonly type = DELETE_USER_PAYMENT_METHOD;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class DeleteUserPaymentMethodFail extends StateUtils.LoaderFailAction {\n  readonly type = DELETE_USER_PAYMENT_METHOD_FAIL;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS, payload);\n  }\n}\n\nexport class DeleteUserPaymentMethodSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = DELETE_USER_PAYMENT_METHOD_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\n// action types\nexport type UserPaymentMethodsAction =\n  | LoadUserPaymentMethods\n  | LoadUserPaymentMethodsFail\n  | LoadUserPaymentMethodsSuccess\n  | SetDefaultUserPaymentMethod\n  | SetDefaultUserPaymentMethodFail\n  | SetDefaultUserPaymentMethodSuccess\n  | DeleteUserPaymentMethod\n  | DeleteUserPaymentMethodFail\n  | DeleteUserPaymentMethodSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  PRODUCT_INTERESTS,\n  REMOVE_PRODUCT_INTERESTS_PROCESS_ID,\n  ADD_PRODUCT_INTEREST_PROCESS_ID,\n} from '../user-state';\nimport {\n  ProductInterestSearchResult,\n  ProductInterestEntryRelation,\n  NotificationType,\n} from '../../../model/product-interest.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport {\n  LoaderLoadAction,\n  LoaderFailAction,\n  LoaderSuccessAction,\n  LoaderResetAction,\n} from '../../../state/utils/loader/loader.action';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntitySuccessAction,\n  EntityLoaderResetAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\n\nexport const LOAD_PRODUCT_INTERESTS = 'Load Product Interests';\nexport const LOAD_PRODUCT_INTERESTS_FAIL = 'Load Product Interests Fail';\nexport const LOAD_PRODUCT_INTERESTS_SUCCESS = 'Load Product Interests Success';\n\nexport const REMOVE_PRODUCT_INTEREST = 'Remove Product Interest';\nexport const REMOVE_PRODUCT_INTEREST_SUCCESS =\n  'Remove Product Interest Success';\nexport const REMOVE_PRODUCT_INTEREST_FAIL = 'Remove Product Interest Fail';\n\nexport const ADD_PRODUCT_INTEREST = 'Add Product Interest';\nexport const ADD_PRODUCT_INTEREST_FAIL = 'Add Product Interest Fail';\nexport const ADD_PRODUCT_INTEREST_SUCCESS = 'Add Product Interest Success';\n\nexport const ADD_PRODUCT_INTEREST_RESET = 'Add Product Interest Reset';\nexport const REMOVE_PRODUCT_INTEREST_RESET = 'Remove Product Interest Reset';\n\nexport const CLEAR_PRODUCT_INTERESTS = 'Clear Product Interests';\n\nexport class LoadProductInterests extends LoaderLoadAction {\n  readonly type = LOAD_PRODUCT_INTERESTS;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize?: number;\n      currentPage?: number;\n      sort?: string;\n      productCode?: string;\n      notificationType?: NotificationType;\n    }\n  ) {\n    super(PRODUCT_INTERESTS);\n  }\n}\n\nexport class LoadProductInterestsFail extends LoaderFailAction {\n  readonly type = LOAD_PRODUCT_INTERESTS_FAIL;\n  constructor(public payload: any) {\n    super(PRODUCT_INTERESTS, payload);\n  }\n}\n\nexport class LoadProductInterestsSuccess extends LoaderSuccessAction {\n  readonly type = LOAD_PRODUCT_INTERESTS_SUCCESS;\n  constructor(public payload: ProductInterestSearchResult) {\n    super(PRODUCT_INTERESTS);\n  }\n}\n\nexport class RemoveProductInterest extends EntityLoadAction {\n  readonly type = REMOVE_PRODUCT_INTEREST;\n  constructor(\n    public payload: {\n      userId: string;\n      item: ProductInterestEntryRelation;\n      singleDelete?: boolean;\n    }\n  ) {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID);\n  }\n}\n\nexport class RemoveProductInterestSuccess extends EntitySuccessAction {\n  readonly type = REMOVE_PRODUCT_INTEREST_SUCCESS;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID);\n  }\n}\n\nexport class RemoveProductInterestFail extends EntityFailAction {\n  readonly type = REMOVE_PRODUCT_INTEREST_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID, payload);\n  }\n}\n\nexport class AddProductInterest extends EntityLoadAction {\n  readonly type = ADD_PRODUCT_INTEREST;\n  constructor(\n    public payload: {\n      userId: string;\n      productCode: string;\n      notificationType: NotificationType;\n    }\n  ) {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID);\n  }\n}\n\nexport class AddProductInterestSuccess extends EntitySuccessAction {\n  readonly type = ADD_PRODUCT_INTEREST_SUCCESS;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID);\n  }\n}\n\nexport class AddProductInterestFail extends EntityFailAction {\n  readonly type = ADD_PRODUCT_INTEREST_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID, payload);\n  }\n}\n\nexport class ResetAddInterestState extends EntityLoaderResetAction {\n  readonly type = ADD_PRODUCT_INTEREST_RESET;\n  constructor() {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID);\n  }\n}\n\nexport class ResetRemoveInterestState extends EntityLoaderResetAction {\n  readonly type = REMOVE_PRODUCT_INTEREST_RESET;\n  constructor() {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID);\n  }\n}\n\nexport class ClearProductInterests extends LoaderResetAction {\n  readonly type = CLEAR_PRODUCT_INTERESTS;\n  constructor() {\n    super(PRODUCT_INTERESTS);\n  }\n}\n\nexport type ProductInterestsAction =\n  | LoadProductInterests\n  | LoadProductInterestsFail\n  | LoadProductInterestsSuccess\n  | RemoveProductInterest\n  | RemoveProductInterestSuccess\n  | RemoveProductInterestFail\n  | AddProductInterest\n  | AddProductInterestFail\n  | AddProductInterestSuccess\n  | ResetAddInterestState\n  | ResetRemoveInterestState\n  | ClearProductInterests;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { Region } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { REGIONS } from '../user-state';\n\nexport const LOAD_REGIONS = '[User] Load Regions';\nexport const LOAD_REGIONS_SUCCESS = '[User] Load Regions Success';\nexport const LOAD_REGIONS_FAIL = '[User] Load Regions Fail';\nexport const CLEAR_REGIONS = '[User] Clear Regions';\n\nexport class LoadRegions extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_REGIONS;\n  constructor(public payload: string) {\n    super(REGIONS);\n  }\n}\n\nexport class LoadRegionsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_REGIONS_FAIL;\n  constructor(public payload: any) {\n    super(REGIONS, payload);\n  }\n}\n\nexport class LoadRegionsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_REGIONS_SUCCESS;\n  constructor(public payload: { entities: Region[]; country: string }) {\n    super(REGIONS);\n  }\n}\n\nexport class ClearRegions implements Action {\n  readonly type = CLEAR_REGIONS;\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n\nexport type RegionsAction =\n  | LoadRegions\n  | LoadRegionsFail\n  | LoadRegionsSuccess\n  | ClearRegions;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_ADDRESSES } from '../user-state';\n\nexport const LOAD_USER_ADDRESSES = '[User] Load User Addresses';\nexport const LOAD_USER_ADDRESSES_FAIL = '[User] Load User Addresses Fail';\nexport const LOAD_USER_ADDRESSES_SUCCESS = '[User] Load User Addresses Success';\n\nexport const ADD_USER_ADDRESS = '[User] Add User Address';\nexport const ADD_USER_ADDRESS_FAIL = '[User] Add User Address Fail';\nexport const ADD_USER_ADDRESS_SUCCESS = '[User] Add User Address Success';\n\nexport const UPDATE_USER_ADDRESS = '[User] Update User Address';\nexport const UPDATE_USER_ADDRESS_FAIL = '[User] Update User Address Fail';\nexport const UPDATE_USER_ADDRESS_SUCCESS = '[User] Update User Address Success';\n\nexport const DELETE_USER_ADDRESS = '[User] Delete User Address';\nexport const DELETE_USER_ADDRESS_FAIL = '[User] Delete User Address Fail';\nexport const DELETE_USER_ADDRESS_SUCCESS = '[User] Delete User Address Success';\n\nexport class LoadUserAddresses extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_ADDRESSES;\n  constructor(public payload: string) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class LoadUserAddressesFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_ADDRESSES_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class LoadUserAddressesSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_ADDRESSES_SUCCESS;\n  constructor(public payload: Address[]) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// Adding address actions\nexport class AddUserAddress extends StateUtils.LoaderLoadAction {\n  readonly type = ADD_USER_ADDRESS;\n  constructor(public payload: { userId: string; address: Address }) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class AddUserAddressFail extends StateUtils.LoaderFailAction {\n  readonly type = ADD_USER_ADDRESS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class AddUserAddressSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = ADD_USER_ADDRESS_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// Updating address actions\nexport class UpdateUserAddress extends StateUtils.LoaderLoadAction {\n  readonly type = UPDATE_USER_ADDRESS;\n  constructor(\n    public payload: { userId: string; addressId: string; address: Address }\n  ) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class UpdateUserAddressFail extends StateUtils.LoaderFailAction {\n  readonly type = UPDATE_USER_ADDRESS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class UpdateUserAddressSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = UPDATE_USER_ADDRESS_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// Deleting address actions\nexport class DeleteUserAddress extends StateUtils.LoaderLoadAction {\n  readonly type = DELETE_USER_ADDRESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class DeleteUserAddressFail extends StateUtils.LoaderFailAction {\n  readonly type = DELETE_USER_ADDRESS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class DeleteUserAddressSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = DELETE_USER_ADDRESS_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// action types\nexport type UserAddressesAction =\n  | LoadUserAddresses\n  | LoadUserAddressesFail\n  | LoadUserAddressesSuccess\n  | AddUserAddress\n  | AddUserAddressFail\n  | AddUserAddressSuccess\n  | UpdateUserAddress\n  | UpdateUserAddressFail\n  | UpdateUserAddressSuccess\n  | DeleteUserAddress\n  | DeleteUserAddressFail\n  | DeleteUserAddressSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport {\n  GIVE_CONSENT_PROCESS_ID,\n  USER_CONSENTS,\n  WITHDRAW_CONSENT_PROCESS_ID,\n} from '../user-state';\n\nexport const LOAD_USER_CONSENTS = '[User] Load User Consents';\nexport const LOAD_USER_CONSENTS_SUCCESS = '[User] Load User Consents Success';\nexport const LOAD_USER_CONSENTS_FAIL = '[User] Load User Consents Fail';\nexport const RESET_LOAD_USER_CONSENTS = '[User] Reset Load User Consents';\n\nexport const GIVE_USER_CONSENT = '[User] Give User Consent';\nexport const GIVE_USER_CONSENT_FAIL = '[User] Give User Consent Fail';\nexport const GIVE_USER_CONSENT_SUCCESS = '[User] Give User Consent Success';\nexport const RESET_GIVE_USER_CONSENT_PROCESS =\n  '[User] Reset Give User Consent Process';\nexport const TRANSFER_ANONYMOUS_CONSENT = '[User] Transfer Anonymous Consent';\n\nexport const WITHDRAW_USER_CONSENT = '[User] Withdraw User Consent';\nexport const WITHDRAW_USER_CONSENT_FAIL = '[User] Withdraw User Consent Fail';\nexport const WITHDRAW_USER_CONSENT_SUCCESS =\n  '[User] Withdraw User Consent Success';\nexport const RESET_WITHDRAW_USER_CONSENT_PROCESS =\n  '[User] Reset Withdraw User Consent Process';\n\nexport class LoadUserConsents extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_CONSENTS;\n  constructor(public payload: string) {\n    super(USER_CONSENTS);\n  }\n}\n\nexport class LoadUserConsentsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_CONSENTS_FAIL;\n  constructor(public payload: any) {\n    super(USER_CONSENTS, payload);\n  }\n}\n\nexport class LoadUserConsentsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_CONSENTS_SUCCESS;\n  constructor(public payload: ConsentTemplate[]) {\n    super(USER_CONSENTS);\n  }\n}\n\nexport class ResetLoadUserConsents extends StateUtils.LoaderResetAction {\n  readonly type = RESET_LOAD_USER_CONSENTS;\n  constructor() {\n    super(USER_CONSENTS);\n  }\n}\n\nexport class GiveUserConsent extends StateUtils.EntityLoadAction {\n  readonly type = GIVE_USER_CONSENT;\n  constructor(\n    public payload: {\n      userId: string;\n      consentTemplateId: string | undefined;\n      consentTemplateVersion: number | undefined;\n    }\n  ) {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class GiveUserConsentFail extends StateUtils.EntityFailAction {\n  readonly type = GIVE_USER_CONSENT_FAIL;\n  constructor(payload: any) {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID, payload);\n  }\n}\n\nexport class GiveUserConsentSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = GIVE_USER_CONSENT_SUCCESS;\n  constructor(public consentTemplate: ConsentTemplate) {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class ResetGiveUserConsentProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_GIVE_USER_CONSENT_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class TransferAnonymousConsent {\n  readonly type = TRANSFER_ANONYMOUS_CONSENT;\n  constructor(\n    public payload: {\n      userId: string;\n      consentTemplateId: string | undefined;\n      consentTemplateVersion: number | undefined;\n    }\n  ) {}\n}\n\nexport class WithdrawUserConsent extends StateUtils.EntityLoadAction {\n  readonly type = WITHDRAW_USER_CONSENT;\n  constructor(\n    public payload: {\n      userId: string;\n      consentCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class WithdrawUserConsentFail extends StateUtils.EntityFailAction {\n  readonly type = WITHDRAW_USER_CONSENT_FAIL;\n  constructor(payload: any) {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID, payload);\n  }\n}\n\nexport class WithdrawUserConsentSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = WITHDRAW_USER_CONSENT_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class ResetWithdrawUserConsentProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_WITHDRAW_USER_CONSENT_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID);\n  }\n}\n\nexport type UserConsentsAction =\n  | LoadUserConsents\n  | LoadUserConsentsFail\n  | LoadUserConsentsSuccess\n  | ResetLoadUserConsents\n  | GiveUserConsent\n  | GiveUserConsentFail\n  | GiveUserConsentSuccess\n  | ResetGiveUserConsentProcess\n  | WithdrawUserConsent\n  | WithdrawUserConsentFail\n  | WithdrawUserConsentSuccess\n  | ResetWithdrawUserConsentProcess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_COST_CENTERS } from '../user-state';\n\nexport const LOAD_ACTIVE_COST_CENTERS = '[User] Load Active CostCenters';\nexport const LOAD_ACTIVE_COST_CENTERS_FAIL =\n  '[User] Load Active CostCenters Fail';\nexport const LOAD_ACTIVE_COST_CENTERS_SUCCESS =\n  '[User] Load Active CostCenters Success';\n\nexport class LoadActiveCostCenters extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_ACTIVE_COST_CENTERS;\n  constructor(public payload: string) {\n    super(USER_COST_CENTERS);\n  }\n}\n\nexport class LoadActiveCostCentersFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_ACTIVE_COST_CENTERS_FAIL;\n  constructor(public payload: any) {\n    super(USER_COST_CENTERS, payload);\n  }\n}\n\nexport class LoadActiveCostCentersSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_ACTIVE_COST_CENTERS_SUCCESS;\n  constructor(public payload: CostCenter[]) {\n    super(USER_COST_CENTERS);\n  }\n}\n\nexport type UserCostCenterAction =\n  | LoadActiveCostCenters\n  | LoadActiveCostCentersFail\n  | LoadActiveCostCentersSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nexport const CLEAR_USER_MISCS_DATA = '[User] Clear User Misc Data';\n\nexport class ClearUserMiscsData implements Action {\n  readonly type = CLEAR_USER_MISCS_DATA;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport { REGISTER_USER_PROCESS_ID } from '../user-state';\n\nexport const REGISTER_USER_SUCCESS = '[User] Register User Success';\n\n/**\n * @deprecated since 3.2, moved to `@spartacus/user/profile/core`\n */\nexport class RegisterUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = REGISTER_USER_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, REGISTER_USER_PROCESS_ID);\n  }\n}\n\n// action types\nexport type UserRegisterOrRemoveAction = RegisterUserSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './billing-countries.action';\nexport * from './customer-coupon.action';\nexport * from './delivery-countries.action';\nexport * from './notification-preference.action';\nexport * from './payment-methods.action';\nexport * from './product-interests.actions';\nexport * from './regions.action';\nexport * from './user-addresses.action';\nexport * from './user-consents.action';\nexport * from './user-cost-center.action';\nexport * from './user-misc.action';\nexport * from './user-register.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as UserActions from './user-group.actions';\nexport { UserActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { AnonymousConsent, ConsentTemplate } from '../../model/consent.model';\n\nexport abstract class AnonymousConsentTemplatesAdapter {\n  /**\n   * Abstract method used to load anonymous consents.\n   */\n  abstract loadAnonymousConsentTemplates(): Observable<ConsentTemplate[]>;\n\n  /**\n   * Loads anonymous consents in an optimal way.\n   */\n  abstract loadAnonymousConsents(): Observable<AnonymousConsent[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AnonymousConsent, ConsentTemplate } from '../../model/consent.model';\nimport { AnonymousConsentTemplatesAdapter } from './anonymous-consent-templates.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnonymousConsentTemplatesConnector {\n  constructor(protected adapter: AnonymousConsentTemplatesAdapter) {}\n\n  loadAnonymousConsentTemplates(): Observable<ConsentTemplate[]> {\n    return this.adapter.loadAnonymousConsentTemplates();\n  }\n\n  loadAnonymousConsents(): Observable<AnonymousConsent[]> {\n    return this.adapter.loadAnonymousConsents();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consents.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing/models/page-context.model';\n\nexport abstract class CmsComponentAdapter {\n  /**\n   * Abstract method must be used to load the component for a given `id` and `PageContext`.\n   * The component can be loaded from alternative backend, as long as the structure\n   * converts to the `CmsStructureModel`.\n   *\n   * @param pageContext The `PageContext` holding the page Id.\n   */\n  abstract load<T extends CmsComponent>(\n    id: string,\n    pageContext: PageContext,\n    fields?: string\n  ): Observable<T>;\n\n  /**\n   * Abstract method to get components by list of ids.\n   *\n   * @param ids\n   * @param pageContext\n   */\n  abstract findComponentsByIds(\n    ids: string[],\n    pageContext: PageContext\n  ): Observable<CmsComponent[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { PageContext } from '../../../routing/models/page-context.model';\nimport { CmsStructureModel } from '../../model/page.model';\n\n/**\n * Abstract class that can be used to implement custom loader logic\n * in order to load CMS structure from third-party CMS system.\n */\nexport abstract class CmsPageAdapter {\n  /**\n   * Abstract method must be used to load the page structure for a given `PageContext`.\n   * The page can be loaded from alternative sources, as long as the structure\n   * converts to the `CmsStructureModel`.\n   *\n   * @param pageContext The `PageContext` holding the page Id.\n   */\n  abstract load(pageContext: PageContext): Observable<CmsStructureModel>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { CmsStructureModel } from '../../model/page.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const CMS_PAGE_NORMALIZER = new InjectionToken<\n  Converter<any, CmsStructureModel>\n>('CmsPageNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, StaticProvider } from '@angular/core';\nimport { Route } from '@angular/router';\nimport { Config } from '../../config/config-tokens';\nimport { CmsComponent } from '../../model/cms.model';\nimport { OccConfig } from '../../occ/config/occ-config';\n\nexport interface StandardCmsComponentConfig {\n  CMSSiteContextComponent?: CmsComponentMapping;\n  CMSLinkComponent?: CmsComponentMapping;\n  SimpleResponsiveBannerComponent?: CmsComponentMapping;\n  SimpleBannerComponent?: CmsComponentMapping;\n  BannerComponent?: CmsComponentMapping;\n  CMSParagraphComponent?: CmsComponentMapping;\n  BreadcrumbComponent?: CmsComponentMapping;\n  NavigationComponent?: CmsComponentMapping;\n  FooterNavigationComponent?: CmsComponentMapping;\n  CategoryNavigationComponent?: CmsComponentMapping;\n  ProductAddToCartComponent?: CmsComponentMapping;\n  MiniCartComponent?: CmsComponentMapping;\n  ProductCarouselComponent?: CmsComponentMapping;\n  SearchBoxComponent?: CmsComponentMapping;\n  ProductReferencesComponent?: CmsComponentMapping;\n  CMSTabParagraphComponent?: CmsComponentMapping;\n  LoginComponent?: CmsComponentMapping;\n}\n\nexport interface JspIncludeCmsComponentConfig {\n  AccountAddressBookComponent?: CmsComponentMapping;\n  ForgotPasswordComponent?: CmsComponentMapping;\n  ResetPasswordComponent?: CmsComponentMapping;\n  ProductDetailsTabComponent?: CmsComponentMapping;\n  ProductSpecsTabComponent?: CmsComponentMapping;\n  ProductReviewsTabComponent?: CmsComponentMapping;\n}\n\nexport const JSP_INCLUDE_CMS_COMPONENT_TYPE = 'JspIncludeComponent';\nexport const CMS_FLEX_COMPONENT_TYPE = 'CMSFlexComponent';\nexport const SMART_EDIT_DUMMY_COMPONENT_TYPE = 'SmartEditDummyCMSComponent';\n\n/**\n * Configuration of the CMS component's child routes\n */\nexport interface CmsComponentChildRoutesConfig {\n  /**\n   * Route `data` property to apply on the parent (host) route of the CMS child routes.\n   */\n  parent?: Pick<Route, 'data'>;\n\n  /**\n   * Child routes defined by the existence of the CMS component on the page.\n   */\n  children?: Route[];\n}\n\nexport interface CmsComponentMapping<T = CmsComponent> {\n  component?: any;\n  /**\n   * Configurable component providers for cms components.\n   *\n   * Component services are designed to be non-singleton services and are scoped\n   * to the component injection tree. The advantage of these services is that they can\n   * resolve services injected to the component injection tree. However, these services\n   * cannot be extended with the native Angular DI system.\n   *\n   * The configurable component providers mitigate this downside, by allowing you to provide\n   * component providers through services.\n   */\n  providers?: StaticProvider[];\n  childRoutes?: Route[] | CmsComponentChildRoutesConfig;\n  disableSSR?: boolean;\n  i18nKeys?: string[];\n  guards?: any[];\n\n  /**\n   * The component data can be statically configured. The data can be used for various reasons:\n   * - Improve performance with an initial data that doesn't require API response\n   * - Introduce UI properties that are not available on the API\n   * - Build ghost design based on the initial data that is used prior to the backend data is loaded\n   */\n  data?: T;\n\n  /**\n   * DeferLoading can be specified globally, but also per component.\n   * Some components require direct loading while it's not initially\n   * in the viewport.\n   */\n  deferLoading?: DeferLoadingStrategy;\n}\n\n/** Strategy to control the loading strategy of DOM elements. */\nexport enum DeferLoadingStrategy {\n  /** Defers loading of DOM elements until element is near/in the users view port */\n  DEFER = 'DEFERRED-LOADING',\n  /** Renders the DOM instantly without being concerned with the view port */\n  INSTANT = 'INSTANT-LOADING',\n}\n\nexport interface CMSComponentConfig\n  extends StandardCmsComponentConfig,\n    JspIncludeCmsComponentConfig {\n  [componentType: string]: CmsComponentMapping | undefined;\n}\n\nexport interface FeatureModuleConfig {\n  /**\n   * Lazy resolved feature module\n   */\n  module?: () => Promise<any>;\n  /**\n   * Lazy resolved dependency modules or features referenced by name\n   */\n  dependencies?: ((() => Promise<any>) | string)[];\n  /**\n   * Cms components covered by this feature\n   */\n  cmsComponents?: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CmsConfig extends OccConfig {\n  featureModules?: { [featureName: string]: FeatureModuleConfig | string };\n  cmsComponents?: CMSComponentConfig;\n  componentsLoading?: {\n    pageSize?: number;\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends CmsConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsComponent } from '../../model/cms.model';\nimport { ContentSlotData } from './content-slot-data.model';\n\nexport interface Page {\n  pageId?: string;\n  name?: string;\n  description?: string;\n  type?: string;\n  title?: string;\n  template?: string;\n  loadTime?: number;\n  slots?: { [key: string]: ContentSlotData };\n  properties?: any;\n  label?: string;\n\n  /**\n   * Lists the page robot information for the given page: `INDEX`, `NOINDEX`, `FOLLOW` or `NOFOLLOW`\n   */\n  robots?: PageRobotsMeta[];\n}\n\n/**\n * Represents the cms structure for pages, slots and components.\n */\nexport interface CmsStructureModel {\n  page?: Page;\n  components?: CmsComponent[];\n}\n\n/**\n * Represents the page meta data that can be used\n * to resolve page data and seo related data.\n */\nexport interface PageMeta {\n  /**\n   * the page title is used for the page title tag which\n   * is visible in the browser navigation as well as in the\n   * Search Engine Result Page\n   */\n  title?: string;\n\n  /**\n   * The page heading is typically used in the UI.\n   */\n  heading?: string;\n\n  /**\n   * The page description is used in the Search Engine Result Page.\n   */\n  description?: string;\n\n  /**\n   * The robots information drives search engines to index the page and\n   * follow links in the page.\n   */\n  robots?: PageRobotsMeta[];\n\n  /**\n   * Image that can be added to the og:image metatag.\n   */\n  image?: string;\n\n  /**\n   * The list of breadcrumbs that can be rendered in the page UI.\n   */\n  breadcrumbs?: BreadcrumbMeta[];\n\n  /**\n   * The canonical URL us used to avoid duplicates of the page being indexed by crawlers.\n   */\n  canonicalUrl?: string;\n}\n\nexport interface BreadcrumbMeta {\n  label: string;\n  link?: string | any[];\n}\n\nexport enum PageRobotsMeta {\n  INDEX = 'INDEX',\n  NOINDEX = 'NOINDEX',\n  FOLLOW = 'FOLLOW',\n  NOFOLLOW = 'NOFOLLOW',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace Occ {\n  /**\n   *\n   * An interface representing Country.\n   */\n  export interface Country {\n    isocode?: string;\n\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing Region.\n   */\n  export interface Region {\n    countryIso?: string;\n\n    isocode?: string;\n\n    isocodeShort?: string;\n\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing RegionList.\n   */\n  export interface RegionList {\n    regions?: Region[];\n  }\n\n  export interface AddressList {\n    addresses?: Address[];\n  }\n\n  /**\n   *\n   * An interface representing Address.\n   */\n  export interface Address {\n    companyName?: string;\n\n    country?: Country;\n\n    defaultAddress?: boolean;\n\n    email?: string;\n\n    firstName?: string;\n\n    formattedAddress?: string;\n\n    id?: string;\n\n    lastName?: string;\n\n    line1?: string;\n\n    line2?: string;\n\n    phone?: string;\n\n    cellphone?: string;\n\n    postalCode?: string;\n\n    region?: Region;\n\n    district?: string;\n\n    shippingAddress?: boolean;\n\n    title?: string;\n\n    titleCode?: string;\n\n    town?: string;\n\n    visibleInAddressBook?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing AddressList.\n   */\n  export interface AddressList {\n    addresses?: Address[];\n  }\n\n  /**\n   *\n   * An interface representing ErrorModel.\n   * Error message\n   *\n   */\n  export interface ErrorModel {\n    /**\n     * Descriptive, human readable error message.\n     */\n    message?: string;\n    /**\n     * Additional classification specific for each\n     * error type e.g. 'noStock'.\n     */\n    reason?: string;\n    /**\n     * Identifier of the related object e.g. '1'.\n     */\n    subject?: string;\n    /**\n     * Type of the object related to the error\n     * e.g. 'entry'.\n     */\n    subjectType?: string;\n    /**\n     * Type of the error e.g. 'LowStockError'.\n     */\n    type?: string;\n  }\n\n  /**\n   *\n   * An interface representing ErrorList.\n   * List of errors\n   *\n   */\n  export interface ErrorList {\n    errors?: ErrorModel[];\n  }\n\n  /**\n   *\n   * An interface representing AddressValidation.\n   */\n  export interface AddressValidation {\n    decision?: string;\n\n    errors?: ErrorList;\n\n    suggestedAddresses?: Address[];\n  }\n\n  /**\n   *\n   * An interface representing Price.\n   */\n  export interface Price {\n    currencyIso?: string;\n\n    formattedValue?: string;\n\n    maxQuantity?: number;\n\n    minQuantity?: number;\n    /**\n     * Possible values include: 'BUY', 'FROM'\n     */\n    priceType?: PriceType;\n\n    value?: number;\n  }\n\n  /**\n   *\n   * An interface representing Stock.\n   */\n  export interface Stock {\n    stockLevel?: number;\n\n    stockLevelStatus?: string;\n  }\n\n  /**\n   *\n   * An interface representing Image.\n   */\n  export interface Image {\n    altText?: string;\n\n    format?: string;\n\n    galleryIndex?: number;\n    /**\n     * Possible values include: 'PRIMARY',\n     * 'GALLERY'\n     */\n    imageType?: ImageType;\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing VariantOptionQualifier.\n   */\n  export interface VariantOptionQualifier {\n    image?: Image;\n\n    name?: string;\n\n    qualifier?: string;\n\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing VariantOption.\n   */\n  export interface VariantOption {\n    code?: string;\n\n    priceData?: Price;\n\n    stock?: Stock;\n\n    url?: string;\n\n    variantOptionQualifiers?: VariantOptionQualifier[];\n  }\n\n  /**\n   *\n   * An interface representing BaseOption.\n   */\n  export interface BaseOption {\n    options?: VariantOption[];\n\n    selected?: VariantOption;\n\n    variantType?: string;\n  }\n\n  /**\n   *\n   * An interface representing SearchQuery.\n   */\n  export interface SearchQuery {\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing SearchState.\n   */\n  export interface SearchState {\n    query?: SearchQuery;\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing Breadcrumb.\n   */\n  export interface Breadcrumb {\n    facetCode?: string;\n\n    facetName?: string;\n\n    facetValueCode?: string;\n\n    facetValueName?: string;\n\n    removeQuery?: SearchState;\n\n    truncateQuery?: SearchState;\n  }\n\n  /**\n   *\n   * An interface representing Component.\n   */\n  export interface Component {\n    modifiedTime?: Date;\n\n    name?: string;\n\n    otherProperties?: any;\n\n    typeCode?: string;\n\n    uid?: string;\n  }\n\n  /**\n   *\n   * An interface representing ComponentList.\n   */\n  export interface ComponentList {\n    component?: Component[] | any[];\n  }\n\n  /**\n   *\n   * An interface representing ContentSlot.\n   */\n  export interface ContentSlot {\n    components?: ComponentList;\n\n    name?: string;\n\n    position?: string;\n\n    slotId?: string;\n\n    slotShared?: boolean;\n\n    slotStatus?: string;\n\n    properties?: any;\n  }\n\n  /**\n   *\n   * An interface representing ContentSlotList.\n   */\n  export interface ContentSlotList {\n    contentSlot?: ContentSlot[];\n  }\n\n  /**\n   *\n   * An interface representing CMSPage.\n   */\n  export interface CMSPage {\n    contentSlots?: ContentSlotList;\n\n    defaultPage?: boolean;\n\n    name?: string;\n\n    template?: string;\n\n    title?: string;\n\n    description?: string;\n\n    typeCode?: string;\n\n    uid?: string;\n\n    label?: string;\n\n    properties?: any;\n\n    robotTag?: PageRobots;\n  }\n\n  /**\n   * The page robot information is exposed with 4 string values.\n   */\n  export enum PageRobots {\n    INDEX_FOLLOW = 'INDEX_FOLLOW',\n    NOINDEX_FOLLOW = 'NOINDEX_FOLLOW',\n    INDEX_NOFOLLOW = 'INDEX_NOFOLLOW',\n    NOINDEX_NOFOLLOW = 'NOINDEX_NOFOLLOW',\n  }\n\n  /**\n   *\n   * An interface representing CardType.\n   */\n  export interface CardType {\n    code?: string;\n\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing CardTypeList.\n   */\n  export interface CardTypeList {\n    cardTypes?: CardType[];\n  }\n\n  /**\n   *\n   * An interface representing PaymentType.\n   */\n  export interface PaymentType {\n    code?: string;\n\n    displayName?: string;\n  }\n\n  /**\n   *\n   * An interface representing PaymentTypeList.\n   */\n  export interface PaymentTypeList {\n    paymentTypes?: PaymentType[];\n  }\n\n  /**\n   *\n   * An interface representing PromotionOrderEntryConsumed.\n   */\n  export interface PromotionOrderEntryConsumed {\n    adjustedUnitPrice?: number;\n\n    code?: string;\n\n    orderEntryNumber?: number;\n\n    quantity?: number;\n  }\n\n  /**\n   *\n   * An interface representing PromotionRestriction.\n   */\n  export interface PromotionRestriction {\n    description?: string;\n\n    restrictionType?: string;\n  }\n\n  /**\n   *\n   * An interface representing Promotion.\n   */\n  export interface Promotion {\n    code?: string;\n\n    couldFireMessages?: string[];\n\n    description?: string;\n\n    enabled?: boolean;\n\n    endDate?: Date;\n\n    firedMessages?: string[];\n\n    priority?: number;\n\n    productBanner?: Image;\n\n    promotionGroup?: string;\n\n    promotionType?: string;\n\n    restrictions?: PromotionRestriction[];\n\n    startDate?: Date;\n\n    title?: string;\n  }\n\n  /**\n   *\n   * An interface representing PromotionResult.\n   */\n  export interface PromotionResult {\n    consumedEntries?: PromotionOrderEntryConsumed[];\n\n    description?: string;\n\n    promotion?: Promotion;\n  }\n\n  /**\n   *\n   * An interface representing Currency.\n   */\n  export interface Currency {\n    active?: boolean;\n\n    isocode?: string;\n\n    name?: string;\n\n    symbol?: string;\n  }\n\n  /**\n   *\n   * An interface representing Voucher.\n   */\n  export interface Voucher {\n    appliedValue?: Price;\n\n    code?: string;\n\n    currency?: Currency;\n\n    description?: string;\n\n    freeShipping?: boolean;\n\n    name?: string;\n\n    value?: number;\n\n    valueFormatted?: string;\n\n    valueString?: string;\n\n    voucherCode?: string;\n  }\n\n  /**\n   *\n   * An interface representing DeliveryMode.\n   */\n  export interface DeliveryMode {\n    code?: string;\n\n    deliveryCost?: Price;\n\n    description?: string;\n\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing GeoPoint.\n   */\n  export interface GeoPoint {\n    latitude?: number;\n\n    longitude?: number;\n  }\n\n  /**\n   *\n   * An interface representing Time.\n   */\n  export interface Time {\n    formattedHour?: string;\n\n    hour?: number;\n\n    minute?: number;\n  }\n\n  /**\n   *\n   * An interface representing SpecialOpeningDay.\n   */\n  export interface SpecialOpeningDay {\n    closed?: boolean;\n\n    closingTime?: Time;\n\n    comment?: string;\n\n    date?: Date;\n\n    formattedDate?: string;\n\n    name?: string;\n\n    openingTime?: Time;\n  }\n\n  /**\n   *\n   * An interface representing WeekdayOpeningDay.\n   */\n  export interface WeekdayOpeningDay {\n    closed?: boolean;\n\n    closingTime?: Time;\n\n    openingTime?: Time;\n\n    weekDay?: string;\n  }\n\n  /**\n   *\n   * An interface representing OpeningSchedule.\n   */\n  export interface OpeningSchedule {\n    code?: string;\n\n    name?: string;\n\n    specialDayOpeningList?: SpecialOpeningDay[];\n\n    weekDayOpeningList?: WeekdayOpeningDay[];\n  }\n\n  /**\n   *\n   * An interface representing PointOfService.\n   */\n  export interface PointOfService {\n    address?: Address;\n\n    description?: string;\n\n    displayName?: string;\n\n    distanceKm?: number;\n\n    features?: { [propertyName: string]: string };\n\n    formattedDistance?: string;\n\n    geoPoint?: GeoPoint;\n\n    mapIcon?: Image;\n\n    name?: string;\n\n    openingHours?: OpeningSchedule;\n\n    storeContent?: string;\n\n    storeImages?: Image[];\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing Category.\n   */\n  export interface Category {\n    code?: string;\n\n    name?: string;\n\n    image?: Image;\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing FeatureUnit.\n   */\n  export interface FeatureUnit {\n    name?: string;\n\n    symbol?: string;\n\n    unitType?: string;\n  }\n\n  /**\n   *\n   * An interface representing FeatureValue.\n   */\n  export interface FeatureValue {\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing Feature.\n   */\n  export interface Feature {\n    code?: string;\n\n    comparable?: boolean;\n\n    description?: string;\n\n    featureUnit?: FeatureUnit;\n\n    featureValues?: FeatureValue[];\n\n    name?: string;\n\n    range?: boolean;\n\n    type?: string;\n  }\n\n  /**\n   *\n   * An interface representing Classification.\n   */\n  export interface Classification {\n    code?: string;\n\n    features?: Feature[];\n\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing FutureStock.\n   */\n  export interface FutureStock {\n    date?: Date;\n\n    formattedDate?: string;\n\n    stock?: Stock;\n  }\n\n  /**\n   *\n   * An interface representing PriceRange.\n   */\n  export interface PriceRange {\n    maxPrice?: Price;\n\n    minPrice?: Price;\n  }\n\n  /**\n   *\n   * An interface representing ProductReference.\n   */\n  export interface ProductReference {\n    description?: string;\n\n    preselected?: boolean;\n\n    quantity?: number;\n\n    referenceType?: string;\n\n    target?: Product;\n  }\n\n  /**\n   *\n   * An interface representing Language.\n   */\n  export interface Language {\n    active?: boolean;\n\n    isocode?: string;\n\n    name?: string;\n\n    nativeName?: string;\n  }\n\n  /**\n   *\n   * An interface representing User.\n   */\n  export interface User {\n    currency?: Currency;\n\n    customerId?: string;\n\n    deactivationDate?: Date;\n\n    defaultAddress?: Address;\n\n    displayUid?: string;\n\n    firstName?: string;\n\n    language?: Language;\n\n    lastName?: string;\n\n    name?: string;\n\n    title?: string;\n\n    titleCode?: string;\n\n    uid?: string;\n  }\n\n  /**\n   *\n   * An interface representing Review.\n   */\n  export interface Review {\n    alias?: string;\n\n    comment?: string;\n\n    date?: Date;\n\n    headline?: string;\n\n    id?: string;\n\n    principal?: User;\n\n    rating?: number;\n  }\n\n  /**\n   *\n   * An interface representing VariantCategory.\n   */\n  export interface VariantCategory {\n    hasImage?: boolean;\n\n    name?: string;\n\n    priority?: number;\n  }\n\n  /**\n   *\n   * An interface representing VariantValueCategory.\n   */\n  export interface VariantValueCategory {\n    name?: string;\n\n    sequence?: number;\n\n    superCategories?: VariantCategory[];\n  }\n\n  /**\n   *\n   * An interface representing VariantMatrixElement.\n   */\n  export interface VariantMatrixElement {\n    elements?: VariantMatrixElement[];\n\n    isLeaf?: boolean;\n\n    parentVariantCategory?: VariantCategory;\n\n    variantOption?: VariantOption;\n\n    variantValueCategory?: VariantValueCategory;\n  }\n\n  /**\n   *\n   * An interface representing Product.\n   */\n  export interface Product {\n    availableForPickup?: boolean;\n\n    averageRating?: number;\n\n    baseOptions?: BaseOption[];\n\n    baseProduct?: string;\n\n    categories?: Category[];\n\n    classifications?: Classification[];\n\n    code?: string;\n\n    description?: string;\n\n    futureStocks?: FutureStock[];\n\n    images?: Image[];\n\n    manufacturer?: string;\n\n    multidimensional?: boolean;\n\n    name?: string;\n\n    numberOfReviews?: number;\n\n    potentialPromotions?: Promotion[];\n\n    price?: Price;\n\n    priceRange?: PriceRange;\n\n    productReferences?: ProductReference[];\n\n    purchasable?: boolean;\n\n    reviews?: Review[];\n\n    stock?: Stock;\n\n    summary?: string;\n\n    url?: string;\n\n    variantMatrix?: VariantMatrixElement[];\n\n    variantOptions?: VariantOption[];\n\n    variantType?: string;\n\n    volumePrices?: Price[];\n\n    volumePricesFlag?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing OrderEntry.\n   */\n  export interface OrderEntry {\n    basePrice?: Price;\n\n    deliveryMode?: DeliveryMode;\n\n    deliveryPointOfService?: PointOfService;\n\n    entryNumber?: number;\n\n    product?: Product;\n\n    quantity?: number;\n\n    totalPrice?: Price;\n\n    updateable?: boolean;\n\n    statusSummaryList?: StatusSummary[];\n\n    configurationInfos?: ConfigurationInfo[];\n  }\n\n  /**\n   *\n   * An interface representing ConfigurationInfo.\n   * Provides information about configuration values of the entry.\n   */\n  export interface ConfigurationInfo {\n    configurationLabel?: string;\n\n    configurationValue?: string;\n\n    configuratorType?: string;\n\n    status?: string;\n  }\n\n  /**\n   * Possible order entry statuses\n   */\n  export enum OrderEntryStatus {\n    Success = 'SUCCESS',\n    Info = 'INFO',\n    Warning = 'WARNING',\n    Error = 'ERROR',\n  }\n\n  /**\n   *\n   * An interface representing StatusSummary.\n   * Provides status including number of issues for configurable entry.\n   */\n  export interface StatusSummary {\n    numberOfIssues?: number;\n\n    status?: OrderEntryStatus;\n  }\n\n  /**\n   *\n   * An interface representing DeliveryOrderEntryGroup.\n   */\n  export interface DeliveryOrderEntryGroup {\n    deliveryAddress?: Address;\n\n    entries?: OrderEntry[];\n\n    quantity?: number;\n\n    totalPriceWithTax?: Price;\n  }\n\n  /**\n   *\n   * An interface representing PaymentDetails.\n   */\n  export interface PaymentDetails {\n    accountHolderName?: string;\n\n    billingAddress?: Address;\n\n    cardNumber?: string;\n\n    cardType?: CardType;\n\n    cvn?: string;\n\n    defaultPayment?: boolean;\n\n    expiryMonth?: string;\n\n    expiryYear?: string;\n\n    id?: string;\n\n    issueNumber?: string;\n\n    saved?: boolean;\n\n    startMonth?: string;\n\n    startYear?: string;\n\n    subscriptionId?: string;\n  }\n\n  /**\n   *\n   * An interface representing PickupOrderEntryGroup.\n   */\n  export interface PickupOrderEntryGroup {\n    deliveryPointOfService?: PointOfService;\n\n    distance?: number;\n\n    entries?: OrderEntry[];\n\n    quantity?: number;\n\n    totalPriceWithTax?: Price;\n  }\n\n  /**\n   *\n   * An interface representing Principal.\n   */\n  export interface Principal {\n    name?: string;\n\n    uid?: string;\n  }\n\n  /**\n   *\n   * An interface representing Cart.\n   */\n  export interface Cart {\n    appliedOrderPromotions?: PromotionResult[];\n\n    appliedProductPromotions?: PromotionResult[];\n\n    appliedVouchers?: Voucher[];\n\n    calculated?: boolean;\n\n    code?: string;\n\n    deliveryAddress?: Address;\n\n    deliveryCost?: Price;\n\n    deliveryItemsQuantity?: number;\n\n    deliveryMode?: DeliveryMode;\n\n    deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n\n    description?: string;\n\n    entries?: OrderEntry[];\n\n    expirationTime?: Date;\n\n    guid?: string;\n\n    name?: string;\n\n    net?: boolean;\n\n    orderDiscounts?: Price;\n\n    paymentInfo?: PaymentDetails;\n\n    pickupItemsQuantity?: number;\n\n    pickupOrderGroups?: PickupOrderEntryGroup[];\n\n    potentialOrderPromotions?: PromotionResult[];\n\n    potentialProductPromotions?: PromotionResult[];\n\n    productDiscounts?: Price;\n\n    saveTime?: Date;\n\n    savedBy?: Principal;\n\n    site?: string;\n\n    store?: string;\n\n    subTotal?: Price;\n\n    totalDiscounts?: Price;\n\n    totalItems?: number;\n\n    totalPrice?: Price;\n\n    totalPriceWithTax?: Price;\n\n    totalTax?: Price;\n\n    totalUnitCount?: number;\n\n    user?: Principal;\n  }\n\n  /**\n   *\n   * An interface representing CartList.\n   */\n  export interface CartList {\n    carts?: Cart[];\n  }\n\n  /**\n   *\n   * An interface representing CartModification.\n   */\n  export interface CartModification {\n    deliveryModeChanged?: boolean;\n\n    entry?: OrderEntry;\n\n    quantity?: number;\n\n    quantityAdded?: number;\n\n    statusCode?: string;\n\n    statusMessage?: string;\n  }\n\n  /**\n   *\n   * An interface representing CategoryHierarchy.\n   */\n  export interface CategoryHierarchy {\n    id?: string;\n\n    lastModified?: Date;\n\n    name?: string;\n\n    subcategories?: CategoryHierarchy[];\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing CatalogVersion.\n   */\n  export interface CatalogVersion {\n    categories?: CategoryHierarchy[];\n\n    id?: string;\n\n    lastModified?: Date;\n\n    name?: string;\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing Catalog.\n   */\n  export interface Catalog {\n    catalogVersions?: CatalogVersion[];\n\n    id?: string;\n\n    lastModified?: Date;\n\n    name?: string;\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing CatalogList.\n   */\n  export interface CatalogList {\n    catalogs?: Catalog[];\n  }\n\n  /**\n   *\n   * An interface representing ComponentIDList.\n   */\n  export interface ComponentIDList {\n    idList?: string[];\n  }\n\n  /**\n   *\n   * An interface representing ConsignmentEntry.\n   */\n  export interface ConsignmentEntry {\n    orderEntry?: OrderEntry;\n\n    quantity?: number;\n\n    shippedQuantity?: number;\n  }\n\n  /**\n   *\n   * An interface representing Consignment.\n   */\n  export interface Consignment {\n    code?: string;\n\n    deliveryPointOfService?: PointOfService;\n\n    entries?: ConsignmentEntry[];\n\n    shippingAddress?: Address;\n\n    status?: string;\n\n    statusDate?: Date;\n\n    trackingID?: string;\n  }\n\n  /**\n   *\n   * An interface representing CountryList.\n   */\n  export interface CountryList {\n    countries?: Country[];\n  }\n\n  /**\n   *\n   * An interface representing CurrencyList.\n   */\n  export interface CurrencyList {\n    currencies?: Currency[];\n  }\n\n  /**\n   * An interface representing CustomerCoupon\n   */\n  export interface CustomerCoupon {\n    couponId?: string;\n\n    name?: string;\n\n    startDate?: string;\n\n    endDate?: string;\n\n    status?: string;\n\n    description?: string;\n\n    notificationOn?: boolean;\n\n    allProductsApplicable?: boolean;\n  }\n\n  /**\n   * An interface representing CustomerCouponSearchResult\n   */\n  export interface CustomerCouponSearchResult {\n    coupons?: CustomerCoupon[];\n\n    sorts?: Sort[];\n\n    pagination?: Pagination;\n  }\n\n  /**\n   *\n   * An interface representing DeliveryModeList.\n   */\n  export interface DeliveryModeList {\n    deliveryModes?: DeliveryMode[];\n  }\n\n  /**\n   *\n   * An interface representing FacetValue.\n   */\n  export interface FacetValue {\n    count?: number;\n\n    name?: string;\n\n    query?: SearchState;\n\n    selected?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing Facet.\n   */\n  export interface Facet {\n    category?: boolean;\n\n    multiSelect?: boolean;\n\n    name?: string;\n\n    priority?: number;\n\n    topValues?: FacetValue[];\n\n    values?: FacetValue[];\n\n    visible?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing LanguageList.\n   */\n  export interface LanguageList {\n    languages?: Language[];\n  }\n\n  /**\n   *\n   * An interface representing Pagination.\n   * Pagination info\n   *\n   */\n  export interface Pagination {\n    /**\n     * Number of elements on this page\n     */\n    count?: number;\n    /**\n     * Current page number\n     */\n    page?: number;\n    /**\n     * Total number of elements\n     */\n    totalCount?: number;\n    /**\n     * Total number of pages\n     */\n    totalPages?: number;\n  }\n\n  /**\n   *\n   * An interface representing Sort.\n   * Sort option\n   *\n   */\n  export interface Sort {\n    asc?: boolean;\n\n    code?: string;\n  }\n\n  /**\n   *\n   * An interface representing ListAdaptedComponents.\n   */\n  export interface ListAdaptedComponents {\n    components?: any[];\n\n    pagination?: Pagination;\n\n    sorts?: Sort[];\n  }\n\n  /**\n   *\n   * An interface representing MemberList.\n   */\n  export interface MemberList {\n    members?: Principal[];\n  }\n\n  /**\n   *\n   * An interface representing OrderEntryList.\n   */\n  export interface OrderEntryList {\n    orderEntries?: OrderEntry[];\n  }\n\n  /**\n   *\n   * An interface representing OrderHistory.\n   */\n  export interface OrderHistory {\n    code?: string;\n\n    guid?: string;\n\n    placed?: Date;\n\n    status?: string;\n\n    statusDisplay?: string;\n\n    total?: Price;\n  }\n\n  /**\n   *\n   * An interface representing PaginationModel.\n   */\n  export interface PaginationModel {\n    currentPage?: number;\n\n    pageSize?: number;\n\n    sort?: string;\n\n    totalPages?: number;\n\n    totalResults?: number;\n  }\n\n  /**\n   *\n   * An interface representing SortModel.\n   */\n  export interface SortModel {\n    code?: string;\n\n    name?: string;\n\n    selected?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing OrderHistoryList.\n   */\n  export interface OrderHistoryList {\n    orders?: OrderHistory[];\n\n    pagination?: PaginationModel;\n\n    sorts?: SortModel[];\n  }\n\n  /**\n   *\n   * An interface representing OrderStatusUpdateElement.\n   */\n  export interface OrderStatusUpdateElement {\n    baseSiteId?: string;\n\n    code?: string;\n\n    status?: string;\n  }\n\n  /**\n   *\n   * An interface representing OrderStatusUpdateElementList.\n   */\n  export interface OrderStatusUpdateElementList {\n    orderStatusUpdateElements?: OrderStatusUpdateElement[];\n  }\n\n  /**\n   *\n   * An interface representing Order.\n   */\n  export interface Order {\n    appliedOrderPromotions?: PromotionResult[];\n\n    appliedProductPromotions?: PromotionResult[];\n\n    appliedVouchers?: Voucher[];\n\n    calculated?: boolean;\n\n    code?: string;\n\n    consignments?: Consignment[];\n\n    created?: Date;\n\n    deliveryAddress?: Address;\n\n    deliveryCost?: Price;\n\n    deliveryItemsQuantity?: number;\n\n    deliveryMode?: DeliveryMode;\n\n    deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n\n    deliveryStatus?: string;\n\n    deliveryStatusDisplay?: string;\n\n    entries?: OrderEntry[];\n\n    guestCustomer?: boolean;\n\n    guid?: string;\n\n    net?: boolean;\n\n    orderDiscounts?: Price;\n\n    paymentInfo?: PaymentDetails;\n\n    pickupItemsQuantity?: number;\n\n    pickupOrderGroups?: PickupOrderEntryGroup[];\n\n    productDiscounts?: Price;\n\n    site?: string;\n\n    status?: string;\n\n    statusDisplay?: string;\n\n    store?: string;\n\n    subTotal?: Price;\n\n    totalDiscounts?: Price;\n\n    totalItems?: number;\n\n    totalPrice?: Price;\n\n    totalPriceWithTax?: Price;\n\n    totalTax?: Price;\n\n    unconsignedEntries?: OrderEntry[];\n\n    user?: Principal;\n  }\n\n  /**\n   *\n   * An interface representing ReturnRequest.\n   */\n  export interface ReturnRequest {\n    cancellable?: boolean;\n\n    code?: string;\n\n    creationTime?: Date;\n\n    deliveryCost?: Price;\n\n    order?: Order;\n\n    refundDeliveryCost?: boolean;\n\n    returnEntries?: ReturnRequestEntry[];\n\n    returnLabelDownloadUrl?: string;\n\n    rma?: string;\n\n    status?: string;\n\n    subTotal?: Price;\n\n    totalPrice?: Price;\n  }\n\n  /**\n   *\n   * An interface representing ReturnRequestEntry.\n   */\n  export interface ReturnRequestEntry {\n    orderEntry?: OrderEntry;\n\n    expectedQuantity?: number;\n\n    refundAmount?: Price;\n  }\n\n  /**\n   *\n   * An interface representing PaymentDetailsList.\n   */\n  export interface PaymentDetailsList {\n    payments?: PaymentDetails[];\n  }\n\n  /**\n   *\n   * An interface representing PointOfServiceStock.\n   */\n  export interface PointOfServiceStock {\n    address?: Address;\n\n    description?: string;\n\n    displayName?: string;\n\n    distanceKm?: number;\n\n    features?: { [propertyName: string]: string };\n\n    formattedDistance?: string;\n\n    geoPoint?: GeoPoint;\n\n    mapIcon?: Image;\n\n    name?: string;\n\n    openingHours?: OpeningSchedule;\n\n    stockInfo?: Stock;\n\n    storeContent?: string;\n\n    storeImages?: Image[];\n\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductExpressUpdateElement.\n   */\n  export interface ProductExpressUpdateElement {\n    catalogId?: string;\n\n    catalogVersion?: string;\n\n    code?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductExpressUpdateElementList.\n   */\n  export interface ProductExpressUpdateElementList {\n    productExpressUpdateElements?: ProductExpressUpdateElement[];\n  }\n\n  /**\n   *\n   * An interface representing ProductList.\n   */\n  export interface ProductList {\n    catalog?: string;\n\n    currentPage?: number;\n\n    products?: Product[];\n\n    totalPageCount?: number;\n\n    totalProductCount?: number;\n\n    version?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductReferenceList.\n   */\n  export interface ProductReferenceList {\n    references?: ProductReference[];\n  }\n\n  /**\n   *\n   * An interface representing SpellingSuggestion.\n   */\n  export interface SpellingSuggestion {\n    query?: string;\n\n    suggestion?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductSearchPage.\n   */\n  export interface ProductSearchPage {\n    breadcrumbs?: Breadcrumb[];\n\n    categoryCode?: string;\n\n    currentQuery?: SearchState;\n\n    facets?: Facet[];\n\n    freeTextSearch?: string;\n\n    keywordRedirectUrl?: string;\n\n    pagination?: PaginationModel;\n\n    products?: Product[];\n\n    sorts?: SortModel[];\n\n    spellingSuggestion?: SpellingSuggestion;\n  }\n\n  /**\n   *\n   * An interface representing PromotionList.\n   */\n  export interface PromotionList {\n    promotions?: Promotion[];\n  }\n\n  /**\n   *\n   * An interface representing PromotionResultList.\n   */\n  export interface PromotionResultList {\n    promotions?: PromotionResult[];\n  }\n\n  /**\n   *\n   * An interface representing ReviewList.\n   */\n  export interface ReviewList {\n    reviews?: Review[];\n  }\n\n  /**\n   *\n   * An interface representing SaveCartResult.\n   */\n  export interface SaveCartResult {\n    savedCartData?: Cart;\n  }\n\n  /**\n   *\n   * An interface representing StoreFinderSearchPage.\n   */\n  export interface StoreFinderSearchPage {\n    boundEastLongitude?: number;\n\n    boundNorthLatitude?: number;\n\n    boundSouthLatitude?: number;\n\n    boundWestLongitude?: number;\n\n    locationText?: string;\n\n    pagination?: PaginationModel;\n\n    sorts?: SortModel[];\n\n    sourceLatitude?: number;\n\n    sourceLongitude?: number;\n\n    stores?: PointOfService[];\n  }\n\n  /**\n   *\n   * An interface representing StoreFinderStockSearchPage.\n   */\n  export interface StoreFinderStockSearchPage {\n    boundEastLongitude?: number;\n\n    boundNorthLatitude?: number;\n\n    boundSouthLatitude?: number;\n\n    boundWestLongitude?: number;\n\n    locationText?: string;\n\n    pagination?: PaginationModel;\n\n    product?: Product;\n\n    sorts?: SortModel[];\n\n    sourceLatitude?: number;\n\n    sourceLongitude?: number;\n\n    stores?: PointOfServiceStock[];\n  }\n\n  /**\n   *\n   * An interface representing Suggestion.\n   */\n  export interface Suggestion {\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing SuggestionList.\n   */\n  export interface SuggestionList {\n    suggestions?: Suggestion[];\n  }\n\n  /**\n   *\n   * An interface representing Title.\n   */\n  export interface Title {\n    code?: string;\n\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing TitleList.\n   */\n  export interface TitleList {\n    titles?: Title[];\n  }\n\n  /**\n   *\n   * An interface representing UserGroup.\n   */\n  export interface UserGroup {\n    members?: Principal[];\n\n    membersCount?: number;\n\n    name?: string;\n\n    subGroups?: UserGroup[];\n\n    uid?: string;\n  }\n\n  export interface StoreCount {\n    count?: number;\n    isoCode?: string;\n    name?: string;\n    type?: string;\n  }\n\n  export interface StoreCountList {\n    countriesAndRegionsStoreCount?: StoreCount[];\n  }\n\n  /**\n   *\n   * An interface representing VoucherList.\n   */\n  export interface VoucherList {\n    vouchers?: Voucher[];\n  }\n\n  /**\n   * Defines values for PriceType.\n   * Possible values include: 'BUY', 'FROM'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: PriceType = <PriceType>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum PriceType {\n    BUY = 'BUY',\n    FROM = 'FROM',\n  }\n\n  /**\n   * Defines values for ImageType.\n   * Possible values include: 'PRIMARY', 'GALLERY'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: ImageType = <ImageType>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum ImageType {\n    PRIMARY = 'PRIMARY',\n    GALLERY = 'GALLERY',\n  }\n\n  /**\n   * Defines values for Fields.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields = <Fields>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields1.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields1 = <Fields1>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields1 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields2.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields2 = <Fields2>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields2 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields3.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields3 = <Fields3>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields3 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields4.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields4 = <Fields4>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields4 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields5.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields5 = <Fields5>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields5 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields6.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields6 = <Fields6>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields6 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for PageType.\n   * Possible values include: 'ContentPage', 'ProductPage', 'CategoryPage',\n   * 'CatalogPage'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: PageType = <PageType>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum PageType {\n    CONTENT_PAGE = 'ContentPage',\n    PRODUCT_PAGE = 'ProductPage',\n    CATEGORY_PAGE = 'CategoryPage',\n    CATALOG_PAGE = 'CatalogPage',\n  }\n\n  /**\n   * Defines values for Fields7.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields7 = <Fields7>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields7 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields8.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields8 = <Fields8>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields8 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields9.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields9 = <Fields9>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields9 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields10.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields10 = <Fields10>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields10 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields11.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields11 = <Fields11>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields11 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields12.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields12 = <Fields12>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields12 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields13.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields13 = <Fields13>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields13 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields14.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields14 = <Fields14>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields14 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields15.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields15 = <Fields15>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields15 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields16.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields16 = <Fields16>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields16 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for SortEnum.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: SortEnum = <SortEnum>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum SortEnum {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields17.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields17 = <Fields17>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields17 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields18.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields18 = <Fields18>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields18 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields19.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields19 = <Fields19>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields19 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields20.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields20 = <Fields20>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields20 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields21.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields21 = <Fields21>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields21 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields22.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields22 = <Fields22>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields22 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields23.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields23 = <Fields23>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields23 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields24.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields24 = <Fields24>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields24 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields25.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields25 = <Fields25>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields25 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields26.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields26 = <Fields26>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields26 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields27.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields27 = <Fields27>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields27 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields28.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields28 = <Fields28>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields28 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields29.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields29 = <Fields29>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields29 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields30.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields30 = <Fields30>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields30 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields31.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields31 = <Fields31>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields31 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields32.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields32 = <Fields32>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields32 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields33.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields33 = <Fields33>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields33 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields34.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields34 = <Fields34>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields34 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields35.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields35 = <Fields35>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields35 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields36.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields36 = <Fields36>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields36 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields37.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields37 = <Fields37>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields37 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields38.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields38 = <Fields38>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields38 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields39.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields39 = <Fields39>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields39 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields40.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields40 = <Fields40>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields40 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields41.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields41 = <Fields41>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields41 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields42.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields42 = <Fields42>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields42 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields43.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields43 = <Fields43>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields43 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields44.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields44 = <Fields44>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields44 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields45.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields45 = <Fields45>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields45 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields46.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields46 = <Fields46>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields46 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields47.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields47 = <Fields47>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields47 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields48.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields48 = <Fields48>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields48 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields49.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields49 = <Fields49>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields49 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields50.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields50 = <Fields50>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields50 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields51.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields51 = <Fields51>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields51 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields52.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields52 = <Fields52>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields52 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields53.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields53 = <Fields53>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields53 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields54.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields54 = <Fields54>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields54 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields55.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields55 = <Fields55>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields55 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields56.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields56 = <Fields56>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields56 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields57.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields57 = <Fields57>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields57 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields58.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields58 = <Fields58>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields58 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields59.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields59 = <Fields59>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields59 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields60.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields60 = <Fields60>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields60 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields61.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields61 = <Fields61>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields61 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Type.\n   * Possible values include: 'all', 'product', 'order'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Type = <Type>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Type {\n    All = 'all',\n    Product = 'product',\n    Order = 'order',\n  }\n\n  export interface AnonymousConsent {\n    templateCode?: string;\n    version?: number;\n    consentState?: CONSENT_STATUS;\n  }\n\n  export enum CONSENT_STATUS {\n    ANONYMOUS_CONSENT_GIVEN = 'GIVEN',\n    ANONYMOUS_CONSENT_WITHDRAWN = 'WITHDRAWN',\n  }\n\n  export interface ConsentTemplate {\n    id?: string;\n    name?: string;\n    description?: string;\n    version?: number;\n    currentConsent?: Consent;\n  }\n\n  export interface Consent {\n    code?: string;\n    consentGivenDate?: Date;\n    consentWithdrawnDate?: Date;\n  }\n\n  export interface ConsentTemplateList {\n    consentTemplates?: ConsentTemplate[];\n  }\n\n  export interface BaseSites {\n    baseSites?: BaseSite[];\n  }\n\n  export interface BaseSite {\n    channel?: string;\n    defaultLanguage?: Language;\n    defaultPreviewCatalogId?: string;\n    defaultPreviewCategoryCode?: string;\n    defaultPreviewProductCode?: string;\n    locale?: string;\n    name?: string;\n    theme?: string;\n    uid?: string;\n    stores?: BaseStore[];\n    urlPatterns?: string[];\n    urlEncodingAttributes?: string[];\n    requiresAuthentication?: boolean;\n  }\n\n  export interface BaseStore {\n    currencies?: Currency[];\n    defaultCurrency?: Currency;\n    languages?: Language[];\n    defaultLanguage?: Language;\n  }\n\n  export interface ProductInterestEntry {\n    interestType?: NotificationType;\n    dateAdded?: string;\n    expirationDate?: string;\n  }\n\n  export interface ProductInterestEntryRelation {\n    product?: Product;\n    productInterestEntry?: ProductInterestEntry[];\n  }\n\n  export interface ProductInterestSearchResult {\n    results?: ProductInterestEntryRelation[];\n    sorts?: Sort[];\n    pagination?: Pagination;\n  }\n\n  export enum NotificationType {\n    BACK_IN_STOCK = 'BACK_IN_STOCK',\n  }\n\n  export interface Budget {\n    active?: boolean;\n    budget?: number;\n    code?: string;\n    currency?: Currency;\n    endDate?: string;\n    startDate?: string;\n    name?: string;\n    orgUnit?: B2BUnit;\n    costCenters?: CostCenter[];\n  }\n\n  export interface BudgetsList {\n    budgets?: Budget[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface CostCenter {\n    active?: string;\n    activeFlag?: boolean;\n    code?: string;\n    currency?: Currency;\n    name?: string;\n    originalCode?: string;\n    unit?: B2BUnit;\n  }\n\n  export interface CostCentersList {\n    costCenters: CostCenter[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  // TODO(#8878): Which models we can remove from here?\n  export interface OrgUnitUserGroup {\n    members?: B2BUser[];\n    membersCoun?: number;\n    name?: string;\n    orgUnit?: B2BUnit;\n    permissions?: Permission[];\n    roles?: any;\n    selected?: boolean;\n    subGroups?: any;\n    uid?: string;\n  }\n\n  export interface OrgUnitUserGroupList {\n    orgUnitUserGroups: OrgUnitUserGroup[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface B2BUnitNode {\n    active?: boolean;\n    children?: B2BUnitNode[];\n    id?: string;\n    name?: string;\n    parent?: string;\n  }\n\n  export interface B2BUnitNodeList {\n    unitNodes?: B2BUnitNode[];\n  }\n\n  export interface B2BUser extends User {\n    active?: boolean;\n    approvers?: [];\n    orgUnit?: B2BUnit;\n    roles?: string[];\n    selected?: boolean;\n  }\n\n  export interface OrgUnitUserList {\n    users: B2BUser[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface B2BApprovalProcess {\n    code?: string;\n    name?: string;\n  }\n\n  export interface B2BApprovalProcessList {\n    approvalProcesses?: B2BApprovalProcess[];\n  }\n\n  export interface B2BUnit {\n    active?: boolean;\n    addresses?: Address[];\n    uid?: string;\n    name?: string;\n    parentOrgUnit?: Partial<B2BUnit>;\n    approvalProcess?: B2BApprovalProcess;\n    administrators?: B2BUser[];\n    approvers?: B2BUser[];\n    customers?: B2BUser[];\n    managers?: B2BUser[];\n  }\n\n  export interface OrderApprovalPermissionType {\n    code?: string;\n    name?: string;\n  }\n\n  export interface OrderApprovalPermissionTypeList {\n    orderApprovalPermissionTypes?: OrderApprovalPermissionType[];\n  }\n\n  export enum Period {\n    DAY = 'DAY',\n    WEEK = 'WEEK',\n    MONTH = 'MONTH',\n    QUARTER = 'QUARTER',\n    YEAR = 'YEAR',\n  }\n\n  export interface Permission {\n    active?: boolean;\n    code?: string;\n    currency?: Currency;\n    orderApprovalPermissionType?: OrderApprovalPermissionType;\n    orgUnit?: B2BUnitNode;\n    periodRange?: Period;\n    selected?: boolean;\n    treshold?: number;\n  }\n\n  export interface PermissionsList {\n    orderApprovalPermissions?: Permission[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface ReplenishmentOrder {\n    active?: boolean;\n    appliedOrderPromotions?: PromotionResult[];\n    appliedProductPromotions?: PromotionResult[];\n    appliedVouchers?: Voucher[];\n    calculated?: boolean;\n    code?: string;\n    costCenter?: CostCenter;\n    deliveryAddress?: Address;\n    deliveryCost?: Price;\n    deliveryItemsQuantity?: number;\n    deliveryMode?: DeliveryMode;\n    deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n    description?: string;\n    entries?: OrderEntry[];\n    expirationTime?: string;\n    firstDate?: string;\n    guid?: string;\n    name?: string;\n    net?: boolean;\n    orderDiscounts?: Price;\n    paymentInfo?: PaymentDetails;\n    paymentStatus?: string;\n    paymentType?: PaymentType;\n    pickupItemsQuantity?: number;\n    pickupOrderGroups?: PickupOrderEntryGroup[];\n    potentialOrderPromotions?: PromotionResult[];\n    potentialProductPromotions?: PromotionResult[];\n    productDiscounts?: Price;\n    purchaseOrderNumber?: string;\n    replenishmentOrderCode?: string;\n    saveTime?: string;\n    savedBy?: Principal;\n    site?: string;\n    store?: string;\n    subTotal?: Price;\n    totalDiscounts?: Price;\n    totalItems?: number;\n    totalPrice?: Price;\n    totalPriceWithTax?: Price;\n    totalTax?: Price;\n    totalUnitCount?: number;\n    trigger?: Trigger;\n    user?: Principal;\n  }\n\n  export interface ReplenishmentOrderList {\n    replenishmentOrders?: ReplenishmentOrder[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface Trigger {\n    activationTime?: string;\n    displayTimeTable?: string;\n  }\n\n  export interface ScheduleReplenishmentForm {\n    daysOfWeek?: DaysOfWeek[];\n    nthDayOfMonth?: string;\n    numberOfDays?: string;\n    numberOfWeeks?: string;\n    recurrencePeriod?: string;\n    replenishmentStartDate?: string;\n  }\n\n  export enum DaysOfWeek {\n    MONDAY = 'MONDAY',\n    TUESDAY = 'TUESDAY',\n    WEDNESDAY = 'WEDNESDAY',\n    THURSDAY = 'THURSDAY',\n    FRIDAY = 'FRIDAY',\n    SATURDAY = 'SATURDAY',\n    SUNDAY = 'SUNDAY',\n  }\n\n  export enum OrderApprovalDecisionValue {\n    APPROVE = 'APPROVE',\n    REJECT = 'REJECT',\n  }\n  export interface OrderApprovalDecision {\n    decision?: OrderApprovalDecisionValue;\n    comment?: string;\n  }\n\n  export interface OrderApprovalRecord {\n    approver?: Principal;\n    comments?: string;\n    permissionTypes?: OrderApprovalPermissionType[];\n    statusDisplay?: string;\n  }\n\n  export interface OrderApproval {\n    approvalDecisionRequired?: boolean;\n    code?: string;\n    customerOrderApprovalRecords?: OrderApprovalRecord[];\n    merchantOrderApprovalRecords?: OrderApprovalRecord[];\n    order?: Order;\n    trigger?: Trigger;\n  }\n\n  export interface OrderApprovalsList {\n    orderApprovals?: OrderApproval[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface CartModificationList {\n    cartModifications?: CartModification[];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  CMS_FLEX_COMPONENT_TYPE,\n  JSP_INCLUDE_CMS_COMPONENT_TYPE,\n} from '../../../../cms/config/cms-config';\nimport { ContentSlotComponentData } from '../../../../cms/model/content-slot-component-data.model';\nimport { ContentSlotData } from '../../../../cms/model/content-slot-data.model';\nimport {\n  CmsStructureModel,\n  Page,\n  PageRobotsMeta,\n} from '../../../../cms/model/page.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccCmsPageNormalizer\n  implements Converter<Occ.CMSPage, CmsStructureModel>\n{\n  convert(\n    source: Occ.CMSPage,\n    target: CmsStructureModel = {}\n  ): CmsStructureModel {\n    this.normalizePageData(source, target);\n    this.normalizePageSlotData(source, target);\n    this.normalizePageComponentData(source, target);\n    this.normalizeComponentData(source, target);\n    return target;\n  }\n\n  /**\n   * Converts the OCC cms page model to the `Page` in the `CmsStructureModel`.\n   */\n  protected normalizePageData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source) {\n      return;\n    }\n    const page: Page = {};\n\n    if (source.name) {\n      page.name = source.name;\n    }\n    if (source.typeCode) {\n      page.type = source.typeCode;\n    }\n    if (source.label) {\n      page.label = source.label;\n    }\n    if (source.template) {\n      page.template = source.template;\n    }\n    if (source.uid) {\n      page.pageId = source.uid;\n    }\n    if (source.title) {\n      page.title = source.title;\n    }\n    if (source.description) {\n      page.description = source.description;\n    }\n    if (source.properties) {\n      page.properties = source.properties;\n    }\n\n    this.normalizeRobots(source, page);\n\n    target.page = page;\n  }\n\n  /**\n   * Adds a ContentSlotData for each page slot in the `CmsStructureModel`.\n   */\n  protected normalizePageSlotData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source?.contentSlots) {\n      return;\n    }\n    if (\n      source.contentSlots.contentSlot &&\n      !Array.isArray(source.contentSlots.contentSlot)\n    ) {\n      source.contentSlots.contentSlot = [source.contentSlots.contentSlot];\n    }\n    target.page = target.page ?? {};\n    target.page.slots = {};\n    for (const slot of source.contentSlots.contentSlot ?? []) {\n      if (slot.position) {\n        target.page.slots[slot.position] = {} as ContentSlotData;\n        if (slot.properties) {\n          target.page.slots[slot.position].properties = slot.properties;\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers the `ContentSlotComponentData` for each component.\n   */\n  protected normalizePageComponentData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source?.contentSlots?.contentSlot) {\n      return;\n    }\n    for (const slot of source.contentSlots.contentSlot) {\n      if (Array.isArray(slot.components?.component)) {\n        for (const component of slot.components?.component ?? []) {\n          const comp: ContentSlotComponentData = {\n            uid: component.uid,\n            typeCode: component.typeCode,\n          };\n          if (component.properties) {\n            comp.properties = component.properties;\n          }\n\n          comp.flexType = this.getFlexTypeFromComponent(component);\n\n          if (slot.position) {\n            const targetSlot = target.page?.slots?.[slot.position];\n            if (targetSlot) {\n              if (!targetSlot.components) {\n                targetSlot.components = [];\n              }\n              targetSlot.components.push(comp);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the flex type based on the configuration of component properties\n   */\n  protected getFlexTypeFromComponent(component: Occ.Component | any): string {\n    if (component.typeCode === CMS_FLEX_COMPONENT_TYPE) {\n      return component.flexType;\n    } else if (component.typeCode === JSP_INCLUDE_CMS_COMPONENT_TYPE) {\n      return component.uid;\n    }\n    return component.typeCode;\n  }\n\n  /**\n   * Adds the actual component data whenever available in the CMS page data.\n   *\n   * If the data is not populated in this payload, it is loaded separately\n   * (`OccCmsComponentAdapter`).\n   */\n  protected normalizeComponentData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source?.contentSlots?.contentSlot) {\n      return;\n    }\n\n    for (const slot of source.contentSlots.contentSlot) {\n      for (const component of slot.components?.component ?? []) {\n        // while we're hoping to get this right from the backend api,\n        // the OCC api stills seems out of sync with the right model.\n        if (component.modifiedtime) {\n          component.modifiedTime = component.modifiedtime;\n          delete component.modifiedtime;\n        }\n\n        // we don't put properties into component state\n        if (component.properties) {\n          component.properties = undefined;\n        }\n        if (!target.components) {\n          target.components = [];\n        }\n        target.components.push(component);\n      }\n    }\n  }\n\n  /**\n   * Normalizes the page robot string to an array of `PageRobotsMeta` items.\n   */\n  protected normalizeRobots(source: Occ.CMSPage, target: Page): void {\n    const robots = [];\n    if (source.robotTag) {\n      switch (source.robotTag) {\n        case Occ.PageRobots.INDEX_FOLLOW:\n          robots.push(PageRobotsMeta.INDEX);\n          robots.push(PageRobotsMeta.FOLLOW);\n          break;\n        case Occ.PageRobots.NOINDEX_FOLLOW:\n          robots.push(PageRobotsMeta.NOINDEX);\n          robots.push(PageRobotsMeta.FOLLOW);\n          break;\n        case Occ.PageRobots.INDEX_NOFOLLOW:\n          robots.push(PageRobotsMeta.INDEX);\n          robots.push(PageRobotsMeta.NOFOLLOW);\n          break;\n        case Occ.PageRobots.NOINDEX_NOFOLLOW:\n          robots.push(PageRobotsMeta.NOINDEX);\n          robots.push(PageRobotsMeta.NOFOLLOW);\n          break;\n      }\n    }\n\n    target.robots = robots;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const CMS_COMPONENT_NORMALIZER = new InjectionToken<\n  Converter<any, CmsComponent>\n>('CmsComponentNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\n\n/**\n * Will grab last synchronously available value from the observable stream\n * at the time of the call.\n *\n * Should be used with caution, as it's not a legitimate way for getting value\n * from the observable. Observable composition or standard subscribe method\n * should be used for most of the cases.\n *\n * @param source\n */\nexport function getLastValueSync<T>(source: Observable<T>): T | undefined {\n  let value: T | undefined;\n  source.subscribe((emission) => (value = emission)).unsubscribe();\n  return value;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AbstractType,\n  InjectionToken,\n  InjectOptions,\n  Injector,\n  Type,\n} from '@angular/core';\n\nconst NOT_FOUND_SYMBOL = {};\n\n/**\n * CombinedInjector is able to combine more than one injector together.\n *\n * Can be used to instantiate lazy loaded modules with dependency modules,\n * so lazy loaded module can use instances provided in all dependency modules.\n *\n * Injector tries to resolve token in all Injector, taking into account the order\n * in which they were provided in complementaryInjectors and fallbacks to the\n * mainInjector.\n */\nexport class CombinedInjector implements Injector {\n  /**\n   * @param mainInjector Component hierarchical injector\n   * @param complementaryInjectors Additional injector that will be taken into an account when resolving dependencies\n   */\n  constructor(\n    private mainInjector: Injector,\n    private complementaryInjectors: Injector[]\n  ) {}\n\n  get<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>,\n    notFoundValue?: T,\n    optional?: InjectOptions\n  ): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token: any, notFoundValue?: any, optional?: InjectOptions): any {\n    // eslint-disable-next-line no-bitwise\n    if (optional && optional.self) {\n      if (notFoundValue !== undefined) {\n        return notFoundValue;\n      }\n      throw new Error(\n        \"CombinedInjector should be used as a parent injector / doesn't support self dependencies\"\n      );\n    }\n\n    for (const injector of this.complementaryInjectors) {\n      // First we are resolving providers provided at Self level\n      // in all complementary injectors...\n      const service = injector.get(token, NOT_FOUND_SYMBOL, { self: true });\n      if (service !== NOT_FOUND_SYMBOL) {\n        return service;\n      }\n    }\n\n    for (const injector of this.complementaryInjectors) {\n      // next we try to resolve tokens from all levels\n      const service = injector.get(token, NOT_FOUND_SYMBOL);\n      if (service !== NOT_FOUND_SYMBOL) {\n        return service;\n      }\n    }\n    // ...and then fallback to main injector\n    return this.mainInjector.get(token, notFoundValue);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModuleRef } from '@angular/core';\nimport { CxEvent } from '../../event/cx-event';\n\n/**\n * Will be thrown in case lazy loaded modules are loaded and instantiated.\n *\n * This event is thrown for cms driven lazy loaded feature modules amd it's\n * dependencies\n */\nexport class ModuleInitializedEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'ModuleInitializedEvent';\n  /**\n   * Name/identifier of the feature associated with this module.\n   *\n   * You can differentiate between feature and dependency modules, as the latter\n   * won't have thus property set.\n   */\n  feature?: string;\n  /**\n   * Reference fpr lazy loaded module instance\n   */\n  moduleRef: NgModuleRef<any>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\n\n/**\n * The MODULE_INITIALIZER is used as a multi provider that returns\n * a function that should be executed when the module is lazy loaded.\n * It is, in a way, an APP_INITIALIZER for lazy loaded modules.\n *\n * If the module is eagerly loaded, the MODULE_INITIALIZER functions\n * run when the app is initialized.  Therfore, if the module in which it is\n * defined is used in a eager loading configuration, MODULE_INITIALIZER\n * will fall back to work like APP_INITIALIZER.\n */\nexport const MODULE_INITIALIZER: InjectionToken<(() => any)[]> =\n  new InjectionToken<(() => any)[]>('MODULE_INITIALIZER');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Compiler,\n  Injectable,\n  Injector,\n  NgModuleFactory,\n  NgModuleRef,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  combineLatest,\n  ConnectableObservable,\n  from,\n  Observable,\n  of,\n  queueScheduler,\n  Subscription,\n  throwError,\n} from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  map,\n  observeOn,\n  publishReplay,\n  switchMap,\n  switchMapTo,\n  tap,\n} from 'rxjs/operators';\nimport { EventService } from '../event/event.service';\nimport { CombinedInjector } from '../util/combined-injector';\nimport { createFrom } from '../util/create-from';\nimport { ModuleInitializedEvent } from './events/module-initialized-event';\nimport { MODULE_INITIALIZER } from './tokens';\n\n/**\n * Utility service for managing dynamic imports of Angular services\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyModulesService implements OnDestroy {\n  /**\n   * Expose lazy loaded module references\n   */\n  readonly modules$: Observable<NgModuleRef<any>> = this.events\n    .get(ModuleInitializedEvent)\n    .pipe(\n      map((event) => event.moduleRef),\n      publishReplay()\n    );\n\n  private readonly dependencyModules = new Map<any, NgModuleRef<any>>();\n  private readonly eventSubscription: Subscription;\n\n  constructor(\n    protected compiler: Compiler,\n    protected injector: Injector,\n    protected events: EventService\n  ) {\n    this.eventSubscription = (\n      this.modules$ as ConnectableObservable<NgModuleRef<any>>\n    ).connect();\n  }\n\n  /**\n   * Resolves module instance based dynamic import wrapped in an arrow function\n   *\n   * New module instance will be created with each call.\n   *\n   * @param moduleFunc\n   * @param feature\n   */\n  public resolveModuleInstance(\n    moduleFunc: () => Promise<any>,\n    feature?: string,\n    dependencyModuleRefs: NgModuleRef<any>[] = []\n  ): Observable<NgModuleRef<any>> {\n    let parentInjector: Injector;\n\n    if (!dependencyModuleRefs.length) {\n      parentInjector = this.injector;\n    } else if (dependencyModuleRefs.length === 1) {\n      parentInjector = dependencyModuleRefs[0].injector;\n    } else {\n      parentInjector = new CombinedInjector(\n        this.injector,\n        dependencyModuleRefs.map((moduleRef) => moduleRef.injector)\n      );\n    }\n\n    return this.resolveModuleFactory(moduleFunc).pipe(\n      map(([moduleFactory]) => moduleFactory.create(parentInjector)),\n      concatMap((moduleRef) => this.runModuleInitializersForModule(moduleRef)),\n      tap((moduleRef) =>\n        this.events.dispatch(\n          createFrom(ModuleInitializedEvent, {\n            feature,\n            moduleRef,\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns dependency module instance and initializes it when needed.\n   *\n   * Module will be instantiated only once, at first request for a this specific module class\n   */\n  public resolveDependencyModuleInstance(\n    moduleFunc: () => Promise<any>\n  ): Observable<NgModuleRef<any>> {\n    // We grab moduleFactory symbol from module function and if there is no\n    // such a module created yet, we create it and store it in a\n    // dependencyModules map\n    return this.resolveModuleFactory(moduleFunc).pipe(\n      map(([moduleFactory, module]) => {\n        if (!this.dependencyModules.has(module)) {\n          const moduleRef = moduleFactory.create(this.injector);\n          this.dependencyModules.set(module, moduleRef);\n        }\n\n        return this.dependencyModules.get(module) as NgModuleRef<any>;\n      }),\n      concatMap((moduleRef) => this.runModuleInitializersForModule(moduleRef)),\n      tap((moduleRef) =>\n        this.events.dispatch(\n          createFrom(ModuleInitializedEvent, {\n            moduleRef,\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * The purpose of this function is to run MODULE_INITIALIZER logic that can be provided\n   * by a lazy loaded module.  The module is recieved as a function parameter.\n   * This function returns an Observable to the module reference passed as an argument.\n   *\n   * @param {NgModuleRef<any>} moduleRef\n   *\n   * @returns {Observable<NgModuleRef<any>>}\n   */\n  public runModuleInitializersForModule(\n    moduleRef: NgModuleRef<any>\n  ): Observable<NgModuleRef<any>> {\n    const moduleInits: any[] = moduleRef.injector.get<any[]>(\n      MODULE_INITIALIZER,\n      [],\n      { self: true }\n    );\n    const asyncInitPromises: Promise<any>[] =\n      this.runModuleInitializerFunctions(moduleInits);\n    if (asyncInitPromises.length) {\n      return from(Promise.all(asyncInitPromises)).pipe(\n        catchError((error) => {\n          console.error(\n            'MODULE_INITIALIZER promise was rejected while lazy loading a module.',\n            error\n          );\n          return throwError(error);\n        }),\n        switchMapTo(of(moduleRef))\n      );\n    } else {\n      return of(moduleRef);\n    }\n  }\n\n  /**\n   * This function accepts an array of functions and runs them all. For each function that returns a promise,\n   * the resulting promise is stored in an array of promises.  That array of promises is returned.\n   * It is not required for the functions to return a Promise.  All functions are run.  The return values\n   * that are not a Promise are simply not stored and returned.\n   *\n   * @param {(() => any)[]} initFunctions An array of functions too be run.\n   *\n   * @return {Promise<any>[]} An array of Promise returned by the functions, if any,\n   */\n  public runModuleInitializerFunctions(\n    initFunctions: (() => any)[]\n  ): Promise<any>[] {\n    const initPromises: Promise<any>[] = [];\n    try {\n      if (initFunctions) {\n        for (let i = 0; i < initFunctions.length; i++) {\n          const initResult = initFunctions[i]();\n          if (this.isObjectPromise(initResult)) {\n            initPromises.push(initResult);\n          }\n        }\n      }\n      return initPromises;\n    } catch (error) {\n      console.error(\n        `MODULE_INITIALIZER init function throwed an error. `,\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Determine if the argument is shaped like a Promise\n   */\n  private isObjectPromise<T = any>(obj: any): obj is Promise<T> {\n    return !!obj && typeof obj.then === 'function';\n  }\n\n  /**\n   * Resolve any Angular module from an function that return module or moduleFactory\n   */\n  private resolveModuleFactory(\n    moduleFunc: () => Promise<any>\n  ): Observable<[NgModuleFactory<any>, any]> {\n    return from(moduleFunc()).pipe(\n      switchMap((module) =>\n        module instanceof NgModuleFactory\n          ? (of([module, module]) as Observable<[NgModuleFactory<any>, any]>)\n          : combineLatest([\n              // using compiler here is for jit compatibility, there is no overhead\n              // for aot production builds as it will be stubbed\n              from(this.compiler.compileModuleAsync(module as any)),\n              of(module),\n            ])\n      ),\n      observeOn(queueScheduler)\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.eventSubscription) {\n      this.eventSubscription.unsubscribe();\n    }\n\n    // clean up all initialized dependency modules\n    this.dependencyModules.forEach((dependency) => dependency.destroy());\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AbstractType,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Type,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, scan, startWith } from 'rxjs/operators';\nimport { LazyModulesService } from './lazy-modules.service';\n\nconst NOT_FOUND_SYMBOL: any = {};\n\n/**\n * UnifiedInjector provides a way to get instances of tokens not only once, from the root injector,\n * but also from lazy loaded module injectors that can be initialized over time.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnifiedInjector {\n  /**\n   * Gather all the injectors, with the root injector as a first one\n   *\n   */\n  readonly injectors$: Observable<Injector> = this.lazyModules.modules$.pipe(\n    map((moduleRef) => moduleRef.injector),\n    startWith(this.rootInjector)\n  );\n\n  constructor(\n    protected rootInjector: Injector,\n    protected lazyModules: LazyModulesService\n  ) {}\n\n  /**\n   * Gen instances for specified tokens.\n   *\n   * When notFoundValue is provided, it will consistently emit once per injector,\n   * even if injector doesn't contain instances for specified token.\n   * Otherwise, emissions will only involve cases, where new instances will be found.\n   *\n   * @param token\n   * @param notFoundValue\n   */\n  get<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>,\n    notFoundValue?: T\n  ): Observable<T> {\n    return this.injectors$.pipe(\n      map((injector, index) =>\n        injector.get<T>(\n          token,\n          notFoundValue ?? NOT_FOUND_SYMBOL,\n          // we want to get only Self instances from all injectors except the\n          // first one, which is a root injector\n          index ? { self: true } : undefined\n        )\n      ),\n      filter((instance) => instance !== NOT_FOUND_SYMBOL)\n    );\n  }\n\n  /**\n   * Get multi provided instances for a specified token\n   *\n   * @param token\n   */\n  getMulti<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>\n  ): Observable<T[]>;\n  getMulti<T>(token: any): Observable<T>;\n  getMulti<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T> | any\n  ): Observable<T[]> {\n    return this.get(token, []).pipe(\n      filter((instances) => {\n        if (!Array.isArray(instances)) {\n          throw new Error(\n            `Multi-providers mixed with single providers for ${token.toString()}!`\n          );\n        }\n        return instances.length > 0;\n      }),\n      scan((acc, services) => [...acc, ...services], [])\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Observable, OperatorFunction, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UnifiedInjector } from '../lazy-loading/unified-injector';\nimport { getLastValueSync } from './rxjs/get-last-value-sync';\n\n/**\n * Converter is used to convert source data model to target data model.\n * By convention, we distinguish two flows:\n *   - *Normalize* is the conversion from backend models to UI models\n *   - *Serialize* is the conversion of UI models to backend models (in case of submitting data to the backend).\n *\n * Converters can be stacked together to to apply decoupled customizations\n */\nexport interface Converter<SOURCE, TARGET> {\n  /**\n   * Convert converts source model to target model. Can use optional target parameter,\n   * used in case of stacking multiple converters (for example, to implement populator pattern).\n   *\n   * @param source Source data model\n   * @param target Optional, partially converted target model\n   */\n  convert(source: SOURCE, target?: TARGET): TARGET;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConverterService implements OnDestroy {\n  protected subscriptions = new Subscription();\n\n  constructor(protected unifiedInjector: UnifiedInjector) {\n    // Clear cached converters when new injectors appear\n    const cacheResetLogic = this.unifiedInjector.injectors$.pipe(\n      tap(() => this.converters.clear())\n    );\n\n    this.subscriptions.add(cacheResetLogic.subscribe());\n  }\n\n  private converters: Map<\n    InjectionToken<Converter<any, any>>,\n    Converter<any, any>[]\n  > = new Map();\n\n  private getConverters<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): Converter<S, T>[] | undefined {\n    if (!this.converters.has(injectionToken)) {\n      const converters = getLastValueSync(\n        this.unifiedInjector.getMulti(injectionToken)\n      );\n      if (converters) {\n        this.converters.set(injectionToken, converters);\n      }\n    }\n\n    return this.converters.get(injectionToken);\n  }\n\n  /**\n   * Will return true if converters for specified token were provided\n   */\n  hasConverters<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): boolean {\n    const converters = this.getConverters(injectionToken);\n    return Array.isArray(converters) && converters.length > 0;\n  }\n\n  /**\n   * Pipeable operator to apply converter logic in a observable stream\n   */\n  pipeable<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): OperatorFunction<S, T> {\n    if (this.hasConverters(injectionToken)) {\n      return map((model: S) => this.convertSource(model, injectionToken));\n    } else {\n      return (observable: Observable<any>) => observable as Observable<T>;\n    }\n  }\n\n  /**\n   * Pipeable operator to apply converter logic in a observable stream to collection of items\n   */\n  pipeableMany<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): OperatorFunction<S[], T[]> {\n    if (this.hasConverters(injectionToken)) {\n      return map((model: S[]) => this.convertMany(model, injectionToken));\n    } else {\n      return (observable: Observable<any[]>) => observable as Observable<T[]>;\n    }\n  }\n\n  /**\n   * Apply converter logic specified by injection token to source data\n   */\n  convert<S, T>(source: S, injectionToken: InjectionToken<Converter<S, T>>): T {\n    if (this.hasConverters(injectionToken)) {\n      return this.convertSource(source, injectionToken);\n    } else {\n      return source as any;\n    }\n  }\n\n  /**\n   * Apply converter logic specified by injection token to a collection\n   */\n  convertMany<S, T>(\n    sources: S[],\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): T[] {\n    if (this.hasConverters(injectionToken) && Array.isArray(sources)) {\n      return sources.map((source) =>\n        this.convertSource(source, injectionToken)\n      );\n    } else {\n      return sources as any[];\n    }\n  }\n\n  private convertSource<S, T>(\n    source: S,\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): T {\n    return this.getConverters(injectionToken)?.reduce((target, converter) => {\n      return converter.convert(source, target);\n    }, undefined as any);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\nimport { CmsComponentAdapter } from '../../../cms/connectors/component/cms-component.adapter';\nimport { CMS_COMPONENT_NORMALIZER } from '../../../cms/connectors/component/converters';\nimport { CmsComponent, PageType } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCmsComponentAdapter implements CmsComponentAdapter {\n  protected headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load<T extends CmsComponent>(\n    id: string,\n    pageContext: PageContext\n  ): Observable<T> {\n    return this.http\n      .get<T>(this.getComponentEndPoint(id, pageContext), {\n        headers: this.headers,\n      })\n      .pipe(this.converter.pipeable<any, T>(CMS_COMPONENT_NORMALIZER));\n  }\n\n  findComponentsByIds(\n    ids: string[],\n    pageContext: PageContext,\n    fields = 'DEFAULT',\n    currentPage = 0,\n    pageSize = ids.length,\n    sort?: string\n  ): Observable<CmsComponent[]> {\n    const requestParams = {\n      ...this.getContextParams(pageContext),\n      ...this.getPaginationParams(currentPage, pageSize, sort),\n    };\n\n    requestParams['componentIds'] = ids.toString();\n\n    return this.http\n      .get<Occ.ComponentList>(\n        this.getComponentsEndpoint(requestParams, fields),\n        {\n          headers: this.headers,\n        }\n      )\n      .pipe(\n        pluck('component'),\n        map((components) => components ?? []),\n        this.converter.pipeableMany(CMS_COMPONENT_NORMALIZER)\n      );\n  }\n\n  protected getComponentEndPoint(id: string, pageContext: PageContext): string {\n    return this.occEndpoints.buildUrl('component', {\n      urlParams: { id },\n      queryParams: this.getContextParams(pageContext),\n    });\n  }\n\n  protected getComponentsEndpoint(requestParams: any, fields: string): string {\n    return this.occEndpoints.buildUrl('components', {\n      queryParams: { fields, ...requestParams },\n    });\n  }\n\n  protected getPaginationParams(\n    currentPage?: number,\n    pageSize?: number,\n    sort?: string\n  ): { [key: string]: string } {\n    const requestParams: { [key: string]: string } = {};\n    if (currentPage !== undefined) {\n      requestParams['currentPage'] = currentPage.toString();\n    }\n    if (pageSize !== undefined) {\n      requestParams['pageSize'] = pageSize.toString();\n    }\n    if (sort !== undefined) {\n      requestParams['sort'] = sort;\n    }\n\n    return requestParams;\n  }\n\n  protected getContextParams(pageContext: PageContext): {\n    [key: string]: string;\n  } {\n    let requestParams = {};\n    switch (pageContext.type) {\n      case PageType.PRODUCT_PAGE: {\n        requestParams = { productCode: pageContext.id };\n        break;\n      }\n      case PageType.CATEGORY_PAGE: {\n        requestParams = { categoryCode: pageContext.id };\n        break;\n      }\n      case PageType.CATALOG_PAGE: {\n        requestParams = { catalogCode: pageContext.id };\n        break;\n      }\n    }\n\n    return requestParams;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PageType } from '../../model/cms.model';\n\n/**\n * The homepage id for the CMS homepage is not required when we query the backend.\n * CMS business users can have multiple pages, that they might switch quickly without\n * changing the page id. Therefore, we use a constant to keep track of the page in the\n * store, but are able to ignore the id while querying the backend.\n */\nexport const HOME_PAGE_CONTEXT = '__HOMEPAGE__';\n\n/**\n * SmartEdit preview page is loaded by previewToken which is added by interceptor\n */\nexport const SMART_EDIT_CONTEXT = 'smartedit-preview';\n\nexport class PageContext {\n  id: string;\n  type?: PageType;\n\n  constructor(id: string, type?: PageType) {\n    this.id = id;\n    this.type = type;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CmsPageAdapter } from '../../../cms/connectors/page/cms-page.adapter';\nimport { CMS_PAGE_NORMALIZER } from '../../../cms/connectors/page/converters';\nimport { CmsStructureModel } from '../../../cms/model/page.model';\nimport { PageType } from '../../../model/cms.model';\nimport {\n  HOME_PAGE_CONTEXT,\n  PageContext,\n  SMART_EDIT_CONTEXT,\n} from '../../../routing/models/page-context.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nexport interface OccCmsPageRequest {\n  pageLabelOrId?: string;\n  pageType?: PageType;\n  code?: string;\n  fields?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCmsPageAdapter implements CmsPageAdapter {\n  protected headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  /**\n   * @override returns the OCC CMS page data for the given context and converts\n   * the data by any configured `CMS_PAGE_NORMALIZER`.\n   */\n  load(pageContext: PageContext): Observable<CmsStructureModel> {\n    const params = this.getPagesRequestParams(pageContext);\n\n    const endpoint = !pageContext.type\n      ? this.occEndpoints.buildUrl('page', {\n          urlParams: { id: pageContext.id },\n        })\n      : this.occEndpoints.buildUrl('pages', { queryParams: params });\n\n    return this.http\n      .get(endpoint, { headers: this.headers })\n      .pipe(this.converter.pipeable(CMS_PAGE_NORMALIZER));\n  }\n\n  /**\n   * The OCC CMS API allows to query pages by a combination of pageType, label and code.\n   *\n   * When a `ContentPage` is requested, we use the `pageLabelOrId`:\n   *\n   * ```\n   * \"/pages?pageLabelOrId=/my-page&pageType=ContentPage\"\n   * ```\n   *\n   * Other pages are queried by code:\n   *\n   * ```\n   * \"/pages?code=1234&pageType=ProductPage\"\n   * ```\n   *\n   * The page context is ignored for a home page request or in case of a\n   * `smartedit-preview` request.\n   */\n  protected getPagesRequestParams(context: PageContext): OccCmsPageRequest {\n    if (context.id === HOME_PAGE_CONTEXT || context.id === SMART_EDIT_CONTEXT) {\n      return {};\n    }\n\n    const httpParams: OccCmsPageRequest = {};\n    if (context.type) {\n      httpParams.pageType = context.type;\n    }\n    if (context.type === PageType.CONTENT_PAGE) {\n      httpParams.pageLabelOrId = context.id;\n    } else {\n      httpParams.code = context.id;\n    }\n\n    return httpParams;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsComponentAdapter } from '../../../cms/connectors/component/cms-component.adapter';\nimport { CmsPageAdapter } from '../../../cms/connectors/page/cms-page.adapter';\nimport { CMS_PAGE_NORMALIZER } from '../../../cms/connectors/page/converters';\nimport { OccCmsPageNormalizer } from './converters/occ-cms-page-normalizer';\nimport { OccCmsComponentAdapter } from './occ-cms-component.adapter';\nimport { OccCmsPageAdapter } from './occ-cms-page.adapter';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: CmsPageAdapter,\n      useExisting: OccCmsPageAdapter,\n    },\n    {\n      provide: CMS_PAGE_NORMALIZER,\n      useExisting: OccCmsPageNormalizer,\n      multi: true,\n    },\n    {\n      provide: CmsComponentAdapter,\n      useExisting: OccCmsComponentAdapter,\n    },\n  ],\n})\nexport class CmsOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-cms-page-normalizer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\nimport { CMS_COMPONENT_NORMALIZER } from '../../../cms/connectors/component/converters';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccCmsComponentAdapter } from './occ-cms-component.adapter';\n\n/**\n * Before 1905, the OCC CMS component API required was using POST method\n * to load a (potentially large) number of components. With 1905, the endpoint\n * evaluated to use GET. Switching from POST to GET has been initially implemented\n * with the `legacy` flag, but from version 3.0 onwards, we're moving the\n * implementation to this optional Adapter.\n *\n * If you like to connect to a pre 1905 version, you can provide this adapter for the\n * `CmsComponentAdapter` injection token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LegacyOccCmsComponentAdapter extends OccCmsComponentAdapter {\n  findComponentsByIds(\n    ids: string[],\n    pageContext: PageContext,\n    fields = 'DEFAULT',\n    currentPage = 0,\n    pageSize = ids.length,\n    sort?: string\n  ): Observable<CmsComponent[]> {\n    const idList: Occ.ComponentIDList = { idList: ids };\n\n    const requestParams = {\n      ...this.getContextParams(pageContext),\n      ...this.getPaginationParams(currentPage, pageSize, sort),\n    };\n\n    return this.http\n      .post<Occ.ComponentList>(\n        this.getComponentsEndpoint(requestParams, fields),\n        idList,\n        {\n          headers: this.headers,\n        }\n      )\n      .pipe(\n        pluck('component'),\n        map((components) => components ?? []),\n        this.converter.pipeableMany(CMS_COMPONENT_NORMALIZER)\n      );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-occ.module';\nexport * from './converters/index';\nexport * from './legacy-occ-cms-component.adapter';\nexport * from './occ-cms-component.adapter';\nexport * from './occ-cms-page.adapter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CostCenter } from '../../../../model/org-unit.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCostCenterNormalizer\n  implements Converter<Occ.CostCenter, CostCenter>\n{\n  convert(source: Occ.CostCenter, target?: CostCenter): CostCenter {\n    if (target === undefined) {\n      target = { ...(source as any) } as CostCenter;\n    }\n    target.active = this.normalizeBoolean(source.active);\n\n    return target;\n  }\n\n  /**\n   * Returns the boolean value for a string property that is supposed\n   * to be of type boolean.\n   */\n  protected normalizeBoolean(property: string | boolean | undefined): boolean {\n    if (property === undefined) {\n      return false;\n    }\n    return typeof property === 'string' ? property === 'true' : property;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CostCenter } from '../../../../model/org-unit.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCostCenterSerializer\n  implements Converter<CostCenter, Occ.CostCenter>\n{\n  convert(source: CostCenter, target?: Occ.CostCenter): Occ.CostCenter {\n    if (target === undefined) {\n      target = { ...(source as any) } as Occ.CostCenter;\n    }\n    target.activeFlag = source.active;\n    delete target.active;\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { EntitiesModel } from '../../../model/misc.model';\n\nexport const COST_CENTER_NORMALIZER = new InjectionToken<\n  Converter<any, CostCenter>\n>('CostCenterNormalizer');\n\nexport const COST_CENTERS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<CostCenter>>\n>('CostCentersListNormalizer');\n\nexport const COST_CENTER_SERIALIZER = new InjectionToken<\n  Converter<CostCenter, any>\n>('CostCenterSerializer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { COST_CENTER_NORMALIZER } from '../../../../cost-center/connectors/cost-center/converters';\nimport { EntitiesModel } from '../../../../model/misc.model';\nimport { CostCenter } from '../../../../model/org-unit.model';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCostCenterListNormalizer\n  implements Converter<Occ.CostCentersList, EntitiesModel<CostCenter>>\n{\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.CostCentersList,\n    target?: EntitiesModel<CostCenter>\n  ): EntitiesModel<CostCenter> {\n    if (target === undefined) {\n      target = { ...(source as any) } as EntitiesModel<CostCenter>;\n    }\n    target.values = source.costCenters.map((costCenter) => ({\n      ...this.converter.convert(costCenter, COST_CENTER_NORMALIZER),\n    }));\n\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-cost-center-normalizer';\nexport * from './occ-cost-center-serializer';\nexport * from './occ-cost-center-list-normalizer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Config } from '../../config/config-tokens';\nimport { FeaturesConfig } from '../config/features-config';\n\nfunction isFeatureConfig(config: Config): config is Required<FeaturesConfig> {\n  return typeof config === 'object' && !!config.features;\n}\n\nfunction isInLevel(level: string, version: string): boolean {\n  if (level === '*') {\n    return true;\n  }\n  const levelParts = level.split('.');\n  const versionParts = version.split('.');\n\n  for (let i = 0; i < versionParts.length; i++) {\n    const versionNumberPart = Number(versionParts[i]);\n    const levelNumberPart = Number(levelParts[i]) || 0;\n\n    if (versionNumberPart !== levelNumberPart) {\n      return levelNumberPart > versionNumberPart;\n    }\n  }\n  return true;\n}\n\nexport function isFeatureLevel(config: Config, level: string): boolean {\n  if (isFeatureConfig(config) && config.features.level) {\n    return level.startsWith('!')\n      ? !isInLevel(config.features.level, level.substring(1))\n      : isInLevel(config.features.level, level);\n  }\n  return false;\n}\n\nexport function isFeatureEnabled(config: Config, feature: string): boolean {\n  if (isFeatureConfig(config)) {\n    const featureConfig =\n      feature[0] === '!'\n        ? config.features[feature.substring(1)]\n        : config.features[feature];\n\n    const result =\n      typeof featureConfig === 'string'\n        ? isFeatureLevel(config, featureConfig)\n        : featureConfig;\n\n    return feature.startsWith('!') ? !result : !!result;\n  }\n  return false;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class FeaturesConfig {\n  features?: {\n    level?: string;\n    [featureToggle: string]: string | boolean | undefined;\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends FeaturesConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { FeaturesConfig } from '../config/features-config';\nimport {\n  isFeatureEnabled,\n  isFeatureLevel,\n} from '../utils/feature-config-utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureConfigService {\n  constructor(protected config: FeaturesConfig) {}\n\n  isLevel(version: string): boolean {\n    return isFeatureLevel(this.config, version);\n  }\n\n  isEnabled(feature: string) {\n    return isFeatureEnabled(this.config, feature);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { FeatureConfigService } from '../services/feature-config.service';\n\n@Directive({\n  selector: '[cxFeatureLevel]',\n})\nexport class FeatureLevelDirective {\n  constructor(\n    protected templateRef: TemplateRef<any>,\n    protected viewContainer: ViewContainerRef,\n    protected featureConfig: FeatureConfigService\n  ) {}\n\n  private hasView = false;\n\n  @Input() set cxFeatureLevel(level: string | number) {\n    if (this.featureConfig.isLevel(level.toString()) && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!this.featureConfig.isLevel(level.toString()) && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { FeatureConfigService } from '../services/feature-config.service';\n\n@Directive({\n  selector: '[cxFeature]',\n})\nexport class FeatureDirective {\n  constructor(\n    protected templateRef: TemplateRef<any>,\n    protected viewContainer: ViewContainerRef,\n    protected featureConfig: FeatureConfigService\n  ) {}\n\n  private hasView = false;\n\n  @Input() set cxFeature(feature: string) {\n    if (this.featureConfig.isEnabled(feature) && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!this.featureConfig.isEnabled(feature) && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FeaturesConfig } from './config/features-config';\nimport { FeatureLevelDirective } from './directives/feature-level.directive';\nimport { FeatureDirective } from './directives/feature.directive';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({\n  declarations: [FeatureLevelDirective, FeatureDirective],\n  exports: [FeatureLevelDirective, FeatureDirective],\n})\nexport class FeaturesConfigModule {\n  static forRoot(\n    defaultLevel = '3.0'\n  ): ModuleWithProviders<FeaturesConfigModule> {\n    return {\n      ngModule: FeaturesConfigModule,\n      providers: [\n        provideDefaultConfig(<FeaturesConfig>{\n          features: {\n            level: defaultLevel || '*',\n          },\n        }),\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './features-config.module';\nexport * from './utils/feature-config-utils';\nexport * from './config/features-config';\nexport * from './services/feature-config.service';\nexport * from './directives/feature-level.directive';\nexport * from './directives/feature.directive';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription, zip } from 'rxjs';\nimport { skip, tap } from 'rxjs/operators';\nimport { isFeatureEnabled } from '../../features-config';\nimport { UnifiedInjector } from '../../lazy-loading/unified-injector';\nimport {\n  Config,\n  ConfigChunk,\n  DefaultConfig,\n  DefaultConfigChunk,\n  RootConfig,\n} from '../config-tokens';\nimport { deepMerge } from '../utils/deep-merge';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigurationService implements OnDestroy {\n  /**\n   * Will emit unified configuration when some ambient configuration will appear\n   *\n   * Ambient configuration can appear when we lazy load module with configuration\n   */\n  readonly unifiedConfig$: Observable<Config>;\n\n  /**\n   * Global application configuration\n   */\n  readonly config: Config;\n\n  private readonly ambientDefaultConfig: Config = {};\n  private readonly ambientConfig: Config = {};\n\n  private subscription: Subscription;\n\n  constructor(\n    @Inject(RootConfig) protected rootConfig: Config,\n    @Inject(DefaultConfig) protected defaultConfig: Config,\n    protected unifiedInjector: UnifiedInjector,\n    config: Config\n  ) {\n    this.config = config;\n    this.unifiedConfig$ = new BehaviorSubject(config);\n\n    // We need to use subscription to propagate changes to the config from the beginning.\n    // It will be possible to make it lazy, when we drop this compatibility feature\n    // in the future.\n    this.subscription = this.feedUnifiedConfig().subscribe();\n  }\n\n  private feedUnifiedConfig(): Observable<[Config[], Config[]]> {\n    const configChunks$: Observable<Config[]> = this.unifiedInjector.get(\n      ConfigChunk,\n      []\n    );\n    const defaultConfigChunks$: Observable<Config[]> = this.unifiedInjector.get(\n      DefaultConfigChunk,\n      []\n    );\n\n    return zip(configChunks$, defaultConfigChunks$).pipe(\n      // we don't need result from the root injector\n      skip(1),\n      tap(([configChunks, defaultConfigChunks]) =>\n        this.processConfig(configChunks, defaultConfigChunks)\n      )\n    );\n  }\n\n  private processConfig(configChunks: Config[], defaultConfigChunks: Config[]) {\n    if (defaultConfigChunks?.length) {\n      deepMerge(\n        this.ambientDefaultConfig as Record<string, unknown>,\n        ...defaultConfigChunks\n      );\n    }\n    if (configChunks.length) {\n      deepMerge(this.ambientConfig as Record<string, unknown>, ...configChunks);\n    }\n\n    if (configChunks.length || defaultConfigChunks.length) {\n      this.emitUnifiedConfig();\n    }\n  }\n\n  private emitUnifiedConfig(): void {\n    const newConfig: Config = deepMerge(\n      {},\n      this.defaultConfig,\n      this.ambientDefaultConfig,\n      this.ambientConfig,\n      this.rootConfig\n    );\n    (this.unifiedConfig$ as BehaviorSubject<Config>).next(newConfig);\n\n    // compatibility mechanism, can be disabled with feature toggle\n    if (!isFeatureEnabled(this.config, 'disableConfigUpdates')) {\n      deepMerge(this.config as Record<string, unknown>, newConfig);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    (this.unifiedConfig$ as BehaviorSubject<Config>).complete();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ConfigFactory } from './config-factory';\nimport { provideConfig, provideConfigFactory } from './config-providers';\nimport { Config } from './config-tokens';\nimport { ConfigurationService } from './services/configuration.service';\n\n@NgModule({})\nexport class ConfigModule {\n  // To make sure ConfigurationService will be instantiated, we inject it into\n  // module constructor\n  constructor(_configurationService: ConfigurationService) {\n    // Intentional empty constructor\n  }\n\n  /**\n   * Import ConfigModule and contribute config to the global configuration\n   *\n   * To provide default configuration in libraries provideDefaultConfig should be used instead.\n   *\n   * @param config Config object to merge with the global configuration\n   */\n  static withConfig(config: Config): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule,\n      // eslint-disable-next-line @spartacus-eslint/use-default-provide-config\n      providers: [provideConfig(config)],\n    };\n  }\n\n  /**\n   * Import ConfigModule and contribute config to the global configuration using factory function\n   *\n   * To provide default configuration in libraries provideDefaultConfigFactory should be used instead.\n   *\n   * @param configFactory Factory function that will generate configuration\n   * @param deps Optional dependencies to factory function\n   */\n  static withConfigFactory(\n    configFactory: ConfigFactory,\n    deps?: any[]\n  ): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule,\n      providers: [provideConfigFactory(configFactory, deps)],\n    };\n  }\n\n  /**\n   * Module with providers, should be imported only once, if possible, at the root of the app.\n   *\n   * @param config\n   */\n  static forRoot(config: Config = {}): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule,\n      // eslint-disable-next-line @spartacus-eslint/use-default-provide-config\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccCostCentersConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        getActiveCostCenters:\n          '/costcenters?fields=DEFAULT,unit(BASIC,addresses(DEFAULT))',\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ConfigModule } from '../../../config/config.module';\nimport {\n  COST_CENTERS_NORMALIZER,\n  COST_CENTER_NORMALIZER,\n  COST_CENTER_SERIALIZER,\n} from '../../../cost-center/connectors/cost-center/converters';\nimport { OccCostCenterListNormalizer } from './converters/occ-cost-center-list-normalizer';\nimport { OccCostCenterNormalizer } from './converters/occ-cost-center-normalizer';\nimport { OccCostCenterSerializer } from './converters/occ-cost-center-serializer';\nimport { defaultOccCostCentersConfig } from './default-occ-cost-centers-config';\n\n@NgModule({\n  imports: [CommonModule, ConfigModule.withConfig(defaultOccCostCentersConfig)],\n  providers: [\n    {\n      provide: COST_CENTERS_NORMALIZER,\n      useExisting: OccCostCenterListNormalizer,\n      multi: true,\n    },\n    {\n      provide: COST_CENTER_NORMALIZER,\n      useExisting: OccCostCenterNormalizer,\n      multi: true,\n    },\n    {\n      provide: COST_CENTER_SERIALIZER,\n      useExisting: OccCostCenterSerializer,\n      multi: true,\n    },\n  ],\n})\nexport class CostCenterOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters/index';\nexport * from './cost-center-occ.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ImageGroup, Images } from '../../../../model/image.model';\nimport { Product } from '../../../../model/product.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { OccConfig } from '../../../config/occ-config';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductImageNormalizer implements Converter<Occ.Product, Product> {\n  constructor(protected config: OccConfig) {}\n\n  convert(source: Occ.Product, target?: Product): Product {\n    if (target === undefined) {\n      target = { ...(source as any) } as Product;\n    }\n    if (source.images) {\n      target.images = this.normalize(source.images);\n    }\n    return target;\n  }\n\n  /**\n   * @desc\n   * Creates the image structure we'd like to have. Instead of\n   * having a single list with all images despite type and format\n   * we create a proper structure. With that we can do:\n   * - images.primary.thumnail.url\n   * - images.GALLERY[0].thumnail.url\n   */\n  normalize(source: Occ.Image[]): Images {\n    const images: Images = {};\n    if (source) {\n      for (const image of source) {\n        const isList = image.hasOwnProperty('galleryIndex');\n        if (image.imageType) {\n          if (!images.hasOwnProperty(image.imageType)) {\n            images[image.imageType] = isList ? [] : {};\n          }\n\n          const imageContainer: ImageGroup = this.getImageContainer(\n            isList,\n            images,\n            image\n          );\n\n          const targetImage = { ...image };\n          targetImage.url = this.normalizeImageUrl(targetImage.url ?? '');\n          if (image.format) {\n            imageContainer[image.format] = targetImage;\n          }\n        }\n      }\n    }\n    return images;\n  }\n\n  protected getImageContainer(\n    isList: boolean,\n    images: Images,\n    image: Occ.Image | any\n  ) {\n    if (isList) {\n      const imageGroups = this.getImageGroups(images, image);\n      return imageGroups[image.galleryIndex as number];\n    } else {\n      return images[image.imageType] as ImageGroup;\n    }\n  }\n\n  protected getImageGroups(images: Images, image: Occ.Image | any) {\n    const imageGroups = images[image.imageType] as ImageGroup[];\n    if (!imageGroups[image.galleryIndex as number]) {\n      imageGroups[image.galleryIndex as number] = {};\n    }\n    return imageGroups;\n  }\n\n  /**\n   * Traditionally, in an on-prem world, medias and other backend related calls\n   * are hosted at the same platform, but in a cloud setup, applications are are\n   * typically distributed cross different environments. For media, we use the\n   * `backend.media.baseUrl` by default, but fallback to `backend.occ.baseUrl`\n   * if none provided.\n   */\n  private normalizeImageUrl(url: string): string {\n    if (new RegExp(/^(http|data:image|\\/\\/)/i).test(url)) {\n      return url;\n    }\n    return (\n      (this.config.backend?.media?.baseUrl ||\n        this.config.backend?.occ?.baseUrl ||\n        '') + url\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Product, ProductReferences } from '../../../../model/product.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable()\nexport class ProductReferenceNormalizer\n  implements Converter<Occ.Product, Product>\n{\n  convert(source: Occ.Product, target?: Product): Product {\n    if (target === undefined) {\n      target = { ...(source as any) } as Product;\n    }\n\n    if (source.productReferences) {\n      target.productReferences = this.normalize(source.productReferences);\n    }\n    return target;\n  }\n\n  /**\n   * @desc\n   * Creates the reference structure we'd like to have. Instead of\n   * having a single list with all references we create a proper structure.\n   * With that we have a semantic API for the clients\n   * - product.references.SIMILAR[0].code\n   */\n  protected normalize(source: Occ.ProductReference[]): ProductReferences {\n    const references: any = {};\n\n    if (source) {\n      for (const reference of source) {\n        if (reference.referenceType) {\n          if (!references.hasOwnProperty(reference.referenceType)) {\n            references[reference.referenceType] = [];\n          }\n          references[reference.referenceType].push(reference);\n        }\n      }\n    }\n    return references;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { Product } from '../../../model/product.model';\n\nexport const PRODUCT_NORMALIZER = new InjectionToken<Converter<any, Product>>(\n  'ProductNormalizer'\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Facet,\n  ProductSearchPage,\n} from '../../../../model/product-search.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccProductSearchPageNormalizer\n  implements Converter<Occ.ProductSearchPage, ProductSearchPage>\n{\n  constructor(private converterService: ConverterService) {}\n\n  /**\n   * Specifies the minimal number of top values in case\n   * non have been setup by the business.\n   */\n  protected DEFAULT_TOP_VALUES = 6;\n\n  convert(\n    source: Occ.ProductSearchPage,\n    target: ProductSearchPage = {}\n  ): ProductSearchPage {\n    target = {\n      ...target,\n      ...(source as any),\n    };\n\n    this.normalizeFacets(target);\n    if (source.products) {\n      target.products = source.products.map((product) =>\n        this.converterService.convert(product, PRODUCT_NORMALIZER)\n      );\n    }\n    return target;\n  }\n\n  protected normalizeFacets(target: ProductSearchPage): void {\n    this.normalizeFacetValues(target);\n    this.normalizeUselessFacets(target);\n  }\n\n  /**\n   * The (current) backend returns facets with values that do not contribute\n   * to the facet navigation much, as the number in the result list will not get\n   * behavior, see https://jira.hybris.com/browse/CS-427.\n   *\n   * As long as this is not in place, we manually filter the facet from the list;\n   * any facet that does not have a count < the total results will be dropped from\n   * the facets.\n   */\n  protected normalizeUselessFacets(target: ProductSearchPage): void {\n    if (target.facets) {\n      target.facets = target.facets.filter((facet) => {\n        return (\n          !target.pagination ||\n          !target.pagination.totalResults ||\n          ((!facet.hasOwnProperty('visible') || facet.visible) &&\n            facet.values &&\n            facet.values.find((value) => {\n              return (\n                value.selected ||\n                (value.count ?? 0) < (target.pagination?.totalResults ?? 0)\n              );\n            }))\n        );\n      });\n    }\n  }\n\n  /*\n   * In case there are so-called `topValues` given for the facet values,\n   * values are obsolete.\n   *\n   * `topValues` is a feature in Adaptive Search which can limit a large\n   * amount of facet values to a small set (5 by default). As long as the backend\n   * provides all facet values AND topValues, we normalize the data to not bother\n   * the UI with this specific feature.\n   */\n  protected normalizeFacetValues(target: ProductSearchPage): void {\n    if (target.facets) {\n      target.facets = target.facets.map((facetSource: Facet) => {\n        const { topValues, ...facetTarget } = facetSource;\n        facetTarget.topValueCount =\n          topValues && topValues.length > 0\n            ? topValues.length\n            : this.DEFAULT_TOP_VALUES;\n        return facetTarget;\n      });\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ProductReference } from '../../../../model/product.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccProductReferencesListNormalizer\n  implements Converter<Occ.ProductReferenceList, ProductReference[]>\n{\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.ProductReferenceList,\n    target: ProductReference[] = []\n  ): ProductReference[] {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source && source.references) {\n      target = source.references.map((reference) => ({\n        ...reference,\n        target: this.converter.convert(reference.target, PRODUCT_NORMALIZER),\n      }));\n\n      return target;\n    }\n    return [];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Product } from '../../../../model/product.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { OccConfig } from '../../../config/occ-config';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductNameNormalizer implements Converter<Occ.Product, Product> {\n  constructor(protected config: OccConfig) {}\n\n  convert(source: Occ.Product, target?: Product): Product {\n    target = target ?? { ...(source as unknown as Partial<Product>) };\n\n    if (source.name) {\n      target.name = this.normalize(source.name);\n      target.slug = this.normalizeSlug(source.name);\n      target.nameHtml = source.name;\n    }\n    return target as Product;\n  }\n\n  /**\n   * Sanitizes the name so that the name doesn't contain html elements.\n   */\n  protected normalize(name: string): string {\n    return name.replace(/<[^>]*>/g, '');\n  }\n\n  /**\n   * A pretty url should not have any encoded characters, which is why we replace\n   * the following character in the product title.\n   *\n   * See https://developers.google.com/maps/documentation/urls/url-encoding for more\n   * information on the characters.\n   */\n  protected reservedSlugCharacters = ` !*'();:@&=+$,/?%#[]`;\n  protected slugChar = '-';\n\n  // created the regex only once\n  private slugRegex = new RegExp(\n    `[${this.reservedSlugCharacters.split('').join('\\\\')}]`,\n    'g'\n  );\n  private sanitizeMultipleSlugChars = new RegExp(`${this.slugChar}+`, 'g');\n\n  /**\n   * Provides a title slug for the pretty URL.\n   *\n   * The name is sanitized from html, trimmed, converted to lowercase and special characters\n   * which are encoded are replaced by the slug char (dash by default).\n   */\n  protected normalizeSlug(name: string): string {\n    return this.normalize(name)\n      .trim()\n      .toLowerCase()\n      .replace(this.slugRegex, this.slugChar)\n      .replace(this.sanitizeMultipleSlugChars, this.slugChar);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-image-normalizer';\nexport * from './product-reference-normalizer';\nexport * from './occ-product-search-page-normalizer';\nexport * from './occ-product-references-list-normalizer';\nexport * from './product-name-normalizer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { ProductReference } from '../../../model/product.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const PRODUCT_REFERENCES_NORMALIZER = new InjectionToken<\n  Converter<any, ProductReference[]>\n>('ProductReferencesListNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductReference } from '../../../model/product.model';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { ConverterService } from '../../../util/converter.service';\nimport { PRODUCT_REFERENCES_NORMALIZER } from '../../../product/connectors/references/converters';\nimport { ProductReferencesAdapter } from '../../../product/connectors/references/product-references.adapter';\n\n@Injectable()\nexport class OccProductReferencesAdapter implements ProductReferencesAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): Observable<ProductReference[]> {\n    return this.http\n      .get(this.getEndpoint(productCode, referenceType, pageSize))\n      .pipe(this.converter.pipeable(PRODUCT_REFERENCES_NORMALIZER));\n  }\n\n  protected getEndpoint(\n    code: string,\n    reference?: string,\n    pageSize?: number\n  ): string {\n    return this.occEndpoints.buildUrl('productReferences', {\n      urlParams: { productCode: code },\n      queryParams: { referenceType: reference, pageSize },\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { Review } from '../../../model/product.model';\n\nexport const PRODUCT_REVIEW_NORMALIZER = new InjectionToken<\n  Converter<any, Review>\n>('ProductReviewNormalizer');\n\nexport const PRODUCT_REVIEW_SERIALIZER = new InjectionToken<\n  Converter<Review, any>\n>('ProductReviewSerializer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\nimport { Review } from '../../../model/product.model';\nimport {\n  PRODUCT_REVIEW_NORMALIZER,\n  PRODUCT_REVIEW_SERIALIZER,\n} from '../../../product/connectors/reviews/converters';\nimport { ProductReviewsAdapter } from '../../../product/connectors/reviews/product-reviews.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccProductReviewsAdapter implements ProductReviewsAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load(productCode: string, maxCount?: number): Observable<Review[]> {\n    return this.http\n      .get<Occ.Product>(this.getEndpoint(productCode, maxCount))\n      .pipe(\n        pluck('reviews'),\n        map((reviews) => reviews ?? []),\n        this.converter.pipeableMany(PRODUCT_REVIEW_NORMALIZER)\n      );\n  }\n\n  post(productCode: string, review: any): Observable<Review> {\n    review = this.converter.convert(review, PRODUCT_REVIEW_SERIALIZER);\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    const body = new URLSearchParams();\n    body.append('headline', review.headline);\n    body.append('comment', review.comment);\n    body.append('rating', review.rating.toString());\n    body.append('alias', review.alias);\n\n    return this.http.post(this.getEndpoint(productCode), body.toString(), {\n      headers,\n    });\n  }\n\n  protected getEndpoint(code: string, maxCount?: number): string {\n    return this.occEndpoints.buildUrl('productReviews', {\n      urlParams: { productCode: code },\n      queryParams: { maxCount },\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport {\n  Suggestion,\n  ProductSearchPage,\n} from '../../../model/product-search.model';\n\nexport const PRODUCT_SEARCH_PAGE_NORMALIZER = new InjectionToken<\n  Converter<any, ProductSearchPage>\n>('ProductSearchPageNormalizer');\n\nexport const PRODUCT_SUGGESTION_NORMALIZER = new InjectionToken<\n  Converter<any, Suggestion>\n>('ProductSuggestionNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpContextToken } from '@angular/common/http';\n\nexport interface OccHttpContext {\n  /**\n   * Indicates to the interceptor that the emulated customer ID should be sent to the OCC\n   * to avoid ambiguity.\n   * 'string' if the request has the user ID at hand.\n   * 'boolean' (or, 'true') if the request does not have the user ID but still needs to send the emulated ID.\n   * @see feature-libs/asm/root/interceptors/user-id-http-header.interceptor.ts\n   */\n  sendUserIdAsHeader?: string | boolean;\n}\n\nexport const OCC_HTTP_TOKEN = new HttpContextToken<OccHttpContext>(() => ({}));\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\n\nimport * as OCC_USER_IDS from './occ-user-ids';\n\nexport { OCC_USER_IDS };\n\nexport * from './interceptor-util';\nexport * from './occ-constants';\nexport * from './occ-url-util';\nexport * from './occ-http-token';\n\nexport const OCC_USER_ID_CONSTANTS = new InjectionToken<{\n  [identifier: string]: string;\n}>('List of OCC constants that pass for user IDs.', {\n  providedIn: 'root',\n  factory: () => OCC_USER_IDS,\n});\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\nimport {\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport {\n  PRODUCT_SEARCH_PAGE_NORMALIZER,\n  PRODUCT_SUGGESTION_NORMALIZER,\n} from '../../../product/connectors/search/converters';\nimport { ProductSearchAdapter } from '../../../product/connectors/search/product-search.adapter';\nimport { SearchConfig } from '../../../product/model/search-config';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { OCC_HTTP_TOKEN } from '../../utils';\n@Injectable()\nexport class OccProductSearchAdapter implements ProductSearchAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  readonly DEFAULT_SEARCH_CONFIG: SearchConfig = {\n    pageSize: 20,\n  };\n\n  search(\n    query: string,\n    searchConfig: SearchConfig = this.DEFAULT_SEARCH_CONFIG\n  ): Observable<ProductSearchPage> {\n    const context = new HttpContext().set(OCC_HTTP_TOKEN, {\n      sendUserIdAsHeader: true,\n    });\n\n    return this.http\n      .get(this.getSearchEndpoint(query, searchConfig), { context })\n      .pipe(this.converter.pipeable(PRODUCT_SEARCH_PAGE_NORMALIZER));\n  }\n\n  loadSuggestions(\n    term: string,\n    pageSize: number = 3\n  ): Observable<Suggestion[]> {\n    return this.http\n      .get<Occ.SuggestionList>(\n        this.getSuggestionEndpoint(term, pageSize.toString())\n      )\n      .pipe(\n        pluck('suggestions'),\n        map((suggestions) => suggestions ?? []),\n        this.converter.pipeableMany(PRODUCT_SUGGESTION_NORMALIZER)\n      );\n  }\n\n  protected getSearchEndpoint(\n    query: string,\n    searchConfig: SearchConfig\n  ): string {\n    return this.occEndpoints.buildUrl('productSearch', {\n      queryParams: { query, ...searchConfig },\n    });\n  }\n\n  protected getSuggestionEndpoint(term: string, max: string): string {\n    return this.occEndpoints.buildUrl('productSuggestions', {\n      queryParams: { term, max },\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { deepMerge, isObject } from '../../config/utils/deep-merge';\n\n/**\n * Merge occ fields parameters\n *\n * @param fields Fields definition as string or object\n */\nexport function mergeFields(fields: (string | object)[]): string {\n  const parsedFields = fields.map((f) =>\n    typeof f === 'string' ? parseFields(f) : f\n  );\n  const mergedFields = optimizeFields(deepMerge({}, ...parsedFields));\n  return stringifyFields(mergedFields);\n}\n\n/**\n * Optimize fields definition by removing not needed groups\n *\n * @param fields\n */\nexport function optimizeFields(fields: object = {}): object {\n  const keys = Object.keys(fields);\n  if (keys.includes('FULL')) {\n    delete fields['DEFAULT' as keyof object];\n    delete fields['BASIC' as keyof object];\n  } else if (keys.includes('DEFAULT')) {\n    delete fields['BASIC' as keyof object];\n  }\n  Object.keys(fields).forEach((key) => {\n    (fields[key as keyof object] as object) = optimizeFields(\n      fields[key as keyof object]\n    );\n  });\n  return fields;\n}\n\n/**\n * Parse string field definition to an AST object\n *\n * @param fields Fields string definition\n * @param startIndex Used for recurrence\n */\nexport function parseFields(\n  fields: string,\n  startIndex = 0\n): [object, number] | object {\n  const parsedFields: Record<string, object> = {};\n\n  let i = startIndex;\n  while (i < fields.length) {\n    if (fields[i] === ',') {\n      if (i > startIndex) {\n        parsedFields[fields.substr(startIndex, i - startIndex)] = {};\n      }\n      startIndex = i + 1;\n    } else if (fields[i] === '(') {\n      const subFields = parseFields(fields, i + 1);\n      if (!Array.isArray(subFields)) {\n        return parsedFields;\n      }\n      parsedFields[fields.substr(startIndex, i - startIndex)] = subFields[0];\n      startIndex = subFields[1];\n      i = startIndex - 1;\n    } else if (fields[i] === ')') {\n      if (i > startIndex) {\n        parsedFields[fields.substr(startIndex, i - startIndex)] = {};\n      }\n      return [parsedFields, i + 1];\n    }\n    i++;\n  }\n\n  if (startIndex < fields.length) {\n    parsedFields[fields.substr(startIndex, i - startIndex)] = {};\n  }\n\n  return parsedFields;\n}\n\n/**\n * Convert AST object fields definition to string representation\n *\n * @param fields\n */\nexport function stringifyFields(fields: object): string {\n  return Object.keys(fields)\n    .map((key) => {\n      const subFields = stringifyFields(fields[key as keyof object]);\n      return subFields ? `${key}(${subFields})` : key;\n    })\n    .join(',');\n}\n\n/**\n * Extract part of the object described by fields definition\n *\n * @param data\n * @param fields\n */\nexport function extractFields<T>(data: T, fields: string | object): T {\n  const parsedFields =\n    typeof fields === 'string' ? parseFields(fields) : fields;\n  return getObjectPart<T>(data, parsedFields);\n}\n\nfunction getObjectPart<T>(data: T, fields: object): T {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  const keys = Object.keys(fields);\n\n  if (\n    keys.length === 0 ||\n    // we should not extract parts of the object with ambiguous fields definitions\n    keys.find((el) => el === 'BASIC' || el === 'DEFAULT' || el === 'FULL')\n  ) {\n    return data;\n  }\n\n  const result = {} as T;\n\n  keys.forEach((key) => {\n    if ((data as unknown as object).hasOwnProperty(key)) {\n      result[key as keyof T] = getObjectPart(\n        data[key as keyof object],\n        fields[key as keyof object]\n      );\n    }\n  });\n\n  return result;\n}\n\n// CHECK SONAR\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ScopedData } from '../../model/scoped-data';\nimport { mergeFields, parseFields } from '../utils/occ-fields';\n\nexport interface ScopedDataWithUrl {\n  /** Url (with fields) to load scoped data */\n  url?: string;\n  /** scoped data model */\n  scopedData: ScopedData<any>;\n}\n\n/**\n * Intermediate model to accommodate all data needed to perform occ fields optimizations\n * wrapping ScopedData with url and fields\n */\nexport interface OccFieldsModel extends ScopedDataWithUrl {\n  /** extracted fields object, used to extract data from broader model */\n  fields: object;\n}\n\n/**\n * Grouped rest calls with optimal urls\n *\n * One url groups all scopes it covers with related occFieldsModels\n */\nexport interface OccOptimimalUrlGroups {\n  [optimalUrl: string]: {\n    [scope: string]: OccFieldsModel;\n  };\n}\n\n/**\n * Helper service for optimizing endpoint calls to occ backend\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccFieldsService {\n  constructor(protected http: HttpClient) {}\n\n  protected FIELDS_PARAM = 'fields';\n\n  /**\n   * Merge similar occ endpoints calls by merging fields parameter\n   *\n   * We assume that different scopes are defined by different fields parameters,\n   * so we are grouping all requests with the same urls (except fields definition)\n   * and merging into one request with fields that will satisfy all separate ones.\n   *\n   * @param models\n   */\n  getOptimalUrlGroups(models: ScopedDataWithUrl[]): OccOptimimalUrlGroups {\n    const groupedByUrls: OccOptimimalUrlGroups = {};\n    for (const model of models as OccFieldsModel[]) {\n      const [urlPart, fields] = this.splitFields(model.url ?? '');\n      if (!groupedByUrls[urlPart]) {\n        groupedByUrls[urlPart] = {};\n      }\n      model.fields = fields ? parseFields(fields) : {};\n      if (model.scopedData.scope !== undefined) {\n        groupedByUrls[urlPart][model.scopedData.scope] = model;\n      }\n    }\n\n    const mergedUrls: OccOptimimalUrlGroups = {};\n    for (const [url, group] of Object.entries(groupedByUrls)) {\n      const urlWithFields = this.getUrlWithFields(\n        url,\n        Object.values(group).map((lo) => lo.fields)\n      );\n      mergedUrls[urlWithFields] = group;\n    }\n\n    return mergedUrls;\n  }\n\n  /**\n   * Extract fields parameter from occ endpoint url\n   *\n   * @param urlWithFields\n   */\n  private splitFields(urlWithFields: string): [string, string] {\n    const [url, params] = urlWithFields.split('?');\n\n    const paramsMap: Record<string, string> = {};\n\n    if (params) {\n      params.split('&').forEach((param) => {\n        const keyValue = param.split('=');\n        paramsMap[keyValue[0]] = keyValue[1];\n      });\n    }\n\n    const nonFieldsParams = Object.keys(paramsMap)\n      .sort()\n      .reduce((id: string[], par) => {\n        if (par !== this.FIELDS_PARAM) {\n          id.push(paramsMap[par] ? `${par}=${paramsMap[par]}` : par);\n        }\n        return id;\n      }, []);\n\n    const nonFields = nonFieldsParams.join('&');\n\n    return [\n      nonFields ? `${url}?${nonFields}` : url,\n      paramsMap[this.FIELDS_PARAM],\n    ];\n  }\n\n  /**\n   * Combine url with field parameters\n   *\n   * @param url\n   * @param fields\n   */\n  private getUrlWithFields(url: string, fields: (string | object)[]): string {\n    const mergedFields = mergeFields(fields);\n\n    if (mergedFields) {\n      url += url.includes('?') ? '&' : '?';\n      url += `${this.FIELDS_PARAM}=${mergedFields}`;\n    }\n\n    return url;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ScopedData } from '../../model/scoped-data';\nimport { extractFields } from '../utils/occ-fields';\nimport {\n  OccFieldsModel,\n  OccFieldsService,\n  ScopedDataWithUrl,\n} from './occ-fields.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccRequestsOptimizerService {\n  constructor(\n    protected http: HttpClient,\n    protected occFields: OccFieldsService\n  ) {}\n\n  /**\n   * Optimize occ endpoint calls merging requests to the same url by merging field parameters\n   *\n   * @param scopedDataWithUrls\n   * @param dataFactory\n   */\n  scopedDataLoad<T>(\n    scopedDataWithUrls: ScopedDataWithUrl[],\n    dataFactory?: (url: string) => Observable<T>\n  ): ScopedData<T>[] {\n    const result: ScopedData<T>[] = [];\n\n    if (!dataFactory) {\n      dataFactory = (url) => this.http.get<any>(url);\n    }\n\n    const mergedUrls = this.occFields.getOptimalUrlGroups(scopedDataWithUrls);\n\n    Object.entries(mergedUrls).forEach(\n      ([url, groupedModelsSet]: [\n        string,\n        {\n          [scope: string]: OccFieldsModel;\n        }\n      ]) => {\n        const groupedModels = Object.values(groupedModelsSet);\n\n        if (groupedModels.length === 1) {\n          // only one scope for url, we can pass the data straightaway\n          result.push({\n            ...groupedModels[0].scopedData,\n            data$: dataFactory?.(url),\n          });\n        } else {\n          // multiple scopes per url\n          // we have to split the model per each scope\n          const data$ = dataFactory?.(url).pipe(shareReplay(1));\n\n          groupedModels.forEach((modelData) => {\n            result.push({\n              ...modelData.scopedData,\n              data$: data$?.pipe(\n                map((data) => extractFields<T>(data, modelData.fields))\n              ),\n            });\n          });\n        }\n      }\n    );\n\n    return result;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../../../model/product.model';\nimport { PRODUCT_NORMALIZER } from '../../../product/connectors/product/converters';\nimport { ProductAdapter } from '../../../product/connectors/product/product.adapter';\nimport { ScopedProductData } from '../../../product/connectors/product/scoped-product-data';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { ScopedDataWithUrl } from '../../services/occ-fields.service';\nimport { OccRequestsOptimizerService } from '../../services/occ-requests-optimizer.service';\n\n@Injectable()\nexport class OccProductAdapter implements ProductAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService,\n    protected requestsOptimizer: OccRequestsOptimizerService\n  ) {}\n\n  load(productCode: string, scope?: string): Observable<Product> {\n    return this.http\n      .get(this.getEndpoint(productCode, scope))\n      .pipe(this.converter.pipeable(PRODUCT_NORMALIZER));\n  }\n\n  loadMany(products: ScopedProductData[]): ScopedProductData[] {\n    const scopedDataWithUrls: ScopedDataWithUrl[] = products.map((model) => ({\n      scopedData: model,\n      url: this.getEndpoint(model.code, model.scope),\n    }));\n\n    return this.requestsOptimizer\n      .scopedDataLoad<Occ.Product>(scopedDataWithUrls)\n      .map(\n        (scopedProduct) =>\n          ({\n            ...scopedProduct,\n            data$: scopedProduct.data$?.pipe(\n              this.converter.pipeable(PRODUCT_NORMALIZER)\n            ),\n          } as ScopedProductData)\n      );\n  }\n\n  protected getEndpoint(code: string, scope?: string): string {\n    return this.occEndpoints.buildUrl('product', {\n      urlParams: { productCode: code },\n      scope,\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { Product } from '../../../model/product.model';\nimport { ScopedProductData } from './scoped-product-data';\n\nexport abstract class ProductAdapter {\n  /**\n   * Abstract method used to load product's details data.\n   * Product's data can be loaded from alternative sources, as long as the structure\n   * converts to the `Product`.\n   *\n   * @param productCode The `productCode` for given product\n   * @param scope The product scope to load\n   */\n  abstract load(productCode: string, scope?: string): Observable<Product>;\n\n  /**\n   * Abstract method used to load data for multiple product and scopes\n   * Adapter is able to optimize necessary backend calls and load\n   * products in the most efficient way possible.\n   *\n   * @param products\n   */\n  abstract loadMany?(products: ScopedProductData[]): ScopedProductData[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { ProductReference } from '../../../model/product.model';\n\nexport abstract class ProductReferencesAdapter {\n  /**\n   * Abstract method used to load product references for a given product.\n   * References can be loaded from alternative sources, as long as the structure\n   * converts to the `ProductReference[]`.\n   *\n   * @param productCode The `productCode` for given product\n   * @param referenceType Reference type according to enum ProductReferenceTypeEnum\n   * @param pageSize Maximum number of product refrence to load\n   */\n  abstract load(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): Observable<ProductReference[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { Review } from '../../../model/product.model';\n\nexport abstract class ProductReviewsAdapter {\n  /**\n   * Abstract method used to load reviews for a given product.\n   * Reviews can be loaded from alternative sources, as long as the structure\n   * converts to the `Review[]`.\n   *\n   * @param productCode The `productCode` for given product\n   * @param maxCount Maximum number of review to load\n   */\n  abstract load(productCode: string, maxCount?: number): Observable<Review[]>;\n\n  /**\n   * Abstract method used to post review for a given product.\n   *\n   * @param productCode The `productCode` for given product\n   * @param review Review to post\n   */\n  abstract post(productCode: string, review: any): Observable<Review>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SearchConfig } from '../../model/search-config';\n\nimport { Observable } from 'rxjs';\nimport {\n  Suggestion,\n  ProductSearchPage,\n} from '../../../model/product-search.model';\n\nexport abstract class ProductSearchAdapter {\n  abstract search(\n    query: string,\n    searchConfig?: SearchConfig\n  ): Observable<ProductSearchPage>;\n\n  abstract loadSuggestions(\n    term: string,\n    pageSize?: number\n  ): Observable<Suggestion[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ProductScope } from '../../../product/model/product-scope';\nimport { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccProductConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        product: {\n          default:\n            'products/${productCode}?fields=DEFAULT,averageRating,images(FULL),classifications,manufacturer,numberOfReviews,categories(FULL),baseOptions,baseProduct,variantOptions,variantType',\n          list: 'products/${productCode}?fields=code,name,summary,price(formattedValue),images(DEFAULT,galleryIndex),baseProduct',\n          details:\n            'products/${productCode}?fields=averageRating,stock(DEFAULT),description,availableForPickup,code,url,price(DEFAULT),numberOfReviews,manufacturer,categories(FULL),priceRange,multidimensional,tags,images(FULL)',\n          attributes: 'products/${productCode}?fields=classifications',\n          price: 'products/${productCode}?fields=price(formattedValue)',\n          stock: 'products/${productCode}?fields=stock(DEFAULT)',\n        },\n\n        productReviews: 'products/${productCode}/reviews',\n        // Uncomment this when occ gets configured\n        // productReferences:\n        //   'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))&referenceType=${referenceType}',\n        productReferences:\n          'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))',\n        /* eslint-disable max-len */\n        productSearch:\n          'products/search?fields=products(code,name,summary,configurable,configuratorType,multidimensional,price(FULL),images(DEFAULT),stock(FULL),averageRating,variantOptions),facets,breadcrumbs,pagination(DEFAULT),sorts(DEFAULT),freeTextSearch,currentQuery',\n        /* eslint-enable */\n        productSuggestions: 'products/suggestions',\n      },\n    },\n    loadingScopes: {\n      product: {\n        details: {\n          include: [ProductScope.LIST, ProductScope.VARIANTS],\n        },\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ProductScope } from '../../../product/model/product-scope';\nimport {\n  LoadingScopeConfig,\n  LoadingScopesConfig,\n} from '../../config/loading-scopes-config';\n\n// Improve type-safety and code completion for product loading scopes\ndeclare module '../../config/loading-scopes-config' {\n  interface LoadingScopes {\n    product?: ProductScopesConfig;\n  }\n}\n\nexport interface ProductScopesConfig extends LoadingScopesConfig {\n  list?: ProductLoadingScopeConfig;\n  details?: ProductLoadingScopeConfig;\n  attributes?: ProductLoadingScopeConfig;\n  variants?: ProductLoadingScopeConfig;\n  [scope: string]: ProductLoadingScopeConfig | undefined;\n}\n\nexport interface ProductLoadingScopeConfig extends LoadingScopeConfig {\n  include?: (ProductScope | string)[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PRODUCT_NORMALIZER } from '../../../product/connectors/product/converters';\nimport { ProductAdapter } from '../../../product/connectors/product/product.adapter';\nimport { PRODUCT_REFERENCES_NORMALIZER } from '../../../product/connectors/references/converters';\nimport { ProductReferencesAdapter } from '../../../product/connectors/references/product-references.adapter';\nimport { ProductReviewsAdapter } from '../../../product/connectors/reviews/product-reviews.adapter';\nimport { PRODUCT_SEARCH_PAGE_NORMALIZER } from '../../../product/connectors/search/converters';\nimport { ProductSearchAdapter } from '../../../product/connectors/search/product-search.adapter';\nimport { OccProductReferencesListNormalizer } from './converters/occ-product-references-list-normalizer';\nimport { OccProductSearchPageNormalizer } from './converters/occ-product-search-page-normalizer';\nimport { ProductImageNormalizer } from './converters/product-image-normalizer';\nimport { OccProductReferencesAdapter } from './occ-product-references.adapter';\nimport { OccProductReviewsAdapter } from './occ-product-reviews.adapter';\nimport { OccProductSearchAdapter } from './occ-product-search.adapter';\nimport { OccProductAdapter } from './occ-product.adapter';\nimport { ProductNameNormalizer } from './converters/product-name-normalizer';\nimport { defaultOccProductConfig } from './default-occ-product-config';\nimport './product-occ-config';\nimport { provideDefaultConfig } from '../../../config/config-providers';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccProductConfig),\n    {\n      provide: ProductAdapter,\n      useClass: OccProductAdapter,\n    },\n    {\n      provide: PRODUCT_NORMALIZER,\n      useExisting: ProductImageNormalizer,\n      multi: true,\n    },\n    {\n      provide: PRODUCT_NORMALIZER,\n      useExisting: ProductNameNormalizer,\n      multi: true,\n    },\n    {\n      provide: ProductReferencesAdapter,\n      useClass: OccProductReferencesAdapter,\n    },\n    {\n      provide: PRODUCT_REFERENCES_NORMALIZER,\n      useExisting: OccProductReferencesListNormalizer,\n      multi: true,\n    },\n    {\n      provide: ProductSearchAdapter,\n      useClass: OccProductSearchAdapter,\n    },\n    {\n      provide: PRODUCT_SEARCH_PAGE_NORMALIZER,\n      useExisting: OccProductSearchPageNormalizer,\n      multi: true,\n    },\n    {\n      provide: ProductReviewsAdapter,\n      useClass: OccProductReviewsAdapter,\n    },\n  ],\n})\nexport class ProductOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters/index';\nexport * from './occ-product-references.adapter';\nexport * from './occ-product-reviews.adapter';\nexport * from './occ-product-search.adapter';\nexport * from './occ-product.adapter';\nexport * from './product-occ.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { BaseSite } from '../../../../model/misc.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class BaseSiteNormalizer implements Converter<Occ.BaseSite, BaseSite> {\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  convert(source: Occ.BaseSite, target?: BaseSite): BaseSite {\n    if (target === undefined) {\n      target = { ...(source as any) } as BaseSite;\n    }\n\n    // We take the first store as the base store.\n    target.baseStore = source.stores?.[0];\n    delete target.stores;\n\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './base-site-normalizer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../util/converter.service';\nimport { BaseSite, Currency, Language } from '../../model/misc.model';\nimport { Country, Region } from '../../model/address.model';\n\nexport const LANGUAGE_NORMALIZER = new InjectionToken<Converter<any, Language>>(\n  'LanguageNormalizer'\n);\n\nexport const CURRENCY_NORMALIZER = new InjectionToken<Converter<any, Currency>>(\n  'CurrencyNormalizer'\n);\n\nexport const COUNTRY_NORMALIZER = new InjectionToken<Converter<any, Country>>(\n  'CountryNormalizer'\n);\n\nexport const REGION_NORMALIZER = new InjectionToken<Converter<any, Region>>(\n  'RegionNormalizer'\n);\n\nexport const BASE_SITE_NORMALIZER = new InjectionToken<\n  Converter<any, BaseSite>\n>('BaseSiteNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Country, CountryType, Region } from '../../../model/address.model';\nimport { BaseSite, Currency, Language } from '../../../model/misc.model';\nimport {\n  BASE_SITE_NORMALIZER,\n  COUNTRY_NORMALIZER,\n  CURRENCY_NORMALIZER,\n  LANGUAGE_NORMALIZER,\n  REGION_NORMALIZER,\n} from '../../../site-context/connectors/converters';\nimport { SiteAdapter } from '../../../site-context/connectors/site.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccSiteAdapter implements SiteAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService\n  ) {}\n\n  loadLanguages(): Observable<Language[]> {\n    return this.http\n      .get<Occ.LanguageList>(this.occEndpointsService.buildUrl('languages'))\n      .pipe(\n        map((languageList) => languageList.languages ?? []),\n        this.converterService.pipeableMany(LANGUAGE_NORMALIZER)\n      );\n  }\n\n  loadCurrencies(): Observable<Currency[]> {\n    return this.http\n      .get<Occ.CurrencyList>(this.occEndpointsService.buildUrl('currencies'))\n      .pipe(\n        map((currencyList) => currencyList.currencies ?? []),\n        this.converterService.pipeableMany(CURRENCY_NORMALIZER)\n      );\n  }\n\n  loadCountries(type?: CountryType): Observable<Country[]> {\n    return this.http\n      .get<Occ.CountryList>(\n        this.occEndpointsService.buildUrl('countries', {\n          queryParams: type ? { type } : undefined,\n        })\n      )\n      .pipe(\n        map((countryList) => countryList.countries ?? []),\n        this.converterService.pipeableMany(COUNTRY_NORMALIZER)\n      );\n  }\n\n  loadRegions(countryIsoCode: string): Observable<Region[]> {\n    return this.http\n      .get<Occ.RegionList>(\n        this.occEndpointsService.buildUrl('regions', {\n          urlParams: { isoCode: countryIsoCode },\n        })\n      )\n      .pipe(\n        map((regionList) => regionList.regions ?? []),\n        this.converterService.pipeableMany(REGION_NORMALIZER)\n      );\n  }\n\n  /**\n   * There is no OCC API to load one site based on Uid.\n   * So, we have to load all sites, and find the one from the list.\n   */\n  loadBaseSite(siteUid?: string): Observable<BaseSite | undefined> {\n    if (!siteUid) {\n      const baseUrl = this.occEndpointsService.getBaseUrl();\n      const urlSplits = baseUrl.split('/');\n      siteUid = urlSplits.pop();\n    }\n\n    return this.http\n      .get<{ baseSites: BaseSite[] }>(\n        this.occEndpointsService.buildUrl('baseSites', {}, { baseSite: false })\n      )\n      .pipe(\n        map((siteList) => {\n          return siteList.baseSites.find((site) => site.uid === siteUid);\n        })\n      );\n  }\n\n  loadBaseSites(): Observable<BaseSite[]> {\n    return this.http\n      .get<{ baseSites: BaseSite[] }>(\n        this.occEndpointsService.buildUrl('baseSites', {}, { baseSite: false })\n      )\n      .pipe(\n        map((baseSiteList) => baseSiteList.baseSites),\n        this.converterService.pipeableMany(BASE_SITE_NORMALIZER)\n      );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { Country, CountryType, Region } from '../../model/address.model';\nimport { BaseSite, Currency, Language } from '../../model/misc.model';\n\nexport abstract class SiteAdapter {\n  /**\n   * Abstract method used to load languages.\n   */\n  abstract loadLanguages(): Observable<Language[]>;\n\n  /**\n   * Abstract method used to load currencies.\n   */\n  abstract loadCurrencies(): Observable<Currency[]>;\n\n  /**\n   * Abstract method used to get countries with optional type.\n   */\n  abstract loadCountries(type?: CountryType): Observable<Country[]>;\n\n  /**\n   * Abstract method used to get regions for a country.\n   */\n  abstract loadRegions(countryIsoCode: string): Observable<Region[]>;\n\n  /**\n   * Abstract method used to get base site data based on siteUid.\n   */\n  abstract loadBaseSite(siteUid?: string): Observable<BaseSite | undefined>;\n\n  /**\n   * Abstract method used to get all base sites data.\n   */\n  abstract loadBaseSites(): Observable<BaseSite[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccSiteContextConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        languages: 'languages',\n        currencies: 'currencies',\n        countries: 'countries',\n        regions:\n          'countries/${isoCode}/regions?fields=regions(name,isocode,isocodeShort)',\n        baseSites: 'basesites?fields=FULL',\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\nimport { Language } from '../../model/misc.model';\nimport { isNotNullable } from '../../util/type-guards';\nimport { getContextParameterValues } from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { LANGUAGE_CONTEXT_ID } from '../providers/context-ids';\nimport { SiteContextActions } from '../store/actions/index';\nimport { SiteContextSelectors } from '../store/selectors/index';\nimport { StateWithSiteContext } from '../store/state';\nimport { SiteContext } from './site-context.interface';\n\n/**\n * Facade that provides easy access to language state, actions and selectors.\n */\n@Injectable()\nexport class LanguageService implements SiteContext<Language> {\n  constructor(\n    protected store: Store<StateWithSiteContext>,\n    protected config: SiteContextConfig\n  ) {}\n\n  /**\n   * Represents all the languages supported by the current store.\n   */\n  getAll(): Observable<Language[]> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getAllLanguages),\n      tap((languages) => {\n        if (!languages) {\n          this.store.dispatch(new SiteContextActions.LoadLanguages());\n        }\n      }),\n      filter(isNotNullable)\n    );\n  }\n\n  /**\n   * Represents the isocode of the active language.\n   */\n  getActive(): Observable<string> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getActiveLanguage),\n      filter(isNotNullable)\n    );\n  }\n\n  /**\n   * Sets the active language.\n   */\n  setActive(isocode: string): void {\n    this.store\n      .pipe(select(SiteContextSelectors.getActiveLanguage), take(1))\n      .subscribe((activeLanguage) => {\n        if (activeLanguage !== isocode && this.isValid(isocode)) {\n          this.store.dispatch(\n            new SiteContextActions.SetActiveLanguage(isocode)\n          );\n        }\n      });\n  }\n\n  /**\n   * Tells whether the value of the active language has been already initialized\n   */\n  isInitialized(): boolean {\n    let valueInitialized = false;\n    this.getActive()\n      .subscribe(() => (valueInitialized = true))\n      .unsubscribe();\n\n    return valueInitialized;\n  }\n\n  /**\n   * Tells whether the given iso code is allowed.\n   *\n   * The list of allowed iso codes can be configured in the `context` config of Spartacus.\n   */\n  protected isValid(value: string): boolean {\n    return (\n      !!value &&\n      getContextParameterValues(this.config, LANGUAGE_CONTEXT_ID).includes(\n        value\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\nimport { Currency } from '../../model/misc.model';\nimport { isNotNullable } from '../../util/type-guards';\nimport { getContextParameterValues } from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { CURRENCY_CONTEXT_ID } from '../providers/context-ids';\nimport { SiteContextActions } from '../store/actions/index';\nimport { SiteContextSelectors } from '../store/selectors/index';\nimport { StateWithSiteContext } from '../store/state';\nimport { SiteContext } from './site-context.interface';\n\n/**\n * Facade that provides easy access to currency state, actions and selectors.\n */\n@Injectable()\nexport class CurrencyService implements SiteContext<Currency> {\n  constructor(\n    protected store: Store<StateWithSiteContext>,\n    protected config: SiteContextConfig\n  ) {}\n\n  /**\n   * Represents all the currencies supported by the current store.\n   */\n  getAll(): Observable<Currency[]> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getAllCurrencies),\n      tap((currencies) => {\n        if (!currencies) {\n          this.store.dispatch(new SiteContextActions.LoadCurrencies());\n        }\n      }),\n      filter(isNotNullable)\n    );\n  }\n\n  /**\n   * Represents the isocode of the active currency.\n   */\n  getActive(): Observable<string> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getActiveCurrency),\n      filter(isNotNullable)\n    );\n  }\n\n  /**\n   * Sets the active language.\n   */\n  setActive(isocode: string): void {\n    this.store\n      .pipe(select(SiteContextSelectors.getActiveCurrency), take(1))\n      .subscribe((activeCurrency) => {\n        if (activeCurrency !== isocode && this.isValid(isocode)) {\n          this.store.dispatch(\n            new SiteContextActions.SetActiveCurrency(isocode)\n          );\n        }\n      });\n  }\n\n  /**\n   * Tells whether the value of the active currency has been already initialized\n   */\n  isInitialized(): boolean {\n    let valueInitialized = false;\n    this.getActive()\n      .subscribe(() => (valueInitialized = true))\n      .unsubscribe();\n\n    return valueInitialized;\n  }\n\n  /**\n   * Tells whether the given iso code is allowed.\n   *\n   * The list of allowed iso codes can be configured in the `context` config of Spartacus.\n   */\n  protected isValid(value: string): boolean {\n    return (\n      !!value &&\n      getContextParameterValues(this.config, CURRENCY_CONTEXT_ID).includes(\n        value\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { getContextParameterDefault } from '../../../site-context/config/context-config-utils';\nimport { SiteContextConfig } from '../../../site-context/config/site-context-config';\nimport { CurrencyService } from '../../../site-context/facade/currency.service';\nimport { LanguageService } from '../../../site-context/facade/language.service';\nimport {\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n} from '../../../site-context/providers/context-ids';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SiteContextInterceptor implements HttpInterceptor {\n  activeLang: string | undefined;\n  activeCurr: string | undefined;\n\n  constructor(\n    private languageService: LanguageService,\n    private currencyService: CurrencyService,\n    private occEndpoints: OccEndpointsService,\n    private config: SiteContextConfig\n  ) {\n    this.activeLang = getContextParameterDefault(\n      this.config,\n      LANGUAGE_CONTEXT_ID\n    );\n    this.activeCurr = getContextParameterDefault(\n      this.config,\n      CURRENCY_CONTEXT_ID\n    );\n\n    this.languageService\n      .getActive()\n      .subscribe((data) => (this.activeLang = data));\n\n    this.currencyService.getActive().subscribe((data) => {\n      this.activeCurr = data;\n    });\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes(this.occEndpoints.getBaseUrl())) {\n      request = request.clone({\n        setParams: {\n          lang: this.activeLang ?? '',\n          curr: this.activeCurr ?? '',\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '../../../config/config-providers';\nimport { BASE_SITE_NORMALIZER } from '../../../site-context/connectors/converters';\nimport { SiteAdapter } from '../../../site-context/connectors/site.adapter';\nimport { BaseSiteNormalizer } from './converters/base-site-normalizer';\nimport { defaultOccSiteContextConfig } from './default-occ-site-context-config';\nimport { OccSiteAdapter } from './occ-site.adapter';\nimport { SiteContextInterceptor } from './site-context.interceptor';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccSiteContextConfig),\n    {\n      provide: SiteAdapter,\n      useClass: OccSiteAdapter,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useExisting: SiteContextInterceptor,\n      multi: true,\n    },\n    {\n      provide: BASE_SITE_NORMALIZER,\n      useExisting: BaseSiteNormalizer,\n      multi: true,\n    },\n  ],\n})\nexport class SiteContextOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters/index';\nexport * from './occ-site.adapter';\nexport * from './site-context-occ.module';\nexport * from './site-context.interceptor';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { AnonymousConsentsService } from '../../../../anonymous-consents/facade/anonymous-consents.service';\nimport { AnonymousConsent } from '../../../../model/consent.model';\nimport { Converter } from '../../../../util/converter.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentNormalizer\n  implements Converter<string, AnonymousConsent[]>\n{\n  constructor(protected anonymousConsentsService: AnonymousConsentsService) {}\n\n  convert(source: string): AnonymousConsent[] {\n    return this.anonymousConsentsService.decodeAndDeserialize(source);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ProductInterestSearchResult } from '../../../../model/product-interest.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccUserInterestsNormalizer\n  implements\n    Converter<Occ.ProductInterestSearchResult, ProductInterestSearchResult>\n{\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.ProductInterestSearchResult,\n    target?: ProductInterestSearchResult\n  ): ProductInterestSearchResult {\n    if (target === undefined) {\n      target = { ...(source as any) } as ProductInterestSearchResult;\n    }\n    if (source && source.results) {\n      target.results = source.results.map((result) => ({\n        ...result,\n        product: this.converter.convert(result.product, PRODUCT_NORMALIZER),\n      }));\n    }\n\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consents-normalizer';\nexport * from './occ-user-interests-normalizer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { AnonymousConsent } from '../../model/consent.model';\nimport { Converter } from '../../util/converter.service';\n\nexport const ANONYMOUS_CONSENT_NORMALIZER = new InjectionToken<\n  Converter<string, AnonymousConsent[]>\n>('AnonymousConsentNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { ConsentTemplate } from '../../../model/consent.model';\n\nexport const CONSENT_TEMPLATE_NORMALIZER = new InjectionToken<\n  Converter<any, ConsentTemplate>\n>('ConsentTemplateNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AnonymousConsentTemplatesAdapter } from '../../../anonymous-consents/connectors/anonymous-consent-templates.adapter';\nimport { ANONYMOUS_CONSENT_NORMALIZER } from '../../../anonymous-consents/connectors/converters';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENTS_HEADER,\n  ConsentTemplate,\n} from '../../../model/consent.model';\nimport { CONSENT_TEMPLATE_NORMALIZER } from '../../../user/connectors/consent/converters';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccAnonymousConsentTemplatesAdapter\n  implements AnonymousConsentTemplatesAdapter\n{\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadAnonymousConsentTemplates(): Observable<ConsentTemplate[]> {\n    const url = this.occEndpoints.buildUrl('anonymousConsentTemplates');\n    return this.http.get<Occ.ConsentTemplateList>(url).pipe(\n      catchError((error) => throwError(error)),\n      map((consentList) => consentList.consentTemplates ?? []),\n      this.converter.pipeableMany(CONSENT_TEMPLATE_NORMALIZER)\n    );\n  }\n\n  loadAnonymousConsents(): Observable<AnonymousConsent[]> {\n    // using the endpoint that doesn't set caching headers\n    const url = this.occEndpoints.buildUrl('anonymousConsentTemplates');\n    return this.http\n      .head<Occ.ConsentTemplateList>(url, { observe: 'response' })\n      .pipe(\n        catchError((error) => throwError(error)),\n        map(\n          (response) => response.headers.get(ANONYMOUS_CONSENTS_HEADER) ?? ''\n        ),\n        this.converter.pipeable(ANONYMOUS_CONSENT_NORMALIZER)\n      );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\n\nexport const CUSTOMER_COUPON_SEARCH_RESULT_NORMALIZER = new InjectionToken<\n  Converter<any, CustomerCouponSearchResult>\n>('CustomerCouponSearchResultNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  CustomerCoupon2Customer,\n  CustomerCouponNotification,\n  CustomerCouponSearchResult,\n} from '../../../model/customer-coupon.model';\nimport { CUSTOMER_COUPON_SEARCH_RESULT_NORMALIZER } from '../../../user/connectors/customer-coupon/converters';\nimport { CustomerCouponAdapter } from '../../../user/connectors/customer-coupon/customer-coupon.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { OCC_USER_ID_ANONYMOUS } from '../../utils/occ-constants';\n\n@Injectable()\nexport class OccCustomerCouponAdapter implements CustomerCouponAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  getCustomerCoupons(\n    userId: string,\n    pageSize: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<CustomerCouponSearchResult> {\n    // Currently OCC only supports calls for customer coupons in case of logged users\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      return of({});\n    }\n\n    const url = this.occEndpoints.buildUrl('customerCoupons', {\n      urlParams: { userId },\n    });\n\n    let params = new HttpParams().set('sort', sort ? sort : 'startDate:asc');\n\n    if (pageSize) {\n      params = params.set('pageSize', pageSize.toString());\n    }\n    if (currentPage) {\n      params = params.set('currentPage', currentPage.toString());\n    }\n\n    const headers = this.newHttpHeader();\n\n    return this.http\n      .get<Occ.CustomerCouponSearchResult>(url, { headers, params })\n      .pipe(this.converter.pipeable(CUSTOMER_COUPON_SEARCH_RESULT_NORMALIZER));\n  }\n\n  turnOffNotification(userId: string, couponCode: string): Observable<{}> {\n    const url = this.occEndpoints.buildUrl('couponNotification', {\n      urlParams: { userId, couponCode },\n    });\n    const headers = this.newHttpHeader();\n\n    return this.http.delete(url, { headers });\n  }\n\n  turnOnNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCouponNotification> {\n    const url = this.occEndpoints.buildUrl('couponNotification', {\n      urlParams: { userId, couponCode },\n    });\n    const headers = this.newHttpHeader();\n\n    return this.http.post(url, { headers });\n  }\n\n  claimCustomerCoupon(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCoupon2Customer> {\n    const url = this.occEndpoints.buildUrl('claimCoupon', {\n      urlParams: { userId, couponCode },\n    });\n    const headers = this.newHttpHeader();\n\n    return this.http.post(url, { headers });\n  }\n\n  private newHttpHeader() {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Address, AddressValidation } from '../../../model/address.model';\nimport { EntitiesModel } from '../../../model/misc.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const ADDRESS_NORMALIZER = new InjectionToken<Converter<any, Address>>(\n  'AddressNormalizer'\n);\n\nexport const ADDRESS_LIST_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<Address>>\n>('AddressesNormalizer');\n\nexport const ADDRESS_SERIALIZER = new InjectionToken<Converter<Address, any>>(\n  'AddressSerializer'\n);\n\nexport const ADDRESS_VALIDATION_NORMALIZER = new InjectionToken<\n  Converter<any, AddressValidation>\n>('AddressValidationNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Address, AddressValidation } from '../../../model/address.model';\nimport {\n  ADDRESS_NORMALIZER,\n  ADDRESS_SERIALIZER,\n  ADDRESS_VALIDATION_NORMALIZER,\n} from '../../../user/connectors/address/converters';\nimport { UserAddressAdapter } from '../../../user/connectors/address/user-address.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../utils/interceptor-util';\nimport { OCC_USER_ID_ANONYMOUS } from '../../utils/occ-constants';\n\nconst CONTENT_TYPE_JSON_HEADER = { 'Content-Type': 'application/json' };\n\n@Injectable()\nexport class OccUserAddressAdapter implements UserAddressAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadAll(userId: string): Observable<Address[]> {\n    const url = this.occEndpoints.buildUrl('addresses', {\n      urlParams: { userId },\n    });\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n\n    return this.http.get<Occ.AddressList>(url, { headers }).pipe(\n      catchError((error: any) => throwError(error)),\n      map((addressList) => addressList.addresses ?? []),\n      this.converter.pipeableMany(ADDRESS_NORMALIZER)\n    );\n  }\n\n  add(userId: string, address: Address): Observable<{}> {\n    const url = this.occEndpoints.buildUrl('addresses', {\n      urlParams: { userId },\n    });\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .post(url, address, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n\n  update(userId: string, addressId: string, address: Address): Observable<{}> {\n    const url = this.occEndpoints.buildUrl('addressDetail', {\n      urlParams: { userId, addressId },\n    });\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .patch(url, address, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n\n  verify(userId: string, address: Address): Observable<AddressValidation> {\n    const url = this.occEndpoints.buildUrl('addressVerification', {\n      urlParams: { userId },\n    });\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http.post<AddressValidation>(url, address, { headers }).pipe(\n      catchError((error: any) => throwError(error)),\n      this.converter.pipeable(ADDRESS_VALIDATION_NORMALIZER)\n    );\n  }\n\n  delete(userId: string, addressId: string): Observable<{}> {\n    const url = this.occEndpoints.buildUrl('addressDetail', {\n      urlParams: { userId, addressId },\n    });\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n\n    return this.http\n      .delete(url, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { CONSENT_TEMPLATE_NORMALIZER } from '../../../user/connectors/consent/converters';\nimport { UserConsentAdapter } from '../../../user/connectors/consent/user-consent.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccUserConsentAdapter implements UserConsentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadConsents(userId: string): Observable<ConsentTemplate[]> {\n    const url = this.occEndpoints.buildUrl('consentTemplates', {\n      urlParams: { userId },\n    });\n    const headers = new HttpHeaders({ 'Cache-Control': 'no-cache' });\n    return this.http.get<Occ.ConsentTemplateList>(url, { headers }).pipe(\n      catchError((error: any) => throwError(error)),\n      map((consentList) => consentList.consentTemplates ?? []),\n      this.converter.pipeableMany(CONSENT_TEMPLATE_NORMALIZER)\n    );\n  }\n\n  giveConsent(\n    userId: string,\n    consentTemplateId: string,\n    consentTemplateVersion: number\n  ): Observable<ConsentTemplate> {\n    const url = this.occEndpoints.buildUrl('consents', {\n      urlParams: { userId },\n    });\n    const httpParams = new HttpParams()\n      .set('consentTemplateId', consentTemplateId)\n      .set('consentTemplateVersion', consentTemplateVersion.toString());\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Cache-Control': 'no-cache',\n    });\n    return this.http\n      .post<Occ.ConsentTemplate>(url, httpParams, { headers })\n      .pipe(\n        catchError((error) => throwError(error)),\n        this.converter.pipeable(CONSENT_TEMPLATE_NORMALIZER)\n      );\n  }\n\n  withdrawConsent(userId: string, consentCode: string): Observable<{}> {\n    const headers = new HttpHeaders({\n      'Cache-Control': 'no-cache',\n    });\n    const url = this.occEndpoints.buildUrl('consentDetail', {\n      urlParams: { userId, consentId: consentCode },\n    });\n\n    return this.http.delete(url, { headers });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\n\nexport const PRODUCT_INTERESTS_NORMALIZER = new InjectionToken<\n  Converter<any, ProductInterestSearchResult>\n>('ProductInterestsNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  NotificationType,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n} from '../../../model/product-interest.model';\nimport { PRODUCT_INTERESTS_NORMALIZER } from '../../../user/connectors/interests/converters';\nimport { UserInterestsAdapter } from '../../../user/connectors/interests/user-interests.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccConfig } from '../../config/occ-config';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nconst headers = new HttpHeaders({\n  'Content-Type': 'application/json',\n});\n\n@Injectable()\nexport class OccUserInterestsAdapter implements UserInterestsAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected config: OccConfig,\n    protected converter: ConverterService\n  ) {}\n\n  public getInterests(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): Observable<ProductInterestSearchResult> {\n    let params = new HttpParams().set('sort', sort ? sort : 'name:asc');\n    if (pageSize) {\n      params = params.set('pageSize', pageSize.toString());\n    }\n    if (currentPage) {\n      params = params.set('currentPage', currentPage.toString());\n    }\n    if (productCode) {\n      params = params.set('productCode', productCode);\n    }\n    if (notificationType) {\n      params = params.set('notificationType', notificationType.toString());\n    }\n\n    return this.http\n      .get(\n        this.occEndpoints.buildUrl('getProductInterests', {\n          urlParams: { userId },\n        }),\n        {\n          headers,\n          params,\n        }\n      )\n      .pipe(\n        this.converter.pipeable(PRODUCT_INTERESTS_NORMALIZER),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  public removeInterest(\n    userId: string,\n    item: ProductInterestEntryRelation\n  ): Observable<any[]> {\n    const r: Observable<any>[] = [];\n    item.productInterestEntry?.forEach((entry: any) => {\n      const params: HttpParams = new HttpParams()\n        .set('productCode', item.product?.code ?? '')\n        .set('notificationType', entry.interestType);\n      r.push(\n        this.http\n          .delete(\n            this.occEndpoints.buildUrl('productInterests', {\n              urlParams: { userId },\n            }),\n            {\n              params: params,\n            }\n          )\n          .pipe(catchError((error: any) => throwError(error)))\n      );\n    });\n    return forkJoin(r);\n  }\n\n  public addInterest(\n    userId: string,\n    productCode: string,\n    notificationType: NotificationType\n  ): Observable<any> {\n    const params = new HttpParams()\n      .set('productCode', productCode)\n      .set('notificationType', notificationType.toString());\n    return this.http\n      .post(\n        this.occEndpoints.buildUrl('productInterests', {\n          urlParams: { userId },\n        }),\n        {},\n        {\n          headers,\n          params,\n        }\n      )\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const NOTIFICATION_PREFERENCE_SERIALIZER = new InjectionToken<\n  Converter<NotificationPreference[], any>\n>('NotificationPreferenceSerializer');\n\nexport const NOTIFICATION_PREFERENCE_NORMALIZER = new InjectionToken<\n  Converter<any, NotificationPreference>\n>('NotificationPreferenceNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\n\nexport abstract class UserNotificationPreferenceAdapter {\n  /**\n   * Abstract method used to load notification preferences for an user.\n   *\n   * @param userId The `userId` for given user\n   */\n  abstract loadAll(userId: string): Observable<NotificationPreference[]>;\n\n  /**\n   * Abstract method used to update notification preferences for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param preferences The notification preferences to be updated.\n   */\n  abstract update(\n    userId: string,\n    preferences: NotificationPreference[]\n  ): Observable<{}>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserNotificationPreferenceAdapter } from './user-notification-preference.adapter';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserNotificationPreferenceConnector {\n  constructor(protected adapter: UserNotificationPreferenceAdapter) {}\n\n  loadAll(userId: string): Observable<NotificationPreference[]> {\n    return this.adapter.loadAll(userId);\n  }\n\n  update(userId: string, preferences: NotificationPreference[]) {\n    return this.adapter.update(userId, preferences);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\nexport * from './user-notification-preference.adapter';\nexport * from './user-notification-preference.connector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  NotificationPreference,\n  NotificationPreferenceList,\n} from '../../../model/notification-preference.model';\nimport {\n  NOTIFICATION_PREFERENCE_NORMALIZER,\n  NOTIFICATION_PREFERENCE_SERIALIZER,\n} from '../../../user/connectors/notification-preference';\nimport { UserNotificationPreferenceAdapter } from '../../../user/connectors/notification-preference/user-notification-preference.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nconst headers = new HttpHeaders({\n  'Content-Type': 'application/json',\n});\n\n@Injectable()\nexport class OccUserNotificationPreferenceAdapter\n  implements UserNotificationPreferenceAdapter\n{\n  constructor(\n    protected http: HttpClient,\n    protected converter: ConverterService,\n    protected occEndpoints: OccEndpointsService\n  ) {}\n\n  loadAll(userId: string): Observable<NotificationPreference[]> {\n    return this.http\n      .get<NotificationPreferenceList>(\n        this.occEndpoints.buildUrl('notificationPreference', {\n          urlParams: { userId },\n        }),\n        {\n          headers,\n        }\n      )\n      .pipe(\n        map((list) => list.preferences ?? []),\n        this.converter.pipeableMany(NOTIFICATION_PREFERENCE_NORMALIZER),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  update(\n    userId: string,\n    preferences: NotificationPreference[]\n  ): Observable<{}> {\n    preferences = this.converter.convert(\n      preferences,\n      NOTIFICATION_PREFERENCE_SERIALIZER\n    );\n    return this.http\n      .patch(\n        this.occEndpoints.buildUrl('notificationPreference', {\n          urlParams: { userId },\n        }),\n        { preferences: preferences },\n        { headers }\n      )\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { PaymentDetails } from '../../../model/payment.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const PAYMENT_DETAILS_NORMALIZER = new InjectionToken<\n  Converter<any, PaymentDetails>\n>('PaymentDetailsNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { PAYMENT_DETAILS_NORMALIZER } from '../../../checkout/connectors/payment/converters';\nimport { PaymentDetails } from '../../../model/payment.model';\nimport { UserPaymentAdapter } from '../../../user/connectors/payment/user-payment.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nconst CONTENT_TYPE_JSON_HEADER = { 'Content-Type': 'application/json' };\n\n@Injectable()\nexport class OccUserPaymentAdapter implements UserPaymentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadAll(userId: string): Observable<PaymentDetails[]> {\n    const url =\n      this.occEndpoints.buildUrl('paymentDetailsAll', {\n        urlParams: { userId },\n      }) + '?saved=true';\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n\n    return this.http.get<Occ.PaymentDetailsList>(url, { headers }).pipe(\n      catchError((error: any) => throwError(error)),\n      map((methodList) => methodList.payments ?? []),\n      this.converter.pipeableMany(PAYMENT_DETAILS_NORMALIZER)\n    );\n  }\n\n  delete(userId: string, paymentMethodID: string): Observable<{}> {\n    const url = this.occEndpoints.buildUrl('paymentDetail', {\n      urlParams: { userId, paymentDetailId: paymentMethodID },\n    });\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n\n    return this.http\n      .delete(url, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n\n  setDefault(userId: string, paymentMethodID: string): Observable<{}> {\n    const url = this.occEndpoints.buildUrl('paymentDetail', {\n      urlParams: { userId, paymentDetailId: paymentMethodID },\n    });\n\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n\n    return this.http\n      .patch(\n        url,\n        // TODO: Remove billingAddress property\n        { billingAddress: { titleCode: 'mr' }, defaultPayment: true },\n        { headers }\n      )\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { Address, AddressValidation } from '../../../model/address.model';\n\nexport abstract class UserAddressAdapter {\n  abstract loadAll(userId: string): Observable<Address[]>;\n\n  abstract add(userId: string, address: Address): Observable<{}>;\n\n  abstract update(\n    userId: string,\n    addressId: string,\n    address: Address\n  ): Observable<{}>;\n\n  abstract verify(\n    userId: string,\n    address: Address\n  ): Observable<AddressValidation>;\n\n  abstract delete(userId: string, addressId: string): Observable<{}>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { ConsentTemplate } from '../../../model/consent.model';\n\nexport abstract class UserConsentAdapter {\n  abstract loadConsents(userId: string): Observable<ConsentTemplate[]>;\n\n  abstract giveConsent(\n    userId: string,\n    consentTemplateId: string,\n    consentTemplateVersion: number\n  ): Observable<ConsentTemplate>;\n\n  abstract withdrawConsent(userId: string, consentCode: string): Observable<{}>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { EntitiesModel } from '../../../model/misc.model';\n\nexport abstract class UserCostCenterAdapter {\n  /**\n   * Returns the list of all active cost centers of the login user\n   * @param userId\n   */\n  abstract loadActiveList(\n    userId: string\n  ): Observable<EntitiesModel<CostCenter>>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport {\n  CustomerCoupon2Customer,\n  CustomerCouponNotification,\n  CustomerCouponSearchResult,\n} from '../../../model/customer-coupon.model';\n\nexport abstract class CustomerCouponAdapter {\n  abstract getCustomerCoupons(\n    userId: string,\n    pageSize: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<CustomerCouponSearchResult>;\n\n  abstract turnOnNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCouponNotification>;\n\n  abstract turnOffNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<{}>;\n\n  abstract claimCustomerCoupon(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCoupon2Customer>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport {\n  ProductInterestSearchResult,\n  ProductInterestEntryRelation,\n  NotificationType,\n} from '../../../model/product-interest.model';\n\nexport abstract class UserInterestsAdapter {\n  /**\n   * Abstract method used to load product interests for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param pageSize\n   * @param currentPage\n   * @param sort Sorting method\n   * @param productCode The product code\n   * @param  notificationType The notification type\n   */\n  abstract getInterests(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): Observable<ProductInterestSearchResult>;\n\n  /**\n   * Abstract method used to remove product interest for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param ProductInterestRelation The product interest to be removed.\n   */\n  abstract removeInterest(\n    userId: string,\n    item: ProductInterestEntryRelation\n  ): Observable<any[]>;\n\n  /**\n   * Abstract method to add a product interest for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param productCode The product code\n   * @param notificationType The notification type\n   */\n  abstract addInterest(\n    userId: string,\n    productCode: string,\n    notificationType: NotificationType\n  ): Observable<any>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { PaymentDetails } from '../../../model/payment.model';\n\nexport abstract class UserPaymentAdapter {\n  abstract loadAll(userId: string): Observable<PaymentDetails[]>;\n\n  abstract delete(userId: string, paymentMethodID: string): Observable<{}>;\n\n  abstract setDefault(userId: string, paymentMethodID: string): Observable<{}>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Address } from '../../../../model/address.model';\nimport { EntitiesModel } from '../../../../model/misc.model';\nimport { ADDRESS_NORMALIZER } from '../../../../user/connectors/address/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccAddressListNormalizer\n  implements Converter<Occ.AddressList, EntitiesModel<Address>>\n{\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.AddressList,\n    target?: EntitiesModel<Address>\n  ): EntitiesModel<Address> {\n    if (target === undefined) {\n      target = { ...(source as any) } as EntitiesModel<Address>;\n    }\n    target.values =\n      source.addresses?.map((address) => ({\n        ...this.converter.convert(address, ADDRESS_NORMALIZER),\n      })) ?? [];\n\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccUserConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        /* eslint-disable max-len */\n        paymentDetailsAll: 'users/${userId}/paymentdetails',\n        paymentDetail: 'users/${userId}/paymentdetails/${paymentDetailId}',\n        anonymousConsentTemplates: 'users/anonymous/consenttemplates',\n        consentTemplates: 'users/${userId}/consenttemplates',\n        consents: 'users/${userId}/consents',\n        consentDetail: 'users/${userId}/consents/${consentId}',\n        addresses: 'users/${userId}/addresses',\n        addressDetail: 'users/${userId}/addresses/${addressId}',\n        addressVerification: 'users/${userId}/addresses/verification',\n        customerCoupons: 'users/${userId}/customercoupons',\n        claimCoupon: 'users/${userId}/customercoupons/${couponCode}/claim',\n        couponNotification:\n          'users/${userId}/customercoupons/${couponCode}/notification',\n        notificationPreference: 'users/${userId}/notificationpreferences',\n        productInterests: 'users/${userId}/productinterests',\n        getProductInterests:\n          'users/${userId}/productinterests?fields=sorts,pagination,results(productInterestEntry,product(code))',\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { COST_CENTERS_NORMALIZER } from '../../../cost-center/connectors/cost-center/converters';\nimport { EntitiesModel } from '../../../model/misc.model';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { SearchConfig } from '../../../product/model/search-config';\nimport { UserCostCenterAdapter } from '../../../user/connectors/cost-center/user-cost-center.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { OCC_HTTP_TOKEN } from '../../utils';\n\n@Injectable()\nexport class OccUserCostCenterAdapter implements UserCostCenterAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadActiveList(userId: string): Observable<EntitiesModel<CostCenter>> {\n    const context = new HttpContext().set(OCC_HTTP_TOKEN, {\n      sendUserIdAsHeader: true,\n    });\n\n    return this.http\n      .get<Occ.CostCentersList>(this.getCostCentersEndpoint(userId), {\n        context,\n      })\n      .pipe(this.converter.pipeable(COST_CENTERS_NORMALIZER));\n  }\n\n  protected getCostCentersEndpoint(\n    userId: string,\n    params?: SearchConfig\n  ): string {\n    return this.occEndpoints.buildUrl('getActiveCostCenters', {\n      urlParams: { userId },\n      queryParams: params,\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AnonymousConsentTemplatesAdapter } from '../../../anonymous-consents/connectors/anonymous-consent-templates.adapter';\nimport { ANONYMOUS_CONSENT_NORMALIZER } from '../../../anonymous-consents/connectors/converters';\nimport { provideDefaultConfig } from '../../../config/config-providers';\nimport { ADDRESS_LIST_NORMALIZER } from '../../../user/connectors/address/converters';\nimport { UserAddressAdapter } from '../../../user/connectors/address/user-address.adapter';\nimport { UserConsentAdapter } from '../../../user/connectors/consent/user-consent.adapter';\nimport { UserCostCenterAdapter } from '../../../user/connectors/cost-center/user-cost-center.adapter';\nimport { CustomerCouponAdapter } from '../../../user/connectors/customer-coupon/customer-coupon.adapter';\nimport { PRODUCT_INTERESTS_NORMALIZER } from '../../../user/connectors/interests/converters';\nimport { UserInterestsAdapter } from '../../../user/connectors/interests/user-interests.adapter';\nimport { UserNotificationPreferenceAdapter } from '../../../user/connectors/notification-preference/user-notification-preference.adapter';\nimport { UserPaymentAdapter } from '../../../user/connectors/payment/user-payment.adapter';\nimport { AnonymousConsentNormalizer } from './converters/anonymous-consents-normalizer';\nimport { OccAddressListNormalizer } from './converters/occ-address-list-normalizer';\nimport { OccUserInterestsNormalizer } from './converters/occ-user-interests-normalizer';\nimport { defaultOccUserConfig } from './default-occ-user-config';\nimport { OccAnonymousConsentTemplatesAdapter } from './occ-anonymous-consent-templates.adapter';\nimport { OccCustomerCouponAdapter } from './occ-customer-coupon.adapter';\nimport { OccUserAddressAdapter } from './occ-user-address.adapter';\nimport { OccUserConsentAdapter } from './occ-user-consent.adapter';\nimport { OccUserCostCenterAdapter } from './occ-user-cost-centers.adapter';\nimport { OccUserInterestsAdapter } from './occ-user-interests.adapter';\nimport { OccUserNotificationPreferenceAdapter } from './occ-user-notification-preference.adapter';\nimport { OccUserPaymentAdapter } from './occ-user-payment.adapter';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccUserConfig),\n    { provide: UserAddressAdapter, useClass: OccUserAddressAdapter },\n    { provide: UserConsentAdapter, useClass: OccUserConsentAdapter },\n    {\n      provide: AnonymousConsentTemplatesAdapter,\n      useClass: OccAnonymousConsentTemplatesAdapter,\n    },\n    {\n      provide: UserPaymentAdapter,\n      useClass: OccUserPaymentAdapter,\n    },\n    { provide: CustomerCouponAdapter, useClass: OccCustomerCouponAdapter },\n    {\n      provide: UserNotificationPreferenceAdapter,\n      useClass: OccUserNotificationPreferenceAdapter,\n    },\n    { provide: UserInterestsAdapter, useClass: OccUserInterestsAdapter },\n    { provide: UserCostCenterAdapter, useClass: OccUserCostCenterAdapter },\n    {\n      provide: PRODUCT_INTERESTS_NORMALIZER,\n      useExisting: OccUserInterestsNormalizer,\n      multi: true,\n    },\n    {\n      provide: ANONYMOUS_CONSENT_NORMALIZER,\n      useExisting: AnonymousConsentNormalizer,\n      multi: true,\n    },\n    {\n      provide: ADDRESS_LIST_NORMALIZER,\n      useExisting: OccAddressListNormalizer,\n      multi: true,\n    },\n  ],\n})\nexport class UserOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters/index';\nexport * from './occ-anonymous-consent-templates.adapter';\nexport * from './occ-customer-coupon.adapter';\nexport * from './occ-user-address.adapter';\nexport * from './occ-user-consent.adapter';\nexport * from './occ-user-interests.adapter';\nexport * from './occ-user-notification-preference.adapter';\nexport * from './occ-user-payment.adapter';\nexport * from './user-occ.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms/index';\nexport * from './cost-center/index';\nexport * from './product/index';\nexport * from './site-context/index';\nexport * from './user/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from './occ-config';\n\nexport const defaultOccConfig: OccConfig = {\n  backend: {\n    occ: {\n      prefix: '/occ/v2/',\n    },\n    media: {},\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from './occ-config';\n\nexport function occConfigValidator(config: OccConfig) {\n  if (\n    config.backend === undefined ||\n    config.backend.occ === undefined ||\n    config.backend.occ.baseUrl === undefined\n  ) {\n    return 'Please configure backend.occ.baseUrl before using storefront library!';\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OccConfig } from '../config/occ-config';\n\n/**\n * Http interceptor to add cookies to all cross-site requests.\n */\n@Injectable({ providedIn: 'root' })\nexport class WithCredentialsInterceptor implements HttpInterceptor {\n  constructor(protected config: OccConfig) {}\n\n  /**\n   * Intercepts each request and adds the `withCredential` flag to it\n   * if it hasn't been added already.\n   */\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.requiresWithCredentials(request)) {\n      request = request.clone({\n        withCredentials: true,\n      });\n    }\n    return next.handle(request);\n  }\n\n  /**\n   * indicates whether the request should use the WithCredentials flag.\n   */\n  protected requiresWithCredentials(request: HttpRequest<any>): boolean {\n    return (\n      this.occConfig?.useWithCredentials !== undefined &&\n      request.url.indexOf(this.occConfig?.prefix ?? '') > -1\n    );\n  }\n\n  private get occConfig() {\n    return this.config.backend?.occ;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideConfigValidator } from '../config/config-validator/config-validator';\nimport { defaultOccConfig } from './config/default-occ-config';\nimport { occConfigValidator } from './config/occ-config-validator';\nimport { WithCredentialsInterceptor } from './interceptors/with-credentials.interceptor';\nimport { CmsOccModule } from './adapters/cms/cms-occ.module';\nimport { SiteContextOccModule } from './adapters/site-context/site-context-occ.module';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({\n  imports: [CmsOccModule, SiteContextOccModule],\n})\nexport class BaseOccModule {\n  static forRoot(): ModuleWithProviders<BaseOccModule> {\n    return {\n      ngModule: BaseOccModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useExisting: WithCredentialsInterceptor,\n          multi: true,\n        },\n        provideDefaultConfig(defaultOccConfig),\n        provideConfigValidator(occConfigValidator),\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { OccConfig } from './occ-config';\nimport { provideConfigFactory } from '../../config/config-providers';\n\nexport const OCC_BASE_URL_META_TAG_NAME = 'occ-backend-base-url';\nexport const OCC_BASE_URL_META_TAG_PLACEHOLDER = 'OCC_BACKEND_BASE_URL_VALUE';\nexport const MEDIA_BASE_URL_META_TAG_NAME = 'media-backend-base-url';\nexport const MEDIA_BASE_URL_META_TAG_PLACEHOLDER =\n  'MEDIA_BACKEND_BASE_URL_VALUE';\n\nexport function occServerConfigFromMetaTagFactory(meta: Meta): OccConfig {\n  const baseUrl = getMetaTagContent(OCC_BASE_URL_META_TAG_NAME, meta);\n  return baseUrl && baseUrl !== OCC_BASE_URL_META_TAG_PLACEHOLDER\n    ? { backend: { occ: { baseUrl } } }\n    : {};\n}\n\nexport function mediaServerConfigFromMetaTagFactory(meta: Meta): OccConfig {\n  const baseUrl = getMetaTagContent(MEDIA_BASE_URL_META_TAG_NAME, meta);\n  return baseUrl && baseUrl !== MEDIA_BASE_URL_META_TAG_PLACEHOLDER\n    ? { backend: { media: { baseUrl } } }\n    : {};\n}\n\nfunction getMetaTagContent(name: string, meta: Meta) {\n  const metaTag = meta.getTag(`name=\"${name}\"`);\n  return metaTag && metaTag.content;\n}\n\nexport function provideConfigFromMetaTags(): Provider[] {\n  return [\n    provideConfigFactory(occServerConfigFromMetaTagFactory, [Meta]),\n    provideConfigFactory(mediaServerConfigFromMetaTagFactory, [Meta]),\n  ];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideConfigFromMetaTags } from './config-from-meta-tag-factory';\n\n@NgModule({})\nexport class MetaTagConfigModule {\n  static forRoot(): ModuleWithProviders<MetaTagConfigModule> {\n    return {\n      ngModule: MetaTagConfigModule,\n      providers: [...provideConfigFromMetaTags()],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './with-credentials.interceptor';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-endpoints.model';\nexport * from './occ.models';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { CxEvent } from '../../event/cx-event';\nimport { OccConfig } from '../config/occ-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingScopesService {\n  constructor(protected config: OccConfig) {}\n\n  /**\n   * Aims to expand scopes based on loading scopes config.\n   *\n   * I.e. if 'details' scope includes 'list' scope by configuration, it'll return ['details', 'list']\n   *\n   * If scope data overlaps with each other, the data should be merged in the order of scopes provided,\n   * i.e. the last scope is merged last, overwriting parts of the data already provided by preceding scope.\n   * It should apply also to implicit scopes (that are included by configuration).\n   *\n   * @param model\n   * @param scopes\n   */\n  expand(model: string, scopes: string[]): string[] {\n    const scopesConfig = this.config?.backend?.loadingScopes?.[model];\n\n    if (scopesConfig) {\n      const expandedScopes = [...scopes];\n      let i = expandedScopes.length;\n\n      while (i > 0) {\n        i--;\n        const includedScopes = scopesConfig[expandedScopes[i]]?.include;\n        if (includedScopes) {\n          for (const includedScope of includedScopes) {\n            if (!expandedScopes.includes(includedScope)) {\n              expandedScopes.splice(i, 0, includedScope);\n              i++;\n            }\n          }\n        }\n      }\n\n      return expandedScopes;\n    }\n\n    return scopes;\n  }\n\n  /**\n   * Return maxAge for product scope in milliseconds\n   *\n   * @param model\n   * @param scope\n   */\n  getMaxAge(model: string, scope: string): number {\n    const configuredMaxAge =\n      this.config.backend?.loadingScopes?.[model]?.[scope]?.maxAge ?? 0;\n    return configuredMaxAge * 1000;\n  }\n\n  /**\n   *\n   * Returns the configured triggers for which to reload the product.\n   *\n   * @param model for which to look up the scopes (usually a 'product')\n   * @param scope for which to look up the config\n   * @returns the configured triggers, or an empty array if not configured\n   */\n  getReloadTriggers(model: string, scope: string): Type<CxEvent>[] {\n    return this.config.backend?.loadingScopes?.[model]?.[scope]?.reloadOn ?? [];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-endpoints.service';\nexport * from './loading-scopes.service';\nexport * from './occ-fields.service';\nexport * from './occ-requests-optimizer.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './adapters/index';\nexport * from './base-occ.module';\nexport * from './config/config-from-meta-tag-factory';\nexport * from './config/default-occ-config';\nexport * from './config/meta-tag-config.module';\nexport * from './config/occ-config';\nexport * from './config/occ-config-validator';\nexport * from './interceptors/index';\nexport * from './occ-models/index';\nexport * from './services/index';\nexport * from './utils/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateWithUser, UserState, USER_FEATURE } from '../user-state';\n\nexport const getUserState: MemoizedSelector<StateWithUser, UserState> =\n  createFeatureSelector<UserState>(USER_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Country } from '../../../model/address.model';\nimport {\n  BillingCountriesState,\n  BillingCountryEntities,\n  StateWithUser,\n  UserState,\n} from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getBillingCountriesState: MemoizedSelector<\n  StateWithUser,\n  BillingCountriesState\n> = createSelector(getUserState, (state: UserState) => state.billingCountries);\n\nexport const getBillingCountriesEntites: MemoizedSelector<\n  StateWithUser,\n  BillingCountryEntities\n> = createSelector(\n  getBillingCountriesState,\n  (state: BillingCountriesState) => state.entities\n);\n\nexport const getAllBillingCountries: MemoizedSelector<\n  StateWithUser,\n  Country[]\n> = createSelector(getBillingCountriesEntites, (entites) =>\n  Object.keys(entites).map((isocode) => entites[isocode])\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { UserState, StateWithUser } from '../user-state';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport {\n  loaderValueSelector,\n  loaderSuccessSelector,\n  loaderLoadingSelector,\n} from '../../../state/utils/loader/loader.selectors';\n\nimport { getUserState } from './feature.selector';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\n\nexport const getCustomerCouponsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<CustomerCouponSearchResult>\n> = createSelector(getUserState, (state: UserState) => state.customerCoupons);\n\nexport const getCustomerCouponsLoaded: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getCustomerCouponsState,\n  (state: LoaderState<CustomerCouponSearchResult>) =>\n    loaderSuccessSelector(state)\n);\n\nexport const getCustomerCouponsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getCustomerCouponsState,\n  (state: LoaderState<CustomerCouponSearchResult>) =>\n    loaderLoadingSelector(state)\n);\n\nexport const getCustomerCoupons: MemoizedSelector<\n  StateWithUser,\n  CustomerCouponSearchResult\n> = createSelector(\n  getCustomerCouponsState,\n  (state: LoaderState<CustomerCouponSearchResult>) => loaderValueSelector(state)\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Country } from '../../../model/address.model';\nimport {\n  DeliveryCountriesState,\n  DeliveryCountryEntities,\n  StateWithUser,\n  UserState,\n} from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getDeliveryCountriesState: MemoizedSelector<\n  StateWithUser,\n  DeliveryCountriesState\n> = createSelector(getUserState, (state: UserState) => state.countries);\n\nexport const getDeliveryCountriesEntites: MemoizedSelector<\n  StateWithUser,\n  DeliveryCountryEntities\n> = createSelector(\n  getDeliveryCountriesState,\n  (state: DeliveryCountriesState) => state.entities\n);\n\nexport const getAllDeliveryCountries: MemoizedSelector<\n  StateWithUser,\n  Country[]\n> = createSelector(getDeliveryCountriesEntites, (entites) =>\n  Object.keys(entites).map((isocode) => entites[isocode])\n);\n\nexport const countrySelectorFactory = (\n  isocode: string\n): MemoizedSelector<StateWithUser, Country | null> =>\n  createSelector(getDeliveryCountriesEntites, (entities) =>\n    Object.keys(entities).length !== 0 ? entities[isocode] : null\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\nimport {\n  loaderValueSelector,\n  loaderLoadingSelector,\n} from '../../../state/utils/loader/loader.selectors';\n\nexport const getPreferencesLoaderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<NotificationPreference[]>\n> = createSelector(\n  getUserState,\n  (state: UserState) => state.notificationPreferences\n);\n\nexport const getPreferences: MemoizedSelector<\n  StateWithUser,\n  NotificationPreference[]\n> = createSelector(\n  getPreferencesLoaderState,\n  (state: LoaderState<NotificationPreference[]>) => loaderValueSelector(state)\n);\n\nexport const getEnabledPreferences: MemoizedSelector<\n  StateWithUser,\n  NotificationPreference[]\n> = createSelector(\n  getPreferencesLoaderState,\n  (state: LoaderState<NotificationPreference[]>) =>\n    loaderValueSelector(state).filter((p) => p.enabled)\n);\n\nexport const getPreferencesLoading: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(\n    getPreferencesLoaderState,\n    (state: LoaderState<NotificationPreference[]>) =>\n      loaderLoadingSelector(state)\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PaymentDetails } from '../../../model/payment.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getPaymentMethodsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<PaymentDetails[]>\n> = createSelector(getUserState, (state: UserState) => state.payments);\n\nexport const getPaymentMethods: MemoizedSelector<\n  StateWithUser,\n  PaymentDetails[]\n> = createSelector(\n  getPaymentMethodsState,\n  (state: LoaderState<PaymentDetails[]>) =>\n    StateUtils.loaderValueSelector(state)\n);\n\nexport const getPaymentMethodsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getPaymentMethodsState,\n  (state: LoaderState<PaymentDetails[]>) =>\n    StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getPaymentMethodsLoadedSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getPaymentMethodsState,\n  (state: LoaderState<PaymentDetails[]>) =>\n    StateUtils.loaderSuccessSelector(state) &&\n    !StateUtils.loaderLoadingSelector(state)\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { UserState, StateWithUser } from '../user-state';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport {\n  loaderValueSelector,\n  loaderLoadingSelector,\n} from '../../../state/utils/loader/loader.selectors';\nimport { getUserState } from './feature.selector';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\n\nexport const getInterestsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ProductInterestSearchResult>\n> = createSelector(getUserState, (state: UserState) => state.productInterests);\n\nexport const getInterests: MemoizedSelector<\n  StateWithUser,\n  ProductInterestSearchResult\n> = createSelector(\n  getInterestsState,\n  (state: LoaderState<ProductInterestSearchResult>) =>\n    loaderValueSelector(state)\n);\n\nexport const getInterestsLoading: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(\n    getInterestsState,\n    (state: LoaderState<ProductInterestSearchResult>) =>\n      loaderLoadingSelector(state)\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Region } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { RegionsState, StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getRegionsLoaderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<RegionsState>\n> = createSelector(getUserState, (state: UserState) => state.regions);\n\nexport const getAllRegions: MemoizedSelector<StateWithUser, Region[]> =\n  createSelector(getRegionsLoaderState, (state: LoaderState<RegionsState>) => {\n    return StateUtils.loaderValueSelector(state).entities;\n  });\n\nexport const getRegionsDataAndLoading: MemoizedSelector<\n  StateWithUser,\n  {\n    loaded: boolean;\n    loading: boolean;\n    regions: Region[];\n    country: string | null;\n  }\n> = createSelector(\n  getRegionsLoaderState,\n  (state: LoaderState<RegionsState>) => ({\n    loaded: StateUtils.loaderSuccessSelector(state),\n    loading: StateUtils.loaderLoadingSelector(state),\n    regions: StateUtils.loaderValueSelector(state).entities,\n    country: StateUtils.loaderValueSelector(state).country,\n  })\n);\n\nexport const getRegionsCountry: MemoizedSelector<StateWithUser, string | null> =\n  createSelector(\n    getRegionsLoaderState,\n    (state: LoaderState<RegionsState>) =>\n      StateUtils.loaderValueSelector(state).country\n  );\n\nexport const getRegionsLoading: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(getRegionsLoaderState, (state: LoaderState<RegionsState>) =>\n    StateUtils.loaderLoadingSelector(state)\n  );\n\nexport const getRegionsLoaded: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(getRegionsLoaderState, (state: LoaderState<RegionsState>) =>\n    StateUtils.loaderSuccessSelector(state)\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Address } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getAddressesLoaderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<Address[]>\n> = createSelector(getUserState, (state: UserState) => state.addresses);\n\nexport const getAddresses: MemoizedSelector<StateWithUser, Address[]> =\n  createSelector(getAddressesLoaderState, (state: LoaderState<Address[]>) =>\n    StateUtils.loaderValueSelector(state)\n  );\n\nexport const getAddressesLoading: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(getAddressesLoaderState, (state: LoaderState<Address[]>) =>\n    StateUtils.loaderLoadingSelector(state)\n  );\n\nexport const getAddressesLoadedSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getAddressesLoaderState,\n  (state: LoaderState<Address[]>) =>\n    StateUtils.loaderSuccessSelector(state) &&\n    !StateUtils.loaderLoadingSelector(state)\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getConsentsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ConsentTemplate[]>\n> = createSelector(getUserState, (state: UserState) => state.consents);\n\nexport const getConsentsValue: MemoizedSelector<\n  StateWithUser,\n  ConsentTemplate[]\n> = createSelector(\n  getConsentsState,\n  (state: StateUtils.LoaderState<ConsentTemplate[]>) =>\n    StateUtils.loaderValueSelector(state)\n);\n\nexport const getConsentByTemplateId = (\n  templateId: string\n): MemoizedSelector<StateWithUser, ConsentTemplate | undefined> =>\n  createSelector(getConsentsValue, (templates) =>\n    templates.find((template) => template.id === templateId)\n  );\n\nexport const getConsentsLoading: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(getConsentsState, StateUtils.loaderLoadingSelector);\n\nexport const getConsentsSuccess: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(getConsentsState, StateUtils.loaderSuccessSelector);\n\nexport const getConsentsError: MemoizedSelector<StateWithUser, boolean> =\n  createSelector(getConsentsState, StateUtils.loaderErrorSelector);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getCostCentersState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<CostCenter[]>\n> = createSelector(getUserState, (state: UserState) => state.costCenters);\n\nexport const getCostCenters: MemoizedSelector<StateWithUser, CostCenter[]> =\n  createSelector(getCostCentersState, (state: LoaderState<CostCenter[]>) =>\n    StateUtils.loaderValueSelector(state)\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './billing-countries.selectors';\nexport * from './customer-coupons.selectors';\nexport * from './delivery-countries.selectors';\nexport * from './feature.selector';\nexport * from './notification-preference.selectors';\nexport * from './payment-methods.selectors';\nexport * from './product-interests.selectors';\nexport * from './regions.selectors';\nexport * from './user-addresses.selectors';\nexport * from './user-consents.selectors';\nexport * from './user-cost-center.selectors';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as UsersSelectors from './users-group.selectors';\nexport { UsersSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, iif, Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Consent, ConsentTemplate } from '../../model/consent.model';\nimport { OCC_USER_ID_CURRENT } from '../../occ';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { isNotUndefined } from '../../util/type-guards';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  GIVE_CONSENT_PROCESS_ID,\n  StateWithUser,\n  WITHDRAW_CONSENT_PROCESS_ID,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserConsentService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected authService: AuthService,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Retrieves all consents.\n   */\n  loadConsents(): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(new UserActions.LoadUserConsents(userId));\n    });\n  }\n\n  /**\n   * Returns all consent templates. If `loadIfMissing` parameter is set to `true`, the method triggers the load if consent templates.\n   * @param loadIfMissing is set to `true`, the method will load templates if those are not already present. The default value is `false`.\n   */\n  getConsents(loadIfMissing = false): Observable<ConsentTemplate[]> {\n    return iif(\n      () => loadIfMissing,\n      (<Store<StateWithUser>>this.store).pipe(\n        select(UsersSelectors.getConsentsValue),\n        withLatestFrom(\n          this.getConsentsResultLoading(),\n          this.getConsentsResultSuccess()\n        ),\n        filter(([_templates, loading, _success]) => !loading),\n        tap(([templates, _loading, success]) => {\n          if (!templates || templates.length === 0) {\n            // avoid infinite loop - if we've already attempted to load templates and we got an empty array as the response\n            if (!success) {\n              this.loadConsents();\n            }\n          }\n        }),\n        filter(([templates, _loading]) => Boolean(templates)),\n        map(([templates, _loading]) => templates)\n      ),\n      (<Store<StateWithUser>>this.store).pipe(\n        select(UsersSelectors.getConsentsValue)\n      )\n    );\n  }\n\n  /**\n   * Returns the consents loading flag\n   */\n  getConsentsResultLoading(): Observable<boolean> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getConsentsLoading)\n    );\n  }\n\n  /**\n   * Returns the consents success flag\n   */\n  getConsentsResultSuccess(): Observable<boolean> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getConsentsSuccess)\n    );\n  }\n\n  /**\n   * Returns the consents error flag\n   */\n  getConsentsResultError(): Observable<boolean> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getConsentsError)\n    );\n  }\n\n  /**\n   * Resets the processing state for consent retrieval\n   */\n  resetConsentsProcessState(): void {\n    this.store.dispatch(new UserActions.ResetLoadUserConsents());\n  }\n\n  /**\n   * Returns the registered consent for the given template ID.\n   *\n   * As a side-effect, the method will call `getConsents(true)` to load the templates if those are not present.\n   *\n   * @param templateId a template ID by which to filter the registered templates.\n   */\n  getConsent(templateId: string): Observable<Consent | undefined> {\n    // To ensure data consistency and avoid race-conditions, we only consider the user\n    // as \"logged in\" when both the `access_token` observable emits a value\n    // with a token and the `userId` observable emits a value with a non-anonymous user id.\n    //\n    // This is due to the fact that the observables with `access_token` and `userId`\n    // emit values at slightly different timings during the process of login and logout.\n\n    // NOTE: This is a temporary solution and the issue should be solved in the roots.\n    // Here is the ticket to track the issue: https://jira.tools.sap/browse/CXSPA-2988\n    return combineLatest([\n      this.authService.isUserLoggedIn(),\n      this.userIdService.getUserId(),\n    ]).pipe(\n      filter(\n        ([loggedIn, userId]) => loggedIn && userId === OCC_USER_ID_CURRENT\n      ),\n      switchMap(() => this.getConsents(true)),\n      take(1),\n      switchMap(() =>\n        (<Store<StateWithUser>>this.store).pipe(\n          select(UsersSelectors.getConsentByTemplateId(templateId))\n        )\n      ),\n      filter(isNotUndefined),\n      map((template) => template.currentConsent)\n    );\n  }\n\n  /**\n   * Returns `true` if the consent is truthy and if `consentWithdrawnDate` doesn't exist.\n   * Otherwise, `false` is returned.\n   *\n   * @param consent to check\n   */\n  isConsentGiven(consent: Consent): boolean {\n    return (\n      Boolean(consent) &&\n      Boolean(consent.consentGivenDate) &&\n      !Boolean(consent.consentWithdrawnDate)\n    );\n  }\n\n  /**\n   * Returns `true` if the consent is either falsy or if `consentWithdrawnDate` is present.\n   * Otherwise, `false` is returned.\n   *\n   * @param consent to check\n   */\n  isConsentWithdrawn(consent: Consent | undefined): boolean {\n    if (Boolean(consent)) {\n      return Boolean(consent?.consentWithdrawnDate);\n    }\n    return true;\n  }\n\n  /**\n   * Give consent for specified consent template ID and version.\n   * @param consentTemplateId a template ID for which to give a consent\n   * @param consentTemplateVersion a template version for which to give a consent\n   */\n  giveConsent(consentTemplateId: string, consentTemplateVersion: number): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.GiveUserConsent({\n          userId,\n          consentTemplateId,\n          consentTemplateVersion,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the give consent process loading flag\n   */\n  getGiveConsentResultLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessLoadingFactory(GIVE_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the give consent process success flag\n   */\n  getGiveConsentResultSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessSuccessFactory(GIVE_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the give consent process error flag\n   */\n  getGiveConsentResultError(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessErrorFactory(GIVE_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resents the give consent process flags\n   */\n  resetGiveConsentProcessState(): void {\n    return this.store.dispatch(new UserActions.ResetGiveUserConsentProcess());\n  }\n\n  /**\n   * Withdraw consent for the given `consentCode`\n   * @param consentCode for which to withdraw the consent\n   */\n  withdrawConsent(consentCode: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.WithdrawUserConsent({\n          userId,\n          consentCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the withdraw consent process loading flag\n   */\n  getWithdrawConsentResultLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessLoadingFactory(WITHDRAW_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the withdraw consent process success flag\n   */\n  getWithdrawConsentResultSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessSuccessFactory(WITHDRAW_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the withdraw consent process error flag\n   */\n  getWithdrawConsentResultError(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessErrorFactory(WITHDRAW_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the process flags for withdraw consent\n   */\n  resetWithdrawConsentProcessState(): void {\n    return this.store.dispatch(\n      new UserActions.ResetWithdrawUserConsentProcess()\n    );\n  }\n\n  /**\n   * Filters the provided `templateList`' templates by hiding the template IDs specified in `hideTemplateIds`.\n   * If the `hideTemplateIds` is empty, the provided `templateList` is returned.\n   *\n   * @param templateList a list of consent templates to filter\n   * @param hideTemplateIds template IDs to hide\n   */\n  filterConsentTemplates(\n    templateList: ConsentTemplate[],\n    hideTemplateIds: string[] = []\n  ): ConsentTemplate[] {\n    if (hideTemplateIds.length === 0) {\n      return templateList;\n    }\n\n    const updatedTemplateList: ConsentTemplate[] = [];\n    for (const template of templateList) {\n      const show = template.id && !hideTemplateIds.includes(template.id);\n      if (show) {\n        updatedTemplateList.push(template);\n      }\n    }\n\n    return updatedTemplateList;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { AuthActions, AuthService, UserIdService } from '../../../auth/index';\nimport { UserConsentService } from '../../../user/facade/user-consent.service';\nimport { UserActions } from '../../../user/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { AnonymousConsentsConfig } from '../../config/anonymous-consents-config';\nimport { AnonymousConsentTemplatesConnector } from '../../connectors/anonymous-consent-templates.connector';\nimport { AnonymousConsentsService } from '../../facade/index';\nimport { AnonymousConsentsActions } from '../actions/index';\n\n@Injectable()\nexport class AnonymousConsentsEffects {\n  checkConsentVersions$: Observable<\n    | AnonymousConsentsActions.LoadAnonymousConsentTemplates\n    | AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail\n    | Observable<never>\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AnonymousConsentsActions.ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS),\n      withLatestFrom(this.anonymousConsentService.getConsents()),\n      concatMap(([_, currentConsents]) => {\n        return this.anonymousConsentTemplatesConnector\n          .loadAnonymousConsents()\n          .pipe(\n            map((newConsents) => {\n              if (!newConsents) {\n                if (isDevMode()) {\n                  console.warn(\n                    'No consents were loaded. Please check the Spartacus documentation as this could be a back-end configuration issue.'\n                  );\n                }\n                return false;\n              }\n\n              const currentConsentVersions = currentConsents.map(\n                (consent) => consent.templateVersion\n              );\n              const newConsentVersions = newConsents.map(\n                (consent) => consent.templateVersion\n              );\n\n              return this.detectUpdatedVersion(\n                currentConsentVersions,\n                newConsentVersions\n              );\n            }),\n            switchMap((updated) =>\n              updated\n                ? of(\n                    new AnonymousConsentsActions.LoadAnonymousConsentTemplates()\n                  )\n                : EMPTY\n            ),\n            catchError((error) =>\n              of(\n                new AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          );\n      })\n    )\n  );\n\n  loadAnonymousConsentTemplates$: Observable<AnonymousConsentsActions.AnonymousConsentsActions> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(AnonymousConsentsActions.LOAD_ANONYMOUS_CONSENT_TEMPLATES),\n        withLatestFrom(this.anonymousConsentService.getTemplates()),\n        concatMap(([_, currentConsentTemplates]) =>\n          this.anonymousConsentTemplatesConnector\n            .loadAnonymousConsentTemplates()\n            .pipe(\n              mergeMap((newConsentTemplates) => {\n                let updated = false;\n                if (\n                  currentConsentTemplates &&\n                  currentConsentTemplates.length !== 0\n                ) {\n                  updated = this.anonymousConsentService.detectUpdatedTemplates(\n                    currentConsentTemplates,\n                    newConsentTemplates\n                  );\n                }\n\n                return [\n                  new AnonymousConsentsActions.LoadAnonymousConsentTemplatesSuccess(\n                    newConsentTemplates\n                  ),\n                  new AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated(\n                    updated\n                  ),\n                ];\n              }),\n              catchError((error) =>\n                of(\n                  new AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            )\n        )\n      )\n    );\n\n  // TODO(#9416): This won't work with flow different than `Resource Owner Password Flow` which involves redirect (maybe in popup in will work)\n\n  transferAnonymousConsentsToUser$: Observable<\n    UserActions.TransferAnonymousConsent | Observable<never>\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType<AuthActions.Login>(AuthActions.LOGIN),\n      filter(() => Boolean(this.anonymousConsentsConfig.anonymousConsents)),\n      withLatestFrom(\n        this.actions$.pipe(\n          ofType<UserActions.RegisterUserSuccess>(\n            UserActions.REGISTER_USER_SUCCESS\n          )\n        )\n      ),\n      filter(([, registerAction]) => Boolean(registerAction)),\n      switchMap(() =>\n        this.anonymousConsentService.getConsents().pipe(\n          withLatestFrom(\n            this.userIdService.getUserId(),\n            this.anonymousConsentService.getTemplates(),\n            this.authService.isUserLoggedIn()\n          ),\n          filter(([, , , loggedIn]) => loggedIn),\n          concatMap(([consents, userId, templates, _loggedIn]) => {\n            const actions: UserActions.TransferAnonymousConsent[] = [];\n            for (const consent of consents) {\n              if (\n                this.anonymousConsentService.isConsentGiven(consent) &&\n                !this.isRequiredConsent(consent.templateCode)\n              ) {\n                for (const template of templates) {\n                  if (template.id === consent.templateCode) {\n                    actions.push(\n                      new UserActions.TransferAnonymousConsent({\n                        userId,\n                        consentTemplateId: template.id,\n                        consentTemplateVersion: template.version,\n                      })\n                    );\n                    break;\n                  }\n                }\n              }\n            }\n            if (actions.length > 0) {\n              return actions;\n            }\n            return EMPTY;\n          })\n        )\n      )\n    )\n  );\n\n  private isRequiredConsent(templateCode: string | undefined): boolean {\n    return Boolean(\n      templateCode &&\n        this.anonymousConsentsConfig.anonymousConsents?.requiredConsents?.includes(\n          templateCode\n        )\n    );\n  }\n\n  giveRequiredConsentsToUser$: Observable<\n    UserActions.GiveUserConsent | Observable<never>\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType<AuthActions.Login>(AuthActions.LOGIN),\n      filter((action) =>\n        Boolean(\n          this.anonymousConsentsConfig.anonymousConsents &&\n            this.anonymousConsentsConfig.anonymousConsents.requiredConsents &&\n            action\n        )\n      ),\n      concatMap(() =>\n        this.userConsentService.getConsentsResultSuccess().pipe(\n          withLatestFrom(\n            this.userIdService.getUserId(),\n            this.userConsentService.getConsents(),\n            this.authService.isUserLoggedIn()\n          ),\n          filter(([, , , loggedIn]) => loggedIn),\n          tap(([loaded, _userId, _templates, _loggedIn]) => {\n            if (!loaded) {\n              this.userConsentService.loadConsents();\n            }\n          }),\n          map(([_loaded, userId, templates, _loggedIn]) => {\n            return { userId, templates };\n          }),\n          concatMap(({ userId, templates }) => {\n            const actions: UserActions.GiveUserConsent[] = [];\n            for (const template of templates) {\n              if (\n                this.userConsentService.isConsentWithdrawn(\n                  template.currentConsent\n                ) &&\n                this.isRequiredConsent(template.id)\n              ) {\n                actions.push(\n                  new UserActions.GiveUserConsent({\n                    userId,\n                    consentTemplateId: template.id,\n                    consentTemplateVersion: template.version,\n                  })\n                );\n              }\n            }\n            return actions.length > 0 ? actions : EMPTY;\n          })\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private anonymousConsentTemplatesConnector: AnonymousConsentTemplatesConnector,\n    private authService: AuthService,\n    private anonymousConsentsConfig: AnonymousConsentsConfig,\n    private anonymousConsentService: AnonymousConsentsService,\n    private userConsentService: UserConsentService,\n    private userIdService: UserIdService\n  ) {}\n\n  /**\n   * Compares the given versions and determines if there's a mismatch,\n   * in which case `true` is returned.\n   *\n   * @param currentVersions versions of the current consents\n   * @param newVersions versions of the new consents\n   */\n  private detectUpdatedVersion(\n    currentVersions: (number | undefined)[],\n    newVersions: (number | undefined)[]\n  ): boolean {\n    if (currentVersions.length !== newVersions.length) {\n      return true;\n    }\n\n    for (let i = 0; i < newVersions.length; i++) {\n      if (currentVersions[i] !== newVersions[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AnonymousConsentsEffects } from './anonymous-consents.effect';\n\nexport const effects: any[] = [AnonymousConsentsEffects];\n\nexport * from './anonymous-consents.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class JavaRegExpConverter {\n  /**\n   * Pattern that extracts modifiers from the Java regexp.\n   *\n   * Java regexps MAY start with ONE or MANY modifiers like `(?MODIFIERS)PATTERN`. Examples:\n   * - `(?i)` for Case Insensitive Mode: `(?i)PATTERN`\n   * - `(?u)` for Unicode-Aware Case Folding; `(?u)PATTERN`\n   * - or multiple combined:  `(?iu)PATTERN`\n   * - (more modifiers in the official Java docs https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html)\n   *\n   * This pattern extracts 3 parts from the input string, i.e. for `(?iu)PATTERN`:\n   *    1. original modifiers syntax, i.e. `(?iu)` (or undefined if no modifiers present)\n   *    2. extracted modifiers, i.e. `iu` (or undefined if no modifiers present)\n   *    3. the rest of the regexp, i.e. `PATTERN`\n   */\n  private readonly EXTRACT_JAVA_REGEXP_MODIFIERS: RegExp =\n    /^(\\(\\?([a-z]+)\\))?(.*)/;\n\n  /**\n   * Converts RegExp from Java syntax to Javascript, by recognizing Java regexp modifiers\n   * and converting them to the Javascript ones (i.e. case insensitive mode: `(?i)PATTERN` -> `/pattern/i`)\n   *\n   * **CAUTION!** Not all features and modifiers of Java regexps are valid in Javascript!\n   * If unsupported feature or modifier is used, then `null` will be returned instead of Javascript RegExp.\n   *\n   * See differences between Java and Javascript regexps:\n   * - https://stackoverflow.com/questions/8754444/convert-javascript-regular-expression-to-java-syntax\n   * - https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines#Language_features\n   */\n  toJsRegExp(javaSyntax: string): RegExp | null {\n    const parts = javaSyntax.match(this.EXTRACT_JAVA_REGEXP_MODIFIERS);\n    if (!parts) {\n      return null;\n    }\n    const [, , modifiers, jsSyntax] = parts;\n    try {\n      return new RegExp(jsSyntax, modifiers);\n    } catch (error) {\n      if (isDevMode()) {\n        console.warn(\n          `WARNING: Could not convert Java regexp into Javascript. Original regexp: ${javaSyntax} \\nMessage: ${error}`\n        );\n      }\n      return null;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\nimport { ConfigInitializer } from '../../../config/config-initializer/config-initializer';\nimport { BaseSite } from '../../../model/misc.model';\nimport { JavaRegExpConverter } from '../../../util/java-reg-exp-converter/java-reg-exp-converter';\nimport { WindowRef } from '../../../window/window-ref';\nimport { BaseSiteService } from '../../facade/base-site.service';\nimport {\n  BASE_SITE_CONTEXT_ID,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  THEME_CONTEXT_ID,\n} from '../../providers/context-ids';\nimport { SiteContextConfig } from '../site-context-config';\n\n@Injectable({ providedIn: 'root' })\nexport class SiteContextConfigInitializer implements ConfigInitializer {\n  readonly scopes = ['context'];\n  readonly configFactory = () => this.resolveConfig().toPromise();\n\n  constructor(\n    protected baseSiteService: BaseSiteService,\n    protected javaRegExpConverter: JavaRegExpConverter,\n    protected winRef: WindowRef\n  ) {}\n\n  private get currentUrl(): string {\n    return this.winRef.location.href as string;\n  }\n\n  /**\n   * Emits the site context config basing on the current base site data.\n   *\n   * Completes after emitting the value.\n   */\n  protected resolveConfig(): Observable<SiteContextConfig> {\n    return this.baseSiteService.getAll().pipe(\n      map((baseSites) =>\n        baseSites?.find((site) => this.isCurrentBaseSite(site))\n      ),\n      filter((baseSite: any) => {\n        if (!baseSite) {\n          throw new Error(\n            `Error: Cannot get base site config! Current url (${this.currentUrl}) doesn't match any of url patterns of any base sites.`\n          );\n        }\n        return Boolean(baseSite);\n      }),\n      map((baseSite) => this.getConfig(baseSite)),\n      take(1)\n    );\n  }\n\n  protected getConfig(source: BaseSite): SiteContextConfig {\n    const result = {\n      context: {\n        urlParameters: this.getUrlParams(source.urlEncodingAttributes),\n        [BASE_SITE_CONTEXT_ID]: [source.uid],\n        [LANGUAGE_CONTEXT_ID]: this.getIsoCodes(\n          source.baseStore?.languages,\n          source.defaultLanguage || source.baseStore?.defaultLanguage\n        ),\n        [CURRENCY_CONTEXT_ID]: this.getIsoCodes(\n          source.baseStore?.currencies,\n          source.baseStore?.defaultCurrency\n        ),\n        [THEME_CONTEXT_ID]: [source.theme],\n      },\n    } as SiteContextConfig;\n\n    return result;\n  }\n\n  private isCurrentBaseSite(site: BaseSite): boolean {\n    const index = (site.urlPatterns || []).findIndex((javaRegexp: string) => {\n      const jsRegexp = this.javaRegExpConverter.toJsRegExp(javaRegexp);\n      if (jsRegexp) {\n        const result = jsRegexp.test(this.currentUrl);\n        return result;\n      }\n    });\n\n    return index !== -1;\n  }\n\n  /**\n   * Returns an array of url encoded site context parameters.\n   *\n   * It maps the string \"storefront\" (used in OCC) to the \"baseSite\" (used in Spartacus)\n   */\n  private getUrlParams(params: string[] | undefined): string[] {\n    const STOREFRONT_PARAM = 'storefront';\n\n    return (params || []).map((param) =>\n      param === STOREFRONT_PARAM ? BASE_SITE_CONTEXT_ID : param\n    );\n  }\n\n  /**\n   * Returns iso codes in a array, where the first element is the default iso code.\n   */\n  private getIsoCodes(\n    elements: { isocode?: string }[] | undefined,\n    defaultElement: { isocode?: string } | undefined\n  ) {\n    if (elements && defaultElement) {\n      const result = this.moveToFirst(\n        elements,\n        (el) => el.isocode === defaultElement.isocode\n      ).map((el) => el.isocode);\n      return result;\n    }\n  }\n\n  /**\n   * Moves to the start of the array the first element that satisfies the given predicate.\n   *\n   * @param array array to modify\n   * @param predicate function called on elements\n   */\n  private moveToFirst(array: any[], predicate: (el: any) => boolean): any[] {\n    array = [...array];\n    const index = array.findIndex(predicate);\n    if (index !== -1) {\n      const [el] = array.splice(index, 1);\n      array.unshift(el);\n    }\n    return array;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config-loader/site-context-config-initializer';\nexport * from './context-config-utils';\nexport * from './site-context-config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Country, CountryType, Region } from '../../model/address.model';\nimport { BaseSite, Currency, Language } from '../../model/misc.model';\nimport { SiteAdapter } from './site.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SiteConnector {\n  constructor(protected adapter: SiteAdapter) {}\n\n  getLanguages(): Observable<Language[]> {\n    return this.adapter.loadLanguages();\n  }\n\n  getCurrencies(): Observable<Currency[]> {\n    return this.adapter.loadCurrencies();\n  }\n\n  getCountries(type?: CountryType): Observable<Country[]> {\n    return this.adapter.loadCountries(type);\n  }\n\n  getRegions(countryIsoCode: string): Observable<Region[]> {\n    return this.adapter.loadRegions(countryIsoCode);\n  }\n\n  getBaseSite(siteUid?: string): Observable<BaseSite | undefined> {\n    return this.adapter.loadBaseSite(siteUid);\n  }\n\n  getBaseSites(): Observable<BaseSite[]> {\n    return this.adapter.loadBaseSites();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './site.connector';\nexport * from './site.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CxEvent } from '../../event/cx-event';\n\n/**\n * Indicates that the language has changed.\n */\nexport class LanguageSetEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'LanguageSetEvent';\n  activeLanguage: string;\n}\n\n/**\n * Indicates that the Currency has changed.\n */\nexport class CurrencySetEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'CurrencySetEvent';\n  activeCurrency: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\nimport { EventService } from '../../event/event.service';\nimport { createFrom } from '../../util/create-from';\nimport { SiteContextActions } from '../store/actions/index';\nimport { CurrencySetEvent, LanguageSetEvent } from './site-context.events';\n\n/**\n * Builds and registers the site context events\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SiteContextEventBuilder {\n  constructor(\n    protected actionsSubject: ActionsSubject,\n    protected eventService: EventService\n  ) {\n    this.register();\n  }\n\n  /**\n   * Registers the site context events\n   */\n  protected register(): void {\n    this.registerSetLanguage();\n    this.registerSetCurrency();\n  }\n\n  /**\n   * Register the language set action\n   */\n  protected registerSetLanguage(): void {\n    const languageEvent$ = this.actionsSubject.pipe(\n      ofType<SiteContextActions.SetActiveLanguage>(\n        SiteContextActions.SET_ACTIVE_LANGUAGE\n      ),\n      map((languageAction) =>\n        createFrom(LanguageSetEvent, {\n          activeLanguage: languageAction.payload,\n        })\n      )\n    );\n\n    this.eventService.register(LanguageSetEvent, languageEvent$);\n  }\n\n  /**\n   * Register the currency set action\n   */\n  protected registerSetCurrency(): void {\n    const currencyEvent$ = this.actionsSubject.pipe(\n      ofType<SiteContextActions.SetActiveCurrency>(\n        SiteContextActions.SET_ACTIVE_CURRENCY\n      ),\n      map((currencyAction) =>\n        createFrom(CurrencySetEvent, {\n          activeCurrency: currencyAction.payload,\n        })\n      )\n    );\n\n    this.eventService.register(CurrencySetEvent, currencyEvent$);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { SiteContextEventBuilder } from './site-context-event.builder';\n\n@NgModule({})\nexport class SiteContextEventModule {\n  constructor(_siteContextEventBuilder: SiteContextEventBuilder) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './site-context-event.builder';\nexport * from './site-context-event.module';\nexport * from './site-context.events';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\n\nexport interface SiteContext<T> {\n  getAll(): Observable<T[]>;\n  getActive(): Observable<string>;\n  setActive(isocode: string): void;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './base-site.service';\nexport * from './currency.service';\nexport * from './language.service';\nexport * from './site-context.interface';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider, Type } from '@angular/core';\nimport { BaseSiteService } from '../facade/base-site.service';\nimport { CurrencyService } from '../facade/currency.service';\nimport { LanguageService } from '../facade/language.service';\nimport { SiteContext } from '../facade/site-context.interface';\nimport {\n  BASE_SITE_CONTEXT_ID,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n} from './context-ids';\n\nexport abstract class ContextServiceMap {\n  [context: string]: Type<SiteContext<any>>;\n}\n\nexport function serviceMapFactory() {\n  return {\n    [LANGUAGE_CONTEXT_ID]: LanguageService,\n    [CURRENCY_CONTEXT_ID]: CurrencyService,\n    [BASE_SITE_CONTEXT_ID]: BaseSiteService,\n  };\n}\n\nexport const contextServiceMapProvider: Provider = {\n  provide: ContextServiceMap,\n  useFactory: serviceMapFactory,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './context-ids';\nexport * from './context-service-map';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { getContextParameterDefault } from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { BaseSiteService } from '../facade/base-site.service';\nimport { BASE_SITE_CONTEXT_ID } from '../providers/context-ids';\n\n@Injectable({ providedIn: 'root' })\nexport class BaseSiteInitializer implements OnDestroy {\n  constructor(\n    protected baseSiteService: BaseSiteService,\n    protected configInit: ConfigInitializerService\n  ) {}\n\n  protected subscription: Subscription;\n\n  /**\n   * Initializes the value of the base site\n   */\n  initialize(): void {\n    this.subscription = this.configInit\n      .getStable('context')\n      .pipe(\n        // TODO(#12351): <--- plug here explicitly SiteContextRoutesHandler\n        switchMap(() => this.setFallbackValue())\n      )\n      .subscribe();\n  }\n\n  /**\n   * On subscription to the returned observable:\n   *\n   * Sets the default value taken from config, unless the active base site has been already initialized.\n   */\n  protected setFallbackValue(): Observable<unknown> {\n    return this.configInit\n      .getStable('context')\n      .pipe(\n        tap((config: SiteContextConfig) => this.setDefaultFromConfig(config))\n      );\n  }\n\n  /**\n   * Sets the active base site value based on the default value from the config,\n   * unless the active base site has been already initialized.\n   */\n  protected setDefaultFromConfig(config: SiteContextConfig): void {\n    const contextParam = getContextParameterDefault(\n      config,\n      BASE_SITE_CONTEXT_ID\n    );\n    if (!this.baseSiteService.isInitialized() && contextParam) {\n      this.baseSiteService.setActive(contextParam);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { StatePersistenceService } from '../../state/services/state-persistence.service';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { CurrencyService } from '../facade/currency.service';\nimport { CURRENCY_CONTEXT_ID } from '../providers/context-ids';\n\n@Injectable({ providedIn: 'root' })\nexport class CurrencyStatePersistenceService {\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected currencyService: CurrencyService,\n    protected config: SiteContextConfig\n  ) {}\n\n  protected initialized$ = new ReplaySubject<unknown>(1);\n\n  public initSync(): Observable<unknown> {\n    this.statePersistenceService.syncWithStorage({\n      key: CURRENCY_CONTEXT_ID,\n      state$: this.currencyService.getActive(),\n      onRead: (state) => this.onRead(state),\n    });\n    return this.initialized$;\n  }\n\n  protected onRead(valueFromStorage: string | undefined): void {\n    if (!this.currencyService.isInitialized() && valueFromStorage) {\n      this.currencyService.setActive(valueFromStorage);\n    }\n\n    if (!this.initialized$.closed) {\n      this.initialized$.next();\n      this.initialized$.complete();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Config } from './config-tokens';\n\nexport type ConfigFactory = (...props: any[]) => Config;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LOCATION_INITIALIZED } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n} from '@angular/core';\nimport { Config } from '../config-tokens';\nimport {\n  ConfigInitializer,\n  CONFIG_INITIALIZER,\n  CONFIG_INITIALIZER_FORROOT_GUARD,\n} from './config-initializer';\nimport { ConfigInitializerService } from './config-initializer.service';\n\nexport function configInitializerFactory(\n  configInitializer: ConfigInitializerService,\n  initializers: ConfigInitializer[]\n): () => Promise<void> {\n  const isReady = () => configInitializer.initialize(initializers);\n  return isReady;\n}\n\nexport function locationInitializedFactory(\n  configInitializer: ConfigInitializerService\n): Promise<Config> {\n  return configInitializer.getStable().toPromise();\n}\n\n@NgModule({})\nexport class ConfigInitializerModule {\n  static forRoot(): ModuleWithProviders<ConfigInitializerModule> {\n    return {\n      ngModule: ConfigInitializerModule,\n      providers: [\n        {\n          provide: CONFIG_INITIALIZER_FORROOT_GUARD,\n          useValue: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: configInitializerFactory,\n          deps: [\n            ConfigInitializerService,\n            [new Optional(), CONFIG_INITIALIZER],\n          ],\n        },\n        {\n          // Hold on the initial navigation until the Spartacus configuration is stable\n          provide: LOCATION_INITIALIZED,\n          useFactory: locationInitializedFactory,\n          deps: [ConfigInitializerService],\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config-initializer.module';\nexport { CONFIG_INITIALIZER, ConfigInitializer } from './config-initializer';\nexport * from './config-initializer.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  APP_INITIALIZER,\n  isDevMode,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n} from '@angular/core';\nimport { ConfigInitializerService } from '../config-initializer/config-initializer.service';\nimport {\n  ConfigValidator,\n  ConfigValidatorToken,\n  validateConfig,\n} from './config-validator';\n\nexport function configValidatorFactory(\n  configInitializer: ConfigInitializerService,\n  validators: ConfigValidator[]\n): () => void {\n  const validate = () => {\n    if (isDevMode()) {\n      configInitializer\n        .getStable()\n        .subscribe((config) => validateConfig(config, validators || []));\n    }\n  };\n  return validate;\n}\n\n/**\n * Should stay private in 1.x\n * as forRoot() is used internally by ConfigInitializerModule\n *\n * issue: #5279\n */\n@NgModule()\nexport class ConfigValidatorModule {\n  static forRoot(): ModuleWithProviders<ConfigValidatorModule> {\n    return {\n      ngModule: ConfigValidatorModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: configValidatorFactory,\n          deps: [\n            ConfigInitializerService,\n            [new Optional(), ConfigValidatorToken],\n          ],\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config-validator';\nexport * from './config-validator.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function getCookie(cookie: string, name: string) {\n  const regExp = new RegExp('(?:^|;\\\\s*)' + name + '=([^;]*)', 'g');\n  const result: RegExpExecArray | null = regExp.exec(cookie);\n\n  return (result && decodeURIComponent(result[1])) || '';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  InjectionToken,\n  ModuleWithProviders,\n  NgModule,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { getCookie } from './utils/get-cookie';\nimport { provideConfigFactory } from './config-providers';\n\nexport const TEST_CONFIG_COOKIE_NAME = new InjectionToken<string>(\n  'TEST_CONFIG_COOKIE_NAME'\n);\n\nexport function parseConfigJSON(config: string) {\n  try {\n    return JSON.parse(decodeURIComponent(config));\n  } catch (_) {\n    return {};\n  }\n}\n\nexport function configFromCookieFactory(\n  cookieName: string,\n  platform: any,\n  document: Document\n) {\n  if (isPlatformBrowser(platform) && cookieName) {\n    const config = getCookie(document.cookie, cookieName);\n    return parseConfigJSON(config);\n  }\n  return {};\n}\n\nexport interface TestConfigModuleOptions {\n  cookie: string;\n}\n\n/**\n * Designed/intended to provide dynamic configuration for testing scenarios ONLY (e.g. e2e tests).\n *\n * CAUTION: DON'T USE IT IN PRODUCTION! IT HASN'T BEEN REVIEWED FOR SECURITY ISSUES.\n */\n@NgModule({})\nexport class TestConfigModule {\n  /**\n   * Injects JSON config from the cookie of the given name.\n   *\n   * Be aware of the cookie limitations (4096 bytes).\n   *\n   * CAUTION: DON'T USE IT IN PRODUCTION! IT HASN'T BEEN REVIEWED FOR SECURITY ISSUES.\n   */\n  static forRoot(\n    options: TestConfigModuleOptions\n  ): ModuleWithProviders<TestConfigModule> {\n    return {\n      ngModule: TestConfigModule,\n      providers: [\n        {\n          provide: TEST_CONFIG_COOKIE_NAME,\n          useValue: options && options.cookie,\n        },\n        provideConfigFactory(configFromCookieFactory, [\n          TEST_CONFIG_COOKIE_NAME,\n          PLATFORM_ID,\n          DOCUMENT,\n        ]),\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config-factory';\nexport * from './config-initializer/index';\nexport * from './config-providers';\nexport {\n  Config,\n  ConfigChunk,\n  DefaultConfig,\n  DefaultConfigChunk,\n  RootConfig,\n} from './config-tokens';\nexport * from './config-validator/index';\nexport { ConfigModule } from './config.module';\nexport * from './services/configuration.service';\nexport {\n  TestConfigModule,\n  TestConfigModuleOptions,\n} from './test-config.module';\nexport * from './utils/deep-merge';\nexport * from './utils/string-template';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ConfigInitializerService } from '../../config';\nimport { getContextParameterDefault } from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { CurrencyService } from '../facade';\nimport { CURRENCY_CONTEXT_ID } from '../providers';\nimport { CurrencyStatePersistenceService } from './currency-state-persistence.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CurrencyInitializer implements OnDestroy {\n  protected subscription: Subscription;\n\n  constructor(\n    protected currencyService: CurrencyService,\n    protected currencyStatePersistenceService: CurrencyStatePersistenceService,\n    protected configInit: ConfigInitializerService\n  ) {}\n\n  /**\n   * Initializes the value of the active currency.\n   */\n  initialize(): void {\n    this.subscription = this.configInit\n      .getStable('context')\n      .pipe(\n        // TODO(#12351): <--- plug here explicitly SiteContextRoutesHandler\n        switchMap(() => this.currencyStatePersistenceService.initSync()),\n        switchMap(() => this.setFallbackValue())\n      )\n      .subscribe();\n  }\n\n  /**\n   * On subscription to the returned observable:\n   *\n   * Sets the default value taken from config, unless the active currency has been already initialized.\n   */\n  protected setFallbackValue(): Observable<unknown> {\n    return this.configInit\n      .getStable('context')\n      .pipe(\n        tap((config: SiteContextConfig) => this.setDefaultFromConfig(config))\n      );\n  }\n\n  /**\n   * Sets the active currency value based on the default value from the config,\n   * unless the active currency has been already initialized.\n   */\n  protected setDefaultFromConfig(config: SiteContextConfig): void {\n    const contextParam = getContextParameterDefault(\n      config,\n      CURRENCY_CONTEXT_ID\n    );\n    if (!this.currencyService.isInitialized() && contextParam) {\n      this.currencyService.setActive(contextParam);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { StatePersistenceService } from '../../state/services/state-persistence.service';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { LanguageService } from '../facade/language.service';\nimport { LANGUAGE_CONTEXT_ID } from '../providers/context-ids';\n\n@Injectable({ providedIn: 'root' })\nexport class LanguageStatePersistenceService {\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected languageService: LanguageService,\n    protected config: SiteContextConfig\n  ) {}\n\n  protected initialized$ = new ReplaySubject<unknown>(1);\n\n  /**\n   * Initializes the synchronization of the active language with the local storage.\n   *\n   * @returns Observable that emits and completes when the value is read from the storage.\n   */\n  public initSync(): Observable<unknown> {\n    this.statePersistenceService.syncWithStorage({\n      key: LANGUAGE_CONTEXT_ID,\n      state$: this.languageService.getActive(),\n      onRead: (state) => this.onRead(state),\n    });\n    return this.initialized$;\n  }\n\n  protected onRead(valueFromStorage: string | undefined): void {\n    if (!this.languageService.isInitialized() && valueFromStorage) {\n      this.languageService.setActive(valueFromStorage);\n    }\n\n    if (!this.initialized$.closed) {\n      this.initialized$.next();\n      this.initialized$.complete();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { getContextParameterDefault } from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { LanguageService } from '../facade/language.service';\nimport { LANGUAGE_CONTEXT_ID } from '../providers/context-ids';\nimport { LanguageStatePersistenceService } from './language-state-persistence.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LanguageInitializer implements OnDestroy {\n  constructor(\n    protected languageService: LanguageService,\n    protected languageStatePersistenceService: LanguageStatePersistenceService,\n    protected configInit: ConfigInitializerService\n  ) {}\n\n  protected subscription: Subscription;\n\n  /**\n   * Initializes the value of the active language.\n   */\n  initialize(): void {\n    this.subscription = this.configInit\n      .getStable('context')\n      .pipe(\n        // TODO(#12351): <--- plug here explicitly SiteContextRoutesHandler\n        switchMap(() => this.languageStatePersistenceService.initSync()),\n        switchMap(() => this.setFallbackValue())\n      )\n      .subscribe();\n  }\n\n  /**\n   * On subscription to the returned observable:\n   *\n   * Sets the default value taken from config, unless the active language has been already initialized.\n   */\n  protected setFallbackValue(): Observable<unknown> {\n    return this.configInit\n      .getStable('context')\n      .pipe(\n        tap((config: SiteContextConfig) => this.setDefaultFromConfig(config))\n      );\n  }\n\n  /**\n   * Sets the active language value based on the default value from the config,\n   * unless the active language has been already initialized.\n   */\n  protected setDefaultFromConfig(config: SiteContextConfig): void {\n    const contextParam = getContextParameterDefault(\n      config,\n      LANGUAGE_CONTEXT_ID\n    );\n    if (!this.languageService.isInitialized() && contextParam) {\n      this.languageService.setActive(contextParam);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Injector, isDevMode } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport {\n  getContextParameterDefault,\n  getContextParameterValues,\n} from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { SiteContext } from '../facade/site-context.interface';\nimport { ContextServiceMap } from '../providers/context-service-map';\n\n@Injectable()\nexport class SiteContextParamsService {\n  constructor(\n    private config: SiteContextConfig,\n    private injector: Injector,\n    private serviceMap: ContextServiceMap\n  ) {}\n\n  getContextParameters(): string[] {\n    if (this.config.context) {\n      return Object.keys(this.config.context).filter(\n        (param) => param !== 'urlParameters'\n      );\n    }\n    return [];\n  }\n\n  getUrlEncodingParameters(): string[] {\n    return (this.config.context && this.config.context.urlParameters) || [];\n  }\n\n  getParamValues(param: string): string[] {\n    return getContextParameterValues(this.config, param);\n  }\n\n  getParamDefaultValue(param: string): string | undefined {\n    return getContextParameterDefault(this.config, param);\n  }\n\n  getSiteContextService(param: string): SiteContext<any> | undefined {\n    if (this.serviceMap[param]) {\n      try {\n        return this.injector.get<SiteContext<any>>(this.serviceMap[param]);\n      } catch {\n        if (isDevMode()) {\n          console.warn(`Couldn't find site context service for '${param}'.`);\n        }\n        return undefined;\n      }\n    }\n  }\n\n  getValue(param: string): string | undefined {\n    let value: string | undefined;\n\n    const service = this.getSiteContextService(param);\n    if (service) {\n      service\n        .getActive()\n        .subscribe((val) => (value = val))\n        .unsubscribe();\n    }\n\n    return value !== undefined ? value : this.getParamDefaultValue(param);\n  }\n\n  setValue(param: string, value: string) {\n    const service = this.getSiteContextService(param);\n    if (service) {\n      service.setActive(value);\n    }\n  }\n\n  /**\n   * Get active values for all provided context parameters\n   *\n   * @param params Context parameters\n   *\n   * @returns Observable emitting array of all passed active context values\n   */\n  getValues(params: string[]): Observable<Array<string>> {\n    if (params.length === 0) {\n      return of([]);\n    }\n\n    return combineLatest(\n      params.map((param) => {\n        const service = this.getSiteContextService(param);\n        if (service) {\n          return service.getActive().pipe(distinctUntilChanged());\n        }\n        return of('');\n      })\n    ).pipe(filter((value) => value.every((param) => !!param)));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { DefaultUrlSerializer, UrlTree } from '@angular/router';\nimport { SiteContextParamsService } from './site-context-params.service';\n\n/**\n * Values of the site context parameters encoded in the URL.\n */\nexport interface SiteContextUrlParams {\n  [name: string]: string;\n}\n\n/**\n * UrlTree decorated with a custom property `siteContext`\n * for storing the values of the site context parameters.\n */\nexport interface UrlTreeWithSiteContext extends UrlTree {\n  siteContext?: SiteContextUrlParams;\n}\n\n/**\n * Angular URL Serializer aware of Spartacus site context parameters\n * encoded in the URL.\n */\n@Injectable()\nexport class SiteContextUrlSerializer extends DefaultUrlSerializer {\n  /**\n   * Splits the URL into 2 parts: path and the query/fragment part\n   */\n  protected readonly URL_SPLIT: RegExp = /(^[^#?]*)(.*)/;\n\n  /**\n   * Names of site context parameters encoded in the URL\n   */\n  protected get urlEncodingParameters(): string[] {\n    return this.siteContextParams.getUrlEncodingParameters();\n  }\n\n  /**\n   * Tells whether any site context parameters should be encoded in the URL\n   */\n  protected get hasContextInRoutes(): boolean {\n    return this.urlEncodingParameters.length > 0;\n  }\n\n  constructor(private siteContextParams: SiteContextParamsService) {\n    super();\n  }\n\n  /**\n   * @override Recognizes the site context parameters encoded in the prefix segments\n   * of the given URL.\n   *\n   * It returns the UrlTree for the given URL shortened by the recognized params, but saves\n   * the params' values in the custom property of UrlTree: `siteContext`.\n   */\n  parse(url: string): UrlTreeWithSiteContext {\n    if (this.hasContextInRoutes) {\n      const urlWithParams = this.urlExtractContextParameters(url);\n      const parsed = super.parse(urlWithParams.url) as UrlTreeWithSiteContext;\n      this.urlTreeIncludeContextParameters(parsed, urlWithParams.params);\n      return parsed;\n    } else {\n      return super.parse(url);\n    }\n  }\n\n  /**\n   * Recognizes the site context parameters encoded in the prefix segments of the given URL.\n   *\n   * It returns the recognized site context params as well as the\n   * URL shortened by the recognized params.\n   */\n  urlExtractContextParameters(url: string): {\n    url: string;\n    params: SiteContextUrlParams;\n  } {\n    const [, urlPart, queryPart] = url.match(this.URL_SPLIT) ?? [, '', ''];\n\n    const segments = urlPart?.split('/') ?? [];\n    if (segments[0] === '') {\n      segments.shift();\n    }\n    const params: SiteContextUrlParams = {};\n\n    let paramId = 0;\n    let segmentId = 0;\n    while (\n      paramId < this.urlEncodingParameters.length &&\n      segmentId < segments.length\n    ) {\n      const paramName = this.urlEncodingParameters[paramId];\n      const paramValues = this.siteContextParams.getParamValues(paramName);\n\n      if (paramValues.includes(segments[segmentId])) {\n        params[paramName] = segments[segmentId];\n        segmentId++;\n      }\n      paramId++;\n    }\n\n    url = segments.slice(segmentId).join('/') + queryPart;\n    return { url, params };\n  }\n\n  /**\n   * Saves the given site context parameters in the custom property\n   * of the given UrlTree: `siteContext`.\n   */\n  protected urlTreeIncludeContextParameters(\n    urlTree: UrlTreeWithSiteContext,\n    params: SiteContextUrlParams\n  ): void {\n    urlTree.siteContext = params;\n  }\n\n  /**\n   * @override Serializes the given UrlTree to a string and prepends\n   *  to it the current values of the site context parameters.\n   */\n  serialize(tree: UrlTreeWithSiteContext): string {\n    const params = this.urlTreeExtractContextParameters(tree);\n    const url = super.serialize(tree);\n    const serialized = this.urlIncludeContextParameters(url, params);\n    return serialized;\n  }\n\n  /**\n   * Returns the site context parameters stored in the custom property\n   * of the UrlTree: `siteContext`.\n   */\n  urlTreeExtractContextParameters(\n    urlTree: UrlTreeWithSiteContext\n  ): SiteContextUrlParams {\n    return urlTree.siteContext ? urlTree.siteContext : {};\n  }\n\n  /**\n   * Prepends the current values of the site context parameters to the given URL.\n   */\n  protected urlIncludeContextParameters(\n    url: string,\n    params: SiteContextUrlParams\n  ): string {\n    const contextRoutePart = this.urlEncodingParameters\n      .map((param) => {\n        return params[param]\n          ? params[param]\n          : this.siteContextParams.getValue(param);\n      })\n      .join('/');\n\n    return contextRoutePart + url;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './base-site-initializer';\nexport * from './currency-initializer';\nexport * from './currency-state-persistence.service';\nexport * from './language-initializer';\nexport * from './language-state-persistence.service';\nexport * from './site-context-params.service';\nexport * from './site-context-url-serializer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/state-config';\nexport * from './event/index';\nexport * from './services/state-persistence.service';\nexport * from './state.module';\nexport * from './utils/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SiteContextConfig } from './site-context-config';\nimport { getContextParameterDefault } from './context-config-utils';\nimport { BASE_SITE_CONTEXT_ID } from '../providers/context-ids';\n\nexport function baseSiteConfigValidator(config: SiteContextConfig) {\n  if (getContextParameterDefault(config, BASE_SITE_CONTEXT_ID) === undefined) {\n    return 'Please configure context.parameters.baseSite before using storefront library!';\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SiteContextConfig } from './site-context-config';\nimport {\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n} from '../providers/context-ids';\n\nexport function defaultSiteContextConfigFactory(): SiteContextConfig {\n  return {\n    context: {\n      [LANGUAGE_CONTEXT_ID]: [\n        'en',\n        'de',\n        'ja',\n        'zh',\n        'ru',\n        'fr',\n        'tr',\n        'it',\n        'es',\n        'uk',\n        'pl',\n        'nl',\n        'hi',\n        'ar',\n        'pt',\n        'bn',\n        'pa',\n      ],\n      [CURRENCY_CONTEXT_ID]: [\n        'USD',\n        'EUR',\n        'JPY',\n        'GBP',\n        'AUD',\n        'CAD',\n        'CHF',\n        'CNY',\n        'SEK',\n        'NZD',\n        'MXN',\n        'SGD',\n        'HKD',\n        'NOK',\n        'KRW',\n        'TRY',\n        'RUB',\n        'INR',\n        'BRL',\n        'ZAR',\n      ],\n    },\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, Provider } from '@angular/core';\nimport { BaseSiteInitializer } from '../services/base-site-initializer';\nimport { CurrencyInitializer } from '../services/currency-initializer';\nimport { LanguageInitializer } from '../services/language-initializer';\n\nexport function initializeCurrency(\n  currencyInitializer: CurrencyInitializer\n): () => void {\n  const result = () => {\n    currencyInitializer.initialize();\n  };\n  return result;\n}\nexport function initializeLanguage(\n  languageInitializer: LanguageInitializer\n): () => void {\n  const result = () => {\n    languageInitializer.initialize();\n  };\n  return result;\n}\n\nexport function initializeBaseSite(\n  baseSiteInitializer: BaseSiteInitializer\n): () => void {\n  const result = () => {\n    baseSiteInitializer.initialize();\n  };\n  return result;\n}\n\nexport const contextInitializerProviders: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: initializeLanguage,\n    deps: [LanguageInitializer],\n    multi: true,\n  },\n  {\n    provide: APP_INITIALIZER,\n    useFactory: initializeCurrency,\n    deps: [CurrencyInitializer],\n    multi: true,\n  },\n  {\n    provide: APP_INITIALIZER,\n    useFactory: initializeBaseSite,\n    deps: [BaseSiteInitializer],\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Location } from '@angular/common';\nimport { Injectable, Injector, OnDestroy } from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { SiteContextParamsService } from './site-context-params.service';\nimport { SiteContextUrlSerializer } from './site-context-url-serializer';\n\n// PRIVATE API\n@Injectable({\n  providedIn: 'root',\n})\nexport class SiteContextRoutesHandler implements OnDestroy {\n  constructor(\n    private siteContextParams: SiteContextParamsService,\n    private serializer: SiteContextUrlSerializer,\n    private injector: Injector\n  ) {}\n\n  private subscription = new Subscription();\n\n  private contextValues: {\n    [param: string]: string;\n  } = {};\n\n  private router: Router;\n  private location: Location;\n\n  /**\n   * Tells whether there is a pending navigation at the moment, so we can avoid an infinite loop caused by the cyclic dependency:\n   * - `subscribeChanges` method triggers a navigation on update of site context state\n   * - `subscribeRouting` method updates the site context state on navigation\n   */\n  private isNavigating = false;\n\n  /**\n   * Initializes the two-way synchronization between the site context state and the URL.\n   */\n  init() {\n    this.router = this.injector.get<Router>(Router);\n\n    this.location = this.injector.get<Location>(Location);\n    const routingParams = this.siteContextParams.getUrlEncodingParameters();\n\n    if (routingParams.length) {\n      this.setContextParamsFromRoute(this.location.path(true));\n      this.subscribeChanges(routingParams);\n      this.subscribeRouting();\n    }\n  }\n\n  /**\n   * After each change of the site context state, it modifies the current URL in place.\n   * But it happens only for the parameters configured to be persisted in the URL.\n   */\n  private subscribeChanges(params: string[]) {\n    params.forEach((param) => {\n      const service = this.siteContextParams.getSiteContextService(param);\n      if (service) {\n        this.subscription.add(\n          service.getActive().subscribe((value) => {\n            if (\n              !this.isNavigating &&\n              this.contextValues[param] &&\n              this.contextValues[param] !== value\n            ) {\n              const parsed = this.router.parseUrl(this.router.url);\n              const serialized = this.router.serializeUrl(parsed);\n              this.location.replaceState(serialized);\n            }\n            this.contextValues[param] = value;\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * After each Angular NavigationStart event it updates the site context state based on\n   * site context params encoded in the anticipated URL.\n   */\n  private subscribeRouting() {\n    this.subscription.add(\n      this.router.events\n        .pipe(\n          filter(\n            (event) =>\n              event instanceof NavigationStart ||\n              event instanceof NavigationEnd ||\n              event instanceof NavigationError ||\n              event instanceof NavigationCancel\n          )\n        )\n        .subscribe((event) => {\n          this.isNavigating = event instanceof NavigationStart;\n          if (this.isNavigating) {\n            this.setContextParamsFromRoute((event as NavigationStart).url);\n          }\n        })\n    );\n  }\n\n  /**\n   * Updates the site context state based on the context params encoded in the given URL\n   *\n   * @param url URL with encoded context params\n   */\n  private setContextParamsFromRoute(url: string) {\n    const { params } = this.serializer.urlExtractContextParameters(url);\n    Object.keys(params).forEach((param) =>\n      this.siteContextParams.setValue(param, params[param])\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, Provider } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { Config } from '../../config/config-tokens';\nimport { BaseSiteService } from '../facade/base-site.service';\nimport { CurrencyService } from '../facade/currency.service';\nimport { LanguageService } from '../facade/language.service';\nimport { SiteContextRoutesHandler } from '../services/site-context-routes-handler';\n\nexport function initializeContext(\n  configInit: ConfigInitializerService,\n  siteContextRoutesHandler: SiteContextRoutesHandler\n): () => Promise<Config> {\n  return () => {\n    return configInit\n      .getStable('context')\n      .pipe(\n        tap(() => {\n          // `siteContextRoutesHandler.init()` should be executed before CurrencyInitializer,\n          // LanguageInitializer and BaseSiteInitializer\n          // (now it's the case, thanks to the order of providers for APP_INITIALIZER).\n          //\n          // TODO(#12351): move it to the logic of specific context initializers\n          siteContextRoutesHandler.init();\n        })\n      )\n      .toPromise();\n  };\n}\n\nexport const contextServiceProviders: Provider[] = [\n  BaseSiteService,\n  LanguageService,\n  CurrencyService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: initializeContext,\n    deps: [ConfigInitializerService, SiteContextRoutesHandler],\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport { UrlSerializer } from '@angular/router';\nimport { SiteContextParamsService } from '../services/site-context-params.service';\nimport { SiteContextUrlSerializer } from '../services/site-context-url-serializer';\n\n// functions below should not be exposed in public API:\n\nexport const siteContextParamsProviders: Provider[] = [\n  SiteContextParamsService,\n  SiteContextUrlSerializer,\n  { provide: UrlSerializer, useExisting: SiteContextUrlSerializer },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { SiteConnector } from '../../connectors/site.connector';\nimport { SiteContextActions } from '../actions/index';\n\n@Injectable()\nexport class BaseSiteEffects {\n  loadBaseSite$: Observable<\n    SiteContextActions.LoadBaseSiteSuccess | SiteContextActions.LoadBaseSiteFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SiteContextActions.LOAD_BASE_SITE),\n      exhaustMap(() => {\n        return this.siteConnector.getBaseSite().pipe(\n          map((baseSite) => {\n            if (baseSite) {\n              return new SiteContextActions.LoadBaseSiteSuccess(baseSite);\n            } else {\n              throw new Error('BaseSite is not found');\n            }\n          }),\n          catchError((error) =>\n            of(\n              new SiteContextActions.LoadBaseSiteFail(normalizeHttpError(error))\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadBaseSites$: Observable<\n    | SiteContextActions.LoadBaseSitesSuccess\n    | SiteContextActions.LoadBaseSitesFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SiteContextActions.LOAD_BASE_SITES),\n      exhaustMap(() => {\n        return this.siteConnector.getBaseSites().pipe(\n          map(\n            (baseSites) =>\n              new SiteContextActions.LoadBaseSitesSuccess(baseSites)\n          ),\n          catchError((error) =>\n            of(\n              new SiteContextActions.LoadBaseSitesFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport {\n  bufferCount,\n  catchError,\n  exhaustMap,\n  filter,\n  map,\n} from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { SiteConnector } from '../../connectors/site.connector';\nimport { SiteContextActions } from '../actions/index';\nimport { getActiveCurrency } from '../selectors/currencies.selectors';\nimport { StateWithSiteContext } from '../state';\n\n@Injectable()\nexport class CurrenciesEffects {\n  loadCurrencies$: Observable<\n    | SiteContextActions.LoadCurrenciesSuccess\n    | SiteContextActions.LoadCurrenciesFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SiteContextActions.LOAD_CURRENCIES),\n      exhaustMap(() => {\n        return this.siteConnector.getCurrencies().pipe(\n          map(\n            (currencies) =>\n              new SiteContextActions.LoadCurrenciesSuccess(currencies)\n          ),\n          catchError((error) =>\n            of(\n              new SiteContextActions.LoadCurrenciesFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n      })\n    )\n  );\n\n  activateCurrency$: Observable<SiteContextActions.CurrencyChange> =\n    createEffect(() =>\n      this.state.select(getActiveCurrency).pipe(\n        bufferCount(2, 1),\n\n        // avoid dispatching `change` action when we're just setting the initial value:\n        filter(([previous]) => !!previous),\n        map(\n          ([previous, current]) =>\n            new SiteContextActions.CurrencyChange({ previous, current })\n        )\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector,\n    private state: Store<StateWithSiteContext>\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport {\n  bufferCount,\n  catchError,\n  exhaustMap,\n  filter,\n  map,\n} from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { SiteConnector } from '../../connectors/site.connector';\nimport { SiteContextActions } from '../actions/index';\nimport { getActiveLanguage } from '../selectors/languages.selectors';\nimport { StateWithSiteContext } from '../state';\n\n@Injectable()\nexport class LanguagesEffects {\n  loadLanguages$: Observable<\n    | SiteContextActions.LoadLanguagesSuccess\n    | SiteContextActions.LoadLanguagesFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SiteContextActions.LOAD_LANGUAGES),\n      exhaustMap(() => {\n        return this.siteConnector.getLanguages().pipe(\n          map(\n            (languages) =>\n              new SiteContextActions.LoadLanguagesSuccess(languages)\n          ),\n          catchError((error) =>\n            of(\n              new SiteContextActions.LoadLanguagesFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n      })\n    )\n  );\n\n  activateLanguage$: Observable<SiteContextActions.LanguageChange> =\n    createEffect(() =>\n      this.state.select(getActiveLanguage).pipe(\n        bufferCount(2, 1),\n\n        // avoid dispatching `change` action when we're just setting the initial value:\n        filter(([previous]) => !!previous),\n        map(\n          ([previous, current]) =>\n            new SiteContextActions.LanguageChange({ previous, current })\n        )\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector,\n    private state: Store<StateWithSiteContext>\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BaseSiteEffects } from './base-site.effect';\nimport { CurrenciesEffects } from './currencies.effect';\nimport { LanguagesEffects } from './languages.effect';\n\nexport const effects: any[] = [\n  LanguagesEffects,\n  CurrenciesEffects,\n  BaseSiteEffects,\n];\n\nexport * from './base-site.effect';\nexport * from './currencies.effect';\nexport * from './languages.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BaseSite } from '../../../model/misc.model';\nimport { SiteContextActions } from '../actions/index';\nimport { BaseSiteState } from '../state';\n\nexport const initialState: BaseSiteState = {\n  entities: null,\n  details: {},\n  activeSite: '',\n};\n\nexport function reducer(\n  state = initialState,\n  action: SiteContextActions.BaseSiteAction\n): BaseSiteState {\n  switch (action.type) {\n    case SiteContextActions.LOAD_BASE_SITE_SUCCESS: {\n      return {\n        ...state,\n        details: action.payload,\n      };\n    }\n\n    case SiteContextActions.SET_ACTIVE_BASE_SITE: {\n      // if active base site is updated,\n      // the active base site details data should also be updated\n      let details = {};\n      if (state.entities) {\n        details = state.entities[action.payload];\n      }\n      return {\n        ...state,\n        details,\n        activeSite: action.payload,\n      };\n    }\n\n    case SiteContextActions.LOAD_BASE_SITES_SUCCESS: {\n      const sites: BaseSite[] = action.payload;\n      const entities = sites.reduce(\n        (siteEntities: { [uid: string]: BaseSite }, site: BaseSite) => {\n          return {\n            ...siteEntities,\n            [site.uid ?? '']: site,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n      // after base sites entities are populated,\n      // the active base site details data is also populated\n      const details = entities[state.activeSite];\n\n      return {\n        ...state,\n        details,\n        entities,\n      };\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Currency } from '../../../model/misc.model';\nimport { SiteContextActions } from '../actions/index';\nimport { CurrenciesState } from '../state';\n\nexport const initialState: CurrenciesState = {\n  entities: null,\n  activeCurrency: null,\n};\n\nexport function reducer(\n  state = initialState,\n  action: SiteContextActions.CurrenciesAction\n): CurrenciesState {\n  switch (action.type) {\n    case SiteContextActions.LOAD_CURRENCIES_SUCCESS: {\n      const currencies: Currency[] = action.payload;\n      const entities = currencies.reduce(\n        (currEntities: { [isocode: string]: Currency }, currency: Currency) => {\n          return {\n            ...currEntities,\n            [currency.isocode ?? '']: currency,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case SiteContextActions.SET_ACTIVE_CURRENCY: {\n      const isocode: string = action.payload;\n\n      return {\n        ...state,\n        activeCurrency: isocode,\n      };\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Language } from '../../../model/misc.model';\nimport { SiteContextActions } from '../actions/index';\nimport { LanguagesState } from '../state';\n\nexport const initialState: LanguagesState = {\n  entities: null,\n  activeLanguage: null,\n};\n\nexport function reducer(\n  state = initialState,\n  action: SiteContextActions.LanguagesAction\n): LanguagesState {\n  switch (action.type) {\n    case SiteContextActions.LOAD_LANGUAGES_SUCCESS: {\n      const languages: Language[] = action.payload;\n      const entities = languages.reduce(\n        (langEntities: { [isocode: string]: Language }, language: Language) => {\n          return {\n            ...langEntities,\n            [language.isocode ?? '']: language,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case SiteContextActions.SET_ACTIVE_LANGUAGE: {\n      const isocode = action.payload;\n\n      return {\n        ...state,\n        activeLanguage: isocode,\n      };\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { SiteContextState } from '../state';\nimport * as fromBaseSite from './base-site.reducer';\nimport * as fromCurrencies from './currencies.reducer';\nimport * as fromLanguages from './languages.reducer';\n\nexport function getReducers(): ActionReducerMap<SiteContextState, any> {\n  return {\n    languages: fromLanguages.reducer,\n    currencies: fromCurrencies.reducer,\n    baseSite: fromBaseSite.reducer,\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<SiteContextState>> =\n  new InjectionToken<ActionReducerMap<SiteContextState>>('SiteContextReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  StateConfig,\n  StateTransferType,\n} from '../../state/config/state-config';\nimport { effects } from './effects/index';\nimport { reducerProvider, reducerToken } from './reducers/index';\nimport { SITE_CONTEXT_FEATURE } from './state';\nimport { provideDefaultConfigFactory } from '../../config/config-providers';\n\nexport function siteContextStoreConfigFactory(): StateConfig {\n  // if we want to reuse SITE_CONTEXT_FEATURE const in config, we have to use factory instead of plain object\n  const config: StateConfig = {\n    state: {\n      ssrTransfer: {\n        keys: { [SITE_CONTEXT_FEATURE]: StateTransferType.TRANSFER_STATE },\n      },\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(SITE_CONTEXT_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    provideDefaultConfigFactory(siteContextStoreConfigFactory),\n    reducerProvider,\n  ],\n})\nexport class SiteContextStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  ConfigInitializer,\n  CONFIG_INITIALIZER,\n} from '../config/config-initializer/config-initializer';\nimport { provideDefaultConfigFactory } from '../config/config-providers';\nimport { provideConfigValidator } from '../config/config-validator/config-validator';\nimport { StateModule } from '../state/index';\nimport { baseSiteConfigValidator } from './config/base-site-config-validator';\nimport { SiteContextConfigInitializer } from './config/config-loader/site-context-config-initializer';\nimport { defaultSiteContextConfigFactory } from './config/default-site-context-config';\nimport { SiteContextConfig } from './config/site-context-config';\nimport { SiteContextEventModule } from './events/site-context-event.module';\nimport { BASE_SITE_CONTEXT_ID } from './providers/context-ids';\nimport { contextInitializerProviders } from './providers/context-initializer-providers';\nimport { contextServiceMapProvider } from './providers/context-service-map';\nimport { contextServiceProviders } from './providers/context-service-providers';\nimport { siteContextParamsProviders } from './providers/site-context-params-providers';\nimport { SiteContextStoreModule } from './store/site-context-store.module';\n\n/**\n * Initializes the site context config\n */\nexport function initSiteContextConfig(\n  configInitializer: SiteContextConfigInitializer,\n  config: SiteContextConfig\n): ConfigInitializer | null {\n  /**\n   * Load config for `context` from backend only when there is no static config for `context.baseSite`\n   */\n  if (!config.context || !config.context[BASE_SITE_CONTEXT_ID]) {\n    return configInitializer;\n  }\n  return null;\n}\n\n@NgModule({\n  imports: [StateModule, SiteContextStoreModule, SiteContextEventModule],\n})\nexport class SiteContextModule {\n  static forRoot(): ModuleWithProviders<SiteContextModule> {\n    return {\n      ngModule: SiteContextModule,\n      providers: [\n        provideDefaultConfigFactory(defaultSiteContextConfigFactory),\n        contextServiceMapProvider,\n        ...contextServiceProviders,\n        ...siteContextParamsProviders,\n        provideConfigValidator(baseSiteConfigValidator),\n        {\n          provide: CONFIG_INITIALIZER,\n          useFactory: initSiteContextConfig,\n          deps: [SiteContextConfigInitializer, SiteContextConfig],\n          multi: true,\n        },\n        ...contextInitializerProviders,\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/index';\nexport * from './connectors/index';\nexport * from './events/index';\nexport * from './facade/index';\nexport * from './providers/index';\nexport * from './services/index';\nexport { SiteContextModule } from './site-context.module';\nexport * from './store/actions/index';\nexport * from './store/selectors/index';\nexport * from './store/state';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AnonymousConsentsActions } from '../actions/index';\n\nexport const initialState = false;\n\nexport function reducer(\n  state = initialState,\n  action: AnonymousConsentsActions.ToggleAnonymousConsentsBannerDissmissed\n): boolean {\n  switch (action.type) {\n    case AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED: {\n      return action.dismissed;\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AnonymousConsentsActions } from '../actions/index';\n\nexport const initialState = false;\n\nexport function reducer(\n  state = initialState,\n  action: AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated\n): boolean {\n  switch (action.type) {\n    case AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED: {\n      return action.updated;\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n} from '../../../model/consent.model';\nimport { AnonymousConsentsActions } from '../actions/index';\n\nexport const initialState: AnonymousConsent[] = [];\n\nexport function toggleConsentStatus(\n  consents: AnonymousConsent[],\n  templateCode: string,\n  status: ANONYMOUS_CONSENT_STATUS\n): AnonymousConsent[] {\n  if (!consents) {\n    return [];\n  }\n\n  return consents.map((consent) => {\n    if (consent.templateCode === templateCode) {\n      consent = {\n        ...consent,\n        consentState: status,\n      };\n    }\n    return consent;\n  });\n}\n\nexport function reducer(\n  state = initialState,\n  action: AnonymousConsentsActions.AnonymousConsentsActions\n): AnonymousConsent[] {\n  switch (action.type) {\n    case AnonymousConsentsActions.GIVE_ANONYMOUS_CONSENT: {\n      return toggleConsentStatus(\n        state,\n        action.templateCode,\n        ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    }\n\n    case AnonymousConsentsActions.WITHDRAW_ANONYMOUS_CONSENT: {\n      return toggleConsentStatus(\n        state,\n        action.templateCode,\n        ANONYMOUS_CONSENT_STATUS.WITHDRAWN\n      );\n    }\n\n    case AnonymousConsentsActions.SET_ANONYMOUS_CONSENTS: {\n      return action.payload;\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport { AuthActions } from '../../../auth/index';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { SiteContextActions } from '../../../site-context/index';\nimport { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport {\n  AnonymousConsentsState,\n  ANONYMOUS_CONSENTS,\n} from '../anonymous-consents-state';\nimport * as fromAnonymousConsentsBanner from './anonymous-consents-banner.reducer';\nimport * as fromAnonymousConsentsUpdate from './anonymous-consents-update.reducer';\nimport * as fromAnonymousConsents from './anonymous-consents.reducer';\n\nexport function getReducers(): ActionReducerMap<AnonymousConsentsState, any> {\n  return {\n    templates: loaderReducer<ConsentTemplate[]>(ANONYMOUS_CONSENTS),\n    consents: fromAnonymousConsents.reducer,\n    ui: combineReducers({\n      bannerDismissed: fromAnonymousConsentsBanner.reducer,\n      updated: fromAnonymousConsentsUpdate.reducer,\n    }),\n  };\n}\n\nexport const reducerToken: InjectionToken<\n  ActionReducerMap<AnonymousConsentsState>\n> = new InjectionToken<ActionReducerMap<AnonymousConsentsState>>(\n  'AnonymousConsentsReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearAnonymousConsentTemplates(\n  reducer: ActionReducer<AnonymousConsentsState, Action>\n): ActionReducer<AnonymousConsentsState, Action> {\n  return function (state, action) {\n    if (\n      state !== undefined &&\n      (action.type === AuthActions.LOGOUT ||\n        action.type === SiteContextActions.LANGUAGE_CHANGE)\n    ) {\n      state = {\n        ...state,\n        templates: {},\n      };\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [\n  clearAnonymousConsentTemplates,\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { StatePersistenceService } from '../../state/index';\nimport { AnonymousConsentsService } from '../facade/index';\nimport { LoadAnonymousConsentTemplatesSuccess } from '../store/actions/anonymous-consents-group';\nimport {\n  AnonymousConsentsState,\n  StateWithAnonymousConsents,\n} from '../store/index';\nimport { getAnonymousConsentState } from '../store/selectors/feature.selector';\n\n/**\n * Anonymous consents state synced to browser storage.\n */\nexport type SyncedAnonymousConsentsState = Partial<AnonymousConsentsState>;\n\n/**\n * Responsible for saving the anonymous consents data in browser storage.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnonymousConsentsStatePersistenceService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected store: Store<StateWithAnonymousConsents>,\n    protected anonymousConsentsService: AnonymousConsentsService\n  ) {}\n\n  /**\n   * Identifier used for storage key.\n   */\n  protected key = 'anonymous-consents';\n\n  /**\n   * Initializes the synchronization between state and browser storage.\n   */\n  public initSync() {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage({\n        key: this.key,\n        state$: this.getAuthState(),\n        onRead: (state) => this.onRead(state),\n      })\n    );\n  }\n\n  /**\n   * Gets and transforms state from different sources into the form that should\n   * be saved in storage.\n   */\n  protected getAuthState(): Observable<SyncedAnonymousConsentsState> {\n    return this.store.select(getAnonymousConsentState);\n  }\n\n  /**\n   * Function called on each browser storage read.\n   * Used to update state from browser -> state.\n   */\n  protected onRead(state: SyncedAnonymousConsentsState | undefined) {\n    const templates = state?.templates;\n    const consents = state?.consents;\n    const ui = state?.ui;\n\n    // templates\n    if (templates?.success) {\n      this.store.dispatch(\n        new LoadAnonymousConsentTemplatesSuccess(templates.value ?? [])\n      );\n    }\n\n    // consents\n    if (consents) {\n      this.anonymousConsentsService.setConsents(consents);\n    }\n\n    // ui\n    if (ui) {\n      this.anonymousConsentsService.toggleBannerDismissed(ui?.bannerDismissed);\n      this.anonymousConsentsService.toggleTemplatesUpdated(ui?.updated);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../state/state.module';\nimport { ANONYMOUS_CONSENTS_STORE_FEATURE } from './anonymous-consents-state';\nimport { effects } from './effects/index';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\nimport { AnonymousConsentsStatePersistenceService } from '../services/anonymous-consents-state-persistence.service';\n\nexport function anonymousConsentsStatePersistenceFactory(\n  anonymousConsentsStatePersistenceService: AnonymousConsentsStatePersistenceService\n): () => void {\n  const result = () => anonymousConsentsStatePersistenceService.initSync();\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(ANONYMOUS_CONSENTS_STORE_FEATURE, reducerToken, {\n      metaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    reducerProvider,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: anonymousConsentsStatePersistenceFactory,\n      deps: [AnonymousConsentsStatePersistenceService],\n      multi: true,\n    },\n  ],\n})\nexport class AnonymousConsentsStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '../config/config-providers';\nimport { defaultAnonymousConsentsConfig } from './config/default-anonymous-consents-config';\nimport { AnonymousConsentsService } from './facade/anonymous-consents.service';\nimport { interceptors } from './http-interceptors/index';\nimport { AnonymousConsentsStoreModule } from './store/anonymous-consents-store.module';\n\n@NgModule({\n  imports: [AnonymousConsentsStoreModule],\n})\nexport class AnonymousConsentsModule {\n  static forRoot(): ModuleWithProviders<AnonymousConsentsModule> {\n    return {\n      ngModule: AnonymousConsentsModule,\n      providers: [\n        ...interceptors,\n        AnonymousConsentsService,\n        provideDefaultConfig(defaultAnonymousConsentsConfig),\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consent-templates.adapter';\nexport * from './anonymous-consent-templates.connector';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consents-state-persistence.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consents.module';\nexport * from './config/anonymous-consents-config';\nexport * from './config/default-anonymous-consents-config';\nexport * from './connectors/index';\nexport * from './facade/index';\nexport * from './http-interceptors/anonymous-consents-interceptor';\nexport * from './services/index';\nexport * from './store/actions/index';\nexport * from './store/anonymous-consents-state';\nexport * from './store/selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { PointOfService } from '../../../model/point-of-service.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const POINT_OF_SERVICE_NORMALIZER = new InjectionToken<\n  Converter<any, PointOfService>\n>('PointOfServiceNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './checkout/index';\nexport * from './payment/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsConfig } from './cms-config';\n\nexport const defaultCmsModuleConfig: CmsConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        component: 'cms/components/${id}',\n        components: 'cms/components',\n        pages: 'cms/pages',\n        page: 'cms/pages/${id}',\n      },\n    },\n  },\n  cmsComponents: {},\n  componentsLoading: {\n    pageSize: 50,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsComponent } from '../../model';\nimport { StateUtils } from '../../state/index';\nimport { NodeItem } from '../model/node-item.model';\nimport { Page } from '../model/page.model';\n\nexport const CMS_FEATURE = 'cms';\nexport const NAVIGATION_DETAIL_ENTITY = '[Cms] Navigation Entity';\nexport const COMPONENT_ENTITY = '[Cms] Component Entity';\n\nexport interface StateWithCms {\n  [CMS_FEATURE]: CmsState;\n}\n\nexport type ComponentsState = StateUtils.EntityState<ComponentsContext>;\n\nexport interface ComponentsContext {\n  component?: CmsComponent;\n  /**\n   * Page context stores an information for which context does the component exist.\n   * For example, if `SiteLogoComponent` was successfully loaded for a product page with an ID of 1776948, then this object will contain:\n   *\n   * ```ts\n   * ProductPage-1776948: {\n   *  success: true,\n   *  loading: false,\n   *  error: false,\n   *  // The `value` property indicates that the component exists for the given page context.\n   *  value: true\n   * }\n   * ```\n   *\n   * If the same `SiteLogoComponent` component was tried to be loaded on homepage (page context id is `homepage`),\n   * and it doesn't exist for some reason (maybe it has a restriction), then this object will contain:\n   *\n   * ```ts\n   * ProductPage-1776948: {\n   *  success: true,\n   *  loading: false,\n   *  error: false,\n   *  // The `value` property indicates that the component exists for the given page context.\n   *  value: true\n   * },\n   * ContentPage-homepage: {\n   *  success: true,\n   *  loading: false,\n   *  error: false,\n   *  // The `value` in this case is `false` indicating that the component was tried to be loaded, but it doesn't exist or has a restriction.\n   *  value: false\n   * }\n   * ```\n   *\n   */\n  pageContext: {\n    [context: string]: StateUtils.LoaderState<boolean>;\n  };\n}\n\nexport type IndexType = {\n  content: StateUtils.EntityLoaderState<string>;\n  product: StateUtils.EntityLoaderState<string>;\n  category: StateUtils.EntityLoaderState<string>;\n  catalog: StateUtils.EntityLoaderState<string>;\n};\n\nexport interface NavigationNodes {\n  [nodeId: string]: NodeItem;\n}\n\nexport interface PageState {\n  pageData: StateUtils.EntityState<Page>;\n  index: IndexType;\n}\n\nexport interface CmsState {\n  page: PageState;\n  components: ComponentsState;\n  navigation: StateUtils.EntityLoaderState<NodeItem>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing/index';\nimport { StateUtils } from '../../../state/utils/index';\nimport { COMPONENT_ENTITY } from '../cms-state';\n\nexport const LOAD_CMS_COMPONENT = '[Cms] Load Component';\nexport const LOAD_CMS_COMPONENT_FAIL = '[Cms] Load Component Fail';\nexport const LOAD_CMS_COMPONENT_SUCCESS = '[Cms] Load Component Success';\nexport const CMS_GET_COMPONENT_FROM_PAGE = '[Cms] Get Component from Page';\n\nexport class LoadCmsComponent extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_CMS_COMPONENT;\n  constructor(\n    public payload: {\n      uid: string;\n      pageContext?: PageContext;\n    }\n  ) {\n    super(COMPONENT_ENTITY, payload.uid);\n  }\n}\n\nexport class LoadCmsComponentFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_CMS_COMPONENT_FAIL;\n  constructor(\n    public payload: { uid: string; error?: any; pageContext: PageContext }\n  ) {\n    super(COMPONENT_ENTITY, payload.uid, payload.error);\n  }\n}\n\nexport class LoadCmsComponentSuccess<\n  T extends CmsComponent\n> extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_CMS_COMPONENT_SUCCESS;\n  constructor(\n    public payload: {\n      component: T;\n      uid?: string;\n      pageContext: PageContext;\n    }\n  ) {\n    super(COMPONENT_ENTITY, payload.uid || payload.component.uid || '');\n  }\n}\n\nexport class CmsGetComponentFromPage<\n  T extends CmsComponent\n> extends StateUtils.EntitySuccessAction {\n  readonly type = CMS_GET_COMPONENT_FROM_PAGE;\n  constructor(\n    public payload:\n      | { component: T; pageContext: PageContext }\n      | { component: T; pageContext: PageContext }[]\n  ) {\n    super(\n      COMPONENT_ENTITY,\n      ([] as any[]).concat(payload).map((cmp) => cmp.component.uid)\n    );\n  }\n}\n\n// action types\nexport type CmsComponentAction<T extends CmsComponent> =\n  | LoadCmsComponent\n  | LoadCmsComponentFail\n  | LoadCmsComponentSuccess<T>\n  | CmsGetComponentFromPage<T>;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '../../../state/utils/index';\nimport { NAVIGATION_DETAIL_ENTITY } from '../cms-state';\n\nexport const LOAD_CMS_NAVIGATION_ITEMS = '[Cms] Load NavigationEntry items';\nexport const LOAD_CMS_NAVIGATION_ITEMS_FAIL =\n  '[Cms] Load NavigationEntry items Fail';\nexport const LOAD_CMS_NAVIGATION_ITEMS_SUCCESS =\n  '[Cms] Load NavigationEntry items Success';\n\nexport class LoadCmsNavigationItems extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_CMS_NAVIGATION_ITEMS;\n  constructor(public payload: { nodeId: string; items: any[] }) {\n    super(NAVIGATION_DETAIL_ENTITY, payload.nodeId);\n  }\n}\n\nexport class LoadCmsNavigationItemsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_CMS_NAVIGATION_ITEMS_FAIL;\n  constructor(nodeId: string, public payload: any) {\n    super(NAVIGATION_DETAIL_ENTITY, nodeId, payload);\n  }\n}\n\nexport class LoadCmsNavigationItemsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_CMS_NAVIGATION_ITEMS_SUCCESS;\n  constructor(public payload: { nodeId: string; components: any[] }) {\n    super(NAVIGATION_DETAIL_ENTITY, payload.nodeId);\n  }\n}\n\n// action types\nexport type CmsNavigationEntryItemAction =\n  | LoadCmsNavigationItems\n  | LoadCmsNavigationItemsFail\n  | LoadCmsNavigationItemsSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PageContext } from '../../../routing/index';\nimport { StateUtils } from '../../../state/utils/index';\nimport { Page } from '../../model/page.model';\n\nexport const LOAD_CMS_PAGE_DATA = '[Cms] Load Page Data';\nexport const LOAD_CMS_PAGE_DATA_FAIL = '[Cms] Load Page Data Fail';\nexport const LOAD_CMS_PAGE_DATA_SUCCESS = '[Cms] Load Page Data Success';\nexport const CMS_SET_PAGE_SUCCESS_INDEX = '[Cms] Set Page Success Index';\nexport const CMS_SET_PAGE_FAIL_INDEX = '[Cms] Set Page Fail Index';\n\nexport class LoadCmsPageData extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_CMS_PAGE_DATA;\n  constructor(public payload: PageContext) {\n    super(payload.type ?? '', payload.id);\n  }\n}\n\nexport class LoadCmsPageDataFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_CMS_PAGE_DATA_FAIL;\n  constructor(pageContext: PageContext, error: any) {\n    super(pageContext.type ?? '', pageContext.id, error);\n  }\n}\n\nexport class LoadCmsPageDataSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_CMS_PAGE_DATA_SUCCESS;\n  constructor(pageContext: PageContext, payload: Page) {\n    super(pageContext.type ?? '', pageContext.id, payload);\n  }\n}\n\nexport class CmsSetPageSuccessIndex extends StateUtils.EntitySuccessAction {\n  readonly type = CMS_SET_PAGE_SUCCESS_INDEX;\n  constructor(pageContext: PageContext, payload: Page) {\n    super(pageContext.type ?? '', pageContext.id, payload);\n  }\n}\n\nexport class CmsSetPageFailIndex extends StateUtils.EntityFailAction {\n  readonly type = CMS_SET_PAGE_FAIL_INDEX;\n  constructor(pageContext: PageContext, public payload: string) {\n    super(pageContext.type ?? '', pageContext.id);\n  }\n}\n\n// action types\nexport type CmsPageAction =\n  | LoadCmsPageData\n  | LoadCmsPageDataFail\n  | LoadCmsPageDataSuccess\n  | CmsSetPageFailIndex;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './components.action';\nexport * from './navigation-entry-item.action';\nexport * from './page.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as CmsActions from './cms-group.actions';\nexport { CmsActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport { CmsState, CMS_FEATURE, StateWithCms } from '../cms-state';\n\nexport const getCmsState: MemoizedSelector<StateWithCms, CmsState> =\n  createFeatureSelector<CmsState>(CMS_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { ComponentsContext, ComponentsState, StateWithCms } from '../cms-state';\nimport { getCmsState } from './feature.selectors';\n\nexport const getComponentsState: MemoizedSelector<\n  StateWithCms,\n  ComponentsState\n> = createSelector(getCmsState, (state) => state.components);\n\nexport const componentsContextSelectorFactory = (\n  uid: string\n): MemoizedSelector<StateWithCms, ComponentsContext | undefined> => {\n  return createSelector(getComponentsState, (componentsState) =>\n    StateUtils.entitySelector(componentsState, uid)\n  );\n};\n\nexport const componentsLoaderStateSelectorFactory = (\n  uid: string,\n  context: string\n): MemoizedSelector<StateWithCms, StateUtils.LoaderState<boolean>> => {\n  return createSelector(\n    componentsContextSelectorFactory(uid),\n    (componentsContext) =>\n      (componentsContext &&\n        componentsContext.pageContext &&\n        componentsContext.pageContext[context]) ||\n      StateUtils.initialLoaderState\n  );\n};\n\n/**\n * This selector will return:\n *   - true: component for this context exists\n *   - false: component for this context doesn't exist\n *   - undefined: if the exists status for component is unknown\n *\n * @param uid\n * @param context\n */\nexport const componentsContextExistsSelectorFactory = (\n  uid: string,\n  context: string\n): MemoizedSelector<StateWithCms, boolean> => {\n  return createSelector(\n    componentsLoaderStateSelectorFactory(uid, context),\n    (loaderState) => StateUtils.loaderValueSelector(loaderState)\n  );\n};\n\nexport const componentsDataSelectorFactory = (\n  uid: string\n): MemoizedSelector<StateWithCms, CmsComponent | undefined> => {\n  return createSelector(componentsContextSelectorFactory(uid), (state) =>\n    state ? state.component : undefined\n  );\n};\n\n/**\n * This selector will return:\n *   - CmsComponent instance: if we have component data for specified context\n *   - null: if there is no component data for specified context\n *   - undefined: if status of component data for specified context is unknown\n *\n * @param uid\n * @param context\n */\nexport const componentsSelectorFactory = (\n  uid: string,\n  context: string\n): MemoizedSelector<StateWithCms, CmsComponent | null | undefined> => {\n  return createSelector(\n    componentsDataSelectorFactory(uid),\n    componentsContextExistsSelectorFactory(uid, context),\n    (componentState, exists) => {\n      switch (exists) {\n        case true:\n          return componentState;\n        case false:\n          return null;\n        case undefined:\n          return undefined;\n      }\n    }\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateUtils } from '../../../state/utils/index';\nimport { NodeItem } from '../../model/node-item.model';\nimport { CmsState, StateWithCms } from '../cms-state';\nimport { getCmsState } from './feature.selectors';\n\nexport const getNavigationEntryItemState: MemoizedSelector<\n  StateWithCms,\n  StateUtils.EntityLoaderState<NodeItem>\n> = createSelector(getCmsState, (state: CmsState) => state.navigation);\n\nexport const getSelectedNavigationEntryItemState = (\n  nodeId: string\n): MemoizedSelector<StateWithCms, StateUtils.LoaderState<NodeItem>> => {\n  return createSelector(getNavigationEntryItemState, (nodes) =>\n    StateUtils.entityLoaderStateSelector(nodes, nodeId)\n  );\n};\n\nexport const getNavigationEntryItems = (\n  nodeId: string\n): MemoizedSelector<StateWithCms, NodeItem> => {\n  return createSelector(\n    getSelectedNavigationEntryItemState(nodeId),\n    (itemState) => StateUtils.loaderValueSelector(itemState)\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PageType } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing';\nimport { StateUtils } from '../../../state/utils/index';\nimport { ContentSlotData } from '../../model/content-slot-data.model';\nimport { Page } from '../../model/page.model';\nimport { CmsState, IndexType, PageState, StateWithCms } from '../cms-state';\nimport { getCmsState } from './feature.selectors';\n\nconst getPageEntitiesSelector = (state: PageState) => state.pageData.entities;\nconst getIndexByType = (\n  index: IndexType,\n  type?: PageType\n): StateUtils.EntityLoaderState<string> => {\n  switch (type) {\n    case PageType.CONTENT_PAGE: {\n      return index.content;\n    }\n    case PageType.PRODUCT_PAGE: {\n      return index.product;\n    }\n    case PageType.CATEGORY_PAGE: {\n      return index.category;\n    }\n    case PageType.CATALOG_PAGE: {\n      return index.catalog;\n    }\n    default: {\n      return { entities: {} };\n    }\n  }\n};\n\nconst getPageComponentTypesSelector: (page: Page) => string[] = (\n  page: Page\n) => {\n  const componentTypes = new Set<string>();\n  if (page && page.slots) {\n    for (const slot of Object.keys(page.slots)) {\n      for (const component of page.slots[slot].components || []) {\n        componentTypes.add(component.flexType ?? '');\n      }\n    }\n  }\n  return Array.from(componentTypes);\n};\n\nexport const getPageState: MemoizedSelector<StateWithCms, PageState> =\n  createSelector(getCmsState, (state: CmsState) => state.page);\n\nexport const getPageStateIndex: MemoizedSelector<StateWithCms, IndexType> =\n  createSelector(getPageState, (page: PageState) => page.index);\n\nexport const getPageStateIndexEntityLoaderState = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, StateUtils.EntityLoaderState<string>> =>\n  createSelector(getPageStateIndex, (index: IndexType) =>\n    getIndexByType(index, pageContext.type)\n  );\n\nexport const getPageStateIndexLoaderState = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, StateUtils.LoaderState<string>> =>\n  createSelector(\n    getPageStateIndexEntityLoaderState(pageContext),\n    (indexState) =>\n      StateUtils.entityLoaderStateSelector(indexState, pageContext.id)\n  );\n\nexport const getPageStateIndexValue = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, string> =>\n  createSelector(getPageStateIndexLoaderState(pageContext), (entity) =>\n    StateUtils.loaderValueSelector<string>(entity)\n  );\n\nexport const getPageEntities: MemoizedSelector<\n  StateWithCms,\n  { [id: string]: Page }\n> = createSelector(getPageState, getPageEntitiesSelector);\n\nexport const getPageData = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, Page> =>\n  createSelector(\n    getPageEntities,\n    getPageStateIndexValue(pageContext),\n    (entities: { [id: string]: Page }, indexValue: string) =>\n      entities[indexValue]\n  );\n\nexport const getPageComponentTypes = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, string[]> =>\n  createSelector(getPageData(pageContext), (pageData) =>\n    getPageComponentTypesSelector(pageData)\n  );\n\nexport const getCurrentSlotSelectorFactory = (\n  pageContext: PageContext,\n  position: string\n): MemoizedSelector<StateWithCms, ContentSlotData | undefined> => {\n  return createSelector(getPageData(pageContext), (entity) => {\n    if (entity) {\n      return entity.slots?.[position] || { components: [] };\n    }\n  });\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './components.selectors';\nexport * from './feature.selectors';\nexport * from './navigation-entry-item.selectors';\nexport * from './page.selectors';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as CmsSelectors from './cms-group.selectors';\nexport { CmsSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PageType } from '../../model/cms.model';\nimport { PageContext } from '../../routing/models/page-context.model';\n\nexport const CURRENT_CONTEXT_KEY = 'current';\n\n/**\n *\n * Serializes the provided page context.\n * The pattern used for serialization is: `pageContext.type-pageContext.id`.\n *\n * @param pageContext to serialize\n * @param ignoreContentPageId if set to true, and the PageType is of type ContentPage, then the serialized page context will not contain the ID.\n * Otherwise, the page context if fully serialized.\n */\nexport function serializePageContext(\n  pageContext: PageContext | undefined,\n  ignoreContentPageId?: boolean\n): string {\n  if (!pageContext) {\n    return CURRENT_CONTEXT_KEY;\n  }\n\n  if (ignoreContentPageId && pageContext.type === PageType.CONTENT_PAGE) {\n    return `${pageContext.type}`;\n  }\n\n  return `${pageContext.type}-${pageContext.id}`;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable, of, queueScheduler, using } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  observeOn,\n  pluck,\n  shareReplay,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { CmsComponent } from '../../model/cms.model';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { PageContext } from '../../routing/models/page-context.model';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { isNotUndefined } from '../../util/type-guards';\nimport { ContentSlotData } from '../model/content-slot-data.model';\nimport { NodeItem } from '../model/node-item.model';\nimport { Page } from '../model/page.model';\nimport { CmsActions } from '../store/actions/index';\nimport { StateWithCms } from '../store/cms-state';\nimport { CmsSelectors } from '../store/selectors/index';\nimport { serializePageContext } from '../utils/cms-utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsService {\n  private components: {\n    [uid: string]: {\n      [pageContext: string]: Observable<CmsComponent>;\n    };\n  } = {};\n\n  constructor(\n    protected store: Store<StateWithCms>,\n    protected routingService: RoutingService\n  ) {}\n\n  /**\n   * Get current CMS page data\n   */\n  getCurrentPage(): Observable<Page> {\n    return this.routingService\n      .getPageContext()\n      .pipe(\n        switchMap((pageContext) =>\n          this.store.select(CmsSelectors.getPageData(pageContext))\n        )\n      );\n  }\n\n  /**\n   * Get CMS component data by uid\n   *\n   * This method can be safely and optimally used to load multiple components data at the same time.\n   * Calling getComponentData multiple times for different components will always result in optimized\n   * back-end request: all components requested at the same time (in one event loop) will be loaded in one network call.\n   *\n   * In case the component data is not present, the method will load it.\n   * Otherwise, if the page context is not provided, the current page context from the router state will be used instead.\n   *\n   * @param uid CMS component uid\n   * @param pageContext if provided, it will be used to lookup the component data.\n   */\n  getComponentData<T extends CmsComponent | null>(\n    uid: string,\n    pageContext?: PageContext\n  ): Observable<T> {\n    const context = serializePageContext(pageContext, true);\n    if (!this.components[uid]) {\n      // create the component data structure, if it doesn't already exist\n      this.components[uid] = {};\n    }\n\n    const component = this.components[uid];\n    if (!component[context]) {\n      // create the component data and assign it to the component's context\n      component[context] = this.createComponentData(uid, pageContext);\n    }\n\n    return component[context] as Observable<T>;\n  }\n\n  private createComponentData<T extends CmsComponent | null>(\n    uid: string,\n    pageContext?: PageContext\n  ): Observable<T> {\n    if (!pageContext) {\n      return this.routingService.getPageContext().pipe(\n        filter((currentContext) => !!currentContext),\n        switchMap((currentContext) =>\n          this.getComponentData<T>(uid, currentContext)\n        )\n      );\n    }\n\n    const context = serializePageContext(pageContext, true);\n\n    const loading$ = combineLatest([\n      this.routingService.getNextPageContext(),\n      this.store.pipe(\n        select(CmsSelectors.componentsLoaderStateSelectorFactory(uid, context))\n      ),\n    ]).pipe(\n      observeOn(queueScheduler),\n      tap(([nextContext, loadingState]) => {\n        const attemptedLoad =\n          loadingState.loading || loadingState.success || loadingState.error;\n        // if the requested context is the same as the one that's currently being navigated to\n        // (as it might already been triggered and might be available shortly from page data)\n        // TODO(issue:3649), TODO(issue:3668) - this optimization could be removed\n        const couldBeLoadedWithPageData = nextContext\n          ? serializePageContext(nextContext, true) === context\n          : false;\n\n        if (!attemptedLoad && !couldBeLoadedWithPageData) {\n          this.store.dispatch(\n            new CmsActions.LoadCmsComponent({ uid, pageContext })\n          );\n        }\n      })\n    );\n\n    const component$ = this.store.pipe(\n      select(CmsSelectors.componentsSelectorFactory(uid, context)),\n      filter(isNotUndefined)\n    ) as Observable<T>;\n\n    return using(\n      () => loading$.subscribe(),\n      () => component$\n    ).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  }\n\n  /**\n   * Given the position, get the content slot data\n   * @param position : content slot position\n   */\n  getContentSlot(position: string): Observable<ContentSlotData> {\n    return this.routingService\n      .getPageContext()\n      .pipe(\n        switchMap((pageContext) =>\n          this.store.pipe(\n            select(\n              CmsSelectors.getCurrentSlotSelectorFactory(pageContext, position)\n            ),\n            filter(isNotUndefined)\n          )\n        )\n      );\n  }\n\n  /**\n   * Given navigation node uid, get items (with id and type) inside the navigation entries\n   * @param navigationNodeUid : uid of the navigation node\n   */\n  getNavigationEntryItems(navigationNodeUid: string): Observable<NodeItem> {\n    return this.store.pipe(\n      select(CmsSelectors.getNavigationEntryItems(navigationNodeUid))\n    );\n  }\n\n  /**\n   * Load navigation items data\n   * @param rootUid : the uid of the root navigation node\n   * @param itemList : list of items (with id and type)\n   */\n  loadNavigationItems(\n    rootUid: string,\n    itemList: { id: string | undefined; superType: string | undefined }[]\n  ): void {\n    this.store.dispatch(\n      new CmsActions.LoadCmsNavigationItems({\n        nodeId: rootUid,\n        items: itemList,\n      })\n    );\n  }\n\n  /**\n   * Refresh the content of the latest cms page\n   */\n  refreshLatestPage(): void {\n    this.routingService\n      .getPageContext()\n      .pipe(take(1))\n      .subscribe((pageContext) =>\n        this.store.dispatch(new CmsActions.LoadCmsPageData(pageContext))\n      );\n  }\n\n  /**\n   * Refresh the cms page content by page Id\n   * @param pageId\n   */\n  refreshPageById(pageId: string): void {\n    const pageContext: PageContext = { id: pageId };\n    this.store.dispatch(new CmsActions.LoadCmsPageData(pageContext));\n  }\n\n  /**\n   * Refresh cms component's content\n   * @param uid component uid\n   * @param pageContext an optional parameter that enables the caller to specify for which context the component should be refreshed.\n   * If not specified, 'current' page context is used.\n   */\n  refreshComponent(uid: string, pageContext?: PageContext): void {\n    this.store.dispatch(new CmsActions.LoadCmsComponent({ uid, pageContext }));\n  }\n\n  /**\n   * Given pageContext, return the CMS page data\n   * @param pageContext\n   */\n  getPageState(pageContext: PageContext): Observable<Page> {\n    return this.store.pipe(select(CmsSelectors.getPageData(pageContext)));\n  }\n\n  /**\n   * Given pageContext, return the CMS page data\n   * @param pageContext\n   */\n  getPageComponentTypes(pageContext: PageContext): Observable<string[]> {\n    return this.store.pipe(\n      select(CmsSelectors.getPageComponentTypes(pageContext))\n    );\n  }\n\n  /**\n   * Given pageContext, return whether the CMS page data exists or not\n   * @param pageContext\n   */\n  hasPage(pageContext: PageContext, forceReload = false): Observable<boolean> {\n    return this.store.pipe(\n      select(CmsSelectors.getPageStateIndexLoaderState(pageContext)),\n      tap((entity: LoaderState<string>) => {\n        const attemptedLoad = entity.loading || entity.success || entity.error;\n        const shouldReload = forceReload && !entity.loading;\n        if (!attemptedLoad || shouldReload) {\n          this.store.dispatch(new CmsActions.LoadCmsPageData(pageContext));\n          forceReload = false;\n        }\n      }),\n      filter((entity) => {\n        if (!entity.hasOwnProperty('value')) {\n          // if we have incomplete state from SSR failed load transfer state,\n          // we should wait for reload and actual value\n          return false;\n        }\n        return Boolean(entity.success || (entity.error && !entity.loading));\n      }),\n      pluck('success'),\n      map((success) => !!success),\n      catchError(() => of(false))\n    );\n  }\n\n  /**\n   * Given pageContext, return the CMS page data\n   **/\n  getPage(\n    pageContext: PageContext,\n    forceReload = false\n  ): Observable<Page | null> {\n    return this.hasPage(pageContext, forceReload).pipe(\n      switchMap((hasPage) =>\n        hasPage ? this.getPageState(pageContext) : of(null)\n      )\n    );\n  }\n\n  getPageIndex(pageContext: PageContext): Observable<string> {\n    return this.store.pipe(\n      select(CmsSelectors.getPageStateIndexValue(pageContext))\n    );\n  }\n\n  setPageFailIndex(pageContext: PageContext, value: string): void {\n    this.store.dispatch(new CmsActions.CmsSetPageFailIndex(pageContext, value));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PageMetaConfig } from './page-meta.config';\n\nexport const defaultPageMetaConfig: PageMetaConfig = {\n  pageMeta: {\n    resolvers: [\n      {\n        property: 'title',\n        method: 'resolveTitle',\n      },\n      {\n        property: 'heading',\n        method: 'resolveHeading',\n      },\n      {\n        property: 'breadcrumbs',\n        method: 'resolveBreadcrumbs',\n      },\n      {\n        property: 'description',\n        method: 'resolveDescription',\n        disabledInCsr: true,\n      },\n      {\n        property: 'image',\n        method: 'resolveImage',\n        disabledInCsr: true,\n      },\n      {\n        property: 'robots',\n        method: 'resolveRobots',\n        disabledInCsr: true,\n      },\n      {\n        property: 'canonicalUrl',\n        method: 'resolveCanonicalUrl',\n        disabledInCsr: true,\n      },\n    ],\n    canonicalUrl: {\n      forceHttps: true,\n      forceWww: false,\n      removeQueryParams: true,\n      forceTrailingSlash: true,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PageType } from '../../model/cms.model';\nimport { Applicable } from '../../util/applicable';\nimport { Page } from '../model/page.model';\n\n/**\n * Abstract class that can be used to resolve meta data for specific pages.\n * The `getScore` method is used to select the right resolver for a specific\n * page, based on a score. The score is calculated by the (non)matching page\n * type, page template, and uid.\n */\nexport abstract class PageMetaResolver implements Applicable {\n  /** The `PageType` is used to score the (non)matching page */\n  pageType: PageType;\n\n  /** The page template is used to score the (non)matching page template */\n  pageTemplate: string;\n\n  /** The page uid is used to score the (non)matching page ids */\n  pageUid: string;\n\n  /**\n   * Returns the matching score for a resolver class, based on\n   * the page type and page template.\n   */\n  getScore(page: Page): number {\n    let score = 0;\n    if (this.pageType) {\n      score += page.type === this.pageType ? 1 : -1;\n    }\n    if (this.pageTemplate) {\n      score += page.template === this.pageTemplate ? 1 : -1;\n    }\n\n    if (this.pageUid) {\n      score += page.pageId === this.pageUid ? 10 : -10;\n    }\n\n    return score;\n  }\n\n  hasMatch(page: Page): boolean {\n    return this.getScore(page) > 0;\n  }\n\n  getPriority(page: Page): number {\n    return this.getScore(page);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class TranslationService {\n  /**\n   * Translates given key with options.\n   * If key is missing, it tries to load the chunk and emits a value when chunk is loaded.\n   * If key is missing after loaded chunk, a fallback value is emitted\n   *\n   * @param key translation key\n   * @param options values for interpolation in translation\n   * @param whitespaceUntilLoaded if true, immediately emits a non-breaking space\n   */\n  translate: (\n    key: string,\n    options?: any,\n    whitespaceUntilLoaded?: boolean\n  ) => Observable<string>;\n\n  /**\n   * Loads chunks with translations\n   *\n   * @param chunkNames array of chunk names to be loaded\n   */\n  loadChunks: (chunkNames: string | string[]) => Promise<any>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TranslationService } from '../../../i18n/translation.service';\nimport { BreadcrumbMeta } from '../../model/page.model';\nimport {\n  RouteBreadcrumbConfig,\n  RouteBreadcrumbResolver,\n  RouteBreadcrumbResolverParams,\n} from './route-page-meta.model';\n\n/**\n * Resolves the breadcrumb for the Angular ActivatedRouteSnapshot\n */\n@Injectable({ providedIn: 'root' })\nexport abstract class DefaultRoutePageMetaResolver\n  implements RouteBreadcrumbResolver\n{\n  constructor(protected translation: TranslationService) {}\n\n  /**\n   * Resolves breadcrumb based on the given url and the breadcrumb config.\n   *\n   * - When breadcrumb config is empty, it returns an empty breadcrumb.\n   * - When breadcrumb config is a string or object with `i18n` property,\n   *    it translates it and use as a label of the returned breadcrumb.\n   * - When breadcrumb config is an object with property `raw`, then\n   *    it's used as a label of the returned breadcrumb.\n   */\n  resolveBreadcrumbs({\n    url,\n    pageMetaConfig,\n  }: RouteBreadcrumbResolverParams): Observable<BreadcrumbMeta[]> {\n    const breadcrumbConfig = pageMetaConfig?.breadcrumb;\n\n    if (!breadcrumbConfig) {\n      return of([]);\n    }\n\n    if (typeof breadcrumbConfig !== 'string' && breadcrumbConfig.raw) {\n      return of([{ link: url, label: breadcrumbConfig.raw }]);\n    }\n\n    return this.translateBreadcrumbLabel(breadcrumbConfig).pipe(\n      map((label) => [{ label, link: url }])\n    );\n  }\n\n  /**\n   * Translates the configured breadcrumb label\n   */\n  protected translateBreadcrumbLabel(\n    breadcrumbConfig: string | RouteBreadcrumbConfig\n  ): Observable<string> {\n    const i18nKey =\n      typeof breadcrumbConfig === 'string'\n        ? breadcrumbConfig\n        : breadcrumbConfig.i18n;\n\n    return this.getParams().pipe(\n      switchMap((params) =>\n        this.translation.translate(i18nKey ?? '', params ?? {})\n      )\n    );\n  }\n\n  /**\n   * Resolves dynamic data for the whole resolver.\n   */\n  protected getParams(): Observable<{ [_: string]: any } | undefined> {\n    return of({});\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { ActivatedRoutesService } from '../../../routing/services/activated-routes.service';\nimport { BreadcrumbMeta } from '../../model/page.model';\nimport { DefaultRoutePageMetaResolver } from './default-route-page-meta.resolver';\nimport {\n  ActivatedRouteSnapshotWithPageMeta,\n  RouteBreadcrumbResolver,\n  RoutePageMetaConfig,\n} from './route-page-meta.model';\n\n// PRIVATE\nexport interface RouteWithExtras {\n  route: ActivatedRouteSnapshotWithPageMeta;\n  resolver: any;\n  url: string;\n}\n\nexport interface RoutingResolveBreadcrumbsOptions {\n  /**\n   * Includes the current route in the breadcrumbs.\n   */\n  includeCurrentRoute?: boolean;\n}\n\n/**\n * Resolves the page meta based on the Angular Activated Routes\n */\n@Injectable({ providedIn: 'root' })\nexport class RoutingPageMetaResolver {\n  constructor(\n    protected activatedRoutesService: ActivatedRoutesService,\n    protected injector: Injector\n  ) {}\n\n  /**\n   * Array of activated routes, excluding the special Angular `root` route.\n   */\n  protected readonly routes$ = this.activatedRoutesService.routes$.pipe(\n    // drop the first route - the special `root` route:\n    map((routes) => (routes = routes.slice(1, routes.length)))\n  );\n\n  /**\n   * Array of activated routes together with precalculated extras:\n   *\n   * - route's page meta resolver\n   * - route's absolute string URL\n   *\n   * In case when there is no page meta resolver configured for a specific route,\n   * it inherits its parent's resolver.\n   *\n   * When there is no page meta resolver configured for the highest parent in the hierarchy,\n   * it uses the `DefaultRoutePageMetaResolver`.\n   */\n  protected readonly routesWithExtras$: Observable<RouteWithExtras[]> =\n    this.routes$.pipe(\n      map((routes) =>\n        routes.reduce<RouteWithExtras[]>((results, route) => {\n          const parent = results.length\n            ? results[results.length - 1]\n            : {\n                route: null,\n                resolver: this.injector.get(DefaultRoutePageMetaResolver),\n                url: '',\n              };\n\n          const resolver = this.getResolver(route) ?? parent.resolver; // fallback to parent's resolver\n\n          const urlPart = this.getUrlPart(route);\n          const url = parent.url + (urlPart ? `/${urlPart}` : ''); // don't add slash for a route with path '', to avoid double slash ...//...\n\n          return results.concat({ route, resolver, url });\n        }, [])\n      ),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n\n  /**\n   * Array of breadcrumbs defined for all the activated routes (from the root route to the leaf route).\n   * It emits on every completed routing navigation.\n   */\n  resolveBreadcrumbs(\n    options?: RoutingResolveBreadcrumbsOptions\n  ): Observable<BreadcrumbMeta[]> {\n    return this.routesWithExtras$.pipe(\n      map((routesWithExtras) =>\n        options?.includeCurrentRoute\n          ? routesWithExtras\n          : this.trimCurrentRoute(routesWithExtras)\n      ),\n      switchMap((routesWithExtras) =>\n        routesWithExtras.length\n          ? combineLatest(\n              routesWithExtras.map((routeWithExtras) =>\n                this.resolveRouteBreadcrumb(routeWithExtras)\n              )\n            )\n          : of([])\n      ),\n      map((breadcrumbArrays) => breadcrumbArrays.flat())\n    );\n  }\n\n  /**\n   * Returns the instance of the RoutePageMetaResolver configured for the given activated route.\n   * Returns null in case there the resolver can't be injected or is undefined.\n   *\n   * @param route route to resolve\n   */\n  protected getResolver(route: ActivatedRouteSnapshotWithPageMeta): any {\n    const pageMetaConfig = this.getPageMetaConfig(route);\n\n    if (typeof pageMetaConfig !== 'string' && pageMetaConfig?.resolver) {\n      return this.injector.get(pageMetaConfig.resolver, null);\n    }\n    return null;\n  }\n\n  /**\n   * Resolvers breadcrumb for a specific route\n   */\n  protected resolveRouteBreadcrumb({\n    route,\n    resolver,\n    url,\n  }: RouteWithExtras): Observable<BreadcrumbMeta[]> {\n    const breadcrumbResolver = resolver as RouteBreadcrumbResolver;\n\n    if (typeof breadcrumbResolver.resolveBreadcrumbs === 'function') {\n      return breadcrumbResolver.resolveBreadcrumbs({\n        route,\n        url,\n        pageMetaConfig: this.getPageMetaConfig(route),\n      });\n    }\n    return of([]);\n  }\n\n  /**\n   * By default in breadcrumbs list we don't want to show a link to the current page, so this function\n   * trims the last breadcrumb (the breadcrumb of the current route).\n   *\n   * This function also handles special case when the current route has a configured empty path ('' route).\n   * The '' routes are often a _technical_ routes to organize other routes, assign common guards for its children, etc.\n   * It shouldn't happen that '' route has a defined breadcrumb config.\n   *\n   * In that case, we trim not only the last route ('' route), but also its parent route with non-empty path\n   * (which likely defines the breadcrumb config).\n   */\n  private trimCurrentRoute(\n    routesWithExtras: RouteWithExtras[]\n  ): RouteWithExtras[] {\n    // If the last route is '', we trim:\n    // - the '' route\n    // - all parent '' routes (until we meet route with non-empty path)\n\n    let i = routesWithExtras.length - 1;\n    while (routesWithExtras[i]?.route?.url.length === 0 && i >= 0) {\n      i--;\n    }\n\n    // Finally we trim the last route (the one with non-empty path)\n    return routesWithExtras.slice(0, i);\n  }\n\n  /**\n   * Returns the URL path for the given activated route in a string format.\n   * (ActivatedRouteSnapshot#url contains an array of `UrlSegment`s, not a string)\n   */\n  private getUrlPart(route: ActivatedRouteSnapshot): string {\n    return route.url.map((urlSegment) => urlSegment.path).join('/');\n  }\n\n  /**\n   * Returns the breadcrumb config placed in the route's `data` configuration.\n   */\n  protected getPageMetaConfig(\n    route: ActivatedRouteSnapshotWithPageMeta\n  ): RoutePageMetaConfig | undefined {\n    // Note: we use `route.routeConfig.data` (not `route.data`) to save us from\n    // an edge case bug. In Angular, by design the `data` of ActivatedRoute is inherited\n    // from the parent route, if only the child has an empty path ''.\n    // But in any case we don't want the page meta configs to be inherited, so we\n    // read data from the original `routeConfig` which is static.\n    //\n    // Note: we may inherit the parent's page meta resolver in case we don't define it,\n    // but we don't want to inherit parent's page meta config!\n    return route?.routeConfig?.data?.cxPageMeta;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PageMetaConfig {\n  pageMeta?: PageMetaResolversConfig;\n}\n\ndeclare module '../../../config/config-tokens' {\n  interface Config extends PageMetaConfig {}\n}\n\nexport interface PageMetaResolversConfig {\n  resolvers?: PageMetaResolverConfig[];\n\n  /**\n   * Specifies how the canonical url is created.\n   */\n  canonicalUrl?: CanonicalUrlOptions;\n\n  /**\n   * Enables resolvers in dev mode regardless of the CSR configuration. This\n   * flag will override the disabling in CSR, which can be useful during development\n   * and debugging.\n   */\n  enableInDevMode?: boolean;\n}\n\nexport interface PageMetaResolverConfig {\n  /**\n   * PageMeta property\n   */\n  property: string;\n\n  /**\n   * The resolver method that must be provided on the resolver class.\n   */\n  method: string;\n\n  /**\n   * Disables specific resolvers in CSR mode. Some of the resolvers are\n   * not needed in CSR app, as they're only used for crawlers who will\n   * be served from SSR rendered pages.\n   */\n  disabledInCsr?: boolean;\n}\n\nexport interface CanonicalUrlOptions {\n  /**\n   * Forces a trailing slash to avoid both https://www.myshop.com and https://www.myshop.com/.\n   */\n  forceTrailingSlash?: boolean;\n\n  /**\n   * Forces the use of `https://` in the canonical URL.\n   */\n  forceHttps?: boolean;\n\n  /**\n   * Forces the `www` subdomain, so that canonical URLs are always prefixed with `www.`.\n   *\n   * Please be aware that the logic will not detect whether your domain includes a subdomain.\n   */\n  forceWww?: boolean;\n\n  /**\n   * Removes query parameters from the URL to avoid page duplicates.\n   *\n   * This is useful in case page urls have various query parameters that are added by\n   * integrations (i.e. generated links from social platform).\n   *\n   * The query parameter can either be removed completely, or an array of query parameter keys\n   * can be provided.\n   */\n  removeQueryParams?: boolean | string[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { WindowRef } from '../../../window/window-ref';\nimport {\n  CanonicalUrlOptions,\n  PageMetaConfig,\n} from '../config/page-meta.config';\n\n/**\n * Service to add links to the page meta data, such canonical URLs.\n */\n@Injectable({ providedIn: 'root' })\nexport class PageLinkService {\n  constructor(\n    protected pageMetaConfig: PageMetaConfig,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Returns the canonical for the page.\n   *\n   * The canonical url is created by the help of the default `CanonicalUrlOptions` from\n   * the pageMeta options. The options can be further adjusted by the options argument.\n   */\n  getCanonicalUrl(options?: CanonicalUrlOptions, url?: string): string {\n    const config: CanonicalUrlOptions = {\n      ...this.pageMetaConfig?.pageMeta?.canonicalUrl,\n      ...options,\n    };\n    return this.buildCanonicalUrl(\n      url ?? this.winRef.location.href ?? '',\n      config\n    );\n  }\n\n  protected buildCanonicalUrl(\n    url: string,\n    options: CanonicalUrlOptions\n  ): string {\n    if (options.forceHttps) {\n      url = url.replace(/^http(?!s):/i, 'https:');\n    }\n\n    if (options.forceWww) {\n      // this will not allow for not adding wwww. in case of a subdomain\n      url = url.replace(/^(https?:\\/\\/)(?!www\\.)(.*)/i, '$1www.$2');\n    }\n\n    if (options.removeQueryParams) {\n      url = this.removeQueryParams(url, options);\n    }\n\n    if (options.forceTrailingSlash) {\n      url = url.replace(/^([^\\?]+[^\\/\\?]$)$/i, '$1/');\n    }\n\n    return url;\n  }\n\n  protected removeQueryParams(\n    url: string,\n    config: CanonicalUrlOptions\n  ): string {\n    const queryPos = url.indexOf('?');\n    if (queryPos > -1) {\n      const urlBeforeQueryParam = url.substr(0, queryPos);\n      const params = new URLSearchParams(url.substr(queryPos));\n\n      url = urlBeforeQueryParam;\n\n      if (Array.isArray(config.removeQueryParams)) {\n        config.removeQueryParams.forEach((param) => {\n          params.delete(param);\n        });\n        if (params.toString().length > 0) {\n          url = `${urlBeforeQueryParam}?${params.toString()}`;\n        }\n      }\n    }\n    return url;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { combineLatest, defer, Observable } from 'rxjs';\nimport { filter, map, shareReplay, startWith } from 'rxjs/operators';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { CmsService } from '../facade/cms.service';\nimport { BreadcrumbMeta, Page, PageRobotsMeta } from '../model/page.model';\nimport { CanonicalUrlOptions } from './config/page-meta.config';\nimport {\n  CanonicalPageResolver,\n  PageBreadcrumbResolver,\n  PageDescriptionResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from './page.resolvers';\nimport { PageLinkService } from './routing/page-link.service';\nimport { RoutingPageMetaResolver } from './routing/routing-page-meta.resolver';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BasePageMetaResolver\n  implements\n    PageTitleResolver,\n    PageDescriptionResolver,\n    PageBreadcrumbResolver,\n    PageRobotsResolver,\n    CanonicalPageResolver\n{\n  constructor(\n    protected cmsService: CmsService,\n    protected translation: TranslationService,\n    protected routingPageMetaResolver: RoutingPageMetaResolver,\n    protected router: Router,\n    protected pageLinkService: PageLinkService\n  ) {}\n\n  /**\n   * Helper to provide access to the current CMS page\n   */\n  protected page$: Observable<Page> = defer(() =>\n    this.cmsService.getCurrentPage()\n  ).pipe(filter((p) => Boolean(p)));\n\n  protected title$: Observable<string | undefined> = this.page$.pipe(\n    map((p) => p.title)\n  );\n\n  protected description$: Observable<string | undefined> = this.page$.pipe(\n    map((p) => p.description)\n  );\n\n  protected robots$: Observable<PageRobotsMeta[]> = this.page$.pipe(\n    map((page) => page.robots || [])\n  );\n\n  /**\n   * Breadcrumb for the home page.\n   */\n  protected homeBreadcrumb$: Observable<BreadcrumbMeta[]> = this.translation\n    .translate('common.home')\n    .pipe(map((label) => [{ label: label, link: '/' }] as BreadcrumbMeta[]));\n\n  /**\n   * All the resolved breadcrumbs (including those from Angular child routes).\n   */\n  protected breadcrumb$: Observable<BreadcrumbMeta[]> = combineLatest([\n    this.homeBreadcrumb$,\n    defer(() => this.routingPageMetaResolver?.resolveBreadcrumbs()),\n  ]).pipe(\n    map((breadcrumbs) => breadcrumbs.flat()),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  resolveTitle(): Observable<string | undefined> {\n    return this.title$;\n  }\n\n  resolveDescription(): Observable<string | undefined> {\n    return this.description$;\n  }\n\n  /**\n   * Resolves a single breadcrumb item to the home page for each `ContentPage`.\n   * The home page label is resolved from the translation service.\n   */\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[] | undefined> {\n    return this.breadcrumb$;\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.robots$;\n  }\n\n  resolveCanonicalUrl(options?: CanonicalUrlOptions): Observable<string> {\n    return this.router.events.pipe(\n      filter((ev) => ev instanceof NavigationEnd),\n      startWith(null),\n      map(() => this.pageLinkService.getCanonicalUrl(options))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PageType } from '../../model/cms.model';\nimport { BreadcrumbMeta, PageRobotsMeta } from '../model/page.model';\nimport { BasePageMetaResolver } from './base-page-meta.resolver';\nimport { PageMetaResolver } from './page-meta.resolver';\nimport {\n  CanonicalPageResolver,\n  PageBreadcrumbResolver,\n  PageDescriptionResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from './page.resolvers';\n\n/**\n * Resolves the page data for all Content Pages based on the `PageType.CONTENT_PAGE`.\n * More specific resolvers for content pages can be implemented by making them more\n * specific, for example by using the page template (see `CartPageMetaResolver`).\n *\n * The page title, description, breadcrumbs and robot information are resolved from the\n * content page data. The canonical URL is resolved from the URL.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContentPageMetaResolver\n  extends PageMetaResolver\n  implements\n    PageTitleResolver,\n    PageDescriptionResolver,\n    PageBreadcrumbResolver,\n    PageRobotsResolver,\n    CanonicalPageResolver\n{\n  constructor(protected basePageMetaResolver: BasePageMetaResolver) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n  }\n\n  resolveTitle(): Observable<string | undefined> {\n    return this.basePageMetaResolver.resolveTitle();\n  }\n\n  resolveDescription(): Observable<string | undefined> {\n    return this.basePageMetaResolver.resolveDescription();\n  }\n\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[] | undefined> {\n    return this.basePageMetaResolver.resolveBreadcrumbs();\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver.resolveRobots();\n  }\n\n  resolveCanonicalUrl(): Observable<string | undefined> {\n    return this.basePageMetaResolver.resolveCanonicalUrl();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '../../config/config-providers';\nimport { defaultPageMetaConfig } from './config/default-page-meta.config';\nimport { ContentPageMetaResolver } from './content-page-meta.resolver';\nimport { PageMetaResolver } from './page-meta.resolver';\n\n@NgModule({\n  providers: [\n    {\n      provide: PageMetaResolver,\n      useExisting: ContentPageMetaResolver,\n      multi: true,\n    },\n  ],\n})\nexport class PageMetaModule {\n  static forRoot(): ModuleWithProviders<PageMetaModule> {\n    return {\n      ngModule: PageMetaModule,\n      providers: [provideDefaultConfig(defaultPageMetaConfig)],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable, OperatorFunction, SchedulerLike } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nexport function bufferDebounceTime<T>(\n  time: number = 0,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]> {\n  return (source: Observable<T>) => {\n    let bufferedValues: T[] = [];\n\n    return source.pipe(\n      tap((value) => bufferedValues.push(value)),\n      debounceTime(time, scheduler),\n      map(() => bufferedValues),\n      tap(() => (bufferedValues = []))\n    );\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable, OperatorFunction } from 'rxjs';\nimport { startWith, switchMapTo } from 'rxjs/operators';\n\n/**\n *\n * Withdraw from the source observable when notifier emits a value\n *\n * Withdraw will result in resubscribing to the source observable\n * Operator is useful to kill ongoing emission transformation on notifier emission\n *\n * @param notifier\n */\nexport function withdrawOn<T>(\n  notifier: Observable<any>\n): OperatorFunction<T, T> {\n  return (source: Observable<T>) =>\n    notifier.pipe(startWith(undefined), switchMapTo(source));\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\nimport { CmsConfig } from './cms-config';\n\n/**\n * The `CmsPageConfig` is used to build pages by configuration.\n * The interfaces are designed to have a clean configuration for\n * static CMS structure. Ordinary attributes that are not\n * required for configurable pages have been left out and\n * will not be serialized in the adapter logic.\n */\nexport interface CmsPageConfig {\n  /**\n   * When the `ignoreBackend` is set to true, the CMS backend\n   * will not be consumed. This saves network latency and is\n   * useful for commodity commerce pages.\n   * */\n  ignoreBackend?: boolean;\n\n  pageId?: string;\n\n  type?: string;\n\n  /**\n   * The page title is typically used to display the page heading\n   * as well as for the page title tag. The latter is used for browser\n   * navigation as well as SEO and social share platforms.\n   */\n  title?: string;\n\n  /**\n   * the template is used to bind to the layout\n   * configuration and css layout class\n   */\n  template?: string;\n\n  /**\n   * The page slots represent various sections on the page that\n   * can contain components.\n   */\n  slots: { [key: string]: CmsPageSlotConfig };\n}\n\n/**\n * The `CmsPageSlotsConfig` (plural) holds `CmsPageSlotConfig` objects.\n */\nexport interface CmsPageSlotsConfig {\n  [key: string]: CmsPageSlotConfig;\n}\n\n/**\n * The `CmsPageSlotConfig` is a simplified configuration model\n * that can be used to configure slots in static configuration,\n * rather than loading from a backend.\n */\nexport interface CmsPageSlotConfig {\n  componentIds?: string[];\n  properties?: any;\n}\n\n/**\n * The `CmsStructureConfig` is used to build pages in Spartacus by configuration\n * instead of using a backend CMS system. The configuration can be used to build\n * complete pages or parts of a page. The `CmsStructureConfig` is optimized to\n * only require the necessary properties. Adapter logic is applied to serialize\n * the `CmsStructureConfig` into the required UI model.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CmsStructureConfig extends CmsConfig {\n  cmsStructure?: {\n    components?: { [key: string]: ContentSlotComponentData | any };\n    pages?: CmsPageConfig[];\n    slots?: CmsPageSlotsConfig;\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends CmsStructureConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport {\n  CmsPageConfig,\n  CmsPageSlotsConfig,\n  CmsStructureConfig,\n} from '../config/cms-structure.config';\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\nimport { CmsStructureModel } from '../model/page.model';\n\n/**\n * Service that provides access to CMS structure from a static\n * configuration or configuration file. This class uses static\n * configuration is designed in async fashion so that configurations\n * can be loaded from a file or stream.\n *\n * The intent of the `CmsStructureConfigService` however is to provide\n * fast loading pages and default cms structure for commodity commerce.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class CmsStructureConfigService {\n  constructor(protected cmsDataConfig: CmsStructureConfig) {}\n\n  /**\n   * Merge the cms structure to the pageStructure. The page structure\n   * can either hold complete page structures or global structures that\n   * might apply to all pages (such has header coponents).\n   */\n  mergePageStructure(\n    pageId: string,\n    pageStructure: CmsStructureModel\n  ): Observable<CmsStructureModel> {\n    return this.mergePage(pageId, pageStructure).pipe(\n      switchMap((page) => this.mergeSlots(page))\n    );\n  }\n\n  /**\n   *\n   * Returns boolean observable to indicate whether the page should not be\n   * loaded from the backend. This is useful for pages which are comoditized\n   * and follow best practice.\n   *\n   * By default, configurable pages are driven by static configuration,\n   * in order to allow for fast loading pages (preventing network delays).\n   */\n  shouldIgnoreBackend(pageId: string): Observable<boolean> {\n    return this.getPageFromConfig(pageId).pipe(\n      map((page) => !!page && !!page.ignoreBackend)\n    );\n  }\n\n  /**\n   * returns an Observable component data from the static configuration.\n   */\n  getComponentFromConfig(\n    componentId: string\n  ): Observable<ContentSlotComponentData | any> {\n    return of(this.getComponentById(componentId));\n  }\n\n  /**\n   * returns an Observable components data from the static configuration.\n   */\n  getComponentsFromConfig(\n    ids: string[]\n  ): Observable<ContentSlotComponentData[]> {\n    return of(ids.map((id) => this.getComponentById(id)));\n  }\n\n  /**\n   * returns an observable with the `PageConfig`.\n   */\n  protected getPageFromConfig(\n    pageId: string\n  ): Observable<CmsPageConfig | undefined> {\n    return of(\n      this.cmsDataConfig.cmsStructure && this.cmsDataConfig.cmsStructure.pages\n        ? this.cmsDataConfig.cmsStructure.pages.find((p) => p.pageId === pageId)\n        : undefined\n    );\n  }\n\n  /**\n   * Merge page data from the configuration into the given structure, if any.\n   * If the given page structure is empty, a page is created and the page slots are\n   * are merged into the page.\n   */\n  protected mergePage(\n    pageId: string,\n    pageStructure: CmsStructureModel\n  ): Observable<CmsStructureModel> {\n    return this.getPageFromConfig(pageId).pipe(\n      switchMap((page) => {\n        if (page) {\n          // serialize page data\n          if (!pageStructure.page) {\n            pageStructure.page = {\n              ...page,\n            };\n            pageStructure.page.slots = {};\n          }\n          if (!pageStructure.page.slots) {\n            pageStructure.page.slots = {};\n          }\n          return this.mergeSlots(pageStructure, page.slots);\n        } else {\n          return of(pageStructure);\n        }\n      })\n    );\n  }\n\n  /**\n   * Adds any pre-configured slots for pages that do not use them.\n   * If pages have a slot for the given position, the configiuration\n   * is ingored. Even if the slot does not have inner structure (such as\n   * components), so that the cms structure is able to override the (static)\n   * configuration.\n   */\n  protected mergeSlots(\n    pageStructure: CmsStructureModel,\n    slots?: CmsPageSlotsConfig\n  ): Observable<CmsStructureModel> {\n    // if no slots have been given, we use the global configured slots\n    if (!slots && this.cmsDataConfig.cmsStructure?.slots) {\n      slots = this.cmsDataConfig.cmsStructure.slots;\n    }\n\n    if (!slots) {\n      return of(pageStructure);\n    }\n\n    for (const position of Object.keys(slots)) {\n      if (\n        pageStructure.page?.slots &&\n        !Object.keys(pageStructure.page.slots).includes(position)\n      ) {\n        // the global slot isn't yet part of the page structure\n        pageStructure.page.slots[position] = {};\n\n        for (const component of this.getComponentsByPosition(slots, position)) {\n          pageStructure.page.slots[position].components =\n            pageStructure.page.slots[position].components ?? [];\n\n          pageStructure.page.slots[position].components?.push({\n            uid: component.uid,\n            flexType: component.flexType,\n            typeCode: component.typeCode,\n          });\n\n          pageStructure.components = pageStructure.components ?? [];\n\n          pageStructure.components.push(component);\n        }\n      }\n    }\n\n    return of(pageStructure);\n  }\n\n  protected getComponentsByPosition(\n    slots: CmsPageSlotsConfig,\n    position: string\n  ): ContentSlotComponentData[] {\n    const components = [];\n    if (slots[position] && slots[position].componentIds) {\n      for (const componentId of slots[position].componentIds ?? []) {\n        if (\n          this.cmsDataConfig.cmsStructure &&\n          this.cmsDataConfig.cmsStructure.components\n        ) {\n          const component =\n            this.cmsDataConfig.cmsStructure.components[componentId];\n          if (component) {\n            components.push({ uid: componentId, ...component });\n          }\n        }\n      }\n    }\n    return components;\n  }\n\n  protected getComponentById(componentId: string): ContentSlotComponentData {\n    return this.cmsDataConfig.cmsStructure &&\n      this.cmsDataConfig.cmsStructure.components\n      ? this.cmsDataConfig.cmsStructure.components[componentId]\n      : undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of, zip } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing/models/page-context.model';\nimport { CmsConfig } from '../../config/cms-config';\nimport { CmsStructureConfigService } from '../../services/cms-structure-config.service';\nimport { CmsComponentAdapter } from './cms-component.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsComponentConnector {\n  constructor(\n    protected cmsStructureConfigService: CmsStructureConfigService,\n    protected cmsComponentAdapter: CmsComponentAdapter,\n    protected config: CmsConfig\n  ) {}\n\n  get<T extends CmsComponent>(\n    id: string,\n    pageContext: PageContext\n  ): Observable<T> {\n    return this.cmsStructureConfigService\n      .getComponentFromConfig(id)\n      .pipe(\n        switchMap((configuredComponent) =>\n          configuredComponent\n            ? of(configuredComponent)\n            : this.cmsComponentAdapter.load(id, pageContext)\n        )\n      );\n  }\n\n  getList(ids: string[], pageContext: PageContext): Observable<CmsComponent[]> {\n    return this.cmsStructureConfigService.getComponentsFromConfig(ids).pipe(\n      switchMap((configuredComponents) => {\n        // check if we have some components that are not loaded from configuration\n        const missingIds = configuredComponents.reduce(\n          (acc: string[], component, index) => {\n            if (component === undefined) {\n              acc.push(ids[index]);\n            }\n            return acc;\n          },\n          []\n        );\n\n        if (missingIds.length > 0) {\n          const pageSize =\n            this.config.componentsLoading?.pageSize || missingIds.length;\n          const totalPages = Math.ceil(missingIds.length / pageSize);\n          const cmsComponents: Observable<CmsComponent[]>[] = [];\n\n          let currentPage = 0;\n          while (currentPage < totalPages) {\n            cmsComponents.push(\n              this.cmsComponentAdapter.findComponentsByIds(\n                missingIds.slice(\n                  currentPage * pageSize,\n                  (currentPage + 1) * pageSize\n                ),\n                pageContext\n              )\n            );\n            currentPage++;\n          }\n          return zip(...cmsComponents).pipe(\n            map((loadedComponents) =>\n              [...configuredComponents.filter(Boolean)].concat(\n                ...loadedComponents\n              )\n            )\n          );\n        } else {\n          return of(configuredComponents);\n        }\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { from, Observable } from 'rxjs';\nimport { catchError, groupBy, mergeMap, switchMap } from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing/index';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { bufferDebounceTime } from '../../../util/rxjs/buffer-debounce-time';\nimport { withdrawOn } from '../../../util/rxjs/withdraw-on';\nimport { CmsComponentConnector } from '../../connectors/component/cms-component.connector';\nimport { serializePageContext } from '../../utils/cms-utils';\nimport { CmsActions } from '../actions/index';\n\n@Injectable()\nexport class ComponentsEffects {\n  constructor(\n    private actions$: Actions,\n    private cmsComponentConnector: CmsComponentConnector\n  ) {}\n\n  private contextChange$: Observable<Action> = this.actions$.pipe(\n    ofType(\n      SiteContextActions.LANGUAGE_CHANGE,\n      AuthActions.LOGOUT,\n      AuthActions.LOGIN\n    )\n  );\n\n  loadComponent$ = createEffect(\n    () =>\n      ({ scheduler, debounce = 0 } = {}): Observable<\n        | CmsActions.LoadCmsComponentSuccess<CmsComponent>\n        | CmsActions.LoadCmsComponentFail\n      > =>\n        this.actions$.pipe(\n          ofType<CmsActions.LoadCmsComponent>(CmsActions.LOAD_CMS_COMPONENT),\n          groupBy((actions) =>\n            serializePageContext(actions.payload.pageContext)\n          ),\n          mergeMap((actionGroup) =>\n            actionGroup.pipe(\n              bufferDebounceTime(debounce, scheduler),\n              mergeMap((actions) =>\n                this.loadComponentsEffect(\n                  actions.map((action) => action.payload.uid),\n                  actions[0].payload.pageContext ?? { id: '' }\n                )\n              )\n            )\n          ),\n          withdrawOn(this.contextChange$)\n        )\n  );\n\n  private loadComponentsEffect(\n    componentUids: string[],\n    pageContext: PageContext\n  ): Observable<\n    | CmsActions.LoadCmsComponentSuccess<CmsComponent>\n    | CmsActions.LoadCmsComponentFail\n  > {\n    return this.cmsComponentConnector.getList(componentUids, pageContext).pipe(\n      switchMap((components) => {\n        const actions: (\n          | CmsActions.LoadCmsComponentSuccess<CmsComponent>\n          | CmsActions.LoadCmsComponentFail\n        )[] = [];\n        const uidsLeft = new Set<string>(componentUids);\n        for (const component of components) {\n          actions.push(\n            new CmsActions.LoadCmsComponentSuccess({\n              component,\n              uid: component.uid,\n              pageContext,\n            })\n          );\n          uidsLeft.delete(component.uid ?? '');\n        }\n        // we have to emit LoadCmsComponentFail for all component's uids that\n        // are missing from the response\n        uidsLeft.forEach((uid) => {\n          actions.push(\n            new CmsActions.LoadCmsComponentFail({\n              uid,\n              pageContext,\n            })\n          );\n        });\n        return from(actions);\n      }),\n      catchError((error) =>\n        from(\n          componentUids.map(\n            (uid) =>\n              new CmsActions.LoadCmsComponentFail({\n                uid,\n                error: normalizeHttpError(error),\n                pageContext,\n              })\n          )\n        )\n      )\n    );\n  }\n}\n","/*\n * Copyright (c) 2010-2019 Google LLC. http://angular.io/license\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst QUESTION_MARK = '[^/]';\nconst WILD_SINGLE = '[^/]*';\nconst WILD_OPEN = '(?:.+\\\\/)?';\nconst TO_ESCAPE_BASE = [\n  { replace: /\\./g, with: '\\\\.' },\n  { replace: /\\+/g, with: '\\\\+' },\n  { replace: /\\*/g, with: WILD_SINGLE },\n];\nconst TO_ESCAPE_WILDCARD_QM = [\n  ...TO_ESCAPE_BASE,\n  { replace: /\\?/g, with: QUESTION_MARK },\n];\nconst TO_ESCAPE_LITERAL_QM = [\n  ...TO_ESCAPE_BASE,\n  { replace: /\\?/g, with: '\\\\?' },\n];\n\n/**\n * Converts the glob-like pattern into regex string.\n *\n * Patterns use a limited glob format:\n * `**` matches 0 or more path segments\n * `*` matches 0 or more characters excluding `/`\n * `?` matches exactly one character excluding `/` (but when @param literalQuestionMark is true, `?` is treated as normal character)\n * The `!` prefix marks the pattern as being negative, meaning that only URLs that don't match the pattern will be included\n *\n * @param glob glob-like pattern\n * @param literalQuestionMark when true, it tells that `?` is treated as a normal character\n */\nexport function globToRegex(glob: string, literalQuestionMark = false): string {\n  const toEscape = literalQuestionMark\n    ? TO_ESCAPE_LITERAL_QM\n    : TO_ESCAPE_WILDCARD_QM;\n  const segments = glob.split('/').reverse();\n  let regex = '';\n  while (segments.length > 0) {\n    const segment = segments.pop();\n    if (segment === '**') {\n      if (segments.length > 0) {\n        regex += WILD_OPEN;\n      } else {\n        regex += '.*';\n      }\n    } else {\n      const processed = toEscape.reduce(\n        (seg, escape) => seg?.replace(escape.replace, escape.with),\n        segment\n      );\n      regex += processed;\n      if (segments.length > 0) {\n        regex += '\\\\/';\n      }\n    }\n  }\n  return regex;\n}\n\n/**\n * For given list of glob-like patterns, returns a matcher function.\n *\n * The matcher returns true for given URL only when ANY of the positive patterns is matched and NONE of the negative ones.\n */\nexport function getGlobMatcher(patterns: string[]): (url: string) => boolean {\n  const processedPatterns: {\n    positive: boolean;\n    regex: RegExp;\n  }[] = processGlobPatterns(patterns).map(({ positive, regex }) => ({\n    positive,\n    regex: new RegExp(regex),\n  }));\n\n  const includePatterns = processedPatterns.filter((spec) => spec.positive);\n  const excludePatterns = processedPatterns.filter((spec) => !spec.positive);\n\n  return (url: string) =>\n    includePatterns.some((pattern) => pattern.regex.test(url)) &&\n    !excludePatterns.some((pattern) => pattern.regex.test(url));\n}\n\n/**\n * Converts list of glob-like patterns into list of RegExps with information whether the glob pattern is positive or negative\n */\nexport function processGlobPatterns(\n  urls: string[]\n): { positive: boolean; regex: string }[] {\n  return urls.map((url) => {\n    const positive = !url.startsWith('!');\n    url = positive ? url : url.substr(1);\n    return { positive, regex: `^${globToRegex(url)}$` };\n  });\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { processGlobPatterns } from './glob-utils';\n\n@Injectable({ providedIn: 'root' })\nexport class GlobService {\n  /**\n   * For given list of glob-like patterns, returns a validator function.\n   *\n   * The validator returns true for given URL only when ANY of the positive patterns is matched and NONE of the negative ones.\n   */\n  getValidator(patterns: string[]): (url: string) => boolean {\n    const processedPatterns: {\n      positive: boolean;\n      regex: RegExp;\n    }[] = processGlobPatterns(patterns).map(({ positive, regex }) => ({\n      positive,\n      regex: new RegExp(regex),\n    }));\n\n    const includePatterns = processedPatterns.filter((spec) => spec.positive);\n    const excludePatterns = processedPatterns.filter((spec) => !spec.positive);\n\n    return (url: string) =>\n      includePatterns.some((pattern) => pattern.regex.test(url)) &&\n      !excludePatterns.some((pattern) => pattern.regex.test(url));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport {\n  Route,\n  UrlMatcher,\n  UrlMatchResult,\n  UrlSegment,\n  UrlSegmentGroup,\n} from '@angular/router';\nimport { GlobService } from '../../util/glob.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UrlMatcherService {\n  constructor(protected globService: GlobService) {}\n\n  /**\n   * Returns a matcher that is always fails\n   */\n  getFalsy(): UrlMatcher {\n    return function falsyUrlMatcher(): null {\n      return null;\n    };\n  }\n\n  /**\n   * Returns a matcher for given list of paths\n   */\n  getFromPaths(paths: string[]): UrlMatcher {\n    const matchers = paths.map((path) => this.getFromPath(path));\n    const matcher = this.getCombined(matchers);\n    if (isDevMode()) {\n      (<any>matcher)['_paths'] = paths; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n\n  /**\n   * Returns a matcher that combines the given matchers\n   * */\n  getCombined(matchers: UrlMatcher[]): UrlMatcher {\n    const matcher = function combinedUrlMatchers(\n      segments: UrlSegment[],\n      segmentGroup: UrlSegmentGroup,\n      route: Route\n    ): UrlMatchResult | null {\n      for (let i = 0; i < matchers.length; i++) {\n        const result = matchers[i](segments, segmentGroup, route);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    };\n    if (isDevMode()) {\n      matcher['_matchers'] = matchers; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n\n  /**\n   * Similar to Angular's defaultUrlMatcher. Differences:\n   * - the `path` comes from function's argument, not from `route.path`\n   * - the empty path `''` is handled here, but in Angular is handled one level higher in the match() function\n   */\n  protected getFromPath(path: string = ''): UrlMatcher {\n    const matcher = function pathUrlMatcher(\n      segments: UrlSegment[],\n      segmentGroup: UrlSegmentGroup,\n      route: Route\n    ): UrlMatchResult | null {\n      /**\n       * @license\n       * The MIT License\n       * Copyright (c) 2010-2019 Google LLC. http://angular.io/license\n       *\n       * See:\n       * - https://github.com/angular/angular/blob/6f5f481fdae03f1d8db36284b64c7b82d9519d85/packages/router/src/shared.ts#L121\n       */\n\n      // use function's argument, not the `route.path`\n      if (path === '') {\n        return useFunctionArgument(segments, segmentGroup, route);\n      }\n\n      const parts = path.split('/'); // use function's argument, not the `route.path`\n\n      if (\n        or(\n          // The actual URL is shorter than the config, no match\n          parts.length > segments.length,\n          // The config is longer than the actual URL but we are looking for a full match, return null\n          and(\n            route.pathMatch === 'full',\n            or(segmentGroup.hasChildren(), parts.length < segments.length)\n          )\n        )\n      ) {\n        return null;\n      }\n\n      const posParams: { [key: string]: UrlSegment } = {};\n\n      // Check each config part against the actual URL\n      for (let index = 0; index < parts.length; index++) {\n        const part = parts[index];\n        const segment = segments[index];\n        const isParameter = part.startsWith(':');\n        if (isParameter) {\n          posParams[part.substring(1)] = segment;\n        } else if (part !== segment.path) {\n          // The actual URL part does not match the config, no match\n          return null;\n        }\n      }\n\n      return { consumed: segments.slice(0, parts.length), posParams };\n    };\n    if (isDevMode()) {\n      matcher['_path'] = path; // property added for easier debugging of routes\n    }\n    return matcher;\n\n    function useFunctionArgument(\n      segments: UrlSegment[],\n      segmentGroup: UrlSegmentGroup,\n      route: Route\n    ) {\n      if (\n        and(\n          route.pathMatch === 'full',\n          or(segmentGroup.hasChildren(), segments.length > 0)\n        )\n      ) {\n        return null;\n      }\n      return { consumed: [], posParams: {} };\n    }\n\n    /**\n     * Logical function to reduce sonar complexity score as matcher scope is limited to inner function.\n     */\n    function or(a: boolean, b: boolean) {\n      return a || b;\n    }\n\n    /**\n     * Logical function to reduce sonar complexity score as matcher scope is limited to inner function.\n     */\n    function and(a: boolean, b: boolean) {\n      return a && b;\n    }\n  }\n\n  /**\n   * Returns URL matcher that accepts almost everything (like `**` route), but not paths accepted by the given matcher\n   */\n  getOpposite(originalMatcher: UrlMatcher): UrlMatcher {\n    const matcher = function oppositeUrlMatcher(\n      segments: UrlSegment[],\n      group: UrlSegmentGroup,\n      route: Route\n    ) {\n      return originalMatcher(segments, group, route)\n        ? null\n        : { consumed: segments, posParams: {} };\n    };\n    if (isDevMode()) {\n      matcher['_originalMatcher'] = originalMatcher; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n\n  /**\n   * Returns URL matcher for the given list of glob-like patterns. Each pattern must start with `/` or `!/`.\n   */\n  getFromGlob(globPatterns: string[]): UrlMatcher {\n    const globValidator = this.globService.getValidator(globPatterns);\n\n    const matcher = function globUrlMatcher(\n      segments: UrlSegment[]\n    ): UrlMatchResult | null {\n      const fullPath = `/${segments.map((s) => s.path).join('/')}`;\n\n      return globValidator(fullPath)\n        ? { consumed: segments, posParams: {} }\n        : null;\n    };\n    if (isDevMode()) {\n      matcher['_globPatterns'] = globPatterns; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, InjectionToken, Injector, isDevMode } from '@angular/core';\nimport { Route, Router, Routes, UrlMatcher } from '@angular/router';\nimport { UrlMatcherService } from '../services/url-matcher.service';\nimport { UrlMatcherFactory } from '../url-matcher/url-matcher-factory';\nimport { RouteConfig } from './routes-config';\nimport { RoutingConfigService } from './routing-config.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurableRoutesService {\n  constructor(\n    protected injector: Injector,\n    protected routingConfigService: RoutingConfigService,\n    protected urlMatcherService: UrlMatcherService\n  ) {}\n\n  protected initCalled = false; // guard not to call init() more than once\n\n  /**\n   * Enhances existing Angular routes using the routing config of Spartacus.\n   * Can be called only once.\n   */\n  init(): void {\n    if (!this.initCalled) {\n      this.initCalled = true;\n\n      this.configure();\n    }\n  }\n\n  /**\n   * Enhances existing Angular routes using the routing config of Spartacus.\n   */\n  protected configure(): void {\n    // Router could not be injected in constructor due to cyclic dependency with APP_INITIALIZER:\n    const router = this.injector.get(Router);\n    router.resetConfig(this.configureRoutes(router.config));\n  }\n\n  /**\n   * Sets the property `path` or `matcher` for the given routes, based on the Spartacus' routing configuration.\n   *\n   * @param routes list of Angular `Route` objects\n   */\n  protected configureRoutes(routes: Routes): Routes {\n    return routes.map((route) => {\n      const configuredRoute = this.configureRoute(route);\n\n      if (route.children && route.children.length) {\n        configuredRoute.children = this.configureRoutes(route.children);\n      }\n      return configuredRoute;\n    });\n  }\n\n  /**\n   * Sets the property `path` or `matcher` of the `Route`, based on the Spartacus' routing configuration.\n   * Uses the property `data.cxRoute` to determine the name of the route.\n   * It's the same name used as a key in the routing configuration: `routing.routes[ROUTE NAME]`.\n   *\n   * @param route Angular `Route` object\n   */\n  protected configureRoute(route: Route): Route {\n    const routeName = this.getRouteName(route);\n    if (routeName) {\n      const routeConfig = this.routingConfigService.getRouteConfig(routeName);\n      this.validateRouteConfig(routeConfig, routeName, route);\n\n      if (routeConfig?.disabled) {\n        delete route.path;\n        return {\n          ...route,\n          matcher: this.urlMatcherService.getFalsy(),\n        };\n      } else if (routeConfig?.matchers) {\n        delete route.path;\n        return {\n          ...route,\n          matcher: this.resolveUrlMatchers(route, routeConfig?.matchers),\n        };\n      } else if (routeConfig?.paths?.length === 1) {\n        delete route.matcher;\n        return { ...route, path: routeConfig?.paths[0] };\n      } else {\n        delete route.path;\n        return {\n          ...route,\n          matcher: this.urlMatcherService.getFromPaths(\n            routeConfig?.paths || []\n          ),\n        };\n      }\n    }\n    return route; // if route doesn't have a name, just pass the original route\n  }\n\n  /**\n   * Creates a single `UrlMatcher` based on given matchers and factories of matchers.\n   *\n   * @param route Route object\n   * @param matchersOrFactories `UrlMatcher`s or injection tokens with a factory functions\n   *  that create UrlMatchers based on the given route.\n   */\n  protected resolveUrlMatchers(\n    route: Route,\n    matchersOrFactories: RouteConfig['matchers']\n  ): UrlMatcher {\n    const matchers: UrlMatcher[] =\n      matchersOrFactories?.map((matcherOrFactory) => {\n        return typeof matcherOrFactory === 'function'\n          ? matcherOrFactory // matcher\n          : this.resolveUrlMatcherFactory(route, matcherOrFactory); // factory injection token\n      }) ?? [];\n    return this.urlMatcherService.getCombined(matchers);\n  }\n\n  /**\n   * Creates an `UrlMatcher` based on the given route, using the factory function coming from the given injection token.\n   *\n   * @param route Route object\n   * @param factoryToken injection token with a factory function that will create an UrlMatcher using given route\n   */\n  protected resolveUrlMatcherFactory(\n    route: Route,\n    factoryToken: InjectionToken<UrlMatcherFactory>\n  ): UrlMatcher {\n    const factory = this.injector.get(factoryToken);\n    return factory(route);\n  }\n\n  /**\n   * Returns the name of the Route stored in its property `data.cxRoute`\n   * @param route\n   */\n  protected getRouteName(route: Route): string {\n    return route.data && route.data.cxRoute;\n  }\n\n  protected validateRouteConfig(\n    routeConfig: RouteConfig | null | undefined,\n    routeName: string,\n    route: Route\n  ) {\n    if (isDevMode()) {\n      // - null value of routeConfig or routeConfig.paths means explicit switching off the route - it's valid config\n      // - routeConfig with defined `matchers` is valid, even if `paths` are undefined\n      if (\n        routeConfig === null ||\n        routeConfig?.paths === null ||\n        routeConfig?.matchers\n      ) {\n        return;\n      }\n\n      // undefined value of routeConfig or routeConfig.paths is a misconfiguration\n      if (!routeConfig?.paths) {\n        this.warn(\n          `Could not configure the named route '${routeName}'`,\n          route,\n          `due to undefined config or undefined 'paths' property for this route`\n        );\n        return;\n      }\n    }\n  }\n\n  private warn(...args: any[]) {\n    if (isDevMode()) {\n      console.warn(...args);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { UrlMatcher } from '@angular/router';\nimport { UrlMatcherFactory } from '../url-matcher';\n\nexport interface RoutesConfig {\n  [routeName: string]: RouteConfig; // allows User's custom pages\n}\n\nexport interface RouteConfig {\n  /**\n   * List of path aliases used to build the semantic links.\n   * It's used also to match the URLs, unless the config property `matchers` is given for the same route.\n   *\n   * See https://angular.io/api/router/Route#path\n   */\n  paths?: string[];\n\n  /**\n   * Array of Angular `UrlMatcher`s and injection tokens of Spartacus `UrlMatcherFactory`.\n   * All the url matchers (static and resolved from factories) will be used to match the route.\n   * When not given (undefined or null), the configured `paths` will be used to match the the route.\n   *\n   * See https://angular.io/api/router/Route#matcher\n   */\n  matchers?: (UrlMatcher | InjectionToken<UrlMatcherFactory>)[];\n\n  /**\n   * Maps names of route params with params used to build the semantic link.\n   */\n  paramsMapping?: ParamsMapping;\n\n  /**\n   * Disables the url matcher for the route. But still allows for generation of semantic links.\n   */\n  disabled?: boolean;\n\n  /**\n   * When false, the route is public for unauthorized users even when the global flag `routing.protected` is true.\n   * Other values (true, undefined) are ignored.\n   */\n  protected?: boolean;\n\n  /**\n   * When true, the page is considered as part of the user journey related to authorization (for example:\n   * login, register, forgot password, logout, etc.)\n   *\n   * When user is redirected back after successful login, he won't land on any page marked as the auth flow, but on other\n   * previously accessed page.\n   */\n  authFlow?: boolean;\n}\n\nexport interface ParamsMapping {\n  [paramName: string]: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { SemanticPathService } from './semantic-path.service';\nimport { Product } from '../../../model/product.model';\n@Pipe({\n  name: 'cxProductUrl',\n})\nexport class ProductURLPipe implements PipeTransform {\n  constructor(private semanticPath: SemanticPathService) {}\n  transform(product: Product) {\n    return this.semanticPath.transform({ cxRoute: 'product', params: product });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface UrlCommandRoute {\n  cxRoute?: string;\n  params?: { [param: string]: any };\n}\n\nexport type UrlCommand = UrlCommandRoute | any;\n\nexport type UrlCommands = UrlCommand | UrlCommand[];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { SemanticPathService } from './semantic-path.service';\nimport { UrlCommands } from './url-command';\n\n@Pipe({\n  name: 'cxUrl',\n})\nexport class UrlPipe implements PipeTransform {\n  constructor(private urlService: SemanticPathService) {}\n\n  transform(commands: UrlCommands): any[] {\n    return this.urlService.transform(commands);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlPipe } from './url.pipe';\nimport { ProductURLPipe } from './product-url.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [UrlPipe, ProductURLPipe],\n  exports: [UrlPipe, ProductURLPipe],\n})\nexport class UrlModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-url.pipe';\nexport * from './semantic-path.service';\nexport * from './url-command';\nexport * from './url-parsing.service';\nexport * from './url.module';\nexport * from './url.pipe';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/routing-config';\nexport * from './configurable-routes.service';\nexport * from './routes-config';\nexport * from './routing-config.service';\nexport * from './url-translation/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\ninterface ExternalRoutesConfigDefinition {\n  internal?: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ExternalRoutesConfig {\n  routing?: ExternalRoutesConfigDefinition;\n}\n\ndeclare module '../configurable-routes/config/routing-config' {\n  interface RoutingConfigDefinition extends ExternalRoutesConfigDefinition {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { WindowRef } from '../../window/window-ref';\n\n@Injectable({ providedIn: 'root' })\nexport class ExternalRoutesGuard implements CanActivate {\n  constructor(\n    protected winRef: WindowRef,\n    @Inject(PLATFORM_ID) protected platformId: Object\n  ) {}\n\n  /**\n   * Redirects to different storefront system for anticipated URL\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (isPlatformBrowser(this.platformId)) {\n      this.redirect(route, state);\n    }\n    return false;\n  }\n\n  /**\n   * Redirects to anticipated URL using full page reload, not Angular routing\n   */\n  protected redirect(_: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const window = this.winRef.nativeWindow;\n\n    if (window && window.location) {\n      window.location.href = state.url;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ExternalRoutesService } from './external-routes.service';\n\nexport function addExternalRoutesFactory(\n  service: ExternalRoutesService\n): () => void {\n  const result = () => {\n    service.addRoutes();\n  };\n  return result;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport { Router, Routes, UrlMatcher } from '@angular/router';\nimport { UrlMatcherService } from '../services/url-matcher.service';\nimport { ExternalRoutesConfig } from './external-routes-config';\nimport { ExternalRoutesGuard } from './external-routes.guard';\n\n/**\n * Service that helps redirecting to different storefront systems for configured URLs\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExternalRoutesService {\n  constructor(\n    protected config: ExternalRoutesConfig,\n    protected urlMatcherService: UrlMatcherService,\n    protected injector: Injector\n  ) {}\n\n  protected get internalUrlPatterns(): string[] {\n    return (\n      (this.config && this.config.routing && this.config.routing.internal) || []\n    );\n  }\n\n  /**\n   * Prepends routes (to the Router.config) that are responsible for redirecting to a different storefront system\n   */\n  addRoutes(): void {\n    const router: Router = this.injector.get(Router);\n    const newRoutes = this.getRoutes();\n    if (newRoutes.length) {\n      router.resetConfig([...newRoutes, ...router.config]);\n    }\n  }\n\n  /**\n   * Returns routes that are responsible for redirection to different storefront systems\n   */\n  protected getRoutes(): Routes {\n    if (!this.internalUrlPatterns.length) {\n      return [];\n    }\n    const routes: Routes = [];\n\n    routes.push({\n      pathMatch: 'full',\n      matcher: this.getUrlMatcher(),\n      canActivate: [ExternalRoutesGuard],\n      component: {} as any,\n    });\n\n    return routes;\n  }\n\n  /**\n   * Returns the URL matcher for the external route\n   */\n  protected getUrlMatcher(): UrlMatcher {\n    const matcher = this.urlMatcherService.getFromGlob(\n      this.internalUrlPatterns\n    );\n    return this.urlMatcherService.getOpposite(matcher); // the external route should be activated only when it's NOT an internal route\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { addExternalRoutesFactory } from './external-routes.providers';\nimport { ExternalRoutesService } from './external-routes.service';\n\n/**\n * Prepends the external route that redirects to a different storefront system for configured URLs\n */\n@NgModule()\nexport class ExternalRoutesModule {\n  static forRoot(): ModuleWithProviders<ExternalRoutesModule> {\n    return {\n      ngModule: ExternalRoutesModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: addExternalRoutesFactory,\n          deps: [ExternalRoutesService],\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './external-routes-config';\nexport * from './external-routes.guard';\nexport * from './external-routes.module';\nexport * from './external-routes.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ActivatedRouteSnapshot, Data, Route } from '@angular/router';\nimport { PageContext } from './page-context.model';\n\nexport interface CmsRouteData extends Data {\n  cxCmsRouteContext?: PageContext;\n  pageLabel?: string;\n}\n\nexport interface CmsRoute extends Route {\n  data?: CmsRouteData;\n}\n\nexport interface CmsActivatedRouteSnapshot extends ActivatedRouteSnapshot {\n  data: CmsRouteData;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { RoutingConfig } from '../configurable-routes/config/routing-config';\nimport { UrlParsingService } from '../configurable-routes/url-translation/url-parsing.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ProtectedRoutesService {\n  private nonProtectedPaths: string[][] = []; // arrays of paths' segments list\n\n  protected get routingConfig(): RoutingConfig['routing'] {\n    return this.config && this.config.routing;\n  }\n\n  /**\n   * Returns 'protected' property (boolean) from routing config\n   *\n   * @returns boolean\n   */\n  public get shouldProtect(): boolean {\n    return !!this.routingConfig?.protected;\n  }\n\n  constructor(\n    protected config: RoutingConfig,\n    protected urlParsingService: UrlParsingService\n  ) {\n    if (this.shouldProtect) {\n      // pre-process config for performance:\n      this.nonProtectedPaths = this.getNonProtectedPaths().map((path) =>\n        this.getSegments(path)\n      );\n    }\n  }\n\n  /**\n   * Tells if the url is protected\n   */\n  isUrlProtected(urlSegments: string[]): boolean {\n    return (\n      this.shouldProtect &&\n      !this.matchAnyPath(urlSegments, this.nonProtectedPaths)\n    );\n  }\n\n  /**\n   * Tells whether the url matches at least one of the paths\n   */\n  protected matchAnyPath(\n    urlSegments: string[],\n    pathsSegments: string[][]\n  ): boolean {\n    return pathsSegments.some((pathSegments) =>\n      this.matchPath(urlSegments, pathSegments)\n    );\n  }\n\n  /**\n   * Tells whether the url matches the path\n   */\n  protected matchPath(urlSegments: string[], pathSegments: string[]): boolean {\n    return this.urlParsingService.matchPath(urlSegments, pathSegments);\n  }\n\n  /**\n   * Returns a list of paths that are not protected\n   */\n  protected getNonProtectedPaths(): string[] {\n    return Object.values(this.routingConfig?.routes ?? {}).reduce<string[]>(\n      (acc, routeConfig) =>\n        routeConfig.protected === false && // must be explicitly false, ignore undefined\n        routeConfig.paths &&\n        routeConfig.paths.length\n          ? acc.concat(routeConfig?.paths ?? [])\n          : acc,\n      []\n    );\n  }\n\n  /**\n   * Splits the url by slashes\n   */\n  protected getSegments(url: string): string[] {\n    return (url || '').split('/');\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { AuthGuard } from '../../auth/user-auth/guards/auth.guard';\nimport { ProtectedRoutesService } from './protected-routes.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ProtectedRoutesGuard implements CanActivate {\n  constructor(\n    protected service: ProtectedRoutesService,\n    protected authGuard: AuthGuard\n  ) {}\n\n  /**\n   * When the anticipated url is protected, it switches to the AuthGuard. Otherwise emits true.\n   */\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean | UrlTree> {\n    let urlSegments: string[] = route.url.map((seg) => seg.path);\n\n    // For the root path `/` ActivatedRoute contains an empty array of segments:\n    urlSegments = urlSegments.length ? urlSegments : [''];\n\n    if (this.service.isUrlProtected(urlSegments)) {\n      return this.authGuard.canActivate();\n    }\n    return of(true);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './protected-routes.guard';\nexport * from './protected-routes.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { ConfigInitializer } from '../../../config/config-initializer/config-initializer';\nimport { ConfigInitializerService } from '../../../config/config-initializer/config-initializer.service';\nimport { BaseSite } from '../../../model/misc.model';\nimport { BaseSiteService } from '../../../site-context/facade/base-site.service';\nimport { BASE_SITE_CONTEXT_ID } from '../../../site-context/providers/context-ids';\nimport { RoutingConfig } from '../config/routing-config';\n\n@Injectable({ providedIn: 'root' })\nexport class SecurePortalConfigInitializer implements ConfigInitializer {\n  readonly scopes = ['routing'];\n  readonly configFactory = () => this.resolveConfig().toPromise();\n\n  constructor(\n    protected baseSiteService: BaseSiteService,\n    protected configInit: ConfigInitializerService\n  ) {}\n\n  /**\n   * Emits the Routing config basing on the current base site data.\n   *\n   * Completes after emitting the value.\n   */\n  protected resolveConfig(): Observable<RoutingConfig> {\n    return this.configInit.getStable('context').pipe(\n      switchMap((config) => {\n        const siteUid = config?.context?.[BASE_SITE_CONTEXT_ID]?.[0];\n        return this.baseSiteService.get(siteUid).pipe(\n          tap((baseSite) => {\n            if (!baseSite) {\n              throw new Error(\n                `Error: Cannot get base site config for ${siteUid}.`\n              );\n            }\n          }),\n          map((baseSite) => this.getRoutingConfig(baseSite)),\n          take(1)\n        );\n      })\n    );\n  }\n\n  protected getRoutingConfig(source: BaseSite | undefined): RoutingConfig {\n    const result = {\n      routing: {\n        protected: source?.requiresAuthentication,\n      },\n    };\n    return result;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { CmsRoute } from '../../models/cms-route';\n\n@Injectable()\nexport class RouterEffects {\n  clearCmsRoutes$: Observable<Action> = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          SiteContextActions.LANGUAGE_CHANGE,\n          AuthActions.LOGOUT,\n          AuthActions.LOGIN\n        ),\n        tap(() => {\n          const filteredConfig = this.router.config.filter(\n            (route: CmsRoute) => !(route.data && route.data.cxCmsRouteContext)\n          );\n          if (filteredConfig.length !== this.router.config.length) {\n            this.router.resetConfig(filteredConfig);\n          }\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private router: Router) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { RouterEffects } from './router.effect';\n\nexport const effects: any[] = [RouterEffects];\n\nexport * from './router.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, InjectionToken, Provider } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport * as fromNgrxRouter from '@ngrx/router-store';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { PageType } from '../../../model/cms.model';\nimport { RoutingConfigService } from '../../configurable-routes/routing-config.service';\nimport { CmsActivatedRouteSnapshot } from '../../models/cms-route';\nimport {\n  HOME_PAGE_CONTEXT,\n  PageContext,\n  SMART_EDIT_CONTEXT,\n} from '../../models/page-context.model';\nimport { CHANGE_NEXT_PAGE_CONTEXT } from '../actions/router.action';\nimport {\n  ActivatedRouterStateSnapshot,\n  RouterState,\n  State,\n} from '../routing-state';\n\nexport const initialState: RouterState = {\n  navigationId: 0,\n  state: {\n    url: '',\n    queryParams: {},\n    params: {},\n    context: {\n      id: '',\n    },\n    cmsRequired: false,\n    semanticRoute: undefined,\n  },\n  nextState: undefined,\n};\n\nexport function getReducers(): ActionReducerMap<State> {\n  return {\n    router: reducer,\n  };\n}\n\nexport function reducer(\n  state: RouterState = initialState,\n  action: any\n): RouterState {\n  switch (action.type) {\n    case fromNgrxRouter.ROUTER_NAVIGATION: {\n      return {\n        ...state,\n        nextState: action.payload.routerState,\n        navigationId: action.payload.event.id,\n      };\n    }\n\n    case fromNgrxRouter.ROUTER_ERROR:\n    case fromNgrxRouter.ROUTER_CANCEL: {\n      return {\n        ...state,\n        nextState: undefined,\n      };\n    }\n\n    case CHANGE_NEXT_PAGE_CONTEXT: {\n      return state.nextState\n        ? {\n            ...state,\n            nextState: { ...state.nextState, context: action.payload },\n          }\n        : state;\n    }\n\n    case fromNgrxRouter.ROUTER_NAVIGATED: {\n      return {\n        state: {\n          ...action.payload.routerState,\n          context:\n            // we want to preserve already resolved context,\n            // in case it was changed while navigating\n            state.nextState?.context ?? action.payload.routerState.context,\n        },\n        navigationId: action.payload.event.id,\n        nextState: undefined,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<State>> =\n  new InjectionToken<ActionReducerMap<State>>('RouterReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\n/* The serializer is there to parse the RouterStateSnapshot,\nand to reduce the amount of properties to be passed to the reducer.\n */\n@Injectable()\nexport class CustomSerializer\n  implements fromNgrxRouter.RouterStateSerializer<ActivatedRouterStateSnapshot>\n{\n  serialize(routerState: RouterStateSnapshot): ActivatedRouterStateSnapshot {\n    let state: CmsActivatedRouteSnapshot =\n      routerState.root as CmsActivatedRouteSnapshot;\n    let cmsRequired = false;\n    let context: PageContext | undefined;\n    let semanticRoute: string | undefined;\n    let urlString = '';\n\n    while (state.firstChild) {\n      state = state.firstChild as CmsActivatedRouteSnapshot;\n      urlString +=\n        '/' + state.url.map((urlSegment) => urlSegment.path).join('/');\n\n      // we use semantic route information embedded from any parent route\n      if (state.data?.cxRoute) {\n        semanticRoute = state.data?.cxRoute;\n      }\n\n      // we use context information embedded in Cms driven routes from any parent route\n      if (state.data?.cxCmsRouteContext) {\n        context = state.data?.cxCmsRouteContext;\n      }\n\n      // we assume, that any route that has CmsPageGuard or it's child\n      // is cmsRequired\n      if (\n        !cmsRequired &&\n        (context ||\n          state.routeConfig?.canActivate?.find(\n            (x) => x && x.guardName === 'CmsPageGuard'\n          ))\n      ) {\n        cmsRequired = true;\n      }\n    }\n\n    // If `semanticRoute` couldn't be already recognized using `data.cxRoute` property\n    // let's lookup the routing configuration to find the semantic route that has exactly the same configured path as the current URL.\n    // This will work only for simple URLs without any dynamic routing parameters.\n    semanticRoute = semanticRoute || this.lookupSemanticRoute(urlString);\n    const { params } = state;\n    context = this.getPageContext(context, state);\n\n    return {\n      url: routerState.url,\n      queryParams: routerState.root.queryParams,\n      params,\n      context,\n      cmsRequired,\n      semanticRoute,\n    };\n  }\n\n  private getPageContext(\n    cmsRouteContext: PageContext | undefined,\n    state: CmsActivatedRouteSnapshot\n  ): PageContext {\n    let context = cmsRouteContext;\n\n    // we give smartedit preview page a PageContext\n    if (\n      state.url.length > 0 &&\n      state.url[0].path === 'cx-preview' &&\n      state.queryParams.cmsTicketId !== undefined\n    ) {\n      context = {\n        id: SMART_EDIT_CONTEXT,\n        type: PageType.CONTENT_PAGE,\n      };\n    } else {\n      const { params } = state;\n      if (params['productCode']) {\n        context = { id: params['productCode'], type: PageType.PRODUCT_PAGE };\n      } else if (params['categoryCode']) {\n        context = { id: params['categoryCode'], type: PageType.CATEGORY_PAGE };\n      } else if (params['brandCode']) {\n        context = { id: params['brandCode'], type: PageType.CATEGORY_PAGE };\n      } else if (state.data.pageLabel !== undefined) {\n        context = { id: state.data.pageLabel, type: PageType.CONTENT_PAGE };\n      }\n    }\n\n    if (!context) {\n      if (state.url.length > 0) {\n        const pageLabel =\n          '/' + state.url.map((urlSegment) => urlSegment.path).join('/');\n        context = {\n          id: pageLabel,\n          type: PageType.CONTENT_PAGE,\n        };\n      } else {\n        context = {\n          // We like URLs to be driven by the backend, the CMS actually returns the homepage\n          // if no page label is given. Our logic however requires an id. undefined doesn't work.\n          id: HOME_PAGE_CONTEXT,\n\n          // We currently need to support a hardcoded page type, since the internal store uses the page\n          // type to store the content.\n          type: PageType.CONTENT_PAGE,\n        };\n      }\n    }\n\n    return context;\n  }\n\n  /**\n   * Returns the semantic route name for given page label.\n   *\n   * *NOTE*: It works only for simple static urls that are equal to the page label\n   * of cms-driven content page. For example: `/my-account/address-book`.\n   *\n   * It doesn't work for URLs with dynamic parameters. But such case can be handled\n   * by reading the defined `data.cxRoute` from the Angular Routes.\n   *\n   * @param path path to be found in the routing config\n   */\n  private lookupSemanticRoute(path: string): string {\n    // Page label is assumed to start with `/`, but Spartacus configured paths\n    // don't start with slash. So we remove the leading slash:\n    return this.routingConfig.getRouteName(path.substr(1));\n  }\n\n  constructor(private routingConfig: RoutingConfigService) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport {\n  RouterState,\n  RouterStateSerializer,\n  StoreRouterConnectingModule,\n} from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  ConfigInitializer,\n  CONFIG_INITIALIZER,\n} from '../config/config-initializer/config-initializer';\nimport { RoutingConfig } from './configurable-routes';\nimport { ConfigurableRoutesService } from './configurable-routes/configurable-routes.service';\nimport { SecurePortalConfigInitializer } from './configurable-routes/secure-portal-config/secure-portal-config-initializer';\nimport { effects } from './store/effects/index';\nimport {\n  CustomSerializer,\n  reducerProvider,\n  reducerToken,\n} from './store/reducers/router.reducer';\nimport { ROUTING_FEATURE } from './store/routing-state';\n\nexport function initConfigurableRoutes(\n  service: ConfigurableRoutesService\n): () => void {\n  const result = () => service.init(); // workaround for AOT compilation (see https://stackoverflow.com/a/51977115)\n  return result;\n}\n\nexport function initSecurePortalConfig(\n  configInitializer: SecurePortalConfigInitializer,\n  routingConfig: RoutingConfig\n): ConfigInitializer | null {\n  if (routingConfig.routing?.protected === undefined) {\n    return configInitializer;\n  }\n  return null;\n}\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(ROUTING_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n    StoreRouterConnectingModule.forRoot({\n      routerState: RouterState.Minimal,\n      stateKey: ROUTING_FEATURE, // name of reducer key\n    }),\n  ],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [\n        reducerProvider,\n        {\n          provide: RouterStateSerializer,\n          useClass: CustomSerializer,\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initConfigurableRoutes,\n          deps: [ConfigurableRoutesService],\n          multi: true,\n        },\n        {\n          provide: CONFIG_INITIALIZER,\n          useFactory: initSecurePortalConfig,\n          deps: [SecurePortalConfigInitializer, RoutingConfig],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './activated-routes.service';\nexport * from './url-matcher.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport { RoutingConfigService } from '../configurable-routes';\nimport { UrlMatcherService } from '../services/url-matcher.service';\nimport { UrlMatcherFactory } from './url-matcher-factory';\n\nexport function getDefaultUrlMatcherFactory(\n  routingConfigService: RoutingConfigService,\n  urlMatcherService: UrlMatcherService\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const routeName = route.data && route.data['cxRoute'];\n    const routeConfig = routingConfigService.getRouteConfig(routeName);\n    const paths = (routeConfig && routeConfig.paths) || [];\n    return urlMatcherService.getFromPaths(paths);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for spartacus routes containing property `data.cxRoute`.\n * The provided url matcher matches the configured `paths` from routing config.\n *\n * If this matcher doesn't fit the requirements, it can be replaced with custom matcher\n * or additional matchers can be added for a specific route. See for example PRODUCT_DETAILS_URL_MATCHER.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const DEFAULT_URL_MATCHER = new InjectionToken<UrlMatcherFactory>(\n  'DEFAULT_URL_MATCHER',\n  {\n    providedIn: 'root',\n    factory: () =>\n      getDefaultUrlMatcherFactory(\n        inject(RoutingConfigService),\n        inject(UrlMatcherService)\n      ),\n  }\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Route, UrlMatcher } from '@angular/router';\n\nexport type UrlMatcherFactory = (route: Route) => UrlMatcher;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport { DEFAULT_URL_MATCHER } from './default-url-matcher';\nexport * from './url-matcher-factory';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurable-routes/index';\nexport * from './external-routes/index';\nexport * from './facade/routing-params.service';\nexport * from './facade/routing.service';\nexport * from './models/cms-route';\nexport * from './models/page-context.model';\nexport * from './protected-routes/index';\nexport * from './routing.module';\nexport * from './services/index';\nexport * from './store/actions/index';\nexport * from './store/routing-state';\nexport * from './store/selectors/index';\nexport * from './url-matcher/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, filter, map, mergeMap, take } from 'rxjs/operators';\nimport { RoutingService } from '../../../routing/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { isNotUndefined } from '../../../util/type-guards';\nimport { CmsComponentConnector } from '../../connectors/component/cms-component.connector';\nimport { CmsActions } from '../actions/index';\n\n@Injectable()\nexport class NavigationEntryItemEffects {\n  loadNavigationItems$: Observable<\n    | CmsActions.LoadCmsNavigationItemsSuccess\n    | CmsActions.LoadCmsNavigationItemsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CmsActions.LOAD_CMS_NAVIGATION_ITEMS),\n      map((action: CmsActions.LoadCmsNavigationItems) => action.payload),\n      map((payload) => {\n        return {\n          ids: this.getIdListByItemType(payload.items),\n          nodeId: payload.nodeId,\n        };\n      }),\n      mergeMap((data) => {\n        if (data.ids.componentIds.length > 0) {\n          return this.routingService.getRouterState().pipe(\n            filter(isNotUndefined),\n            map((routerState) => routerState.state.context),\n            take(1),\n            mergeMap((pageContext) =>\n              // download all items in one request\n              this.cmsComponentConnector\n                .getList(data.ids.componentIds, pageContext)\n                .pipe(\n                  map(\n                    (components) =>\n                      new CmsActions.LoadCmsNavigationItemsSuccess({\n                        nodeId: data.nodeId,\n                        components: components,\n                      })\n                  ),\n                  catchError((error) =>\n                    of(\n                      new CmsActions.LoadCmsNavigationItemsFail(\n                        data.nodeId,\n                        normalizeHttpError(error)\n                      )\n                    )\n                  )\n                )\n            )\n          );\n          //} else if (data.ids.pageIds.length > 0) {\n          // TODO: future work\n          // dispatch action to load cms page one by one\n          //} else if (data.ids.mediaIds.length > 0) {\n          // TODO: future work\n          // send request to get list of media\n        } else {\n          return of(\n            new CmsActions.LoadCmsNavigationItemsFail(\n              data.nodeId,\n              'navigation nodes are empty'\n            )\n          );\n        }\n      })\n    )\n  );\n\n  // We only consider 3 item types: cms page, cms component, and media.\n  getIdListByItemType(itemList: any[]): {\n    pageIds: string[];\n    componentIds: string[];\n    mediaIds: string[];\n  } {\n    const pageIds: string[] = [];\n    const componentIds: string[] = [];\n    const mediaIds: string[] = [];\n\n    itemList.forEach((item) => {\n      if (item.superType === 'AbstractCMSComponent') {\n        componentIds.push(item.id);\n      } else if (item.superType === 'AbstractPage') {\n        pageIds.push(item.id);\n      } else if (item.superType === 'AbstractMedia') {\n        mediaIds.push(item.id);\n      }\n    });\n    return { pageIds: pageIds, componentIds: componentIds, mediaIds: mediaIds };\n  }\n\n  constructor(\n    private actions$: Actions,\n    private cmsComponentConnector: CmsComponentConnector,\n    private routingService: RoutingService\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { PageContext } from '../../../routing/models/page-context.model';\nimport { CmsStructureModel } from '../../model/page.model';\nimport { CmsStructureConfigService } from '../../services/cms-structure-config.service';\nimport { CmsPageAdapter } from './cms-page.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageConnector {\n  constructor(\n    protected cmsPageAdapter: CmsPageAdapter,\n    protected cmsStructureConfigService: CmsStructureConfigService\n  ) {}\n\n  /**\n   * Returns an observable with the page structure. The page structure is\n   * typically loaded from a backend, but can also be returned from static\n   * configuration (see `CmsStructureConfigService`).\n   */\n  get(pageContext: PageContext): Observable<CmsStructureModel> {\n    return this.cmsStructureConfigService\n      .shouldIgnoreBackend(pageContext.id)\n      .pipe(\n        switchMap((loadFromConfig) => {\n          if (!loadFromConfig) {\n            return this.cmsPageAdapter.load(pageContext).pipe(\n              catchError((error) => {\n                if (\n                  error instanceof HttpErrorResponse &&\n                  error.status === 400\n                ) {\n                  return of({});\n                } else {\n                  return throwError(error);\n                }\n              })\n            );\n          } else {\n            return of({});\n          }\n        }),\n        switchMap((page) => this.mergeDefaultPageStructure(pageContext, page))\n      );\n  }\n\n  /**\n   *\n   * Merge default page structure to the given `CmsStructureModel`.\n   * This is beneficial for a fast setup of the UI without necessary\n   * fine-grained CMS setup.\n   */\n  private mergeDefaultPageStructure(\n    pageContext: PageContext,\n    pageStructure: CmsStructureModel\n  ): Observable<CmsStructureModel> {\n    return this.cmsStructureConfigService.mergePageStructure(\n      pageContext.id,\n      pageStructure\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  groupBy,\n  map,\n  mergeMap,\n  switchMap,\n  take,\n} from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { RoutingService } from '../../../routing/index';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CmsPageConnector } from '../../connectors/page/cms-page.connector';\nimport { CmsStructureModel } from '../../model/page.model';\nimport { serializePageContext } from '../../utils/cms-utils';\nimport { CmsActions } from '../actions/index';\n\n@Injectable()\nexport class PageEffects {\n  refreshPage$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        SiteContextActions.LANGUAGE_CHANGE,\n        AuthActions.LOGOUT,\n        AuthActions.LOGIN\n      ),\n      switchMap(() =>\n        this.routingService.getRouterState().pipe(\n          filter(\n            (routerState) =>\n              routerState &&\n              routerState.state &&\n              routerState.state.cmsRequired &&\n              !routerState.nextState\n          ),\n          take(1),\n          map((routerState) => routerState.state.context),\n          mergeMap((context) => of(new CmsActions.LoadCmsPageData(context)))\n        )\n      )\n    )\n  );\n\n  loadPageData$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CmsActions.LOAD_CMS_PAGE_DATA),\n      map((action: CmsActions.LoadCmsPageData) => action.payload),\n      groupBy((pageContext) => serializePageContext(pageContext)),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap((pageContext) =>\n            this.cmsPageConnector.get(pageContext).pipe(\n              mergeMap((cmsStructure: CmsStructureModel) => {\n                const actions: Action[] = [\n                  new CmsActions.CmsGetComponentFromPage(\n                    (cmsStructure.components ?? []).map((component) => ({\n                      component,\n                      pageContext,\n                    }))\n                  ),\n                  new CmsActions.LoadCmsPageDataSuccess(\n                    pageContext,\n                    cmsStructure.page ?? {}\n                  ),\n                ];\n\n                const pageLabel = cmsStructure.page?.label;\n                // For content pages the page label returned from backend can be different than page ID initially assumed from route.\n                // In such a case let's save the success response not only for initially assumed page ID, but also for correct page label.\n                if (pageLabel && pageLabel !== pageContext.id) {\n                  actions.unshift(\n                    new CmsActions.CmsSetPageSuccessIndex(\n                      { id: pageLabel, type: pageContext.type },\n                      cmsStructure.page ?? {}\n                    )\n                  );\n                }\n\n                return actions;\n              }),\n              catchError((error) =>\n                of(\n                  new CmsActions.LoadCmsPageDataFail(\n                    pageContext,\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private cmsPageConnector: CmsPageConnector,\n    private routingService: RoutingService\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ComponentsEffects } from './components.effect';\nimport { NavigationEntryItemEffects } from './navigation-entry-item.effect';\nimport { PageEffects } from './page.effect';\n\nexport const effects: any[] = [\n  PageEffects,\n  ComponentsEffects,\n  NavigationEntryItemEffects,\n];\n\nexport * from './components.effect';\nexport * from './navigation-entry-item.effect';\nexport * from './page.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsComponent } from '../../../model/cms.model';\nimport { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport { serializePageContext } from '../../utils/cms-utils';\nimport { CmsActions } from '../actions/index';\nimport { ComponentsContext } from '../cms-state';\n\nexport const initialState: ComponentsContext = {\n  component: undefined,\n  pageContext: {},\n};\n\nfunction componentExistsReducer<T extends CmsComponent>(\n  state: boolean | undefined,\n  action: CmsActions.CmsComponentAction<T>\n): boolean | undefined {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_COMPONENT_FAIL:\n      return false;\n\n    case CmsActions.CMS_GET_COMPONENT_FROM_PAGE:\n    case CmsActions.LOAD_CMS_COMPONENT_SUCCESS:\n      return true;\n  }\n  return state;\n}\n\nexport function reducer<T extends CmsComponent>(\n  state = initialState,\n  action: CmsActions.CmsComponentAction<T>\n): ComponentsContext {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_COMPONENT: {\n      const pageContextReducer = loaderReducer<boolean, any>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      const context = serializePageContext(action.payload.pageContext, true);\n      return {\n        ...state,\n        pageContext: {\n          ...state.pageContext,\n          [context]: pageContextReducer(state.pageContext[context], action),\n        },\n      };\n    }\n    case CmsActions.LOAD_CMS_COMPONENT_FAIL: {\n      const pageContextReducer = loaderReducer<boolean, any>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      const context = serializePageContext(action.payload.pageContext, true);\n      return {\n        ...state,\n        pageContext: {\n          ...state.pageContext,\n          [context]: pageContextReducer(state.pageContext[context], action),\n        },\n      };\n    }\n    case CmsActions.LOAD_CMS_COMPONENT_SUCCESS: {\n      const pageContextReducer = loaderReducer<boolean, any>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      const context = serializePageContext(action.payload.pageContext, true);\n      return {\n        ...state,\n        component: action.payload.component as T,\n        pageContext: {\n          ...state.pageContext,\n          [context]: pageContextReducer(state.pageContext[context], action),\n        },\n      };\n    }\n    case CmsActions.CMS_GET_COMPONENT_FROM_PAGE: {\n      const pageContextReducer = loaderReducer<boolean, any>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      if (!Array.isArray(action.payload)) {\n        const context = serializePageContext(action.payload.pageContext, true);\n        return {\n          ...state,\n          component: action.payload.component as T,\n          pageContext: {\n            ...state.pageContext,\n            [context]: pageContextReducer(state.pageContext[context], action),\n          },\n        };\n      }\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NodeItem } from '../../model/node-item.model';\nimport { CmsActions } from '../actions/index';\n\nexport const initialState: NodeItem | undefined = undefined;\n\nexport function reducer(\n  state = initialState,\n  action: CmsActions.CmsNavigationEntryItemAction\n): NodeItem | undefined {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_NAVIGATION_ITEMS_SUCCESS: {\n      if (action.payload.components) {\n        const components = action.payload.components;\n        const newItem: NodeItem = components.reduce(\n          (compItems: { [uid_type: string]: any }, component: any) => {\n            return {\n              ...compItems,\n              [`${component.uid}_AbstractCMSComponent`]: component,\n            };\n          },\n          {\n            ...{},\n          }\n        );\n\n        return {\n          ...state,\n          ...newItem,\n        };\n      }\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntityState } from '../../../state/utils/entity/entity-state';\nimport { Page } from '../../model/page.model';\nimport { CmsActions } from '../actions/index';\n\nexport const initialState: EntityState<Page> = { entities: {} };\n\nexport function reducer(\n  state = initialState,\n  action: CmsActions.LoadCmsPageDataSuccess\n): EntityState<Page> {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_PAGE_DATA_SUCCESS: {\n      const page: Page = action.payload;\n      return {\n        ...state,\n        entities: { ...state.entities, [page.pageId ?? '']: page },\n      };\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsActions } from '../actions/index';\n\nexport const initialState: string | undefined = undefined;\n\nexport function reducer(\n  entityType: string\n): (\n  state: string | undefined,\n  action:\n    | CmsActions.LoadCmsPageDataSuccess\n    | CmsActions.LoadCmsPageDataFail\n    | CmsActions.CmsSetPageFailIndex\n) => string | undefined {\n  return (\n    state = initialState,\n    action:\n      | CmsActions.LoadCmsPageDataSuccess\n      | CmsActions.LoadCmsPageDataFail\n      | CmsActions.CmsSetPageSuccessIndex\n      | CmsActions.CmsSetPageFailIndex\n  ): string | undefined => {\n    if (action.meta && action.meta.entityType === entityType) {\n      switch (action.type) {\n        case CmsActions.LOAD_CMS_PAGE_DATA_SUCCESS: {\n          return action.payload.pageId;\n        }\n\n        case CmsActions.LOAD_CMS_PAGE_DATA_FAIL: {\n          return initialState;\n        }\n\n        case CmsActions.CMS_SET_PAGE_FAIL_INDEX: {\n          return action.payload;\n        }\n\n        case CmsActions.CMS_SET_PAGE_SUCCESS_INDEX: {\n          return action.payload.pageId;\n        }\n      }\n    }\n    return state;\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { PageType } from '../../../model/cms.model';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { entityLoaderReducer } from '../../../state/utils/entity-loader/entity-loader.reducer';\nimport { entityReducer } from '../../../state/utils/entity/entity.reducer';\nimport { NodeItem } from '../../model/node-item.model';\nimport {\n  CmsState,\n  ComponentsContext,\n  COMPONENT_ENTITY,\n  NAVIGATION_DETAIL_ENTITY,\n  StateWithCms,\n} from '../cms-state';\nimport * as fromComponentsReducer from './components.reducer';\nimport * as fromNavigation from './navigation-entry-item.reducer';\nimport * as fromPageReducer from './page-data.reducer';\nimport * as fromPageIndexReducer from './page-index.reducer';\n\nexport function getReducers(): ActionReducerMap<CmsState, any> {\n  return {\n    page: combineReducers({\n      pageData: fromPageReducer.reducer,\n      index: combineReducers({\n        content: entityLoaderReducer<string, any>(\n          PageType.CONTENT_PAGE,\n          fromPageIndexReducer.reducer(PageType.CONTENT_PAGE)\n        ),\n        product: entityLoaderReducer<string, any>(\n          PageType.PRODUCT_PAGE,\n          fromPageIndexReducer.reducer(PageType.PRODUCT_PAGE)\n        ),\n        category: entityLoaderReducer<string, any>(\n          PageType.CATEGORY_PAGE,\n          fromPageIndexReducer.reducer(PageType.CATEGORY_PAGE)\n        ),\n        catalog: entityLoaderReducer<string, any>(\n          PageType.CATALOG_PAGE,\n          fromPageIndexReducer.reducer(PageType.CATALOG_PAGE)\n        ),\n      }),\n    }),\n    components: entityReducer<ComponentsContext, any>(\n      COMPONENT_ENTITY,\n      fromComponentsReducer.reducer\n    ),\n    navigation: entityLoaderReducer<NodeItem, any>(\n      NAVIGATION_DETAIL_ENTITY,\n      fromNavigation.reducer\n    ),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<CmsState>> =\n  new InjectionToken<ActionReducerMap<CmsState>>('CmsReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearCmsState(\n  reducer: ActionReducer<StateWithCms, Action>\n): ActionReducer<StateWithCms, Action> {\n  return function (state, action) {\n    if (\n      action.type === SiteContextActions.LANGUAGE_CHANGE ||\n      action.type === AuthActions.LOGOUT ||\n      action.type === AuthActions.LOGIN\n    ) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<StateWithCms>[] = [clearCmsState];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  StateConfig,\n  StateTransferType,\n} from '../../state/config/state-config';\nimport { StateModule } from '../../state/state.module';\nimport { CMS_FEATURE } from './cms-state';\nimport { effects } from './effects/index';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\nimport { provideDefaultConfigFactory } from '../../config/config-providers';\n\nexport function cmsStoreConfigFactory(): StateConfig {\n  // if we want to reuse CMS_FEATURE const in config, we have to use factory instead of plain object\n  const config: StateConfig = {\n    state: {\n      ssrTransfer: {\n        keys: { [CMS_FEATURE]: StateTransferType.TRANSFER_STATE },\n      },\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(CMS_FEATURE, reducerToken, { metaReducers }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    provideDefaultConfigFactory(cmsStoreConfigFactory),\n    reducerProvider,\n  ],\n})\nexport class CmsStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '../config/config-providers';\nimport { defaultCmsModuleConfig } from './config/default-cms-config';\nimport { CmsService } from './facade/cms.service';\nimport { PageMetaModule } from './page/page-meta.module';\nimport { CmsStoreModule } from './store/cms-store.module';\n\n@NgModule({\n  imports: [CmsStoreModule, PageMetaModule.forRoot()],\n})\nexport class CmsModule {\n  static forRoot(): ModuleWithProviders<CmsModule> {\n    return {\n      ngModule: CmsModule,\n      providers: [CmsService, provideDefaultConfig(defaultCmsModuleConfig)],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-config';\nexport * from './default-cms-config';\nexport * from './cms-structure.config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-page.adapter';\nexport * from './cms-page.connector';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-component.connector';\nexport * from './cms-component.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './page/index';\nexport * from './component/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Renderer2 } from '@angular/core';\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\n\n@Injectable()\nexport abstract class ComponentDecorator {\n  /**\n   * Add attributes to CMS Component element dynamically\n   * @param element: CMS component element\n   * @param renderer\n   * @param component: CMS component data\n   */\n  abstract decorate(\n    element: Element,\n    renderer: Renderer2,\n    component?: ContentSlotComponentData\n  ): void;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Renderer2 } from '@angular/core';\nimport { ContentSlotData } from '../model/content-slot-data.model';\n\n@Injectable()\nexport abstract class SlotDecorator {\n  /**\n   * Add attributes to CMS Slot element dynamically\n   * @param element: CMS slot element\n   * @param renderer\n   * @param slot: CMS slot data\n   */\n  abstract decorate(\n    element: Element,\n    renderer: Renderer2,\n    slot?: ContentSlotData\n  ): void;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './component-decorator';\nexport * from './slot-decorator';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const enum Priority {\n  /**\n   * Used as fallback, when there is no other matches\n   */\n  FALLBACK = -50,\n  /**\n   * Used mainly in libraries, easy overridable\n   */\n  LOW = -10,\n  /**\n   * Default priority\n   */\n  NORMAL = 0,\n  /**\n   * High priority for matches that should take precedence\n   */\n  HIGH = 10,\n}\n\n/**\n * Base interface for implementing applicables in a consistent way\n *\n * Applicables are mainly used to find best matching one from multi provided\n * classes, like handlers, resolvers, etc.\n */\nexport interface Applicable {\n  /**\n   * Returns true if applicable can be used to handle specified condition\n   */\n  hasMatch?(...params: any[]): boolean;\n\n  /**\n   * Returns priority or score for specified applicable.\n   *\n   * If multiple applicables can be applied to specified condition, the one\n   * with highest priority or score wins.\n   */\n  getPriority?(...params: any[]): Priority | number;\n}\n\n/**\n * Helper logic to resolve best matching Applicable\n *\n * Finding best match is a two step process:\n * 1. Find all matching applicables\n *    - all applicables for which hasMatch(...matchParams) will return true\n *    - all applicables without hasMatch method (implicit always match)\n * 2. Find the applicable with highest priority\n *    - applicable with highest getPriority(...priorityParams) will win\n *    - applicable without getPriority method is treated as Priority.NORMAL or 0\n *    - applicables with the same priority are sorted by order of providers, the applicable that was provided later wins\n *\n * @param applicables - array or applicable-like instances\n * @param matchParams - array of parameters passed for hasMatch calls\n * @param priorityParams - array of parameters passed for getPriority calls\n */\nexport function resolveApplicable<T extends Applicable>(\n  applicables: T[],\n  matchParams: any[] = [],\n  priorityParams: any[] = []\n): T | undefined {\n  const matchedApplicables = (applicables ?? []).filter(\n    (applicable) => !applicable.hasMatch || applicable.hasMatch(...matchParams)\n  );\n\n  if (matchedApplicables.length < 2) {\n    return matchedApplicables[0];\n  }\n\n  let lastPriority = -Infinity;\n  return matchedApplicables.reduce((acc: T | undefined, curr: T) => {\n    const currPriority = curr.getPriority\n      ? curr.getPriority(...priorityParams)\n      : Priority.NORMAL;\n    if (lastPriority > currPriority) {\n      return acc;\n    }\n    lastPriority = currPriority;\n    return curr;\n  }, undefined);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { asapScheduler, combineLatest, defer, Observable } from 'rxjs';\nimport { audit } from 'rxjs/operators';\n\ntype ReturnTypes<T extends Observable<any>[]> = {\n  [P in keyof T]: T[P] extends Observable<infer R> ? R : never;\n};\ntype Observables = [Observable<any>] | Observable<any>[];\n\n/**\n * uniteLatest is an alternative to combineLatest. The first emission is\n * emitted synchronously (just like combineLatest) and all following emissions\n * are audited and emitted using asapScheduler.\n *\n * It effectively smooths out emissions when multiple sources will emit at the\n * same time: uniteLatest will have only one emission, where combine latest will\n * have more than one (one per source changed).\n *\n * @param sources\n */\nexport function uniteLatest<R extends Observables>(\n  sources: R\n): Observable<ReturnTypes<R>> {\n  return defer(() => {\n    let subNo = 0;\n    const trigger = new Observable((subscriber) => {\n      const action = () => {\n        subscriber.next();\n        subscriber.complete();\n      };\n\n      if (subNo) {\n        asapScheduler.schedule(action);\n      } else {\n        action();\n      }\n      subNo++;\n    });\n\n    return combineLatest(sources).pipe(audit(() => trigger));\n  }) as any;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, isDevMode, PLATFORM_ID } from '@angular/core';\nimport { defer, Observable, of } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { UnifiedInjector } from '../../lazy-loading/unified-injector';\nimport { resolveApplicable } from '../../util/applicable';\nimport { uniteLatest } from '../../util/rxjs/unite-latest';\nimport { Page, PageMeta } from '../model/page.model';\nimport { PageMetaConfig } from '../page/config/page-meta.config';\nimport { PageMetaResolver } from '../page/page-meta.resolver';\nimport { CmsService } from './cms.service';\n\n/**\n * Service that collects the page meta data by using injected page resolvers.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageMetaService {\n  constructor(\n    protected cms: CmsService,\n    protected unifiedInjector: UnifiedInjector,\n    protected pageMetaConfig: PageMetaConfig,\n    @Inject(PLATFORM_ID) protected platformId: string\n  ) {}\n\n  protected resolvers$: Observable<PageMetaResolver[]> = this.unifiedInjector\n    .getMulti(PageMetaResolver)\n    .pipe(shareReplay({ bufferSize: 1, refCount: true })) as Observable<\n    PageMetaResolver[]\n  >;\n\n  protected meta$: Observable<PageMeta | null> = defer(() =>\n    this.cms.getCurrentPage()\n  ).pipe(\n    filter((page) => Boolean(page)),\n    switchMap((page: Page) => this.getMetaResolver(page)),\n    switchMap((metaResolver: PageMetaResolver | undefined) =>\n      metaResolver ? this.resolve(metaResolver) : of(null)\n    ),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  /**\n   * Returns the observed page meta data for the current page.\n   *\n   * The data is resolved by various PageResolvers, which are configurable.\n   */\n  getMeta(): Observable<PageMeta | null> {\n    return this.meta$;\n  }\n\n  /**\n   * If a `PageResolver` has implemented a resolver interface, the resolved data\n   * is merged into the `PageMeta` object.\n   * @param metaResolver\n   */\n  protected resolve(metaResolver: PageMetaResolver): Observable<PageMeta> {\n    const resolverMethods = this.getResolverMethods();\n    const resolvedData: Observable<PageMeta>[] = Object.keys(resolverMethods)\n      // TODO: Revisit if typing is possible here with Template Literal Types when we update to TS >=4.1\n      .filter((key) => (metaResolver as any)[resolverMethods[key]])\n      .map((key) => {\n        return (metaResolver as any)\n          [resolverMethods[key]]()\n          .pipe(map((data) => ({ [key]: data })));\n      });\n\n    if (resolvedData.length === 0) {\n      // uniteLatest will fail otherwise\n      return of({});\n    } else {\n      return uniteLatest(resolvedData).pipe(\n        map((data) => Object.assign({}, ...data))\n      );\n    }\n  }\n\n  /**\n   * Returns an object with resolvers. The object properties represent the `PageMeta` property, i.e.:\n   *\n   * ```\n   * {\n   *   title: 'resolveTitle',\n   *   robots: 'resolveRobots'\n   * }\n   * ```\n   *\n   * This list of resolvers is filtered for CSR vs SSR processing since not all resolvers are\n   * relevant during browsing.\n   */\n  protected getResolverMethods(): { [property: string]: string } {\n    const resolverMethods: Record<string, string> = {};\n    // filter the resolvers to avoid unnecessary processing in CSR\n    this.pageMetaConfig?.pageMeta?.resolvers\n      ?.filter((resolver) => {\n        return (\n          // always resolve in SSR\n          !isPlatformBrowser(this.platformId ?? '') ||\n          // resolve in CSR when it's not disabled\n          !resolver.disabledInCsr ||\n          // resolve in CSR when resolver is enabled in devMode\n          (isDevMode() && this.pageMetaConfig?.pageMeta?.enableInDevMode)\n        );\n      })\n      .forEach(\n        (resolver) => (resolverMethods[resolver.property] = resolver.method)\n      );\n    return resolverMethods;\n  }\n\n  /**\n   * Return the resolver with the best match, based on a score\n   * generated by the resolver.\n   *\n   * Resolvers match by default on `PageType` and `page.template`.\n   */\n  protected getMetaResolver(\n    page: Page\n  ): Observable<PageMetaResolver | undefined> {\n    return this.resolvers$.pipe(\n      map((resolvers) => resolveApplicable(resolvers, [page], [page]))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms.service';\nexport * from './page-meta.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface ContentSlotComponentData {\n  uid?: string;\n  typeCode?: string;\n  flexType?: string;\n  properties?: any;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ContentSlotComponentData } from './content-slot-component-data.model';\n\nexport interface ContentSlotData {\n  components?: ContentSlotComponentData[];\n  properties?: any;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CmsLinkComponent } from '../../model/cms.model';\n\nexport interface NodeItem {\n  [id_type: string]: CmsLinkComponent;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-page-meta.config';\nexport * from './page-meta.config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { BreadcrumbMeta, PageRobotsMeta } from '../model/page.model';\n\n/**\n * Resolves the page heading value which is used in the UI (typically\n * the `<H1>`). The page heading might differ from the page title,\n * which is used in the browser (history, tabs) and outside the storefront\n * by search crawlers (Google Search, Bing) and social crawlers (facebook,\n * pinterest).\n *\n * While there are multiple standard resolvers available, nothing stops you\n * from adding custom resolvers to the list of `PageMetaService.resolverMethods`.\n */\nexport interface PageHeadingResolver {\n  /**\n   * Resolves the page heading.\n   */\n  resolveHeading(): Observable<string | undefined>;\n}\n\n/**\n * Resolves the page title which is first and foremost used for the page\n * title tag, but could also be used as a fallback for the page heading.\n */\nexport interface PageTitleResolver {\n  /**\n   * Resolves the page title.\n   */\n  resolveTitle(): Observable<string | undefined>;\n}\n\n/**\n * Resolves the page description. The page description is typically used\n * in the Search Engine Result Page (SERP).\n */\nexport interface PageDescriptionResolver {\n  /**\n   * Resolves the page description.\n   */\n  resolveDescription(): Observable<string | undefined>;\n}\n\n/**\n * Resolves breadcrumbs for the page, which are used in the\n * `BreadcrumbComponent` and Structural Data.\n */\nexport interface PageBreadcrumbResolver {\n  /**\n   * Resolves the breadcrumbs for the page.\n   */\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[] | undefined>;\n}\n\n/**\n * Provides a method to resolve the the main image for the page.\n * This is typically used for social sharing (for example by using\n * the `og:image` metatag).\n */\nexport interface PageImageResolver {\n  /**\n   * Resolves the main image for the page.\n   */\n  resolveImage(): Observable<string | undefined>;\n}\n\n/**\n * Resolves the robot information for the page. This is used by\n * search engines to understand whether the page and subsequential links\n * should be indexed.\n *\n */\nexport interface PageRobotsResolver {\n  /**\n   * Resolves the robot meta data for the page.\n   *\n   * The robot meta data is used by search engines to indicate whether a page\n   * should be indexed and whether links on the page should be followed for\n   * further indexing.\n   *\n   * Robots meta tags are an alternative (or supplement) to the robots.txt as well\n   * as the sitemaps.\n   */\n  resolveRobots(): Observable<PageRobotsMeta[] | undefined>;\n}\n\nexport interface CanonicalPageResolver {\n  /**\n   * Resolves the canonical url for the page.\n   *\n   * The canonical url is used by search engines to optimize the search index. Without\n   * a canonical url, url variations for the same page might be considered duplicates\n   * which have a negative impact on SEO.\n   */\n  resolveCanonicalUrl(): Observable<string | undefined>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Type } from '@angular/core';\nimport { ActivatedRouteSnapshot, Data, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BreadcrumbMeta } from '../../model/page.model';\n\n/**\n * Angular ActivatedRouteSnapshot extended with the custom configuration\n * of the page meta in the property `data.cxPageMeta`.\n */\nexport interface ActivatedRouteSnapshotWithPageMeta\n  extends ActivatedRouteSnapshot {\n  routeConfig:\n    | (Route & {\n        data?: Data & {\n          cxPageMeta?: RoutePageMetaConfig;\n        };\n      })\n    | null;\n}\n\n/**\n * Configuration of the breadcrumb for the Route.\n */\nexport interface RoutePageMetaConfig {\n  breadcrumb?: string | RouteBreadcrumbConfig;\n\n  /**\n   * Optional resolver class implementing `RoutePageMetaResolver`.\n   * The resolver instance will be implicitly inherited by all the\n   * child routes of the route with defined resolver (unless some\n   * child route defines its own resolver).\n   */\n  resolver?: Type<any>;\n}\n\n/**\n * Configuration of the breadcrumb for specific route\n */\nexport interface RouteBreadcrumbConfig {\n  /**\n   * Raw text for the breadcrumb label.\n   */\n  raw?: string;\n\n  /**\n   * Translation key for the breadcrumb label.\n   * */\n  i18n?: string;\n}\n\n/**\n * Params for the breadcrumb resolver of a single activated route.\n */\nexport interface RouteBreadcrumbResolverParams {\n  url?: string;\n  pageMetaConfig?: RoutePageMetaConfig;\n  route?: ActivatedRouteSnapshot;\n}\n\n/**\n * Breadcrumb resolver interface for a single route\n */\nexport interface RouteBreadcrumbResolver {\n  /**\n   * Turns the route definition (with its breadcrumb config) into the resolved breadcrumb.\n   *\n   * @param url precalculated absolute link based on the route snapshot and its ancestors in the routes tree\n   * @param pageMetaConfig page meta config for the route, including the breadcrumb config\n   * @param route the route snapshot\n   */\n  resolveBreadcrumbs(\n    params: RouteBreadcrumbResolverParams\n  ): Observable<BreadcrumbMeta[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-route-page-meta.resolver';\nexport * from './page-link.service';\nexport * from './route-page-meta.model';\nexport {\n  RoutingPageMetaResolver,\n  RoutingResolveBreadcrumbsOptions,\n} from './routing-page-meta.resolver';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './base-page-meta.resolver';\nexport * from './config/index';\nexport * from './content-page-meta.resolver';\nexport * from './page-meta.module';\nexport * from './page-meta.resolver';\nexport * from './page.resolvers';\nexport * from './routing/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Renderer2 } from '@angular/core';\nimport { shareReplay } from 'rxjs/operators';\nimport { UnifiedInjector } from '../../lazy-loading/unified-injector';\nimport { getLastValueSync } from '../../util/rxjs/get-last-value-sync';\nimport { ComponentDecorator } from '../decorators/component-decorator';\nimport { SlotDecorator } from '../decorators/slot-decorator';\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\nimport { ContentSlotData } from '../model/content-slot-data.model';\n\n/**\n * Service that used to add dynamic attributes to CMS component\n * and slot elements.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DynamicAttributeService {\n  private componentDecorators$ = this.unifiedInjector\n    .getMulti(ComponentDecorator)\n    .pipe(shareReplay(1));\n\n  private slotDecorators$ = this.unifiedInjector\n    .getMulti(SlotDecorator)\n    .pipe(shareReplay(1));\n\n  constructor(protected unifiedInjector: UnifiedInjector) {}\n\n  /**\n   * Add dynamic attributes to CMS component element\n   * @param element: CMS component element\n   * @param renderer\n   * @param componentData: component data\n   */\n  addAttributesToComponent(\n    element: Element,\n    renderer: Renderer2,\n    componentData?: ContentSlotComponentData\n  ) {\n    (getLastValueSync(this.componentDecorators$) || []).forEach((decorator) =>\n      decorator.decorate(element, renderer, componentData)\n    );\n  }\n\n  /**\n   * Add dynamic attributes to CMS slot element\n   * @param element: CMS slot element\n   * @param renderer\n   * @param slotData: slot data\n   */\n  addAttributesToSlot(\n    element: Element,\n    renderer: Renderer2,\n    slotData?: ContentSlotData\n  ) {\n    (getLastValueSync(this.slotDecorators$) || []).forEach((decorator) =>\n      decorator.decorate(element, renderer, slotData)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-structure-config.service';\nexport * from './dynamic-attribute.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms.module';\nexport * from './config/index';\nexport * from './connectors/index';\nexport * from './decorators/index';\nexport * from './facade/index';\nexport * from './model/content-slot-component-data.model';\nexport * from './model/content-slot-data.model';\nexport * from './model/node-item.model';\nexport * from './model/page.model';\nexport * from './page/index';\nexport * from './page/page-meta.module';\nexport * from './services/index';\nexport * from './store/actions/index';\nexport * from './store/cms-state';\nexport * from './store/selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cx-event';\nexport { EventService } from './event.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\nimport { GlobalMessageType } from '../models/global-message.model';\n\nexport type GlobalMessageTypeConfig = {\n  timeout?: number;\n};\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class GlobalMessageConfig {\n  globalMessages?: {\n    [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n    [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n    [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n    [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n    [GlobalMessageType.MSG_TYPE_ASSISTIVE]?: GlobalMessageTypeConfig;\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends GlobalMessageConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './global-message.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport enum HttpResponseStatus {\n  UNKNOWN = -1,\n  BAD_REQUEST = 400,\n  UNAUTHORIZED = 401,\n  FORBIDDEN = 403,\n  NOT_FOUND = 404,\n  CONFLICT = 409,\n  BAD_GATEWAY = 502,\n  GATEWAY_TIMEOUT = 504,\n  INTERNAL_SERVER_ERROR = 500,\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Applicable, Priority } from '../../../util/applicable';\nimport { GlobalMessageService } from '../../facade/global-message.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class HttpErrorHandler implements Applicable {\n  constructor(\n    protected globalMessageService: GlobalMessageService,\n    @Inject(PLATFORM_ID) protected platformId?: Object\n  ) {}\n\n  /**\n   * The http response status number which is handled by this handler.\n   * Implementations can set the response status number, i.e. 404, so that\n   * the handler can be found by the error interceptor.\n   */\n  responseStatus?: number;\n\n  /**\n   * Handles the error response for the response status that is register for the handler\n   * @param { HttpRequest<any> } request : http request\n   * @param { HttpErrorResponse } errorResponse : Http error response\n   */\n  abstract handleError(\n    request: HttpRequest<any>,\n    errorResponse: HttpErrorResponse\n  ): void;\n\n  /**\n   * Error handlers are matched by the error `responseStatus` (i.e. 404). On top of the matching status\n   * a priority can be added to distinguish multiple handles for the same response status.\n   */\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return errorResponse.status === this.responseStatus;\n  }\n\n  /**\n   * Converts error description to translation key format.\n   *\n   * Example: 'User is disabled' will be transformed to 'user_is_disabled'.\n   */\n  getErrorTranslationKey(reason: string): string {\n    const translationPrefix = `httpHandlers.badRequest`;\n\n    if (!reason) {\n      return `${translationPrefix}PleaseLoginAgain`;\n    }\n\n    return `${translationPrefix}.${reason.toLowerCase().replace(/ /g, '_')}`;\n  }\n\n  abstract getPriority?(): Priority;\n\n  /**\n   * Returns true when invoked on the server (SSR).\n   *\n   * Added in 3.2, depends on the injected `platformId`.\n   */\n  protected isSsr(): boolean {\n    if (this.platformId) {\n      return !isPlatformBrowser(this.platformId);\n    }\n    return false;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BadGatewayHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.BAD_GATEWAY;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.badGateway' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ErrorModel } from '../../../../model/misc.model';\nimport { Priority } from '../../../../util/applicable';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\n\nconst OAUTH_ENDPOINT = '/authorizationserver/oauth/token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BadRequestHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.BAD_REQUEST;\n\n  handleError(request: HttpRequest<any>, response: HttpErrorResponse): void {\n    this.handleBadPassword(request, response);\n    this.handleBadLoginResponse(request, response);\n    this.handleValidationError(request, response);\n    this.handleGuestDuplicateEmail(request, response);\n    this.handleUnknownIdentifierError(request, response);\n  }\n\n  protected handleBadPassword(\n    request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    if (\n      response.url?.includes(OAUTH_ENDPOINT) &&\n      response.error?.error === 'invalid_grant' &&\n      request.body?.get('grant_type') === 'password'\n    ) {\n      this.globalMessageService.add(\n        {\n          key: this.getErrorTranslationKey(response.error?.error_description),\n          params: {\n            errorMessage:\n              response.error.error_description || response.message || '',\n          },\n        },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_CONFIRMATION);\n    }\n  }\n\n  protected handleBadLoginResponse(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ) {\n    this.getErrors(response)\n      .filter((error) => error.type === 'PasswordMismatchError')\n      .forEach(() => {\n        // Updating email and changing password share same http error occurence.\n        // Determine the context of global error message based on request url\n        const url = new URL(_request.url);\n        const key = url.pathname.endsWith('/password')\n          ? 'httpHandlers.badRequestOldPasswordIncorrect'\n          : 'httpHandlers.validationErrors.invalid.password';\n\n        this.globalMessageService.add(\n          { key },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected handleValidationError(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    this.getErrors(response)\n      .filter((e) => e.type === 'ValidationError')\n      .forEach((error) => {\n        this.globalMessageService.add(\n          {\n            key: `httpHandlers.validationErrors.${error.reason}.${error.subject}`,\n          },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected handleGuestDuplicateEmail(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    this.getErrors(response)\n      .filter((e) => e.type === 'DuplicateUidError')\n      .forEach((error) => {\n        this.globalMessageService.add(\n          {\n            key: 'httpHandlers.badRequestGuestDuplicateEmail',\n            params: {\n              errorMessage: error.message || '',\n            },\n          },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected handleUnknownIdentifierError(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    this.getErrors(response)\n      .filter((e) => e.type === 'UnknownIdentifierError')\n      .forEach((error) => {\n        this.globalMessageService.add(\n          error.message\n            ? error.message\n            : { key: 'httpHandlers.unknownIdentifier' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors || []).filter(\n      (error: ErrorModel) => error.type !== 'JaloObjectNoLongerValidError'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConflictHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.CONFLICT;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.conflict' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../../../../auth/user-auth/facade/auth.service';\nimport { OccEndpointsService } from '../../../../occ/services/occ-endpoints.service';\nimport { Priority } from '../../../../util/applicable';\nimport { GlobalMessageService } from '../../../facade/global-message.service';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ForbiddenHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.FORBIDDEN;\n\n  handleError(request: HttpRequest<any>) {\n    if (\n      request.url.endsWith(\n        this.occEndpoints.buildUrl('user', {\n          urlParams: { userId: 'current' },\n        })\n      )\n    ) {\n      this.authService.logout();\n    }\n    this.globalMessageService.add(\n      { key: 'httpHandlers.forbidden' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n\n  constructor(\n    protected globalMessageService: GlobalMessageService,\n    protected authService: AuthService,\n    protected occEndpoints: OccEndpointsService\n  ) {\n    super(globalMessageService);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GatewayTimeoutHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.GATEWAY_TIMEOUT;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.gatewayTimeout' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InternalServerErrorHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.INTERNAL_SERVER_ERROR;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.internalServerError' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotFoundHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.NOT_FOUND;\n\n  handleError(): void {\n    // Intentional empty error handler to avoid we fallabck to the unknown error handler\n  }\n\n  getPriority() {\n    return Priority.LOW;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable, isDevMode } from '@angular/core';\nimport { Priority } from '../../../../util/applicable';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\n\n/**\n * Unknown Error Handler works as an fallback, to handle errors that were\n * not handled by any other error handlers\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnknownErrorHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.UNKNOWN;\n\n  /**\n   * hasMatch always returns true, to mach all errors\n   */\n  hasMatch(_errorResponse: HttpErrorResponse): boolean {\n    return true;\n  }\n\n  handleError(_request: HttpRequest<any>, errorResponse: HttpErrorResponse) {\n    if (isDevMode() || this.isSsr()) {\n      console.warn(`An unknown http error occurred\\n`, errorResponse.message);\n    }\n  }\n\n  /**\n   * Fallback priority assures that the handler is used as a last resort\n   */\n  getPriority() {\n    return Priority.FALLBACK;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './bad-gateway/bad-gateway.handler';\nexport * from './bad-request/bad-request.handler';\nexport * from './conflict/conflict.handler';\nexport * from './forbidden/forbidden.handler';\nexport * from './gateway/gateway-timeout.handler';\nexport * from './http-error.handler';\nexport * from './internal-server/internal-server.handler';\nexport * from './not-found/not-found.handler';\nexport * from './unknown-error/unknown-error.handler';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, shareReplay } from 'rxjs/operators';\nimport { UnifiedInjector } from '../../lazy-loading/unified-injector';\nimport { resolveApplicable } from '../../util/applicable';\nimport { getLastValueSync } from '../../util/rxjs/get-last-value-sync';\nimport { HttpErrorHandler } from './handlers/http-error.handler';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(protected unifiedInjector: UnifiedInjector) {}\n\n  protected handlers$: Observable<HttpErrorHandler[]> = this.unifiedInjector\n    .getMulti(HttpErrorHandler)\n    .pipe(shareReplay(1));\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((response: any) => {\n        if (response instanceof HttpErrorResponse) {\n          this.handleErrorResponse(request, response);\n        }\n        return throwError(response);\n      })\n    );\n  }\n\n  protected handleErrorResponse(\n    request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    const handler = this.getResponseHandler(response);\n    if (handler) {\n      handler.handleError(request, response);\n    }\n  }\n\n  /**\n   * return the error handler that matches the `HttpResponseStatus` code.\n   * If no handler is available, the UNKNOWN handler is returned.\n   */\n  protected getResponseHandler(\n    response: HttpErrorResponse\n  ): HttpErrorHandler | undefined {\n    return resolveApplicable(getLastValueSync(this.handlers$) ?? [], [\n      response,\n    ]);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport {\n  BadGatewayHandler,\n  BadRequestHandler,\n  ConflictHandler,\n  ForbiddenHandler,\n  GatewayTimeoutHandler,\n  HttpErrorHandler,\n  InternalServerErrorHandler,\n  NotFoundHandler,\n  UnknownErrorHandler,\n} from './handlers/index';\nimport { HttpErrorInterceptor } from './http-error.interceptor';\n\nexport const errorHandlers: Provider[] = [\n  {\n    provide: HttpErrorHandler,\n    useExisting: UnknownErrorHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: BadGatewayHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: BadRequestHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: ConflictHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: ForbiddenHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: GatewayTimeoutHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: InternalServerErrorHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: NotFoundHandler,\n    multi: true,\n  },\n];\n\nexport const httpErrorInterceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: HttpErrorInterceptor,\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Translatable } from '../../../i18n/translatable';\nimport {\n  GlobalMessage,\n  GlobalMessageType,\n} from '../../models/global-message.model';\nimport { GlobalMessageActions } from '../actions/index';\nimport { GlobalMessageState } from '../global-message-state';\n\nexport const initialState: GlobalMessageState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: GlobalMessageActions.GlobalMessageAction\n): GlobalMessageState {\n  switch (action.type) {\n    case GlobalMessageActions.ADD_MESSAGE: {\n      const message: GlobalMessage = action.payload;\n\n      if (state.entities[message.type] === undefined) {\n        return {\n          ...state,\n          entities: {\n            ...state.entities,\n            [message.type]: [message.text],\n          },\n        };\n      } else {\n        const currentMessages: Translatable[] = state.entities[message.type];\n        return {\n          ...state,\n          entities: {\n            ...state.entities,\n            [message.type]: [...currentMessages, message.text],\n          },\n        };\n      }\n    }\n\n    case GlobalMessageActions.REMOVE_MESSAGE: {\n      const msgType: GlobalMessageType = action.payload.type;\n      const msgIndex: number = action.payload.index;\n      if (\n        Object.keys(state.entities).length === 0 ||\n        !state.entities[msgType]\n      ) {\n        return state;\n      }\n\n      const messages = [...state.entities[msgType]];\n      messages.splice(msgIndex, 1);\n\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [msgType]: messages,\n        },\n      };\n    }\n\n    case GlobalMessageActions.REMOVE_MESSAGES_BY_TYPE: {\n      const entities = {\n        ...state.entities,\n        [action.payload]: [],\n      };\n      return {\n        ...state,\n        entities,\n      };\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducer } from '@ngrx/store';\nimport { GlobalMessageState } from '../global-message-state';\nimport * as fromGlobalMessage from './global-message.reducer';\n\nexport function getReducers(): ActionReducer<GlobalMessageState, any> {\n  return fromGlobalMessage.reducer;\n}\n\nexport const reducerToken: InjectionToken<ActionReducer<GlobalMessageState>> =\n  new InjectionToken<ActionReducer<GlobalMessageState>>(\n    'GlobalMessageReducers'\n  );\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { reducerToken, reducerProvider } from './reducers/index';\nimport { GLOBAL_MESSAGE_FEATURE } from './global-message-state';\nimport { StateModule } from '../../state/state.module';\n\n@NgModule({\n  imports: [\n    StateModule,\n    StoreModule.forFeature(GLOBAL_MESSAGE_FEATURE, reducerToken),\n  ],\n  providers: [reducerProvider],\n})\nexport class GlobalMessageStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class ObjectComparisonUtils {\n  static shallowEqualObjects(objA: object, objB: object): boolean {\n    if (objA === objB) {\n      return true;\n    }\n    if (!objA || !objB) {\n      return false;\n    }\n    const aKeys = Object.keys(objA);\n    const bKeys = Object.keys(objB);\n    const aKeysLen = aKeys.length;\n    const bKeysLen = bKeys.length;\n\n    if (aKeysLen !== bKeysLen) {\n      return false;\n    }\n    for (let i = 0; i < aKeysLen; i++) {\n      const key = aKeys[i];\n      if (objA[key as keyof Object] !== objB[key as keyof Object]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static deepEqualObjects(objA: object, objB: object): boolean {\n    if (objA === objB) {\n      return true; // if both objA and objB are null or undefined and exactly the same\n    } else if (!(objA instanceof Object) || !(objB instanceof Object)) {\n      return false; // if they are not strictly equal, they both need to be Objects\n    } else if (objA.constructor !== objB.constructor) {\n      // they must have the exact same prototype chain, the closest we can do is\n      // test their constructor.\n      return false;\n    } else {\n      return this.compareObjectProperties(objA, objB);\n    }\n  }\n\n  protected static compareObjectProperties(objA: object, objB: object) {\n    for (const key in objA) {\n      if (!objA.hasOwnProperty(key)) {\n        continue; // other properties were tested using objA.constructor === y.constructor\n      }\n      if (!objB.hasOwnProperty(key)) {\n        return false; // allows to compare objA[ key ] and objB[ key ] when set to undefined\n      }\n      if (objA[key as keyof Object] === objB[key as keyof Object]) {\n        continue; // if they have the same strict value or identity then they are equal\n      }\n      if (typeof objA[key as keyof Object] !== 'object') {\n        return false; // Numbers, Strings, Functions, Booleans must be strictly equal\n      }\n      if (\n        !this.deepEqualObjects(\n          objA[key as keyof Object],\n          objB[key as keyof Object]\n        )\n      ) {\n        return false;\n      }\n    }\n    for (const key in objB) {\n      if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static countOfDeepEqualObjects(obj: any, arr: Array<any>): number {\n    return arr.reduce((acc, curr) => {\n      if (this.deepEqualObjects(obj, curr)) {\n        acc++;\n      }\n      return acc;\n    }, 0);\n  }\n\n  static indexOfFirstOccurrence(obj: any, arr: Array<any>): number | undefined {\n    for (let index = 0; index < arr.length; index++) {\n      if (this.deepEqualObjects(arr[index], obj)) {\n        return index;\n      }\n    }\n  }\n}\n\n// CHECK SONAR\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport {\n  concatMap,\n  delay,\n  filter,\n  map,\n  pluck,\n  switchMap,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { Translatable } from '../../../i18n/translatable';\nimport { ObjectComparisonUtils } from '../../../util/object-comparison-utils';\nimport { isNotUndefined } from '../../../util/type-guards';\nimport { GlobalMessageConfig } from '../../config/global-message-config';\nimport { GlobalMessage } from '../../models/global-message.model';\nimport { GlobalMessageActions } from '../actions/index';\nimport { StateWithGlobalMessage } from '../global-message-state';\nimport { GlobalMessageSelectors } from '../selectors/index';\n\n@Injectable()\nexport class GlobalMessageEffect {\n  removeDuplicated$: Observable<GlobalMessageActions.RemoveMessage> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(GlobalMessageActions.ADD_MESSAGE),\n        pluck('payload'),\n        switchMap((message: GlobalMessage) =>\n          of(message.text).pipe(\n            withLatestFrom(\n              this.store.pipe(\n                select(\n                  GlobalMessageSelectors.getGlobalMessageEntitiesByType(\n                    message.type\n                  )\n                )\n              )\n            ),\n            filter(\n              ([text, messages]: [Translatable, Translatable[]]) =>\n                ObjectComparisonUtils.countOfDeepEqualObjects(text, messages) >\n                1\n            ),\n            map(([text, messages]: [Translatable, Translatable[]]) => {\n              const index = ObjectComparisonUtils.indexOfFirstOccurrence(\n                text,\n                messages\n              );\n              if (index !== undefined) {\n                return new GlobalMessageActions.RemoveMessage({\n                  type: message.type,\n                  index,\n                });\n              }\n            }),\n            filter(isNotUndefined)\n          )\n        )\n      )\n    );\n\n  hideAfterDelay$:\n    | Observable<GlobalMessageActions.RemoveMessage>\n    | (() => Observable<never>) = createEffect(() =>\n    isPlatformBrowser(this.platformId) // we don't want to run this logic when doing SSR\n      ? this.actions$.pipe(\n          ofType(GlobalMessageActions.ADD_MESSAGE),\n          pluck('payload'),\n          concatMap((message: GlobalMessage) => {\n            const config = this.config.globalMessages?.[message.type];\n            return this.store.pipe(\n              select(\n                GlobalMessageSelectors.getGlobalMessageCountByType(message.type)\n              ),\n              take(1),\n              filter(\n                (count: number) =>\n                  ((config && config.timeout !== undefined) ||\n                    message.timeout !== undefined) &&\n                  count > 0\n              ),\n              delay((message.timeout as number) || (config?.timeout as number)),\n              switchMap(() =>\n                of(\n                  new GlobalMessageActions.RemoveMessage({\n                    type: message.type,\n                    index: 0,\n                  })\n                )\n              )\n            );\n          })\n        )\n      : // workaround is required due to NGRX mutating a global static\n        // observable EMPTY, causing to throw an error if we have\n        // effect registered on the same observable twice\n        () => EMPTY\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<StateWithGlobalMessage>,\n    private config: GlobalMessageConfig,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GlobalMessageType } from '../models/global-message.model';\nimport { GlobalMessageConfig } from './global-message-config';\n\nexport const defaultGlobalMessageConfig: GlobalMessageConfig = {\n  globalMessages: {\n    [GlobalMessageType.MSG_TYPE_CONFIRMATION]: {\n      timeout: 3000,\n    },\n    [GlobalMessageType.MSG_TYPE_INFO]: {\n      timeout: 3000,\n    },\n    [GlobalMessageType.MSG_TYPE_ERROR]: {\n      timeout: 7000,\n    },\n    [GlobalMessageType.MSG_TYPE_WARNING]: {\n      timeout: 7000,\n    },\n    [GlobalMessageType.MSG_TYPE_ASSISTIVE]: {\n      timeout: 7000,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport {\n  errorHandlers,\n  httpErrorInterceptors,\n} from './http-interceptors/index';\nimport { GlobalMessageStoreModule } from './store/global-message-store.module';\nimport { GlobalMessageEffect } from './store/effects/global-message.effect';\n\nimport { defaultGlobalMessageConfig } from './config/default-global-message-config';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({\n  imports: [\n    GlobalMessageStoreModule,\n    EffectsModule.forFeature([GlobalMessageEffect]),\n  ],\n  providers: [provideDefaultConfig(defaultGlobalMessageConfig)],\n})\nexport class GlobalMessageModule {\n  static forRoot(): ModuleWithProviders<GlobalMessageModule> {\n    return {\n      ngModule: GlobalMessageModule,\n      providers: [...errorHandlers, ...httpErrorInterceptors],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/global-message-config';\nexport * from './facade/index';\nexport * from './global-message.module';\nexport * from './http-interceptors/handlers/index';\nexport * from './http-interceptors/index';\nexport * from './models/global-message.model';\nexport * from './models/response-status.model';\nexport * from './store/actions/index';\nexport * from './store/global-message-state';\nexport * from './store/selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '../../occ/config/occ-config';\n\nexport const defaultBackendHttpTimeoutConfig: OccConfig = {\n  backend: {\n    timeout: {\n      server: 20_000,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpContextToken } from '@angular/common/http';\n\n/**\n * Angular HttpContext to configure a timeout for a HTTP request.\n *\n * Allows for configuring different timeout time per platform (in server vs. in browser).\n *\n * When undefined, no timeout will be applied.\n */\nexport const HTTP_TIMEOUT_CONFIG = new HttpContextToken<\n  HttpTimeoutConfig | undefined\n>(() => undefined);\n\n/**\n * Configuration for timeout of HTTP requests\n */\nexport interface HttpTimeoutConfig {\n  /**\n   * Timeout in milliseconds for backend requests made in a server.\n   */\n  server?: number;\n\n  /**\n   * Timeout in milliseconds for backend requests made in a browser.\n   */\n  browser?: number;\n}\n\nexport abstract class BackendHttpTimeoutConfig {\n  timeout?: HttpTimeoutConfig;\n}\n\ndeclare module '../../occ/config/occ-config' {\n  interface BackendConfig extends BackendHttpTimeoutConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpEventType,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NEVER, Observable, of, TimeoutError } from 'rxjs';\nimport { catchError, startWith, switchMap, timeout } from 'rxjs/operators';\nimport { OccConfig } from '../../occ/config/occ-config';\nimport { WindowRef } from '../../window/window-ref';\nimport { HTTP_TIMEOUT_CONFIG } from './http-timeout.config';\n\n/**\n * It throws an error when a request takes longer than the specified time.\n */\n@Injectable({ providedIn: 'root' })\nexport class HttpTimeoutInterceptor implements HttpInterceptor {\n  constructor(protected windowRef: WindowRef, protected config: OccConfig) {}\n\n  /**\n   * It throws an error when a request takes longer than the specified time.\n   *\n   * It starts counting time for timeout only after the request is sent.\n   */\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const timeoutValue = this.getTimeoutValue(request);\n    if (typeof timeoutValue === 'undefined') {\n      return next.handle(request);\n    }\n\n    return next.handle(request).pipe(\n      switchMap((event) => {\n        // When event `HttpEventType.Sent` happens, let's start counting time for timeout.\n        // But when event `HttpEventType.Response` is received, `switchMap` will unsubscribe from the following timeout observable.\n        if (event.type === HttpEventType.Sent) {\n          return NEVER.pipe(startWith(event), timeout(timeoutValue));\n        }\n        return of(event);\n      }),\n      catchError((error) => {\n        throw this.convertTimeoutToHttpErrorResponse({\n          error,\n          request,\n          timeoutValue,\n        });\n      })\n    );\n  }\n\n  /**\n   * Returns the configured timeout value for the given request.\n   *\n   * The timeout can be configured specifically for a certain request\n   * via HttpContextToken `HTTP_TIMEOUT_CONFIG`. When it's not available,\n   * the value is taken from the global config `config.backend.timeout`.\n   *\n   * Depending on the platform (browser or server), the configured timeout value can be different.\n   */\n  protected getTimeoutValue(request: HttpRequest<unknown>): number | undefined {\n    const localTimeoutConfig = request.context.get(HTTP_TIMEOUT_CONFIG);\n    const globalTimeoutConfig = this.config?.backend?.timeout;\n    const timeoutConfig = localTimeoutConfig ?? globalTimeoutConfig ?? {};\n    return this.windowRef.isBrowser()\n      ? timeoutConfig?.browser\n      : timeoutConfig?.server;\n  }\n\n  /**\n   * It converts an RxJs `TimeoutError` (caused by the `timeout()` operator),\n   * to a manually crafted `HttpErrorResponse` object.\n   *\n   * If the error is not an RxJs `TimeoutError`, it just returns the original error.\n   */\n  protected convertTimeoutToHttpErrorResponse({\n    error,\n    request,\n    timeoutValue,\n  }: {\n    error: unknown;\n    request: HttpRequest<unknown>;\n    timeoutValue: number;\n  }): unknown | HttpErrorResponse {\n    if (error instanceof TimeoutError) {\n      // create a new Error here, to record the current stacktrace (which is not present in RxJs TimeoutError)\n      const cxHttpTimeoutError = this.buildError(request, timeoutValue);\n\n      return new HttpErrorResponse({\n        url: request.url,\n        error: cxHttpTimeoutError,\n      });\n    }\n    return error;\n  }\n\n  protected buildError(\n    request: HttpRequest<unknown>,\n    timeoutValue: number\n  ): Error {\n    const message = `Request to URL '${request.url}' exceeded expected time of ${timeoutValue}ms and was aborted.`;\n\n    // If an HTTP call times out, it is considered an unexpected error.\n    // To assist with troubleshooting, the error is logged to the console.\n    console.warn(message);\n\n    return new Error(message);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '../../config/config-providers';\nimport { defaultBackendHttpTimeoutConfig } from './default-http-timeout.config';\nimport { HttpTimeoutInterceptor } from './http-timeout.interceptor';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useExisting: HttpTimeoutInterceptor,\n      multi: true,\n    },\n    provideDefaultConfig(defaultBackendHttpTimeoutConfig),\n  ],\n})\nexport class HttpTimeoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-http-timeout.config';\nexport * from './http-timeout.config';\nexport * from './http-timeout.interceptor';\nexport * from './http-timeout.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpTimeoutModule } from './http-timeout/http-timeout.module';\n\n@NgModule({\n  imports: [HttpTimeoutModule],\n})\nexport class HttpModule {\n  static forRoot(): ModuleWithProviders<HttpModule> {\n    return {\n      ngModule: HttpModule,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './http-timeout/index';\nexport * from './http.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\nimport { TranslationResources } from '../translation-resources';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class I18nConfig {\n  i18n?: {\n    /**\n     * When there are missing translation resources for the active language, the fallback language will be used.\n     */\n    fallbackLang?: string | false;\n\n    /**\n     * Configuration for lazy loading of translation files.\n     * For eager loading of translations please use config option `i18n.resources`\n     */\n\n    backend?: {\n      /**\n       * The path to JSON translations. It should contain placeholders:\n       * - `{{lng}}` for language\n       * - `{{ns}}` for the name of chunk.\n       *\n       * Example:\n       * `assets/i18n-assets/{{lng}}/{{ns}}.json`\n       */\n\n      loadPath?: string;\n    };\n\n    /**\n     * Reference to translation resources that are eagerly bundled with JS app.\n     * For lazy loading of translations please use config option `i18n.backend` instead.\n     */\n    resources?: TranslationResources;\n\n    /**\n     * Logs i18n events (like loading translation resources) to the console. Don't use in production!\n     */\n    debug?: boolean;\n\n    /**\n     * Mapping that assigns keys' namespaces to specific chunks. The main purpose of chunks is to lazy load them.\n     */\n    chunks?: {\n      [chunk: string]: string[];\n    };\n  };\n}\n\ndeclare module '../../config/config-tokens' {\n  interface Config extends I18nConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ConfigInitializer } from '../../config/config-initializer/config-initializer';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { I18nConfig } from './i18n-config';\n\n@Injectable({ providedIn: 'root' })\nexport class I18nConfigInitializer implements ConfigInitializer {\n  readonly scopes = ['i18n.fallbackLang'];\n  readonly configFactory = () => this.resolveConfig().toPromise();\n\n  constructor(protected configInit: ConfigInitializerService) {}\n\n  /**\n   * Resolves the `fallbackLang` based on the default language from config `context.language` .\n   */\n  protected resolveConfig(): Observable<I18nConfig> {\n    return this.configInit.getStable('context.language').pipe(\n      map((config) => ({\n        i18n: {\n          // the first language in the array is the default one\n          fallbackLang: config?.context?.language?.[0],\n        },\n      }))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DatePipe, getLocaleId } from '@angular/common';\nimport { isDevMode, Pipe, PipeTransform } from '@angular/core';\nimport { LanguageService } from '../site-context/facade/language.service';\n\n// type CxDatePipe, not DatePipe, due to conflict with Angular's DatePipe - problem occurs for the backward compatibility compiler of Ivy\n@Pipe({ name: 'cxDate' })\nexport class CxDatePipe extends DatePipe implements PipeTransform {\n  constructor(protected language: LanguageService) {\n    super('');\n  }\n\n  // TODO: Replace `any` to match strict types from angular in 4.0\n  // Overload to support stricter type check from angular 11 onwards\n  transform(value: any, format?: string, timezone?: string): string | null;\n  transform(value: null | undefined, format?: string, timezone?: string): null;\n  transform(value: any, format?: string, timezone?: string): string | null {\n    return super.transform(value, format, timezone, this.getLang());\n  }\n\n  private getLang() {\n    const lang = this.getActiveLang();\n    try {\n      getLocaleId(lang);\n      return lang;\n    } catch {\n      this.reportMissingLocaleData(lang);\n      return 'en';\n    }\n  }\n\n  private getActiveLang(): string {\n    let result = '';\n    this.language\n      .getActive()\n      .subscribe((lang) => (result = lang))\n      .unsubscribe();\n    return result;\n  }\n\n  private reportMissingLocaleData(lang: string) {\n    if (isDevMode()) {\n      console.warn(\n        `cxDate pipe: No locale data registered for '${lang}' (see https://angular.io/api/common/registerLocaleData).`\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DecimalPipe, getLocaleId } from '@angular/common';\nimport { isDevMode, Pipe, PipeTransform } from '@angular/core';\nimport { LanguageService } from '../site-context/facade/language.service';\n\n@Pipe({ name: 'cxNumeric' })\nexport class CxNumericPipe extends DecimalPipe implements PipeTransform {\n  constructor(protected language: LanguageService) {\n    super('');\n  }\n\n  transform(value: any | number | string, digitsInfo?: string): string | null;\n  transform(value: null | undefined, digitsInfo?: string): null;\n  transform(value: any, digitsInfo?: string): string | null {\n    return super.transform(value, digitsInfo, this.getLang());\n  }\n\n  protected getLang(): string {\n    const lang = this.getActiveLang();\n    try {\n      getLocaleId(lang);\n      return lang;\n    } catch {\n      this.reportMissingLocaleData(lang);\n      return 'en';\n    }\n  }\n\n  protected getActiveLang(): string {\n    let result = '';\n    this.language\n      .getActive()\n      .subscribe((lang) => (result = lang))\n      .unsubscribe();\n    return result;\n  }\n\n  protected reportMissingLocaleData(lang: string): void {\n    if (isDevMode()) {\n      console.warn(\n        `cxNumeric pipe: No locale data registered for '${lang}' (see https://angular.io/api/common/registerLocaleData).`\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { I18nConfig } from './i18n-config';\n\nexport const defaultI18nConfig: I18nConfig = {\n  i18n: {\n    fallbackLang: undefined,\n    debug: false,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { InitOptions } from 'i18next';\nimport { Applicable } from '../../../util';\n\n/**\n * Configures a specific i18next backend plugin, to allow for loading translations from external resources.\n */\n@Injectable()\nexport abstract class I18nextBackendInitializer implements Applicable {\n  /**\n   * Configures an i18next backend plugin, to allow for loading translations from external resources.\n   *\n   * @returns Additional configuration to be used when initializing the i18next instance.\n   */\n  abstract initialize(): InitOptions;\n\n  /**\n   * Returns `true` if the backend is applicable.\n   */\n  hasMatch?(...params: any[]): boolean;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport i18next, { i18n } from 'i18next';\n\n/**\n * The instance of i18next.\n *\n * Each SSR request gets its own instance of i18next.\n *\n * The reference to the static global instance of `i18next` (`import i18next from 'i18next`)\n * should not be used anywhere else, because otherwise it would be shared in between all SSR requests\n * and can cause concurrency issues.\n */\nexport const I18NEXT_INSTANCE = new InjectionToken<i18n>('I18NEXT_INSTANCE', {\n  providedIn: 'root',\n  factory: () => i18next.createInstance(),\n});\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { inject, InjectionToken } from '@angular/core';\nimport type { BackendOptions, RequestCallback } from 'i18next-http-backend';\n\nexport type I18nextHttpBackendClient = BackendOptions['request'];\n\n/**\n * Function to be used by the `i18next-http-backend` plugin for loading translations via http.\n */\nexport const I18NEXT_HTTP_BACKEND_CLIENT = new InjectionToken<\n  BackendOptions['request']\n>('I18NEXT_HTTP_BACKEND_CLIENT', {\n  providedIn: 'root',\n  factory: (): I18nextHttpBackendClient => {\n    const httpClient = inject(HttpClient);\n\n    // Function appropriate for i18next to make http calls for lazy-loaded translation files.\n    // See docs for `i18next-http-backend`: https://github.com/i18next/i18next-http-backend#backend-options\n    //\n    // It uses Angular HttpClient under the hood, so it works in SSR.\n    return (\n      _options: BackendOptions,\n      url: string,\n      _payload: object | string,\n      callback: RequestCallback\n    ) => {\n      httpClient.get(url, { responseType: 'text' }).subscribe(\n        (data) => callback(null, { status: 200, data }),\n        (error) =>\n          callback(error, {\n            // a workaround for https://github.com/i18next/i18next-http-backend/issues/82\n            data: null as any,\n            status: error.status,\n          })\n      );\n    };\n  },\n});\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable } from '@angular/core';\nimport type { i18n, InitOptions } from 'i18next';\nimport i18nextHttpBackend, { BackendOptions } from 'i18next-http-backend';\nimport { WindowRef } from '../../../window/window-ref';\nimport { I18nConfig } from '../../config/i18n-config';\nimport { I18NEXT_INSTANCE } from '../i18next-instance';\nimport { I18nextBackendInitializer } from './i18next-backend.initializer';\nimport {\n  I18nextHttpBackendClient,\n  I18NEXT_HTTP_BACKEND_CLIENT,\n} from './i18next-http-backend-client';\n\n/**\n * Configures an i18next HTTP backend plugin,\n * to allow for loading translations via HTTP.\n */\n@Injectable({ providedIn: 'root' })\nexport class I18nextHttpBackendInitializer\n  implements I18nextBackendInitializer\n{\n  constructor(\n    @Inject(I18NEXT_INSTANCE) protected i18next: i18n,\n    @Inject(I18NEXT_HTTP_BACKEND_CLIENT)\n    protected i18nextHttpClient: I18nextHttpBackendClient,\n    protected config: I18nConfig,\n    protected windowRef: WindowRef\n  ) {}\n\n  /**\n   * Tells whether this i18next backend is applicable, based on the configuration.\n   */\n  hasMatch(): boolean {\n    return !!this.config.i18n?.backend?.loadPath;\n  }\n\n  /**\n   * @override\n   * Configures an i18next HTTP backend plugin,\n   * to allow for loading translations via HTTP.\n   */\n  initialize(): InitOptions {\n    this.i18next.use(i18nextHttpBackend);\n    return { backend: this.getBackendConfig() };\n  }\n\n  /**\n   * Returns the configuration for the i18next-http-backend plugin.\n   */\n  protected getBackendConfig(): BackendOptions {\n    if (!this.config.i18n?.backend?.loadPath) {\n      throw new Error('Missing config `i18n.backend.loadPath`.');\n    }\n\n    const loadPath = this.getLoadPath(this.config.i18n.backend.loadPath);\n\n    const backend: BackendOptions = {\n      loadPath,\n      request: this.i18nextHttpClient,\n\n      // Disable the periodical reloading. Otherwise SSR would not finish due to the pending task `setInterval()`\n      // See source code of `i18next-http-backend` : https://github.com/i18next/i18next-http-backend/blob/00b7e8f67abf8372af17529b51190a7e8b17e3d8/lib/index.js#L40-L41\n      reloadInterval: false,\n    };\n    return backend;\n  }\n\n  /**\n   * Resolves the relative path to the absolute one in SSR, using the server request's origin.\n   * It's needed, because Angular Universal doesn't support relative URLs in HttpClient. See Angular issues:\n   * - https://github.com/angular/angular/issues/19224\n   * - https://github.com/angular/universal/issues/858\n   */\n  protected getLoadPath(path: string): string {\n    if (!this.windowRef.isBrowser() && !path.match(/^http(s)?:\\/\\//)) {\n      if (path.startsWith('/')) {\n        path = path.slice('/'.length);\n      }\n      if (path.startsWith('./')) {\n        path = path.slice('./'.length);\n      }\n      const serverRequestOrigin = this.windowRef.location.origin;\n      return `${serverRequestOrigin}/${path}`;\n    }\n    return path;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport { I18nextBackendInitializer } from './i18next-backend.initializer';\nimport { I18nextHttpBackendInitializer } from './i18next-http-backend.initializer';\n\nexport const i18nextBackendProviders: Provider[] = [\n  {\n    provide: I18nextBackendInitializer,\n    useExisting: I18nextHttpBackendInitializer,\n    multi: true,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject, Subscription, zip } from 'rxjs';\nimport {\n  concatMap,\n  finalize,\n  mergeMap,\n  retry,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\nexport abstract class Command<PARAMS = undefined, RESULT = unknown> {\n  abstract execute(parameters: PARAMS): Observable<RESULT>;\n}\n\nexport enum CommandStrategy {\n  Parallel,\n  Queue,\n  CancelPrevious,\n  ErrorPrevious,\n  // SkipIfOngoing,\n  // ErrorIfOngoing\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommandService implements OnDestroy {\n  protected subscriptions: Subscription = new Subscription();\n\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  create<PARAMS = undefined, RESULT = unknown>(\n    commandFactory: (command: PARAMS) => Observable<any>,\n    options?: { strategy?: CommandStrategy }\n  ): Command<PARAMS, RESULT> {\n    const commands$ = new Subject<PARAMS>();\n    const results$ = new Subject<ReplaySubject<RESULT>>();\n\n    let process$: Observable<any>;\n\n    switch (options?.strategy) {\n      case CommandStrategy.CancelPrevious:\n      case CommandStrategy.ErrorPrevious:\n        process$ = zip(commands$, results$).pipe(\n          switchMap(([cmd, notifier$]) =>\n            commandFactory(cmd).pipe(\n              tap(notifier$),\n              finalize(() =>\n                options.strategy === CommandStrategy.CancelPrevious\n                  ? notifier$.complete()\n                  : notifier$.error(new Error('Canceled by next command'))\n              )\n            )\n          ),\n          retry()\n        );\n        break;\n\n      case CommandStrategy.Parallel:\n        process$ = zip(commands$, results$).pipe(\n          mergeMap(([cmd, notifier$]) =>\n            commandFactory(cmd).pipe(tap(notifier$))\n          ),\n          retry()\n        );\n        break;\n\n      case CommandStrategy.Queue:\n      default:\n        process$ = zip(commands$, results$).pipe(\n          concatMap(([cmd, notifier$]) =>\n            commandFactory(cmd).pipe(tap(notifier$))\n          ),\n          retry()\n        );\n        break;\n    }\n\n    this.subscriptions.add(process$.subscribe());\n\n    const command: Command<PARAMS, RESULT> = new (class extends Command {\n      execute = (parameters: PARAMS | undefined) => {\n        const result$ = new ReplaySubject<RESULT>();\n        results$.next(result$);\n        commands$.next(parameters);\n        return result$;\n      };\n    })();\n\n    return command;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy, Type } from '@angular/core';\nimport {\n  BehaviorSubject,\n  EMPTY,\n  iif,\n  isObservable,\n  merge,\n  Observable,\n  of,\n  Subscription,\n  using,\n} from 'rxjs';\nimport {\n  catchError,\n  distinctUntilChanged,\n  pluck,\n  share,\n  switchMapTo,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { CxEvent } from '../../event/cx-event';\nimport { EventService } from '../../event/event.service';\n\nexport type QueryNotifier = Observable<unknown> | Type<CxEvent>;\n\nexport interface QueryState<T> {\n  loading: boolean;\n  error: false | Error;\n  data: T | undefined;\n}\n\nexport interface Query<RESULT, PARAMS extends unknown[] = []> {\n  get(...params: PARAMS): Observable<RESULT | undefined>;\n  getState(...params: PARAMS): Observable<QueryState<RESULT>>;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QueryService implements OnDestroy {\n  protected subscriptions = new Subscription();\n\n  constructor(protected eventService: EventService) {}\n\n  create<T>(\n    loaderFactory: () => Observable<T>,\n    options?: {\n      /** Reloads the query, while preserving the `data` until the new data is loaded */\n      reloadOn?: QueryNotifier[];\n      /** Resets the query to the initial state */\n      resetOn?: QueryNotifier[];\n    }\n  ): Query<T> {\n    const initialState: QueryState<T> = {\n      data: undefined,\n      error: false,\n      loading: true,\n    };\n\n    const state$ = new BehaviorSubject<QueryState<T>>(initialState);\n\n    // if the query will be unsubscribed from while the data is being loaded, we will end up with the loading flag set to true\n    // we want to retry this load on next subscription\n    const onSubscribeLoad$ = iif(() => state$.value.loading, of(undefined));\n\n    const loadTrigger$ = this.getTriggersStream([\n      onSubscribeLoad$, // we need to evaluate onSubscribeLoad$ before other triggers in order to avoid other triggers changing state$ value\n      ...(options?.reloadOn ?? []),\n      ...(options?.resetOn ?? []),\n    ]);\n\n    const resetTrigger$ = this.getTriggersStream(options?.resetOn ?? []);\n    const reloadTrigger$ = this.getTriggersStream(options?.reloadOn ?? []);\n\n    const load$ = loadTrigger$.pipe(\n      tap(() => {\n        if (!state$.value.loading) {\n          state$.next({ ...state$.value, loading: true });\n        }\n      }),\n      switchMapTo(loaderFactory().pipe(takeUntil(resetTrigger$))),\n      tap((data) => {\n        state$.next({ loading: false, error: false, data });\n      }),\n      catchError((error, sourceStream$) => {\n        state$.next({ loading: false, error, data: undefined });\n        return sourceStream$;\n      }),\n      share()\n    );\n\n    // reload logic\n    if (options?.reloadOn?.length) {\n      this.subscriptions.add(\n        reloadTrigger$.subscribe(() => {\n          if (!state$.value.loading) {\n            state$.next({ ...state$.value, loading: true });\n          }\n        })\n      );\n    }\n\n    // reset logic\n    if (options?.resetOn?.length) {\n      this.subscriptions.add(\n        resetTrigger$.subscribe(() => {\n          if (\n            state$.value.data !== undefined ||\n            state$.value.error !== false ||\n            state$.value.loading !== false\n          ) {\n            state$.next(initialState);\n          }\n        })\n      );\n    }\n\n    const query$ = using(\n      () => load$.subscribe(),\n      () => state$\n    );\n\n    const data$ = query$.pipe(pluck('data'), distinctUntilChanged());\n\n    return { get: () => data$, getState: () => query$ };\n  }\n\n  protected getTriggersStream(triggers: QueryNotifier[]): Observable<unknown> {\n    if (!triggers.length) {\n      return EMPTY;\n    }\n    const observables = triggers.map((trigger) => {\n      if (isObservable(trigger)) {\n        return trigger;\n      }\n      return this.eventService.get(trigger);\n    });\n    return merge(...observables);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './command.service';\nexport * from './query.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './java-reg-exp-converter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Constants for different strings in error details\n\nexport declare const enum OccHttpErrorType {\n  NOT_FOUND_ERROR = 'NotFoundError',\n}\n\nexport declare const enum OccHttpErrorReason {\n  NOT_FOUND_ERROR = 'notFound',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorModel } from '../model/misc.model';\n\n/**\n * A helper function for detecting JaloObjectNoLongerValidError errors\n */\nexport function isJaloError(err: HttpErrorModel): boolean {\n  return err.details?.[0]?.type === 'JaloObjectNoLongerValidError';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Email Standard RFC 5322:\nexport const EMAIL_PATTERN =\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // eslint-disable-line\n\nexport const PASSWORD_PATTERN =\n  /^(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[!@#$%^*()_\\-+{};:.,]).{6,}$/;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Observable,\n  of,\n  OperatorFunction,\n  range,\n  throwError,\n  timer,\n  zip,\n} from 'rxjs';\nimport { map, mergeMap, retryWhen } from 'rxjs/operators';\nimport { HttpErrorModel } from '../../model/misc.model';\n\n/**\n * Options for the back-off operator.\n */\nexport interface BackOffOptions {\n  /**\n   * Function which evaluates if the given error should be handled exponentially.\n   *\n   * If it returns false, the error is re-thrown.\n   * Otherwise, the operation is retried.\n   */\n  shouldRetry?: (err: HttpErrorModel | Error) => boolean;\n\n  /** how many times to perform the back-off. Default value is 3 times. */\n  maxTries?: number;\n\n  /** delay in ms. Default value is 300ms. Assuming the maxTries is set to 3, it means the maximum time spent retrying will be: 1*1*300 + 2*2*300 + 3*3*300 = 4200ms (4.2s) */\n  delay?: number;\n}\n\n/**\n *\n * An operator which performs exponential back-off on the source stream.\n *\n * Source: https://angular.io/guide/practical-observable-usage#exponential-backoff\n *\n * @param errFn for which to perform exponential back-off\n * @param options such as defining `maxTries`, or `delay`\n * @returns either the original error (if the given `errFn` return `false`), or the\n */\nexport function backOff<T>(options?: BackOffOptions): OperatorFunction<T, T> {\n  const shouldRetry = options?.shouldRetry ?? (() => true);\n  const maxTries = options?.maxTries ?? 3;\n  const delay = options?.delay ?? 300;\n\n  // creates a range of maximum retries - starting from 1, up until the given `maxTries`\n  const retry$ = range(1, maxTries + 1);\n  return (source$) =>\n    source$.pipe(\n      // retries the source stream in case of an error.\n      retryWhen<T>((attempts$: Observable<HttpErrorModel | Error>) =>\n        // emits only when both emit at the same time. In practice, this means: emit when error happens again and retried\n        zip(attempts$, retry$).pipe(\n          mergeMap(([attemptError, currentRetry]) => {\n            // if we've re-tried more than the maxTries, OR\n            // if the source error is not the one we want to exponentially retry\n            if (currentRetry > maxTries || !shouldRetry(attemptError)) {\n              return throwError(attemptError);\n            }\n\n            return of(currentRetry);\n          }),\n          // exponential\n          map((currentRetry) => currentRetry * currentRetry),\n          // back-off\n          mergeMap((exponent) => timer(exponent * delay))\n        )\n      )\n    );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './back-off';\nexport * from './get-last-value-sync';\nexport * from './unite-latest';\nexport * from './withdraw-on';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT, isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\nexport enum ScriptPlacement {\n  HEAD = 'head',\n  BODY = 'body',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScriptLoader {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    @Inject(PLATFORM_ID) protected platformId: Object\n  ) {}\n\n  /**\n   * Embeds a javascript from an external URL.\n   *\n   * @param embedOptions\n   * src: URL for the script to be loaded\n   * params: additional parameters to be attached to the given URL\n   * attributes: the attributes of HTML script tag (exclude src)\n   * callback: a function to be invoked after the script has been loaded\n   * errorCallback: function to be invoked after error during script loading\n   * placement: HTML body or head where script will be placed\n   */\n  public embedScript(embedOptions: {\n    src: string;\n    params?: Object;\n    attributes?: Object;\n    callback?: EventListener;\n    errorCallback?: EventListener;\n    placement?: ScriptPlacement;\n  }): void {\n    const {\n      src,\n      params,\n      attributes,\n      callback,\n      errorCallback,\n      placement = ScriptPlacement.HEAD,\n    } = embedOptions;\n\n    const isSSR = isPlatformServer(this.platformId);\n    if ((callback || errorCallback) && isSSR) {\n      return;\n    }\n\n    const source = params ? src + this.parseParams(params) : src;\n    if (!isSSR && this.hasScript(source)) {\n      return;\n    }\n\n    const script: HTMLScriptElement = this.document.createElement('script');\n    script.src = source;\n    script.async = true;\n    script.defer = true;\n\n    if (attributes) {\n      Object.keys(attributes).forEach((key) => {\n        // custom attributes\n        if (key.startsWith('data-')) {\n          script.setAttribute(key, attributes[key as keyof object]);\n        } else {\n          (script as any)[key] = attributes[key as keyof object];\n        }\n      });\n    }\n\n    if (callback) {\n      script.addEventListener('load', callback);\n    }\n    if (errorCallback) {\n      script.addEventListener('error', errorCallback);\n    }\n\n    placement === ScriptPlacement.HEAD\n      ? this.document.head.appendChild(script)\n      : this.document.body.appendChild(script);\n  }\n\n  /**\n   * Indicates if the script is already added to the DOM.\n   */\n  protected hasScript(src?: string): boolean {\n    return !!this.document.querySelector(`script[src=\"${src}\"]`);\n  }\n\n  /**\n   * Parses the given object with parameters to a string \"param1=value1&param2=value2\"\n   * @param params object containing parameters\n   */\n  private parseParams(params: Object): string {\n    let result = '';\n    const keysArray = Object.keys(params);\n    if (keysArray.length > 0) {\n      result =\n        '?' +\n        keysArray\n          .map(\n            (key) =>\n              encodeURI(key) + '=' + encodeURI(params[key as keyof object])\n          )\n          .join('&');\n    }\n    return result;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class TestingTimeUtils {\n  static fakeToLocaleTimeString(mockTime: string, callback: Function): any {\n    const original = Date.prototype.toLocaleTimeString;\n    Date.prototype.toLocaleTimeString = () => mockTime;\n    callback();\n    Date.prototype.toLocaleTimeString = original;\n  }\n\n  static fakeDateTimezoneOffset(offset: number, callback: Function): any {\n    const original = Date.prototype.getTimezoneOffset;\n    Date.prototype.getTimezoneOffset = () => offset;\n    callback();\n    Date.prototype.getTimezoneOffset = original;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class TimeUtils {\n  /**\n   * Returns the local timezone in a format that can be appended to a date-like string.\n   * @param invert (default: false): returns the opposite operator relative to the local timezone\n   *\n   * @example\n   * When locale is set to a CEST timezone, `getLocalTimezoneOffset()` returns '+02:00'\n   * and `getLocalTimezoneOffset(true)` returns '-02:00'\n   */\n  static getLocalTimezoneOffset(invert?: boolean): string {\n    const offset = new Date().getTimezoneOffset() * -1;\n    const hours = Math.abs(Math.floor(offset / 60))\n      .toString()\n      .padStart(2, '0');\n    const minutes = (offset % 60).toString().padStart(2, '0');\n    const sign = offset >= 0 ? (invert ? `-` : `+`) : invert ? `+` : `-`;\n    return `${sign}${hours}:${minutes}`;\n  }\n\n  static convertDateToDatetime(date: string, endOfDay?: boolean): string {\n    return `${date}T${\n      !endOfDay ? '00:00:00' : '23:59:59'\n    }${TimeUtils.getLocalTimezoneOffset()}`;\n  }\n\n  static convertDatetimeToDate(datetime: string): string {\n    return new Date(\n      `${datetime.substring(0, 19)}${TimeUtils.getLocalTimezoneOffset(true)}`\n    )\n      .toISOString()\n      .substring(0, 10);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport type RequiredPick<T extends object, K extends keyof T = keyof T> = Omit<\n  T,\n  K\n> &\n  Required<Pick<T, K>>;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './applicable';\nexport * from './command-query/index';\nexport * from './converter.service';\nexport * from './create-from';\nexport * from './glob.service';\nexport * from './http-params-uri.encoder';\nexport * from './java-reg-exp-converter/index';\nexport * from './normalize-http-error';\nexport * from './occ-http-error-constants';\nexport * from './occ-http-error-handlers';\nexport * from './regex-pattern';\nexport * from './rxjs/index';\nexport * from './script-loader.service';\nexport * from './ssr.tokens';\nexport * from './testing-time-utils';\nexport * from './time-utils';\nexport * from './type-guards';\nexport * from './type-utils';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport type { InitOptions } from 'i18next';\nimport { resolveApplicable } from '../../../util';\nimport { I18nextBackendInitializer } from './i18next-backend.initializer';\n\n/**\n * Configures an i18next backend plugin, to allow for loading translations from external resources.\n *\n * By default it configures and uses the `I18nextHttpBackendService`.\n *\n * It's an extension point to allow for providing potentially different i18next backend plugins.\n * See the list of available plugins: https://www.i18next.com/overview/plugins-and-utils#backends\n */\n@Injectable({ providedIn: 'root' })\nexport class I18nextBackendService {\n  constructor(\n    @Optional()\n    @Inject(I18nextBackendInitializer)\n    protected backendInitializers: I18nextBackendInitializer[] | null\n  ) {}\n\n  /**\n   * Configures an i18next backend plugin, to allow for loading translations from external resources.\n   *\n   * @returns Additional configuration to be used when initializing the i18next instance.\n   */\n  initialize(): InitOptions {\n    const backendInitializer = resolveApplicable(\n      this.backendInitializers ?? []\n    );\n    return backendInitializer?.initialize() ?? {};\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport type { i18n, InitOptions } from 'i18next';\nimport { Subscription } from 'rxjs';\nimport { LanguageService } from '../../site-context/facade/language.service';\nimport { I18nConfig } from '../config/i18n-config';\nimport { TranslationResources } from '../translation-resources';\nimport { I18nextBackendService } from './i18next-backend/i18next-backend.service';\nimport { I18NEXT_INSTANCE } from './i18next-instance';\n\n/**\n * Initializes the i18next instance.\n */\n@Injectable({ providedIn: 'root' })\nexport class I18nextInitializer implements OnDestroy {\n  constructor(\n    @Inject(I18NEXT_INSTANCE) protected i18next: i18n,\n    protected config: I18nConfig,\n    protected languageService: LanguageService,\n    protected i18nextBackendService: I18nextBackendService\n  ) {}\n\n  /**\n   * Initializes the i18next instance.\n   *\n   * @returns Promise that resolves when the i18next instance is initialized.\n   */\n  initialize(): Promise<any> {\n    const i18nextConfig = this.getI18nextConfig();\n    return this.i18next.init(i18nextConfig, () => {\n      // Don't use i18next's 'resources' config key for adding static translations,\n      // because it will disable loading chunks from backend. We add resources here, in the init's callback.\n      this.addTranslationResources();\n      this.synchronizeLanguage();\n    });\n  }\n\n  /**\n   * Returns the configuration for initializing an i18next instance.\n   */\n  protected getI18nextConfig(): InitOptions {\n    let i18nextConfig: InitOptions = {\n      ns: [], // don't preload any namespaces\n      fallbackLng: this.config.i18n?.fallbackLang,\n      debug: this.config.i18n?.debug,\n      interpolation: {\n        escapeValue: false,\n        skipOnVariables: false,\n      },\n    };\n\n    if (this.config.i18n?.backend) {\n      i18nextConfig = {\n        ...i18nextConfig,\n        ...this.i18nextBackendService.initialize(),\n      };\n    }\n\n    return i18nextConfig;\n  }\n\n  /**\n   * Populates the i18next instance with the given static translations.\n   *\n   * @param i18next i18next instance\n   * @param resources translation resources\n   */\n  protected addTranslationResources(): void {\n    const resources: TranslationResources = this.config.i18n?.resources ?? {};\n    Object.keys(resources).forEach((lang) => {\n      Object.keys(resources[lang]).forEach((chunkName) => {\n        this.i18next.addResourceBundle(\n          lang,\n          chunkName,\n          resources[lang][chunkName],\n          true,\n          true\n        );\n      });\n    });\n  }\n\n  protected subscription: Subscription;\n\n  /**\n   * Ensures that when the site context language changes,\n   * the i18next instance is updated with the new language.\n   */\n  protected synchronizeLanguage() {\n    this.subscription =\n      this.subscription ??\n      this.languageService\n        .getActive()\n        .subscribe((lang) => this.i18next.changeLanguage(lang));\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, inject, Provider } from '@angular/core';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { i18nextBackendProviders } from './i18next-backend/i18next-backend.providers';\nimport { I18nextInitializer } from './i18next-initializer';\n\nexport const i18nextProviders: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: () => {\n      const configInitializerService = inject(ConfigInitializerService);\n      const i18nextInitializer = inject(I18nextInitializer);\n      return () =>\n        configInitializerService\n          .getStable('i18n')\n          .toPromise()\n          .then(() => i18nextInitializer.initialize());\n    },\n    multi: true,\n  },\n\n  ...i18nextBackendProviders,\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport { I18nConfig } from './config/i18n-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TranslationChunkService {\n  protected duplicates: { [key: string]: string[] } = {};\n  protected chunks: { [key: string]: string } = {};\n  constructor(protected config: I18nConfig) {\n    const chunks = (config.i18n && config.i18n.chunks) || {};\n    Object.keys(chunks).forEach((chunk) => {\n      chunks[chunk].forEach((key) => {\n        if (this.chunks.hasOwnProperty(key)) {\n          if (!this.duplicates[key]) {\n            this.duplicates[key] = [this.chunks[key]];\n          }\n          this.duplicates[key].push(chunk);\n        } else {\n          this.chunks[key] = chunk;\n        }\n      });\n    });\n    if (Object.keys(this.duplicates).length > 0 && isDevMode()) {\n      this.warnDuplicates(this.duplicates);\n    }\n  }\n\n  protected readonly KEY_SEPARATOR = '.';\n\n  getChunkNameForKey(key: string): string {\n    const mainKey = (key || '').split(this.KEY_SEPARATOR)[0];\n    const chunk = this.chunks && this.chunks[mainKey];\n\n    if (!chunk) {\n      return mainKey; // fallback to main key as a chunk\n    }\n    return chunk;\n  }\n\n  private warnDuplicates(items: { [key: string]: string[] }): void {\n    const dupes: string[] = [];\n    Object.keys(items).forEach((key) => {\n      dupes.push(\n        `* '${key}' found in chunks: ${items[key].join(', ')}. Used '${\n          this.chunks[key]\n        }.${key}'.`\n      );\n    });\n    console.warn(\n      `Duplicated keys has been found in the config of i18n chunks:\\n${dupes.join(\n        '\\n'\n      )}`\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, isDevMode } from '@angular/core';\nimport { i18n } from 'i18next';\nimport { Observable } from 'rxjs';\nimport { I18nConfig } from '../config/i18n-config';\nimport { TranslationChunkService } from '../translation-chunk.service';\nimport { TranslationService } from '../translation.service';\nimport { I18NEXT_INSTANCE } from './i18next-instance';\n\n@Injectable({ providedIn: 'root' })\nexport class I18nextTranslationService implements TranslationService {\n  private readonly NON_BREAKING_SPACE = String.fromCharCode(160);\n  protected readonly NAMESPACE_SEPARATOR = ':';\n\n  constructor(\n    protected config: I18nConfig,\n    protected translationChunk: TranslationChunkService,\n    // Required param added in 3.0.x as a critical bug fix, not subject to the breaking changes policy\n    @Inject(I18NEXT_INSTANCE) protected i18next: i18n\n  ) {}\n\n  translate(\n    key: string,\n    options: any = {},\n    whitespaceUntilLoaded: boolean = false\n  ): Observable<string> {\n    // If we've already loaded the chunk (or failed to load), we should immediately emit the value\n    // (or the fallback value in case the key is missing).\n\n    // Moreover, we SHOULD emit a value (or a fallback value) synchronously (not in a promise/setTimeout).\n    // Otherwise, we the will trigger additional deferred change detection in a view that consumes the returned observable,\n    // which together with `switchMap` operator may lead to an infinite loop.\n\n    const chunkName = this.translationChunk.getChunkNameForKey(key);\n    const namespacedKey = this.getNamespacedKey(key, chunkName);\n\n    return new Observable<string>((subscriber) => {\n      const translate = () => {\n        if (!this.i18next.isInitialized) {\n          return;\n        }\n        if (this.i18next.exists(namespacedKey, options)) {\n          subscriber.next(this.i18next.t(namespacedKey, options));\n        } else {\n          if (whitespaceUntilLoaded) {\n            subscriber.next(this.NON_BREAKING_SPACE);\n          }\n          this.i18next.loadNamespaces(chunkName, () => {\n            if (!this.i18next.exists(namespacedKey, options)) {\n              this.reportMissingKey(key, chunkName);\n              subscriber.next(this.getFallbackValue(namespacedKey));\n            } else {\n              subscriber.next(this.i18next.t(namespacedKey, options));\n            }\n          });\n        }\n      };\n\n      translate();\n      this.i18next.on('languageChanged', translate);\n      return () => this.i18next.off('languageChanged', translate);\n    });\n  }\n\n  loadChunks(chunkNames: string | string[]): Promise<any> {\n    return this.i18next.loadNamespaces(chunkNames);\n  }\n\n  /**\n   * Returns a fallback value in case when the given key is missing\n   * @param key\n   */\n  protected getFallbackValue(key: string): string {\n    return isDevMode() ? `[${key}]` : this.NON_BREAKING_SPACE;\n  }\n\n  private reportMissingKey(key: string, chunkName: string) {\n    if (isDevMode()) {\n      console.warn(\n        `Translation key missing '${key}' in the chunk '${chunkName}'`\n      );\n    }\n  }\n\n  private getNamespacedKey(key: string, chunk: string): string {\n    return chunk + this.NAMESPACE_SEPARATOR + key;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectorRef,\n  isDevMode,\n  OnDestroy,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ObjectComparisonUtils } from '../util/object-comparison-utils';\nimport { Translatable, TranslatableParams } from './translatable';\nimport { TranslationService } from './translation.service';\n\n@Pipe({ name: 'cxTranslate', pure: false })\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n  private lastKey: string;\n  private lastOptions: object;\n  private translatedValue: string;\n  private sub: Subscription;\n\n  constructor(\n    protected service: TranslationService,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  transform(\n    input: Translatable | string,\n    options: TranslatableParams = {}\n  ): string {\n    if (!input) {\n      if (isDevMode()) {\n        console.error(\n          `The given input for the cxTranslate pipe (${input}) is invalid and cannot be translated`\n        );\n      }\n      return '';\n    }\n\n    if ((input as Translatable).raw) {\n      return (input as Translatable).raw ?? '';\n    }\n\n    const key = typeof input === 'string' ? input : input.key;\n    if (typeof input !== 'string') {\n      options = { ...options, ...input.params };\n    }\n\n    this.translate(key, options);\n    return this.translatedValue;\n  }\n\n  private translate(key: any, options: object) {\n    if (\n      key !== this.lastKey ||\n      !ObjectComparisonUtils.shallowEqualObjects(options, this.lastOptions)\n    ) {\n      this.lastKey = key;\n      this.lastOptions = options;\n\n      if (this.sub) {\n        this.sub.unsubscribe();\n      }\n      this.sub = this.service\n        .translate(key, options, true)\n        .subscribe((val) => this.markForCheck(val));\n    }\n  }\n\n  private markForCheck(value: string) {\n    this.translatedValue = value;\n    this.cd.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  ConfigInitializer,\n  CONFIG_INITIALIZER,\n} from '../config/config-initializer/config-initializer';\nimport { provideDefaultConfig } from '../config/config-providers';\nimport { defaultI18nConfig } from './config/default-i18n-config';\nimport { I18nConfig } from './config/i18n-config';\nimport { I18nConfigInitializer } from './config/i18n-config-initializer';\nimport { CxDatePipe } from './date.pipe';\nimport { i18nextProviders } from './i18next/i18next-providers';\nimport { I18nextTranslationService } from './i18next/i18next-translation.service';\nimport { CxNumericPipe } from './numeric.pipe';\nimport { TranslatePipe } from './translate.pipe';\nimport { TranslationService } from './translation.service';\n\nexport function initI18nConfig(\n  configInitializer: I18nConfigInitializer,\n  config: I18nConfig\n): ConfigInitializer | null {\n  /**\n   * If `fallbackLang` was already configured statically\n   */\n  if (config?.i18n?.fallbackLang !== undefined) {\n    return null;\n  }\n  return configInitializer;\n}\n\n@NgModule({\n  declarations: [TranslatePipe, CxDatePipe, CxNumericPipe],\n  exports: [TranslatePipe, CxDatePipe, CxNumericPipe],\n})\nexport class I18nModule {\n  static forRoot(): ModuleWithProviders<I18nModule> {\n    return {\n      ngModule: I18nModule,\n      providers: [\n        provideDefaultConfig(defaultI18nConfig),\n        { provide: TranslationService, useExisting: I18nextTranslationService },\n        ...i18nextProviders,\n        {\n          provide: CONFIG_INITIALIZER,\n          useFactory: initI18nConfig,\n          deps: [I18nConfigInitializer, I18nConfig],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './i18next-backend.initializer';\nexport * from './i18next-backend.providers';\nexport * from './i18next-backend.service';\nexport * from './i18next-http-backend-client';\nexport * from './i18next-http-backend.initializer';\n\n// [CXSPA-2060] deliberately not exporting until CXSPA-2060 is fully implemented:\n// export * from './i18next-resources-to-backend.initializer';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './i18next-backend/index';\nexport * from './i18next-initializer';\nexport * from './i18next-instance';\nexport * from './i18next-translation.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function mockTranslate(key: string | undefined, options: any = {}) {\n  const optionsString = Object.keys(options)\n    .sort()\n    .map((optionName) => `${optionName}:${options[optionName]}`)\n    .join(' ');\n  return optionsString ? `${key} ${optionsString}` : key;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Translatable } from '../translatable';\nimport { mockTranslate } from './mock-translate';\n\n@Pipe({ name: 'cxTranslate' })\nexport class MockTranslatePipe implements PipeTransform {\n  transform(\n    input: Translatable | string,\n    options: object = {}\n  ): string | undefined {\n    if ((input as Translatable).raw) {\n      return (input as Translatable).raw;\n    }\n\n    const key = typeof input === 'string' ? input : input.key;\n    if (typeof input !== 'string') {\n      options = { ...options, ...input.params };\n    }\n    return mockTranslate(key, options);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TranslationService } from '../translation.service';\nimport { mockTranslate } from './mock-translate';\n\n@Injectable()\nexport class MockTranslationService implements TranslationService {\n  translate(\n    key: string,\n    options: any = {},\n    _whitespaceUntilLoaded: boolean = false\n  ): Observable<string> {\n    return new Observable<string>((subscriber) => {\n      const value = mockTranslate(key, options);\n      subscriber.next(value);\n      subscriber.complete();\n    });\n  }\n\n  loadChunks(_chunks: string | string[]): Promise<any> {\n    return Promise.resolve();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxDate' })\nexport class MockDatePipe extends DatePipe implements PipeTransform {\n  transform(value: any, ...args: any[]): any;\n  // Overload to support stricter type check from angular 11 onwards\n  transform(\n    value: Date | string | number | null | undefined,\n    format?: string,\n    timezone?: string,\n    locale = 'en'\n  ): string | null {\n    return super.transform(value, format, timezone, locale);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { MockTranslatePipe } from './mock-translate.pipe';\nimport { TranslationService } from '../translation.service';\nimport { MockTranslationService } from './mock-translation.service';\nimport { MockDatePipe } from './mock-date.pipe';\n\n@NgModule({\n  declarations: [MockTranslatePipe, MockDatePipe],\n  exports: [MockTranslatePipe, MockDatePipe],\n  providers: [\n    { provide: TranslationService, useClass: MockTranslationService },\n  ],\n})\nexport class I18nTestingModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './i18n-testing.module';\nexport * from './mock-translate.pipe';\nexport * from './mock-date.pipe';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface Translatable {\n  key?: string;\n  params?: TranslatableParams;\n  raw?: string;\n}\n\nexport interface TranslatableParams {\n  [param: string]: any;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface TranslationResources {\n  [lang: string]: {\n    [chunkName: string]: {\n      [key: string]: any;\n    };\n  };\n}\nexport interface TranslationChunksConfig {\n  [chunk: string]: string[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/i18n-config';\nexport * from './config/i18n-config-initializer';\nexport * from './date.pipe';\nexport * from './numeric.pipe';\nexport { I18nModule } from './i18n.module';\nexport * from './i18next/index';\nexport * from './testing/index';\nexport * from './translatable';\nexport * from './translate.pipe';\nexport * from './translation-chunk.service';\nexport * from './translation-resources';\nexport * from './translation.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cost-center/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\n@NgModule({})\nexport class CostCenterModule {\n  static forRoot(): ModuleWithProviders<CostCenterModule> {\n    return {\n      ngModule: CostCenterModule,\n      providers: [],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\nexport * from './cost-center.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducer, ActionReducerMap } from '@ngrx/store';\nimport { EntityLoaderState } from '../../../state/utils/entity-loader/entity-loader-state';\nimport { entityLoaderReducer } from '../../../state/utils/entity-loader/entity-loader.reducer';\nimport { PROCESS_FEATURE } from '../process-state';\n\nexport function getReducers<T>(): ActionReducer<EntityLoaderState<T>> {\n  return entityLoaderReducer(PROCESS_FEATURE);\n}\n\nexport const reducerToken: InjectionToken<\n  ActionReducerMap<EntityLoaderState<any>>\n> = new InjectionToken<ActionReducerMap<EntityLoaderState<any>>>(\n  'ProcessReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../state/state.module';\nimport { PROCESS_FEATURE } from './process-state';\nimport { reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [StateModule, StoreModule.forFeature(PROCESS_FEATURE, reducerToken)],\n  providers: [reducerProvider],\n})\nexport class ProcessStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ProcessStoreModule } from './store/process-store.module';\n\n@NgModule({\n  imports: [ProcessStoreModule],\n})\nexport class ProcessModule {\n  static forRoot(): ModuleWithProviders<ProcessModule> {\n    return {\n      ngModule: ProcessModule,\n      providers: [],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './process.module';\nexport * from './store/process-state';\nexport * from './store/selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../../../model/product.model';\nimport { ProductAdapter } from './product.adapter';\nimport { ScopedProductData } from './scoped-product-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductConnector {\n  constructor(protected adapter: ProductAdapter) {}\n\n  get(productCode: string, scope = ''): Observable<Product> {\n    return this.adapter.load(productCode, scope);\n  }\n\n  getMany(products: ScopedProductData[]): ScopedProductData[] {\n    if (!this.adapter.loadMany) {\n      return products.map((product) => ({\n        ...product,\n        data$: this.adapter.load(product.code, product.scope),\n      }));\n    }\n\n    return this.adapter.loadMany(products);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Product } from '../../../model/product.model';\nimport { ScopedData } from '../../../model/scoped-data';\n\n/**\n * Used in product connectors and adapter to load multiple product codes and scopes\n */\nexport interface ScopedProductData extends ScopedData<Product> {\n  code: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product.connector';\nexport * from './product.adapter';\nexport * from './converters';\nexport * from './scoped-product-data';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductReference } from '../../../model/product.model';\nimport { ProductReferencesAdapter } from './product-references.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReferencesConnector {\n  constructor(protected adapter: ProductReferencesAdapter) {}\n\n  get(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): Observable<ProductReference[]> {\n    return this.adapter.load(productCode, referenceType, pageSize);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\nexport * from './product-references.adapter';\nexport * from './product-references.connector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductReviewsAdapter } from './product-reviews.adapter';\nimport { Review } from '../../../model/product.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReviewsConnector {\n  constructor(protected adapter: ProductReviewsAdapter) {}\n\n  get(productCode: string, maxCount?: number): Observable<Review[]> {\n    return this.adapter.load(productCode, maxCount);\n  }\n\n  add(productCode: string, review: any): Observable<Review> {\n    return this.adapter.post(productCode, review);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-reviews.connector';\nexport * from './product-reviews.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ProductSearchAdapter } from './product-search.adapter';\nimport { SearchConfig } from '../../model/search-config';\nimport { Observable } from 'rxjs';\nimport {\n  Suggestion,\n  ProductSearchPage,\n} from '../../../model/product-search.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSearchConnector {\n  constructor(protected adapter: ProductSearchAdapter) {}\n\n  search(\n    query: string,\n    searchConfig?: SearchConfig\n  ): Observable<ProductSearchPage> {\n    return this.adapter.search(query, searchConfig);\n  }\n\n  getSuggestions(term: string, pageSize?: number): Observable<Suggestion[]> {\n    return this.adapter.loadSuggestions(term, pageSize);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-search.connector';\nexport * from './product-search.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product/index';\nexport * from './references/index';\nexport * from './reviews/index';\nexport * from './search/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CxEvent } from '../../event/cx-event';\n\n/**\n * Indicates that a user select or unselect a facet value\n */\nexport class FacetChangedEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'FacetChangedEvent';\n  /**\n   * Facet code\n   */\n  code?: string;\n  /**\n   * Facet name\n   */\n  name?: string;\n  /**\n   * Facet value code\n   */\n  valueCode?: string;\n  /**\n   * Facet value name\n   */\n  valueName?: string;\n  /**\n   * Indicate whether facet value is toggled on or off\n   */\n  selected?: boolean;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { ProductReference } from '../../../model/product.model';\n\nexport const LOAD_PRODUCT_REFERENCES = '[Product] Load Product References Data';\nexport const LOAD_PRODUCT_REFERENCES_FAIL =\n  '[Product] Load Product References Data Fail';\nexport const LOAD_PRODUCT_REFERENCES_SUCCESS =\n  '[Product] Load Product References Data Success';\nexport const CLEAN_PRODUCT_REFERENCES = '[Product] Clean Product References';\n\nexport class LoadProductReferences implements Action {\n  readonly type = LOAD_PRODUCT_REFERENCES;\n  constructor(\n    public payload: {\n      productCode: string;\n      referenceType?: string;\n      pageSize?: number;\n    }\n  ) {}\n}\n\nexport class LoadProductReferencesFail implements Action {\n  readonly type = LOAD_PRODUCT_REFERENCES_FAIL;\n  constructor(public payload: ErrorModel) {}\n}\n\nexport class LoadProductReferencesSuccess implements Action {\n  readonly type = LOAD_PRODUCT_REFERENCES_SUCCESS;\n  constructor(\n    public payload: {\n      productCode: string;\n      list: ProductReference[];\n    }\n  ) {}\n}\n\nexport class CleanProductReferences implements Action {\n  readonly type = CLEAN_PRODUCT_REFERENCES;\n}\n\n// action types\nexport type ProductReferencesAction =\n  | LoadProductReferences\n  | LoadProductReferencesFail\n  | LoadProductReferencesSuccess\n  | CleanProductReferences;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { Review } from '../../../model/product.model';\n\nexport const LOAD_PRODUCT_REVIEWS = '[Product] Load Product Reviews Data';\nexport const LOAD_PRODUCT_REVIEWS_FAIL =\n  '[Product] Load Product Reviews Data Fail';\nexport const LOAD_PRODUCT_REVIEWS_SUCCESS =\n  '[Product] Load Product Reviews Data Success';\nexport const POST_PRODUCT_REVIEW = '[Product] Post Product Review';\nexport const POST_PRODUCT_REVIEW_FAIL = '[Product] Post Product Review Fail';\nexport const POST_PRODUCT_REVIEW_SUCCESS =\n  '[Product] Post Product Review Success';\n\nexport class LoadProductReviews implements Action {\n  readonly type = LOAD_PRODUCT_REVIEWS;\n  constructor(public payload: string) {}\n}\n\nexport class LoadProductReviewsFail implements Action {\n  readonly type = LOAD_PRODUCT_REVIEWS_FAIL;\n  constructor(public payload: ErrorModel) {}\n}\n\nexport class LoadProductReviewsSuccess implements Action {\n  readonly type = LOAD_PRODUCT_REVIEWS_SUCCESS;\n  constructor(public payload: { productCode: string; list: Review[] }) {}\n}\n\nexport class PostProductReview implements Action {\n  readonly type = POST_PRODUCT_REVIEW;\n  constructor(public payload: { productCode: string; review: Review }) {}\n}\n\nexport class PostProductReviewFail implements Action {\n  readonly type = POST_PRODUCT_REVIEW_FAIL;\n  constructor(public payload: string) {}\n}\n\nexport class PostProductReviewSuccess implements Action {\n  readonly type = POST_PRODUCT_REVIEW_SUCCESS;\n  constructor(public payload: Review) {}\n}\n\n// action types\nexport type ProductReviewsAction =\n  | LoadProductReviews\n  | LoadProductReviewsFail\n  | LoadProductReviewsSuccess\n  | PostProductReview\n  | PostProductReviewFail\n  | PostProductReviewSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { ErrorModel } from '../../../model/misc.model';\nimport {\n  ClearSearch,\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport { SearchConfig } from '../../model/search-config';\n\nexport const SEARCH_PRODUCTS = '[Product] Search Products';\nexport const SEARCH_PRODUCTS_FAIL = '[Product] Search Products Fail';\nexport const SEARCH_PRODUCTS_SUCCESS = '[Product] Search Products Success';\nexport const GET_PRODUCT_SUGGESTIONS = '[Product] Get Product Suggestions';\nexport const GET_PRODUCT_SUGGESTIONS_SUCCESS =\n  '[Product] Get Product Suggestions Success';\nexport const GET_PRODUCT_SUGGESTIONS_FAIL =\n  '[Product] Get Product Suggestions Fail';\nexport const CLEAR_PRODUCT_SEARCH_RESULT =\n  '[Product] Clear Product Search Result';\n\nexport class SearchProducts implements Action {\n  readonly type = SEARCH_PRODUCTS;\n  constructor(\n    public payload: { queryText: string; searchConfig?: SearchConfig },\n    public auxiliary?: boolean\n  ) {}\n}\n\nexport class SearchProductsFail implements Action {\n  readonly type = SEARCH_PRODUCTS_FAIL;\n  constructor(\n    public payload: ErrorModel | undefined,\n    public auxiliary?: boolean\n  ) {}\n}\n\nexport class SearchProductsSuccess implements Action {\n  readonly type = SEARCH_PRODUCTS_SUCCESS;\n  constructor(public payload: ProductSearchPage, public auxiliary?: boolean) {}\n}\n\nexport class GetProductSuggestions implements Action {\n  readonly type = GET_PRODUCT_SUGGESTIONS;\n  constructor(public payload: { term: string; searchConfig?: SearchConfig }) {}\n}\n\nexport class GetProductSuggestionsSuccess implements Action {\n  readonly type = GET_PRODUCT_SUGGESTIONS_SUCCESS;\n  constructor(public payload: Suggestion[]) {}\n}\n\nexport class GetProductSuggestionsFail implements Action {\n  readonly type = GET_PRODUCT_SUGGESTIONS_FAIL;\n  constructor(public payload: ErrorModel | undefined) {}\n}\n\nexport class ClearProductSearchResult implements Action {\n  readonly type = CLEAR_PRODUCT_SEARCH_RESULT;\n  constructor(\n    public payload: ClearSearch = {\n      clearPageResults: false,\n      clearSearchboxResults: false,\n    }\n  ) {}\n}\n\n// action types\nexport type ProductSearchAction =\n  | SearchProducts\n  | SearchProductsFail\n  | SearchProductsSuccess\n  | GetProductSuggestions\n  | GetProductSuggestionsSuccess\n  | GetProductSuggestionsFail\n  | ClearProductSearchResult;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport {\n  entityFailMeta,\n  EntityLoaderMeta,\n  entityLoadMeta,\n  entityResetMeta,\n  entitySuccessMeta,\n  ENTITY_FAIL_ACTION,\n  ENTITY_LOAD_ACTION,\n  ENTITY_RESET_ACTION,\n  ENTITY_SUCCESS_ACTION,\n} from '../entity-loader/entity-loader.action';\n\nexport namespace EntityScopedLoaderActions {\n  export interface EntityScopedLoaderMeta extends EntityLoaderMeta {\n    scope?: string;\n  }\n\n  export interface EntityScopedLoaderAction extends Action {\n    readonly payload?: any;\n    readonly meta?: EntityScopedLoaderMeta;\n  }\n\n  export function entityScopedLoadMeta(\n    entityType: string,\n    id: string | string[],\n    scope?: string\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entityLoadMeta(entityType, id),\n      scope,\n    };\n  }\n\n  export function entityScopedFailMeta(\n    entityType: string,\n    id: string | string[],\n    scope?: string,\n    error?: any\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entityFailMeta(entityType, id, error),\n      scope,\n    };\n  }\n\n  export function entityScopedSuccessMeta(\n    entityType: string,\n    id: string | string[],\n    scope?: string\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entitySuccessMeta(entityType, id),\n      scope,\n    };\n  }\n\n  export function entityScopedResetMeta(\n    entityType: string,\n    id?: string | string[],\n    scope?: string\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entityResetMeta(entityType, id),\n      scope,\n    };\n  }\n\n  export class EntityScopedLoadAction implements EntityScopedLoaderAction {\n    type = ENTITY_LOAD_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(entityType: string, id: string | string[], scope?: string) {\n      this.meta = entityScopedLoadMeta(entityType, id, scope);\n    }\n  }\n\n  export class EntityScopedFailAction implements EntityScopedLoaderAction {\n    type = ENTITY_FAIL_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(\n      entityType: string,\n      id: string | string[],\n      scope?: string,\n      error?: any\n    ) {\n      this.meta = entityScopedFailMeta(entityType, id, scope, error);\n    }\n  }\n\n  export class EntityScopedSuccessAction implements EntityScopedLoaderAction {\n    type = ENTITY_SUCCESS_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(\n      entityType: string,\n      id: string | string[],\n      scope?: string,\n      public payload?: any\n    ) {\n      this.meta = entityScopedSuccessMeta(entityType, id, scope);\n    }\n  }\n\n  export class EntityScopedResetAction implements EntityScopedLoaderAction {\n    type = ENTITY_RESET_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(entityType: string, id?: string | string[], scope?: string) {\n      this.meta = entityScopedResetMeta(entityType, id, scope);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ProductSearchPage,\n  Suggestion,\n} from '../../model/product-search.model';\nimport { Product, ProductReference, Review } from '../../model/product.model';\nimport { EntityScopedLoaderState } from '../../state/utils/scoped-loader/scoped-loader.state';\n\nexport const PRODUCT_FEATURE = 'product';\nexport const PRODUCT_DETAIL_ENTITY = '[Product] Detail Entity';\n\nexport interface StateWithProduct {\n  [PRODUCT_FEATURE]: ProductsState;\n}\n\nexport interface ProductsState {\n  details: EntityScopedLoaderState<Product>;\n  search: ProductsSearchState;\n  reviews: ProductReviewsState;\n  references: ProductReferencesState;\n}\n\nexport interface ProductsSearchState {\n  results: ProductSearchPage;\n  suggestions: Suggestion[];\n  auxResults: ProductSearchPage;\n}\n\nexport interface ProductReviewsState {\n  productCode: string;\n  list: Review[];\n}\n\nexport interface ProductReferencesState {\n  productCode: string;\n  list: ProductReference[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { Product } from '../../../model/product.model';\nimport { EntityLoaderMeta } from '../../../state/utils/entity-loader/entity-loader.action';\nimport { EntityScopedLoaderActions } from '../../../state/utils/scoped-loader/entity-scoped-loader.actions';\nimport { ProductScope } from '../../model/product-scope';\nimport { PRODUCT_DETAIL_ENTITY } from '../product-state';\n\nexport const LOAD_PRODUCT = '[Product] Load Product Data';\nexport const LOAD_PRODUCT_FAIL = '[Product] Load Product Data Fail';\nexport const LOAD_PRODUCT_SUCCESS = '[Product] Load Product Data Success';\nexport const CLEAR_PRODUCT_PRICE = '[Product] Clear Product PRICE';\n\nexport interface ProductMeta extends EntityLoaderMeta {\n  scope?: string;\n}\n\nexport interface EntityScopedLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: ProductMeta;\n}\n\nexport class LoadProduct extends EntityScopedLoaderActions.EntityScopedLoadAction {\n  readonly type = LOAD_PRODUCT;\n  constructor(public payload: string, scope = '') {\n    super(PRODUCT_DETAIL_ENTITY, payload, scope);\n  }\n}\n\nexport class LoadProductFail extends EntityScopedLoaderActions.EntityScopedFailAction {\n  readonly type = LOAD_PRODUCT_FAIL;\n  constructor(productCode: string, public payload: any, scope = '') {\n    super(PRODUCT_DETAIL_ENTITY, productCode, scope, payload);\n  }\n}\n\nexport class LoadProductSuccess extends EntityScopedLoaderActions.EntityScopedSuccessAction {\n  readonly type = LOAD_PRODUCT_SUCCESS;\n  constructor(public payload: Product, scope = '') {\n    super(PRODUCT_DETAIL_ENTITY, payload.code ?? '', scope);\n  }\n}\n\nexport class ClearProductPrice extends EntityScopedLoaderActions.EntityScopedResetAction {\n  readonly type = CLEAR_PRODUCT_PRICE;\n  constructor() {\n    super(PRODUCT_DETAIL_ENTITY, undefined, ProductScope.PRICE);\n  }\n}\n\n// action types\nexport type ProductAction =\n  | LoadProduct\n  | LoadProductFail\n  | LoadProductSuccess\n  | ClearProductPrice;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-references.action';\nexport * from './product-reviews.action';\nexport * from './product-search.action';\nexport * from './product.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as ProductActions from './product-group.actions';\nexport { ProductActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ProductsState,\n  PRODUCT_FEATURE,\n  StateWithProduct,\n} from '../product-state';\n\nexport const getProductsState: MemoizedSelector<\n  StateWithProduct,\n  ProductsState\n> = createFeatureSelector<ProductsState>(PRODUCT_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ProductReference } from '../../../model/product.model';\nimport {\n  ProductReferencesState,\n  ProductsState,\n  StateWithProduct,\n} from '../product-state';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductReferencesState: MemoizedSelector<\n  StateWithProduct,\n  ProductReferencesState\n> = createSelector(\n  getProductsState,\n  (state: ProductsState) => state.references\n);\n\nexport const getSelectedProductReferencesFactory = (\n  productCode: string,\n  referenceType: string\n): MemoizedSelector<StateWithProduct, ProductReference[]> => {\n  return createSelector(getProductReferencesState, (referenceTypeData) => {\n    if (referenceTypeData.productCode === productCode) {\n      if (!!referenceTypeData.list) {\n        if (referenceType) {\n          return referenceTypeData.list.filter(\n            (item) => item.referenceType === referenceType\n          );\n        }\n        return referenceTypeData.list;\n      }\n    }\n    return [];\n  });\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Review } from '../../../model/product.model';\nimport {\n  ProductReviewsState,\n  ProductsState,\n  StateWithProduct,\n} from '../product-state';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductReviewsState: MemoizedSelector<\n  StateWithProduct,\n  ProductReviewsState\n> = createSelector(getProductsState, (state: ProductsState) => state.reviews);\n\nexport const getSelectedProductReviewsFactory = (\n  productCode: string\n): MemoizedSelector<StateWithProduct, Review[] | undefined> => {\n  return createSelector(getProductReviewsState, (reviewData) => {\n    if (reviewData.productCode === productCode) {\n      return reviewData.list;\n    }\n    return undefined;\n  });\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport { ProductActions } from '../actions/index';\nimport { ProductsSearchState } from '../product-state';\n\nexport const initialState: ProductsSearchState = {\n  results: {},\n  suggestions: [],\n  auxResults: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: ProductActions.ProductSearchAction\n): ProductsSearchState {\n  switch (action.type) {\n    case ProductActions.SEARCH_PRODUCTS_SUCCESS: {\n      const results = action.payload;\n      const res = action.auxiliary ? { auxResults: results } : { results };\n      return {\n        ...state,\n        ...res,\n      };\n    }\n\n    case ProductActions.GET_PRODUCT_SUGGESTIONS_SUCCESS: {\n      const suggestions: Suggestion[] = action.payload;\n\n      return {\n        ...state,\n        suggestions,\n      };\n    }\n\n    case ProductActions.CLEAR_PRODUCT_SEARCH_RESULT: {\n      return {\n        ...state,\n        results: action.payload.clearPageResults ? {} : state.results,\n        suggestions: action.payload.clearSearchboxResults\n          ? []\n          : state.suggestions,\n        auxResults: action.payload.clearSearchboxResults\n          ? {}\n          : state.auxResults,\n      };\n    }\n  }\n  return state;\n}\n\nexport const getSearchResults = (\n  state: ProductsSearchState\n): ProductSearchPage => state.results;\nexport const getAuxSearchResults = (\n  state: ProductsSearchState\n): ProductSearchPage => state.auxResults;\nexport const getProductSuggestions = (\n  state: ProductsSearchState\n): Suggestion[] => state.suggestions;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport {\n  ProductsSearchState,\n  ProductsState,\n  StateWithProduct,\n} from '../product-state';\nimport * as fromProductSearch from '../reducers/product-search.reducer';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductsSearchState: MemoizedSelector<\n  StateWithProduct,\n  ProductsSearchState\n> = createSelector(getProductsState, (state: ProductsState) => state.search);\n\nexport const getSearchResults: MemoizedSelector<\n  StateWithProduct,\n  ProductSearchPage\n> = createSelector(getProductsSearchState, fromProductSearch.getSearchResults);\n\nexport const getAuxSearchResults: MemoizedSelector<\n  StateWithProduct,\n  ProductSearchPage\n> = createSelector(\n  getProductsSearchState,\n  fromProductSearch.getAuxSearchResults\n);\n\nexport const getProductSuggestions: MemoizedSelector<\n  StateWithProduct,\n  Suggestion[]\n> = createSelector(\n  getProductsSearchState,\n  fromProductSearch.getProductSuggestions\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Product } from '../../../model/product.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { EntityScopedLoaderState } from '../../../state/utils/scoped-loader/scoped-loader.state';\nimport { ProductsState, StateWithProduct } from '../product-state';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductState: MemoizedSelector<\n  StateWithProduct,\n  EntityScopedLoaderState<Product>\n> = createSelector(getProductsState, (state: ProductsState) => state.details);\n\nexport const getSelectedProductStateFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, StateUtils.LoaderState<Product>> => {\n  return createSelector(\n    getProductState,\n    (details) =>\n      (StateUtils.entityLoaderStateSelector(details, code) as any)[scope] ||\n      StateUtils.initialLoaderState\n  );\n};\n\nexport const getSelectedProductFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, Product> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderValueSelector(productState)\n  );\n};\n\nexport const getSelectedProductLoadingFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, boolean> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderLoadingSelector(productState)\n  );\n};\n\nexport const getSelectedProductSuccessFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, boolean> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderSuccessSelector(productState)\n  );\n};\n\nexport const getSelectedProductErrorFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, boolean> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderErrorSelector(productState)\n  );\n};\n\nexport const getAllProductCodes: MemoizedSelector<StateWithProduct, string[]> =\n  createSelector(getProductState, (details) => {\n    return Object.keys(details.entities);\n  });\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './feature.selector';\nexport * from './product-references.selectors';\nexport * from './product-reviews.selectors';\nexport * from './product-search.selectors';\nexport * from './product.selectors';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as ProductSelectors from './product-group.selectors';\nexport { ProductSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ProductSearchPage } from '../../model/product-search.model';\nimport { SearchConfig } from '../model/search-config';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSearchService {\n  constructor(protected store: Store<StateWithProduct>) {}\n\n  search(query: string | undefined, searchConfig?: SearchConfig): void {\n    if (query) {\n      this.store.dispatch(\n        new ProductActions.SearchProducts({\n          queryText: query,\n          searchConfig: searchConfig,\n        })\n      );\n    }\n  }\n\n  getResults(): Observable<ProductSearchPage> {\n    return this.store.pipe(select(ProductSelectors.getSearchResults));\n  }\n\n  clearResults(): void {\n    this.store.dispatch(\n      new ProductActions.ClearProductSearchResult({\n        clearPageResults: true,\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pairwise } from 'rxjs/operators';\nimport { EventService } from '../../event/event.service';\nimport {\n  Breadcrumb,\n  ProductSearchPage,\n} from '../../model/product-search.model';\nimport { createFrom } from '../../util/create-from';\nimport { ProductSearchService } from '../facade/product-search.service';\nimport { FacetChangedEvent } from './product.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductEventBuilder {\n  constructor(\n    protected eventService: EventService,\n    protected productSearchService: ProductSearchService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(\n      FacetChangedEvent,\n      this.buildFacetChangedEvent()\n    );\n  }\n\n  /**\n   * To get the changed facet, we need to compare the product search results\n   * got before and after toggling the facet value. These 2 product searches must\n   * have the same search queries except one different solr filter term. That means\n   * these 2 searches must have the same 'freeTextSearch'; and if they are category\n   * searches, they must have the same root (in the same category or brand).\n   */\n  protected buildFacetChangedEvent(): Observable<\n    FacetChangedEvent | undefined\n  > {\n    return this.productSearchService.getResults().pipe(\n      pairwise(),\n      filter(([prev, curr]) => this.compareSearchResults(prev, curr)),\n      map(([prev, curr]) => {\n        const toggled =\n          this.getToggledBreadcrumb(curr.breadcrumbs, prev.breadcrumbs) ||\n          this.getToggledBreadcrumb(prev.breadcrumbs, curr.breadcrumbs);\n        if (toggled) {\n          return createFrom(FacetChangedEvent, {\n            code: toggled.facetCode,\n            name: toggled.facetName,\n            valueCode: toggled.facetValueCode,\n            valueName: toggled.facetValueName,\n            selected:\n              curr.breadcrumbs &&\n              prev.breadcrumbs &&\n              curr.breadcrumbs.length > prev.breadcrumbs.length,\n          });\n        }\n      })\n    );\n  }\n\n  /**\n   * The 2 product searches (before and after facet changed) must have the same\n   * search queries; and if they are category searches, they also must have the\n   * same root (in the same category or brand).\n   */\n  private compareSearchResults(\n    prev: ProductSearchPage,\n    curr: ProductSearchPage\n  ): boolean {\n    if (prev && Object.keys(prev).length !== 0) {\n      // for text searches, they must have the same freeTextSearch\n      const sameFreeTextSearch =\n        prev.freeTextSearch !== '' &&\n        prev.freeTextSearch === curr.freeTextSearch;\n\n      // for category searches, they must have the same root\n      const sameCategoryRoot =\n        curr.breadcrumbs?.[0]?.facetCode === 'allCategories' &&\n        prev.breadcrumbs?.[0]?.facetCode === curr.breadcrumbs[0]?.facetCode &&\n        // same category or brand\n        prev.breadcrumbs[0].facetValueCode ===\n          curr.breadcrumbs[0].facetValueCode;\n\n      return sameFreeTextSearch || sameCategoryRoot;\n    }\n    return false;\n  }\n\n  /**\n   * Get the toggled breadcrumb. The 2 breadcrumb lists got from the 2 search results\n   * only can have one different solr filter term.\n   */\n  private getToggledBreadcrumb(\n    bc1: Breadcrumb[] | undefined,\n    bc2: Breadcrumb[] | undefined\n  ): Breadcrumb | undefined {\n    if (bc1 && bc2 && bc1.length - bc2.length === 1) {\n      return bc1.find(\n        (x) =>\n          !bc2.find(\n            (y) =>\n              y.facetCode === x.facetCode &&\n              y.facetValueCode === x.facetValueCode\n          )\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { ProductEventBuilder } from './product-event.builder';\n\n@NgModule({})\nexport class ProductEventModule {\n  constructor(_productEventBuilder: ProductEventBuilder) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-event.builder';\nexport * from './product-event.module';\nexport * from './product.events';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { ProductReferencesConnector } from '../../connectors/references/product-references.connector';\nimport { ProductActions } from '../actions/index';\n\n@Injectable()\nexport class ProductReferencesEffects {\n  loadProductReferences$: Observable<\n    | ProductActions.LoadProductReferencesSuccess\n    | ProductActions.LoadProductReferencesFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.LOAD_PRODUCT_REFERENCES),\n      map((action: ProductActions.LoadProductReferences) => action.payload),\n      mergeMap((payload) => {\n        return this.productReferencesConnector\n          .get(payload.productCode, payload.referenceType, payload.pageSize)\n          .pipe(\n            map((data) => {\n              return new ProductActions.LoadProductReferencesSuccess({\n                productCode: payload.productCode,\n                list: data,\n              });\n            }),\n            catchError((_error) =>\n              of(\n                new ProductActions.LoadProductReferencesFail({\n                  message: payload.productCode,\n                } as ErrorModel)\n              )\n            )\n          );\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private productReferencesConnector: ProductReferencesConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { ProductReviewsConnector } from '../../connectors/reviews/product-reviews.connector';\nimport { ProductActions } from '../actions/index';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n} from '../../../global-message/index';\n\n@Injectable()\nexport class ProductReviewsEffects {\n  loadProductReviews$: Observable<\n    | ProductActions.LoadProductReviewsSuccess\n    | ProductActions.LoadProductReviewsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.LOAD_PRODUCT_REVIEWS),\n      map((action: ProductActions.LoadProductReviews) => action.payload),\n      mergeMap((productCode) => {\n        return this.productReviewsConnector.get(productCode).pipe(\n          map((data) => {\n            return new ProductActions.LoadProductReviewsSuccess({\n              productCode,\n              list: data,\n            });\n          }),\n          catchError((_error) =>\n            of(\n              new ProductActions.LoadProductReviewsFail({\n                message: productCode,\n              } as ErrorModel)\n            )\n          )\n        );\n      })\n    )\n  );\n\n  postProductReview: Observable<\n    | ProductActions.PostProductReviewSuccess\n    | ProductActions.PostProductReviewFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.POST_PRODUCT_REVIEW),\n      map((action: ProductActions.PostProductReview) => action.payload),\n      mergeMap((payload) => {\n        return this.productReviewsConnector\n          .add(payload.productCode, payload.review)\n          .pipe(\n            map((reviewResponse) => {\n              return new ProductActions.PostProductReviewSuccess(\n                reviewResponse\n              );\n            }),\n            catchError((_error) =>\n              of(new ProductActions.PostProductReviewFail(payload.productCode))\n            )\n          );\n      })\n    )\n  );\n\n  showGlobalMessageOnPostProductReviewSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ProductActions.POST_PRODUCT_REVIEW_SUCCESS),\n        tap(() => {\n          this.globalMessageService.add(\n            { key: 'productReview.thankYouForReview' },\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private productReviewsConnector: ProductReviewsConnector,\n    private globalMessageService: GlobalMessageService\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { ProductSearchConnector } from '../../connectors/search/product-search.connector';\nimport { ProductActions } from '../actions/index';\n\n@Injectable()\nexport class ProductsSearchEffects {\n  searchProducts$: Observable<\n    ProductActions.SearchProductsSuccess | ProductActions.SearchProductsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.SEARCH_PRODUCTS),\n      groupBy((action: ProductActions.SearchProducts) => action.auxiliary),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap((action: ProductActions.SearchProducts) => {\n            return this.productSearchConnector\n              .search(action.payload.queryText, action.payload.searchConfig)\n              .pipe(\n                map((data) => {\n                  return new ProductActions.SearchProductsSuccess(\n                    data,\n                    action.auxiliary\n                  );\n                }),\n                catchError((error) =>\n                  of(\n                    new ProductActions.SearchProductsFail(\n                      normalizeHttpError(error),\n                      action.auxiliary\n                    )\n                  )\n                )\n              );\n          })\n        )\n      )\n    )\n  );\n\n  getProductSuggestions$: Observable<\n    | ProductActions.GetProductSuggestionsSuccess\n    | ProductActions.GetProductSuggestionsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.GET_PRODUCT_SUGGESTIONS),\n      map((action: ProductActions.GetProductSuggestions) => action.payload),\n      switchMap((payload) => {\n        return this.productSearchConnector\n          .getSuggestions(payload.term, payload.searchConfig?.pageSize)\n          .pipe(\n            map((suggestions) => {\n              if (suggestions === undefined) {\n                return new ProductActions.GetProductSuggestionsSuccess([]);\n              }\n              return new ProductActions.GetProductSuggestionsSuccess(\n                suggestions\n              );\n            }),\n            catchError((error) =>\n              of(\n                new ProductActions.GetProductSuggestionsFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          );\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private productSearchConnector: ProductSearchConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { merge, Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { bufferDebounceTime } from '../../../util/rxjs/buffer-debounce-time';\nimport { withdrawOn } from '../../../util/rxjs/withdraw-on';\nimport { ProductConnector } from '../../connectors/product/product.connector';\nimport { ScopedProductData } from '../../connectors/product/scoped-product-data';\nimport { ProductActions } from '../actions/index';\n\n@Injectable()\nexport class ProductEffects {\n  // we want to cancel all ongoing requests when currency or language changes,\n  private contextChange$: Observable<Action> = this.actions$.pipe(\n    ofType(\n      SiteContextActions.CURRENCY_CHANGE,\n      SiteContextActions.LANGUAGE_CHANGE\n    )\n  );\n\n  loadProduct$ = createEffect(\n    () =>\n      ({ scheduler, debounce = 0 } = {}): Observable<\n        ProductActions.LoadProductSuccess | ProductActions.LoadProductFail\n      > =>\n        this.actions$.pipe(\n          ofType(ProductActions.LOAD_PRODUCT),\n          map((action: ProductActions.LoadProduct) => ({\n            code: action.payload,\n            scope: action.meta.scope,\n          })),\n          // we are grouping all load actions that happens at the same time\n          // to optimize loading and pass them all to productConnector.getMany\n          bufferDebounceTime(debounce, scheduler),\n          mergeMap((products) =>\n            merge(\n              ...this.productConnector\n                .getMany(products)\n                .map(this.productLoadEffect)\n            )\n          ),\n          withdrawOn(this.contextChange$)\n        )\n  );\n\n  private productLoadEffect(\n    productLoad: ScopedProductData\n  ): Observable<\n    ProductActions.LoadProductSuccess | ProductActions.LoadProductFail\n  > {\n    return (\n      productLoad.data$?.pipe(\n        map(\n          (data) =>\n            new ProductActions.LoadProductSuccess(\n              { code: productLoad.code, ...data },\n              productLoad.scope\n            )\n        ),\n        catchError((error) => {\n          return of(\n            new ProductActions.LoadProductFail(\n              productLoad.code,\n              normalizeHttpError(error),\n              productLoad.scope\n            )\n          );\n        })\n      ) ??\n      of(\n        new ProductActions.LoadProductFail(\n          productLoad.code,\n          'Scoped product data does not exist',\n          productLoad.scope\n        )\n      )\n    );\n  }\n\n  clearProductPrice$: Observable<ProductActions.ClearProductPrice> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(AuthActions.LOGOUT, AuthActions.LOGIN),\n        map(() => new ProductActions.ClearProductPrice())\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private productConnector: ProductConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ProductReferencesEffects } from './product-references.effect';\nimport { ProductReviewsEffects } from './product-reviews.effect';\nimport { ProductsSearchEffects } from './product-search.effect';\nimport { ProductEffects } from './product.effect';\n\nexport const effects: any[] = [\n  ProductsSearchEffects,\n  ProductEffects,\n  ProductReviewsEffects,\n  ProductReferencesEffects,\n];\n\nexport * from './product-references.effect';\nexport * from './product-reviews.effect';\nexport * from './product-search.effect';\nexport * from './product.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { EntityScopedLoaderAction } from '../../../product/store/actions/product.action';\nimport { loaderReducer } from '../loader/loader.reducer';\nimport { ScopedLoaderState } from './scoped-loader.state';\n\nexport const initialScopedLoaderState: ScopedLoaderState<any> = {};\n\n/**\n * Higher order reducer designed to add scope support for loader reducer\n *\n * @param entityType\n * @param reducer\n */\nexport function scopedLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T | undefined, action: Action) => T\n): (\n  state: ScopedLoaderState<T>,\n  action: EntityScopedLoaderAction\n) => ScopedLoaderState<T> {\n  const loader = loaderReducer<T>(entityType, reducer);\n\n  return (\n    state: ScopedLoaderState<T> = initialScopedLoaderState,\n    action: EntityScopedLoaderAction\n  ): ScopedLoaderState<T> => {\n    if (action && action.meta && action.meta.entityType === entityType) {\n      return {\n        ...state,\n        [action.meta.scope ?? '']: loader(\n          state[action.meta.scope ?? ''],\n          action\n        ),\n      };\n    }\n    return state;\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { entityReducer } from '../entity/entity.reducer';\nimport { LoaderAction } from '../loader/loader.action';\nimport { EntityScopedLoaderActions } from './entity-scoped-loader.actions';\nimport { scopedLoaderReducer } from './scoped-loader.reducer';\nimport {\n  EntityScopedLoaderState,\n  ScopedLoaderState,\n} from './scoped-loader.state';\n\n/**\n * Higher order reducer that wraps scopedLoaderReducer and EntityReducer enhancing\n * single state reducer to support multiple entities with generic loading flags and scopes\n */\nexport function entityScopedLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T | undefined, action: LoaderAction) => T\n): (\n  state: EntityScopedLoaderState<T> | undefined,\n  action: EntityScopedLoaderActions.EntityScopedLoaderAction\n) => EntityScopedLoaderState<T> {\n  return entityReducer<ScopedLoaderState<T>>(\n    entityType,\n    scopedLoaderReducer<T>(entityType, reducer)\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ProductReference } from '../../../model/product.model';\nimport { ProductActions } from '../actions/index';\nimport { ProductReferencesState } from '../product-state';\n\nexport const initialState: ProductReferencesState = {\n  productCode: '',\n  list: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: ProductActions.ProductReferencesAction\n): ProductReferencesState {\n  switch (action.type) {\n    case ProductActions.LOAD_PRODUCT_REFERENCES_SUCCESS: {\n      const productCode = action.payload.productCode;\n      const list = action.payload.list;\n\n      return {\n        ...state,\n        list: [...state.list, ...(list ? list : [])].reduce(\n          (\n            productReferences: ProductReference[],\n            productReference: ProductReference\n          ) => {\n            if (\n              !productReferences.some(\n                (obj) =>\n                  obj.referenceType === productReference.referenceType &&\n                  obj.target?.code === productReference.target?.code\n              )\n            ) {\n              productReferences.push(productReference);\n            }\n            return productReferences;\n          },\n          []\n        ),\n        productCode,\n      };\n    }\n\n    case ProductActions.CLEAN_PRODUCT_REFERENCES: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n\nexport const getProductReferenceList = (\n  state: ProductReferencesState\n): ProductReference[] => state.list;\nexport const getProductReferenceProductCode = (\n  state: ProductReferencesState\n): string => state.productCode;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Review } from '../../../model/product.model';\nimport { ProductActions } from '../actions/index';\nimport { ProductReviewsState } from '../product-state';\n\nexport const initialState: ProductReviewsState = {\n  productCode: '',\n  list: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: ProductActions.ProductReviewsAction\n): ProductReviewsState {\n  switch (action.type) {\n    case ProductActions.LOAD_PRODUCT_REVIEWS_SUCCESS: {\n      const productCode = action.payload.productCode;\n      const list = action.payload.list;\n\n      return {\n        ...state,\n        productCode,\n        list,\n      };\n    }\n  }\n\n  return state;\n}\n\nexport const getReviewList = (state: ProductReviewsState): Review[] =>\n  state.list;\nexport const getReviewProductCode = (state: ProductReviewsState): string =>\n  state.productCode;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { Product } from '../../../model/product.model';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { entityScopedLoaderReducer } from '../../../state/utils/scoped-loader/entity-scoped-loader.reducer';\nimport { ProductsState, PRODUCT_DETAIL_ENTITY } from '../product-state';\nimport * as fromProductReferences from './product-references.reducer';\nimport * as fromProductReviews from './product-reviews.reducer';\nimport * as fromProductsSearch from './product-search.reducer';\n\nexport function getReducers(): ActionReducerMap<ProductsState, any> {\n  return {\n    search: fromProductsSearch.reducer,\n    details: entityScopedLoaderReducer<Product>(PRODUCT_DETAIL_ENTITY),\n    reviews: fromProductReviews.reducer,\n    references: fromProductReferences.reducer,\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<ProductsState>> =\n  new InjectionToken<ActionReducerMap<ProductsState>>('ProductReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearProductsState(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return function (state, action) {\n    if (\n      action.type === SiteContextActions.CURRENCY_CHANGE ||\n      action.type === SiteContextActions.LANGUAGE_CHANGE\n    ) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearProductsState];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './actions/index';\nexport * from './effects/index';\nexport * from './product-state';\nexport * from './reducers/index';\nexport * from './selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ProductReference } from '../../model/product.model';\nimport { ProductSelectors } from '../store';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReferenceService {\n  constructor(protected store: Store<StateWithProduct>) {}\n\n  loadProductReferences(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): void {\n    this.store.dispatch(\n      new ProductActions.LoadProductReferences({\n        productCode,\n        referenceType,\n        pageSize,\n      })\n    );\n  }\n\n  getProductReferences(\n    productCode: string,\n    referenceType: string\n  ): Observable<ProductReference[]> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductReferencesFactory(\n          productCode,\n          referenceType\n        )\n      )\n    );\n  }\n\n  cleanReferences(): void {\n    this.store.dispatch(new ProductActions.CleanProductReferences());\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Review } from '../../model/product.model';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReviewService {\n  constructor(protected store: Store<StateWithProduct>) {}\n\n  getByProductCode(productCode: string): Observable<Review[]> {\n    return this.store.pipe(\n      select(ProductSelectors.getSelectedProductReviewsFactory(productCode)),\n      tap((reviews) => {\n        if (reviews === undefined && productCode !== undefined) {\n          this.store.dispatch(\n            new ProductActions.LoadProductReviews(productCode)\n          );\n        }\n      }),\n      map((reviews) => reviews ?? [])\n    );\n  }\n\n  add(productCode: string, review: Review): void {\n    this.store.dispatch(\n      new ProductActions.PostProductReview({\n        productCode: productCode,\n        review,\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { defer, merge, Observable, of, SchedulerLike, using } from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  filter,\n  map,\n  mapTo,\n  shareReplay,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { deepMerge } from '../../config/utils/deep-merge';\nimport { EventService } from '../../event/event.service';\nimport { Product } from '../../model/product.model';\nimport { LoadingScopesService } from '../../occ/services/loading-scopes.service';\nimport { uniteLatest } from '../../util/rxjs/unite-latest';\nimport { withdrawOn } from '../../util/rxjs/withdraw-on';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductLoadingService {\n  protected products: {\n    [code: string]: { [scope: string]: Observable<Product> };\n  } = {};\n\n  constructor(\n    protected store: Store<StateWithProduct>,\n    protected loadingScopes: LoadingScopesService,\n    protected actions$: Actions,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    protected eventService: EventService\n  ) {}\n\n  get(productCode: string, scopes: string[]): Observable<Product> {\n    scopes = this.loadingScopes.expand('product', scopes);\n\n    this.initProductScopes(productCode, scopes);\n    return this.products[productCode][this.getScopesIndex(scopes)];\n  }\n\n  protected initProductScopes(productCode: string, scopes: string[]): void {\n    if (!this.products[productCode]) {\n      this.products[productCode] = {};\n    }\n\n    for (const scope of scopes) {\n      if (!this.products[productCode][scope]) {\n        this.products[productCode][scope] = this.getProductForScope(\n          productCode,\n          scope\n        );\n      }\n    }\n\n    if (scopes.length > 1) {\n      this.products[productCode][this.getScopesIndex(scopes)] = uniteLatest(\n        scopes.map((scope) => this.products[productCode][scope])\n      ).pipe(\n        map((productParts) =>\n          productParts.every(Boolean)\n            ? deepMerge({}, ...productParts)\n            : undefined\n        ),\n        distinctUntilChanged()\n      );\n    }\n  }\n\n  protected getScopesIndex(scopes: string[]): string {\n    return scopes.join('ɵ');\n  }\n\n  /**\n   * Creates observable for providing specified product data for the scope\n   *\n   * @param productCode\n   * @param scope\n   */\n  protected getProductForScope(\n    productCode: string,\n    scope: string\n  ): Observable<Product> {\n    const shouldLoad$ = this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductStateFactory(productCode, scope)\n      ),\n      map(\n        (productState) =>\n          !productState.loading && !productState.success && !productState.error\n      ),\n      distinctUntilChanged(),\n      filter((x) => x)\n    );\n\n    const isLoading$ = this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductLoadingFactory(productCode, scope)\n      )\n    );\n\n    const productLoadLogic$ = merge(\n      shouldLoad$,\n      ...this.getProductReloadTriggers(productCode, scope)\n    ).pipe(\n      debounceTime(0),\n      withLatestFrom(isLoading$),\n      tap(([, isLoading]) => {\n        if (!isLoading) {\n          this.store.dispatch(\n            new ProductActions.LoadProduct(productCode, scope)\n          );\n        }\n      })\n    );\n\n    const productData$ = this.store.pipe(\n      select(ProductSelectors.getSelectedProductFactory(productCode, scope))\n    );\n\n    return using(\n      () => productLoadLogic$.subscribe(),\n      () => productData$\n    ).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  }\n\n  /**\n   * Returns reload triggers for product per scope\n   *\n   * @param productCode\n   * @param scope\n   */\n  protected getProductReloadTriggers(\n    productCode: string,\n    scope: string\n  ): Observable<unknown>[] {\n    const triggers: Observable<unknown>[] = [];\n\n    // max age trigger add\n    const maxAge = this.loadingScopes.getMaxAge('product', scope);\n    if (maxAge && isPlatformBrowser(this.platformId)) {\n      // we want to grab load product success and load product fail for this product and scope\n      const loadFinish$ = this.actions$.pipe(\n        ofType(\n          ProductActions.LOAD_PRODUCT_SUCCESS,\n          ProductActions.LOAD_PRODUCT_FAIL\n        ),\n        filter(\n          (\n            action:\n              | ProductActions.LoadProductSuccess\n              | ProductActions.LoadProductFail\n          ) =>\n            action.meta.entityId === productCode && action.meta.scope === scope\n        )\n      );\n\n      const loadStart$ = this.actions$.pipe(\n        ofType(ProductActions.LOAD_PRODUCT),\n        filter(\n          (action: ProductActions.LoadProduct) =>\n            action.payload === productCode && action.meta.scope === scope\n        )\n      );\n\n      triggers.push(this.getMaxAgeTrigger(loadStart$, loadFinish$, maxAge));\n    }\n\n    const reloadTriggers$ = this.loadingScopes\n      .getReloadTriggers('product', scope)\n      .map((e) => this.eventService.get(e));\n\n    return triggers.concat(reloadTriggers$);\n  }\n\n  /**\n   * Generic method that returns stream triggering reload by maxAge\n   *\n   * Could be refactored to separate service in future to use in other\n   * max age reload implementations\n   *\n   * @param loadStart$ Stream that emits on load start\n   * @param loadFinish$ Stream that emits on load finish\n   * @param maxAge max age\n   */\n  private getMaxAgeTrigger(\n    loadStart$: Observable<ProductActions.ProductAction>,\n    loadFinish$: Observable<ProductActions.ProductAction>,\n    maxAge: number,\n    scheduler?: SchedulerLike\n  ): Observable<boolean> {\n    let timestamp = 0;\n\n    const now = () => (scheduler ? scheduler.now() : Date.now());\n\n    const timestamp$ = loadFinish$.pipe(tap(() => (timestamp = now())));\n\n    const shouldReload$: Observable<boolean> = defer(() => {\n      const age = now() - timestamp;\n\n      const timestampRefresh$ = timestamp$.pipe(\n        delay(maxAge, scheduler),\n        mapTo(true),\n        withdrawOn(loadStart$)\n      );\n\n      if (age > maxAge) {\n        // we should emit first value immediately\n        return merge(of(true), timestampRefresh$);\n      } else if (age === 0) {\n        // edge case, we should emit max age timeout after next load success\n        // could happen with artificial schedulers\n        return timestampRefresh$;\n      } else {\n        // we should emit first value when age will expire\n        return merge(\n          of(true).pipe(delay(maxAge - age, scheduler)),\n          timestampRefresh$\n        );\n      }\n    });\n\n    return shouldReload$;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { Product } from '../../model/product.model';\nimport { DEFAULT_SCOPE } from '../../occ/occ-models/occ-endpoints.model';\nimport { ProductScope } from '../model/product-scope';\nimport { ProductLoadingService } from '../services/product-loading.service';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(\n    protected store: Store<StateWithProduct>,\n    protected productLoading: ProductLoadingService\n  ) {}\n\n  /**\n   * Returns the product observable. The product will be loaded\n   * whenever there's no value observed.\n   *\n   * The underlying product loader ensures that the product is\n   * only loaded once, even in case of parallel observers.\n   *\n   * You should provide product data scope you are interested in to not load all\n   * the data if not needed. You can provide more than one scope.\n   *\n   * @param productCode Product code to load\n   * @param scopes Scope or scopes of the product data\n   */\n  get(\n    productCode: string,\n    scopes: (ProductScope | string)[] | ProductScope | string = DEFAULT_SCOPE\n  ): Observable<Product | undefined> {\n    return productCode\n      ? this.productLoading.get(productCode, ([] as string[]).concat(scopes))\n      : of(undefined);\n  }\n\n  /**\n   * Returns boolean observable for product's loading state\n   */\n  isLoading(\n    productCode: string,\n    scope: ProductScope | string = ''\n  ): Observable<boolean> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductLoadingFactory(productCode, scope)\n      )\n    );\n  }\n\n  /**\n   * Returns boolean observable for product's load success state\n   */\n  isSuccess(\n    productCode: string,\n    scope: ProductScope | string = ''\n  ): Observable<boolean> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductSuccessFactory(productCode, scope)\n      )\n    );\n  }\n\n  /**\n   * Returns boolean observable for product's load error state\n   */\n  hasError(\n    productCode: string,\n    scope: ProductScope | string = ''\n  ): Observable<boolean> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductErrorFactory(productCode, scope)\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ProductSearchPage, Suggestion } from '../../model/index';\nimport { SearchConfig } from '../model/index';\nimport { ProductActions } from '../store/actions/index';\nimport { ProductSelectors } from '../store/selectors/index';\nimport { ProductSearchService } from './product-search.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchboxService extends ProductSearchService {\n  /**\n   * dispatch the search for the search box\n   */\n  search(query: string, searchConfig?: SearchConfig): void {\n    this.store.dispatch(\n      new ProductActions.SearchProducts(\n        {\n          queryText: query,\n          searchConfig: searchConfig,\n        },\n        true\n      )\n    );\n  }\n\n  getResults(): Observable<ProductSearchPage> {\n    return this.store.pipe(select(ProductSelectors.getAuxSearchResults));\n  }\n\n  /**\n   * clears the products and suggestions\n   */\n  clearResults(): void {\n    this.store.dispatch(\n      new ProductActions.ClearProductSearchResult({\n        clearSearchboxResults: true,\n      })\n    );\n  }\n\n  getSuggestionResults(): Observable<Suggestion[]> {\n    return this.store.pipe(select(ProductSelectors.getProductSuggestions));\n  }\n\n  searchSuggestions(query: string, searchConfig?: SearchConfig): void {\n    this.store.dispatch(\n      new ProductActions.GetProductSuggestions({\n        term: query,\n        searchConfig: searchConfig,\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-reference.service';\nexport * from './product-review.service';\nexport * from './product-search.service';\nexport * from './product.service';\nexport * from './searchbox.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// TODO: Move from product to more generic place\nexport interface SearchConfig {\n  pageSize?: number;\n  currentPage?: number;\n  sort?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const enum ProductScope {\n  LIST = 'list',\n  DETAILS = 'details',\n  ATTRIBUTES = 'attributes',\n  VARIANTS = 'variants',\n  PRICE = 'price',\n  /** Fetch the default stock information. */\n  STOCK = 'stock',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './search-config';\nexport * from './product-scope';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { CmsService } from '../../cms/facade/cms.service';\nimport {\n  BreadcrumbMeta,\n  Page,\n  PageRobotsMeta,\n} from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageBreadcrumbResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { ProductSearchPage } from '../../model/product-search.model';\nimport { ProductSearchService } from '../facade/product-search.service';\n\n/**\n * Resolves the page data for the Product Listing Page.\n *\n * The page title, and breadcrumbs are resolved in this implementation only.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryPageMetaResolver\n  extends PageMetaResolver\n  implements PageTitleResolver, PageBreadcrumbResolver, PageRobotsResolver\n{\n  // reusable observable for search page data\n  protected searchPage$: Observable<ProductSearchPage | Page> = this.cms\n    .getCurrentPage()\n    .pipe(\n      filter((page) => Boolean(page)),\n      switchMap((page: Page) =>\n        // only the existence of a plp component tells us if products\n        // are rendered or if this is an ordinary content page\n        this.hasProductListComponent(page)\n          ? this.productSearchService\n              .getResults()\n              .pipe(filter((result) => Boolean(result)))\n          : of(page)\n      )\n    );\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected cms: CmsService,\n    protected translation: TranslationService,\n    protected basePageMetaResolver: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.CATEGORY_PAGE;\n  }\n\n  resolveTitle(): Observable<string> {\n    return (<Observable<ProductSearchPage>>this.searchPage$).pipe(\n      filter((page: ProductSearchPage) => !!page.pagination),\n      switchMap((p: ProductSearchPage) =>\n        this.translation.translate('pageMetaResolver.category.title', {\n          count: p.pagination?.totalResults,\n          query: p.breadcrumbs?.length\n            ? p.breadcrumbs[0].facetValueName\n            : undefined,\n        })\n      )\n    );\n  }\n\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return combineLatest([\n      (<Observable<ProductSearchPage>>this.searchPage$).pipe(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([page, label]: [ProductSearchPage, string]) =>\n        page.breadcrumbs\n          ? this.resolveBreadcrumbData(<ProductSearchPage>page, label)\n          : []\n      )\n    );\n  }\n\n  protected resolveBreadcrumbData(\n    page: ProductSearchPage,\n    label: string\n  ): BreadcrumbMeta[] {\n    const breadcrumbs: BreadcrumbMeta[] = [];\n    breadcrumbs.push({ label: label, link: '/' });\n\n    for (const br of page.breadcrumbs ?? []) {\n      if (br.facetValueName) {\n        if (br.facetCode === 'category' || br.facetCode === 'allCategories') {\n          breadcrumbs.push({\n            label: br.facetValueName,\n            link: `/c/${br.facetValueCode}`,\n          });\n        }\n        if (br.facetCode === 'brand') {\n          breadcrumbs.push({\n            label: br.facetValueName,\n            link: `/Brands/${br.facetValueName}/c/${br.facetValueCode}`,\n          });\n        }\n      }\n    }\n    return breadcrumbs;\n  }\n\n  protected hasProductListComponent(page: Page): boolean {\n    return !!Object.keys(page.slots || {}).find(\n      (key) =>\n        !!page.slots?.[key].components?.find(\n          (comp) =>\n            comp.typeCode === 'CMSProductListComponent' ||\n            comp.typeCode === 'ProductGridComponent'\n        )\n    );\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver.resolveRobots();\n  }\n\n  /**\n   * Resolves the canonical url for the category listing page.\n   *\n   * The default options will be used to resolve the url, which means that\n   * all query parameters are removed and https and www are added explicitly.\n   */\n  resolveCanonicalUrl(): Observable<string> {\n    return this.basePageMetaResolver.resolveCanonicalUrl();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { BreadcrumbMeta, Page } from '../../cms/model/page.model';\nimport {\n  PageBreadcrumbResolver,\n  PageMetaResolver,\n  PageTitleResolver,\n} from '../../cms/page';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { ProductSearchService } from '../../product/facade/product-search.service';\nimport { SemanticPathService } from '../../routing/configurable-routes/url-translation/semantic-path.service';\n\n/**\n * Resolves page meta data for the search result page, in case it's used\n * to query coupons. This is done by adding a `couponcode` query parameter\n * to the search page route.\n *\n * The page resolves an alternative page title and breadcrumb.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CouponSearchPageResolver\n  extends PageMetaResolver\n  implements PageTitleResolver, PageBreadcrumbResolver\n{\n  protected total$: Observable<number> = this.productSearchService\n    .getResults()\n    .pipe(\n      filter((data) => !!data?.pagination),\n      map((results) => results.pagination?.totalResults ?? 0)\n    );\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected translation: TranslationService,\n    protected authService: AuthService,\n    protected route: ActivatedRoute,\n    protected semanticPathService: SemanticPathService\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n    this.pageTemplate = 'SearchResultsListPageTemplate';\n  }\n\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return combineLatest([\n      this.translation.translate('common.home'),\n      this.translation.translate('myCoupons.myCoupons'),\n      this.authService.isUserLoggedIn(),\n    ]).pipe(\n      map(([homeLabel, couponLabel, isLoggedIn]: [string, string, boolean]) => {\n        const breadcrumbs: BreadcrumbMeta[] = [];\n        breadcrumbs.push({ label: homeLabel, link: '/' });\n        if (isLoggedIn) {\n          breadcrumbs.push({\n            label: couponLabel,\n            link: this.semanticPathService.transform({\n              cxRoute: 'coupons',\n            }),\n          });\n        }\n        return breadcrumbs;\n      })\n    );\n  }\n\n  resolveTitle(): Observable<string> {\n    return this.total$.pipe(\n      switchMap((total: number) =>\n        this.translation.translate('pageMetaResolver.search.findProductTitle', {\n          count: total,\n          coupon: this.couponCode,\n        })\n      )\n    );\n  }\n\n  getScore(page: Page): number {\n    return super.getScore(page) + (this.couponCode ? 1 : -1);\n  }\n\n  protected get couponCode(): string {\n    return this.route.snapshot?.queryParams?.couponcode;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { BreadcrumbMeta, PageRobotsMeta } from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageBreadcrumbResolver,\n  PageDescriptionResolver,\n  PageHeadingResolver,\n  PageImageResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { PageLinkService } from '../../cms/page/routing/page-link.service';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { Category, Product } from '../../model/product.model';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { isNotUndefined } from '../../util/type-guards';\nimport { ProductService } from '../facade/product.service';\nimport { ProductScope } from '../model/product-scope';\n\n/**\n * Resolves the page data for the Product Detail Page\n * based on the `PageType.PRODUCT_PAGE`.\n *\n * The page title, heading, description, breadcrumbs and\n * first GALLERY image are resolved if available in the data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductPageMetaResolver\n  extends PageMetaResolver\n  implements\n    PageHeadingResolver,\n    PageTitleResolver,\n    PageDescriptionResolver,\n    PageBreadcrumbResolver,\n    PageImageResolver,\n    PageRobotsResolver\n{\n  constructor(\n    protected routingService: RoutingService,\n    protected productService: ProductService,\n    protected translation: TranslationService,\n    protected basePageMetaResolver: BasePageMetaResolver,\n    protected pageLinkService: PageLinkService\n  ) {\n    super();\n    this.pageType = PageType.PRODUCT_PAGE;\n  }\n\n  // reusable observable for product data based on the current page\n  protected product$: Observable<Product> = this.routingService\n    .getRouterState()\n    .pipe(\n      map((state) => state.state.params['productCode']),\n      filter((code) => !!code),\n      switchMap((code) => this.productService.get(code, ProductScope.DETAILS)),\n      filter(isNotUndefined)\n    );\n\n  /**\n   * Resolves the page heading for the Product Detail Page.\n   * The page heading is used in the UI (`<h1>`), where as the page\n   * title is used by the browser and crawlers.\n   */\n  resolveHeading(): Observable<string> {\n    return this.product$.pipe(\n      switchMap((p: Product) =>\n        this.translation.translate('pageMetaResolver.product.heading', {\n          heading: p.name,\n        })\n      )\n    );\n  }\n\n  /**\n   * Resolves the page title for the Product Detail Page. The page title\n   * is resolved with the product name, the first category and the manufacturer.\n   * The page title used by the browser (history, tabs) and crawlers.\n   */\n  resolveTitle(): Observable<string> {\n    return this.product$.pipe(\n      switchMap((product) => {\n        let title = product.name;\n        title += this.resolveFirstCategory(product);\n        title += this.resolveManufacturer(product);\n        return this.translation.translate('pageMetaResolver.product.title', {\n          title: title,\n        });\n      })\n    );\n  }\n\n  /**\n   * Resolves the page description for the Product Detail Page. The description\n   * is based on the `product.summary`.\n   */\n  resolveDescription(): Observable<string> {\n    return this.product$.pipe(\n      switchMap((product) =>\n        this.translation.translate('pageMetaResolver.product.description', {\n          description: product.summary,\n        })\n      )\n    );\n  }\n\n  /**\n   * Resolves breadcrumbs for the Product Detail Page. The breadcrumbs are driven by\n   * a static home page crumb and a crumb for each category.\n   */\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return combineLatest([\n      this.product$.pipe(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([product, label]) => {\n        const breadcrumbs = [];\n        breadcrumbs.push({ label, link: '/' });\n        for (const { name, code, url } of product.categories || []) {\n          breadcrumbs.push({\n            label: name || code,\n            link: url,\n          } as BreadcrumbMeta);\n        }\n        return breadcrumbs;\n      })\n    );\n  }\n\n  /**\n   * Resolves the main page image for the Product Detail Page. The product image\n   * is based on the PRIMARY product image. The zoom format is used by default.\n   */\n  resolveImage(): Observable<string> {\n    return this.product$.pipe(\n      map((product) => (<any>product.images?.PRIMARY)?.zoom?.url ?? null)\n    );\n  }\n\n  protected resolveFirstCategory(product: Product): string {\n    const firstCategory: Category | undefined = product?.categories?.[0];\n\n    return firstCategory\n      ? ` | ${firstCategory.name || firstCategory.code}`\n      : '';\n  }\n\n  protected resolveManufacturer(product: Product): string {\n    return product.manufacturer ? ` | ${product.manufacturer}` : '';\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver.resolveRobots();\n  }\n\n  /**\n   * Resolves the canonical url for the product page using the default canonical url\n   * configuration.\n   *\n   * In case of a variant product, the baseProduct code is used to resolve the url. It's important\n   * to know that this has a few limitations:\n   * - We're not always able to get the super baseProduct, in case of multi-level variants.\n   *   OCC only exposes the direct baseProduct, which might still not resolve in the correct\n   *   canonical URL. This is business driven and subject to change in a customization.\n   * - The url resolved for the variant doesn't contain any content other then the product code.\n   *   This means that we do not provide any product data to resolve pretty URLs (for example\n   *   the product title).\n   */\n  resolveCanonicalUrl(): Observable<string> {\n    return this.product$.pipe(\n      switchMap((product) => this.findBaseProduct(product)),\n      map((product) => {\n        const url = this.routingService.getFullUrl({\n          cxRoute: 'product',\n          params: product,\n        });\n        return this.pageLinkService.getCanonicalUrl({}, url);\n      })\n    );\n  }\n\n  /**\n   * Resolves the base product whenever the given product is a variant product.\n   *\n   * Since product variants can be multi-layered, we recursively try to find the base product\n   * this might be too opinionated for your business though.\n   */\n  protected findBaseProduct(product: Product): Observable<Product> {\n    if (product?.baseProduct) {\n      return this.productService\n        .get(product.baseProduct, ProductScope.LIST)\n        .pipe(\n          filter(isNotUndefined),\n          switchMap((baseProduct) => this.findBaseProduct(baseProduct))\n        );\n    }\n    return of(product);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { PageRobotsMeta } from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { ProductSearchService } from '../facade/product-search.service';\n\n/**\n * Resolves the page data for the Search Result Page based on the\n * `PageType.CATEGORY_PAGE` and the `SearchResultsListPageTemplate` template.\n *\n * Only the page title is resolved in the standard implementation.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchPageMetaResolver\n  extends PageMetaResolver\n  implements PageMetaResolver, PageTitleResolver, PageRobotsResolver\n{\n  protected total$: Observable<number | undefined> = this.productSearchService\n    .getResults()\n    .pipe(\n      filter((data) => !!data?.pagination),\n      map((results) => results.pagination?.totalResults)\n    );\n\n  protected query$: Observable<string> = this.routingService\n    .getRouterState()\n    .pipe(map((state) => state.state.params['query']));\n\n  constructor(\n    protected routingService: RoutingService,\n    protected productSearchService: ProductSearchService,\n    protected translation: TranslationService,\n    protected basePageMetaResolver: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n    this.pageTemplate = 'SearchResultsListPageTemplate';\n  }\n\n  resolveTitle(): Observable<string> {\n    const sources = [this.total$, this.query$];\n    return combineLatest(sources).pipe(\n      switchMap(([count, query]) =>\n        this.translation\n          .translate('pageMetaResolver.search.default_title')\n          .pipe(\n            mergeMap((defaultQuery) =>\n              this.translation.translate('pageMetaResolver.search.title', {\n                count,\n                query: query || defaultQuery,\n              })\n            )\n          )\n      )\n    );\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver.resolveRobots();\n  }\n\n  /**\n   * Resolves the canonical page for the search page.\n   *\n   * The default options will be used to resolve the url, which means that\n   * the all query parameters are removed and https and www are added explicitly.\n   */\n  resolveCanonicalUrl(): Observable<string> {\n    return this.basePageMetaResolver.resolveCanonicalUrl();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  StateConfig,\n  StateTransferType,\n} from '../../state/config/state-config';\nimport { effects } from './effects/index';\nimport { PRODUCT_FEATURE } from './product-state';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\nimport { provideDefaultConfigFactory } from '../../config/config-providers';\n\nexport function productStoreConfigFactory(): StateConfig {\n  // if we want to reuse PRODUCT_FEATURE const in config, we have to use factory instead of plain object\n  const config: StateConfig = {\n    state: {\n      ssrTransfer: {\n        keys: { [PRODUCT_FEATURE]: StateTransferType.TRANSFER_STATE },\n      },\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(PRODUCT_FEATURE, reducerToken, { metaReducers }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    provideDefaultConfigFactory(productStoreConfigFactory),\n    reducerProvider,\n  ],\n})\nexport class ProductStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { PageMetaResolver } from '../cms/page/page-meta.resolver';\nimport { ProductEventModule } from './event/product-event.module';\nimport { CategoryPageMetaResolver } from './services/category-page-meta.resolver';\nimport { CouponSearchPageResolver } from './services/coupon-search-page-meta.resolver';\nimport { ProductPageMetaResolver } from './services/product-page-meta.resolver';\nimport { SearchPageMetaResolver } from './services/search-page-meta.resolver';\nimport { ProductStoreModule } from './store/product-store.module';\n\nconst pageTitleResolvers = [\n  {\n    provide: PageMetaResolver,\n    useExisting: ProductPageMetaResolver,\n    multi: true,\n  },\n  {\n    provide: PageMetaResolver,\n    useExisting: CategoryPageMetaResolver,\n    multi: true,\n  },\n  {\n    provide: PageMetaResolver,\n    useExisting: SearchPageMetaResolver,\n    multi: true,\n  },\n  {\n    provide: PageMetaResolver,\n    useExisting: CouponSearchPageResolver,\n    multi: true,\n  },\n];\n\n@NgModule({\n  imports: [ProductStoreModule, ProductEventModule],\n})\nexport class ProductModule {\n  static forRoot(): ModuleWithProviders<ProductModule> {\n    return {\n      ngModule: ProductModule,\n      providers: [...pageTitleResolvers],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './category-page-meta.resolver';\nexport * from './product-page-meta.resolver';\nexport * from './search-page-meta.resolver';\nexport * from './product-loading.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\nexport * from './event/index';\nexport * from './facade/index';\nexport * from './model/index';\nexport * from './product.module';\nexport * from './services/index';\nexport * from './store/actions/index';\nexport * from './store/product-state';\nexport * from './store/selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { UserAddressAdapter } from './user-address.adapter';\nimport { Observable } from 'rxjs';\nimport { Address, AddressValidation } from '../../../model/address.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAddressConnector {\n  constructor(protected adapter: UserAddressAdapter) {}\n\n  getAll(userId: string): Observable<Address[]> {\n    return this.adapter.loadAll(userId);\n  }\n\n  add(userId: string, address: Address): Observable<{}> {\n    return this.adapter.add(userId, address);\n  }\n\n  update(userId: string, addressId: string, address: Address): Observable<{}> {\n    return this.adapter.update(userId, addressId, address);\n  }\n\n  verify(userId: string, address: Address): Observable<AddressValidation> {\n    return this.adapter.verify(userId, address);\n  }\n\n  delete(userId: string, addressId: string): Observable<{}> {\n    return this.adapter.delete(userId, addressId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-address.connector';\nexport * from './user-address.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserConsentAdapter } from './user-consent.adapter';\nimport { ConsentTemplate } from '../../../model/consent.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserConsentConnector {\n  constructor(protected adapter: UserConsentAdapter) {}\n\n  loadConsents(userId: string): Observable<ConsentTemplate[]> {\n    return this.adapter.loadConsents(userId);\n  }\n\n  giveConsent(\n    userId: string,\n    consentTemplateId: string,\n    consentTemplateVersion: number\n  ): Observable<ConsentTemplate> {\n    return this.adapter.giveConsent(\n      userId,\n      consentTemplateId,\n      consentTemplateVersion\n    );\n  }\n\n  withdrawConsent(userId: string, consentCode: string): Observable<{}> {\n    return this.adapter.withdrawConsent(userId, consentCode);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-consent.connector';\nexport * from './user-consent.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { UserCostCenterAdapter } from './user-cost-center.adapter';\nimport { EntitiesModel } from '../../../model/misc.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserCostCenterConnector {\n  constructor(protected adapter: UserCostCenterAdapter) {}\n\n  getActiveList(userId: string): Observable<EntitiesModel<CostCenter>> {\n    return this.adapter.loadActiveList(userId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-cost-center.connector';\nexport * from './user-cost-center.adapter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  CustomerCoupon2Customer,\n  CustomerCouponNotification,\n  CustomerCouponSearchResult,\n} from '../../../model/customer-coupon.model';\nimport { CustomerCouponAdapter } from './customer-coupon.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerCouponConnector {\n  constructor(protected adapter: CustomerCouponAdapter) {}\n\n  getCustomerCoupons(\n    userId: string,\n    pageSize: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<CustomerCouponSearchResult> {\n    return this.adapter.getCustomerCoupons(userId, pageSize, currentPage, sort);\n  }\n\n  turnOnNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCouponNotification> {\n    return this.adapter.turnOnNotification(userId, couponCode);\n  }\n\n  turnOffNotification(userId: string, couponCode: string): Observable<{}> {\n    return this.adapter.turnOffNotification(userId, couponCode);\n  }\n\n  claimCustomerCoupon(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCoupon2Customer> {\n    return this.adapter.claimCustomerCoupon(userId, couponCode);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './customer-coupon.connector';\nexport * from './customer-coupon.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { UserInterestsAdapter } from './user-interests.adapter';\nimport { Observable } from 'rxjs';\nimport {\n  ProductInterestSearchResult,\n  ProductInterestEntryRelation,\n  NotificationType,\n} from '../../../model/product-interest.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserInterestsConnector {\n  constructor(protected adapter: UserInterestsAdapter) {}\n  getInterests(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): Observable<ProductInterestSearchResult> {\n    return this.adapter.getInterests(\n      userId,\n      pageSize,\n      currentPage,\n      sort,\n      productCode,\n      notificationType\n    );\n  }\n\n  removeInterest(\n    userId: string,\n    item: ProductInterestEntryRelation\n  ): Observable<any[]> {\n    return this.adapter.removeInterest(userId, item);\n  }\n\n  addInterest(\n    userId: string,\n    productCode: string,\n    notificationType: NotificationType\n  ): Observable<any> {\n    return this.adapter.addInterest(userId, productCode, notificationType);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\nexport * from './user-interests.connector';\nexport * from './user-interests.adapter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { UserPaymentAdapter } from './user-payment.adapter';\nimport { Observable } from 'rxjs';\nimport { PaymentDetails } from '../../../model/payment.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserPaymentConnector {\n  constructor(protected adapter: UserPaymentAdapter) {}\n\n  getAll(userId: string): Observable<PaymentDetails[]> {\n    return this.adapter.loadAll(userId);\n  }\n\n  delete(userId: string, paymentMethodID: string): Observable<{}> {\n    return this.adapter.delete(userId, paymentMethodID);\n  }\n\n  setDefault(userId: string, paymentMethodID: string): Observable<{}> {\n    return this.adapter.setDefault(userId, paymentMethodID);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-payment.connector';\nexport * from './user-payment.adapter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './address/index';\nexport * from './consent/index';\nexport * from './cost-center/index';\nexport * from './customer-coupon/index';\nexport * from './interests/index';\nexport * from './payment/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CxEvent } from '../../event/cx-event';\nimport { Address } from '../../model/address.model';\n\nexport abstract class UserAddressEvent extends CxEvent {\n  userId: string;\n}\n\nexport class UpdateUserAddressEvent extends UserAddressEvent {\n  static readonly type = 'UpdateUserAddressEvent';\n  addressId: string;\n  address: Address;\n}\n\nexport class DeleteUserAddressEvent extends UserAddressEvent {\n  static readonly type = 'DeleteUserAddressEvent';\n  addressId: string;\n}\n\nexport class AddUserAddressEvent extends UserAddressEvent {\n  static readonly type = 'AddUserAddressEvent';\n  address: Address;\n}\n\nexport class LoadUserAddressesEvent extends UserAddressEvent {\n  static readonly type = 'LoadUserAddressesEvent';\n}\n\nexport class LoadUserPaymentMethodsEvent extends UserAddressEvent {\n  static readonly type = 'LoadUserPaymentMethodsEvent';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { StateEventService } from '../../state/event/state-event.service';\nimport { UserActions } from '../store/actions/index';\nimport {\n  AddUserAddressEvent,\n  DeleteUserAddressEvent,\n  UpdateUserAddressEvent,\n} from './user.events';\n\n@Injectable()\nexport class UserEventBuilder {\n  constructor(protected stateEventService: StateEventService) {\n    this.register();\n  }\n\n  /**\n   * Registers user events\n   */\n  protected register(): void {\n    this.updateUserAddressEvent();\n    this.deleteUserAddressEvent();\n    this.addUserAddressEvent();\n  }\n\n  /**\n   * Register an address successfully updated event\n   */\n  protected updateUserAddressEvent(): void {\n    this.stateEventService.register({\n      action: UserActions.UPDATE_USER_ADDRESS,\n      event: UpdateUserAddressEvent,\n    });\n  }\n\n  protected addUserAddressEvent(): void {\n    this.stateEventService.register({\n      action: UserActions.ADD_USER_ADDRESS,\n      event: AddUserAddressEvent,\n    });\n  }\n\n  protected deleteUserAddressEvent(): void {\n    this.stateEventService.register({\n      action: UserActions.DELETE_USER_ADDRESS,\n      event: DeleteUserAddressEvent,\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { UserEventBuilder } from './user-event.builder';\n\n@NgModule({})\nexport class UserEventModule {\n  constructor(_userEventBuilder: UserEventBuilder) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-event.builder';\nexport * from './user-event.module';\nexport * from './user.events';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { AnonymousConsentsService } from '../../anonymous-consents/index';\nimport { AnonymousConsent, Consent } from '../../model/index';\nimport { UserConsentService } from './user-consent.service';\n\n/**\n * Unified facade for both anonymous and registered user consents.\n */\n@Injectable({ providedIn: 'root' })\nexport class ConsentService {\n  constructor(\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected userConsentService: UserConsentService\n  ) {}\n\n  /**\n   * Returns either anonymous consent or registered consent as they are emitted.\n   * @param templateCode for which to return either anonymous or registered consent.\n   */\n  getConsent(\n    templateCode: string\n  ): Observable<AnonymousConsent | Consent | undefined> {\n    return merge(\n      this.userConsentService.getConsent(templateCode),\n      this.anonymousConsentsService.getConsent(templateCode)\n    );\n  }\n\n  /**\n   * Checks if the `templateId`'s template has a given consent.\n   * The method returns `false` if the consent doesn't exist or if it's withdrawn. Otherwise, `true` is returned.\n   *\n   * @param templateId of a template which's consent should be checked\n   */\n  checkConsentGivenByTemplateId(templateId: string): Observable<boolean> {\n    return this.getConsent(templateId).pipe(\n      map((consent) => {\n        if (!consent) {\n          return false;\n        }\n\n        return this.isAnonymousConsentType(consent)\n          ? this.anonymousConsentsService.isConsentGiven(consent)\n          : this.userConsentService.isConsentGiven(consent);\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Checks if the `templateId`'s template has a withdrawn consent.\n   * The method returns `true` if the consent doesn't exist or if it's withdrawn. Otherwise, `false` is returned.\n   *\n   * @param templateId of a template which's consent should be checked\n   */\n  checkConsentWithdrawnByTemplateId(templateId: string): Observable<boolean> {\n    return this.getConsent(templateId).pipe(\n      map((consent) => {\n        if (!consent) {\n          return true;\n        }\n\n        return this.isAnonymousConsentType(consent)\n          ? this.anonymousConsentsService.isConsentWithdrawn(consent)\n          : this.userConsentService.isConsentWithdrawn(consent);\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   *\n   * Checks the provided `consent`'s type and delegates to an appropriate method - `anonymousConsentsService.isConsentGiven(consent)` or `this.userConsentService.isConsentGiven`\n   *\n   * @param consent a consent to check\n   */\n  isConsentGiven(consent: AnonymousConsent | Consent): boolean {\n    return this.isAnonymousConsentType(consent)\n      ? this.anonymousConsentsService.isConsentGiven(consent)\n      : this.userConsentService.isConsentGiven(consent);\n  }\n\n  /**\n   *\n   * Checks the provided `consent`'s type and delegates to an appropriate method - `anonymousConsentsService.isConsentWithdrawn(consent)` or `this.userConsentService.isConsentWithdrawn`\n   *\n   * @param consent a consent to check\n   */\n  isConsentWithdrawn(consent: AnonymousConsent | Consent): boolean {\n    return this.isAnonymousConsentType(consent)\n      ? this.anonymousConsentsService.isConsentWithdrawn(consent)\n      : this.userConsentService.isConsentWithdrawn(consent);\n  }\n\n  /**\n   * Returns `true` if the provided consent is of type `AnonymousConsent`. Otherwise, `false` is returned.\n   */\n  isAnonymousConsentType(\n    consent: AnonymousConsent | Consent\n  ): consent is AnonymousConsent {\n    if (!consent) {\n      return false;\n    }\n\n    return (consent as AnonymousConsent).templateCode !== undefined;\n  }\n\n  /**\n   * Returns `true` if the provided consent is of type `Consent`. Otherwise, `false` is returned.\n   */\n  isConsentType(consent: AnonymousConsent | Consent): consent is Consent {\n    if (!consent) {\n      return false;\n    }\n\n    return (consent as Consent).code !== undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { CustomerCouponSearchResult } from '../../model/customer-coupon.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { isNotUndefined } from '../../util';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  CLAIM_CUSTOMER_COUPON_PROCESS_ID,\n  StateWithUser,\n  SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n  UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerCouponService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Retrieves customer's coupons\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadCustomerCoupons(\n    pageSize: number,\n    currentPage?: number,\n    sort?: string\n  ): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.LoadCustomerCoupons({\n          userId,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          sort: sort,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns customer coupon search result\n   * @param pageSize page size\n   */\n  getCustomerCoupons(pageSize: number): Observable<CustomerCouponSearchResult> {\n    return combineLatest([\n      (<Store<StateWithUser>>this.store).pipe(\n        select(UsersSelectors.getCustomerCouponsState)\n      ),\n      this.getClaimCustomerCouponResultLoading(),\n    ]).pipe(\n      filter(([, loading]) => !loading),\n      tap(([customerCouponsState]) => {\n        const attemptedLoad =\n          customerCouponsState.loading ||\n          customerCouponsState.success ||\n          customerCouponsState.error;\n        if (!attemptedLoad) {\n          this.loadCustomerCoupons(pageSize);\n        }\n      }),\n      map(([customerCouponsState]) => customerCouponsState.value),\n      filter(isNotUndefined)\n    );\n  }\n\n  /**\n   * Returns a loaded flag for customer coupons\n   */\n  getCustomerCouponsLoaded(): Observable<boolean> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getCustomerCouponsLoaded)\n    );\n  }\n\n  /**\n   * Returns a loading flag for customer coupons\n   */\n  getCustomerCouponsLoading(): Observable<boolean> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getCustomerCouponsLoading)\n    );\n  }\n\n  /**\n   * Subscribe a CustomerCoupon Notification\n   * @param couponCode a customer coupon code\n   */\n  subscribeCustomerCoupon(couponCode: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.SubscribeCustomerCoupon({\n          userId,\n          couponCode: couponCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the subscribe customer coupon notification process loading flag\n   */\n  getSubscribeCustomerCouponResultLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessLoadingFactory(SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the subscribe customer coupon notification process success flag\n   */\n  getSubscribeCustomerCouponResultSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessSuccessFactory(SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the subscribe customer coupon notification process error flag\n   */\n  getSubscribeCustomerCouponResultError(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessErrorFactory(SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Unsubscribe a CustomerCoupon Notification\n   * @param couponCode a customer coupon code\n   */\n  unsubscribeCustomerCoupon(couponCode: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.UnsubscribeCustomerCoupon({\n          userId,\n          couponCode: couponCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the unsubscribe customer coupon notification process loading flag\n   */\n  getUnsubscribeCustomerCouponResultLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessLoadingFactory(UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the unsubscribe customer coupon notification process success flag\n   */\n  getUnsubscribeCustomerCouponResultSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessSuccessFactory(UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the unsubscribe customer coupon notification process error flag\n   */\n  getUnsubscribeCustomerCouponResultError(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessErrorFactory(UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Claim a CustomerCoupon\n   * @param couponCode a customer coupon code\n   */\n  claimCustomerCoupon(couponCode: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.ClaimCustomerCoupon({\n          userId,\n          couponCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the claim customer coupon notification process success flag\n   */\n  getClaimCustomerCouponResultSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessSuccessFactory(CLAIM_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the claim customer coupon notification process loading flag\n   */\n  getClaimCustomerCouponResultLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessLoadingFactory(CLAIM_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport {\n  Address,\n  AddressValidation,\n  Country,\n  Region,\n} from '../../model/address.model';\nimport {\n  Command,\n  CommandService,\n} from '../../util/command-query/command.service';\nimport { UserAddressConnector } from '../connectors/address/user-address.connector';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAddressService {\n  constructor(\n    protected store: Store<StateWithUser>,\n    protected userIdService: UserIdService,\n    protected userAddressConnector: UserAddressConnector,\n    protected command: CommandService\n  ) {}\n\n  /**\n   * Retrieves user's addresses\n   */\n  loadAddresses(): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(new UserActions.LoadUserAddresses(userId));\n    });\n  }\n\n  /**\n   * Adds user address\n   * @param address a user address\n   */\n  addUserAddress(address: Address): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.AddUserAddress({\n          userId,\n          address,\n        })\n      );\n    });\n  }\n\n  /**\n   * Sets user address as default\n   * @param addressId a user address ID\n   */\n  setAddressAsDefault(addressId: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateUserAddress({\n          userId,\n          addressId,\n          address: { defaultAddress: true },\n        })\n      );\n    });\n  }\n\n  /**\n   * Updates existing user address\n   * @param addressId a user address ID\n   * @param address a user address\n   */\n  updateUserAddress(addressId: string, address: Address): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateUserAddress({\n          userId,\n          addressId,\n          address,\n        })\n      );\n    });\n  }\n\n  /**\n   * Deletes existing user address\n   * @param addressId a user address ID\n   */\n  deleteUserAddress(addressId: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.DeleteUserAddress({\n          userId,\n          addressId,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns addresses\n   */\n  getAddresses(): Observable<Address[]> {\n    return this.store.pipe(select(UsersSelectors.getAddresses));\n  }\n\n  /**\n   * Returns a loading flag for addresses\n   */\n  getAddressesLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getAddressesLoading));\n  }\n\n  getAddressesLoadedSuccess(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getAddressesLoadedSuccess));\n  }\n  /**\n   * Retrieves delivery countries\n   */\n  loadDeliveryCountries(): void {\n    this.store.dispatch(new UserActions.LoadDeliveryCountries());\n  }\n\n  /**\n   * Returns all delivery countries\n   */\n  getDeliveryCountries(): Observable<Country[]> {\n    return this.store.pipe(select(UsersSelectors.getAllDeliveryCountries));\n  }\n\n  /**\n   * Returns a country based on the provided `isocode`\n   * @param isocode an isocode for a country\n   */\n  getCountry(isocode: string): Observable<Country | null> {\n    return this.store.pipe(\n      select(UsersSelectors.countrySelectorFactory(isocode))\n    );\n  }\n\n  /**\n   * Retrieves regions for specified country by `countryIsoCode`\n   * @param countryIsoCode\n   */\n  loadRegions(countryIsoCode: string): void {\n    this.store.dispatch(new UserActions.LoadRegions(countryIsoCode));\n  }\n\n  /**\n   * Clear regions in store - useful when changing country\n   */\n  clearRegions(): void {\n    this.store.dispatch(new UserActions.ClearRegions());\n  }\n\n  /**\n   * Returns all regions\n   */\n  getRegions(countryIsoCode: string): Observable<Region[]> {\n    return this.store.pipe(\n      select(UsersSelectors.getRegionsDataAndLoading),\n      map(({ regions, country, loading, loaded }) => {\n        if (!countryIsoCode && (loading || loaded)) {\n          this.clearRegions();\n          return [];\n        } else if (loading && !loaded) {\n          // don't interrupt loading\n          return [];\n        } else if (!loading && countryIsoCode !== country && countryIsoCode) {\n          // country changed - clear store and load new regions\n          if (country) {\n            this.clearRegions();\n          }\n          this.loadRegions(countryIsoCode);\n          return [];\n        }\n        return regions;\n      })\n    );\n  }\n  /**\n   * Verifies the address\n   * @param address : the address to be verified\n   */\n  verifyAddress(address: Address): Observable<AddressValidation> {\n    return this.userAddressVerificationCommand.execute({ address });\n  }\n\n  protected userAddressVerificationCommand: Command<\n    {\n      address: Address;\n    },\n    AddressValidation\n  > = this.command.create((payload) =>\n    this.userIdService\n      .takeUserId(false)\n      .pipe(\n        switchMap((userId) =>\n          this.userAddressConnector.verify(userId, payload.address)\n        )\n      )\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, queueScheduler } from 'rxjs';\nimport { filter, map, observeOn, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Address } from '../../model/address.model';\nimport { CostCenter } from '../../model/org-unit.model';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserCostCenterService {\n  constructor(\n    protected store: Store<StateWithUser>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Load all visible active cost centers for the currently login user\n   */\n  loadActiveCostCenters(): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) => {\n        this.store.dispatch(new UserActions.LoadActiveCostCenters(userId));\n      },\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getCostCentersState(): Observable<LoaderState<CostCenter[]>> {\n    return this.store.select(UsersSelectors.getCostCentersState);\n  }\n\n  /**\n   * Get all visible active cost centers\n   */\n  getActiveCostCenters(): Observable<CostCenter[]> {\n    return this.getCostCentersState().pipe(\n      observeOn(queueScheduler),\n      tap((process: LoaderState<CostCenter[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadActiveCostCenters();\n        }\n      }),\n      filter((process: LoaderState<CostCenter[]>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value ?? [])\n    );\n  }\n\n  /**\n   * Get the addresses of the cost center's unit based on cost center id\n   * @param costCenterId cost center id\n   */\n  getCostCenterAddresses(costCenterId: string): Observable<Address[]> {\n    return this.getActiveCostCenters().pipe(\n      map((costCenters) => {\n        const costCenter = costCenters.find((cc) => cc.code === costCenterId);\n        if (costCenter && costCenter.unit) {\n          return costCenter.unit.addresses ?? [];\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport {\n  NotificationType,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n} from '../../model/product-interest.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { isNotUndefined } from '../../util';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  ADD_PRODUCT_INTEREST_PROCESS_ID,\n  REMOVE_PRODUCT_INTERESTS_PROCESS_ID,\n  StateWithUser,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserInterestsService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Retrieves an product interest list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadProductInterests(\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.LoadProductInterests({\n          userId,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          sort: sort,\n          productCode: productCode,\n          notificationType: notificationType,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns product interests\n   */\n  getProductInterests(): Observable<ProductInterestSearchResult> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getInterests)\n    );\n  }\n\n  /**\n   * Returns product interests\n   * @param pageSize the page size\n   */\n  getAndLoadProductInterests(\n    pageSize?: number\n  ): Observable<ProductInterestSearchResult> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getInterestsState),\n      tap((interestListState) => {\n        const attemptedLoad =\n          interestListState.loading ||\n          interestListState.success ||\n          interestListState.error;\n        if (!attemptedLoad) {\n          this.loadProductInterests(pageSize);\n        }\n      }),\n      map((interestListState) => interestListState.value),\n      filter(isNotUndefined)\n    );\n  }\n\n  /**\n   * Returns a loading flag for product interests\n   */\n  getProdutInterestsLoading(): Observable<boolean> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getInterestsLoading)\n    );\n  }\n\n  /**\n   * Removes a ProductInterestRelation\n   * @param item product interest relation item\n   * @param singleDelete flag to delete only one interest\n   */\n  removeProdutInterest(\n    item: ProductInterestEntryRelation,\n    singleDelete?: boolean\n  ): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.RemoveProductInterest({\n          userId,\n          item: item,\n          singleDelete: singleDelete,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns a loading flag for removing product interests.\n   */\n  getRemoveProdutInterestLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessLoadingFactory(REMOVE_PRODUCT_INTERESTS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns a success flag for removing a product interests.\n   */\n  getRemoveProdutInterestSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessSuccessFactory(REMOVE_PRODUCT_INTERESTS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Add a new product interest.\n   *\n   * @param productCode the product code\n   * @param notificationType the notification type\n   */\n  addProductInterest(\n    productCode: string,\n    notificationType: NotificationType\n  ): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.AddProductInterest({\n          userId,\n          productCode: productCode,\n          notificationType: notificationType,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns a success flag for adding a product interest.\n   */\n  getAddProductInterestSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessSuccessFactory(ADD_PRODUCT_INTEREST_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns a error flag for adding a product interest.\n   */\n  getAddProductInterestError(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(getProcessErrorFactory(ADD_PRODUCT_INTEREST_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Reset product interest adding state.\n   */\n  resetAddInterestState(): void {\n    this.store.dispatch(new UserActions.ResetAddInterestState());\n  }\n\n  /**\n   * Reset product interest removing state.\n   */\n  resetRemoveInterestState(): void {\n    this.store.dispatch(new UserActions.ResetRemoveInterestState());\n  }\n\n  /**\n   * Clears product interests\n   */\n  clearProductInterests(): void {\n    this.store.dispatch(new UserActions.ClearProductInterests());\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { NotificationPreference } from '../../model/notification-preference.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { getProcessLoadingFactory } from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  StateWithUser,\n  UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserNotificationPreferenceService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Returns all notification preferences.\n   */\n  getPreferences(): Observable<NotificationPreference[]> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getPreferences)\n    );\n  }\n\n  /**\n   * Returns all enabled notification preferences.\n   */\n  getEnabledPreferences(): Observable<NotificationPreference[]> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getEnabledPreferences)\n    );\n  }\n\n  /**\n   * Loads all notification preferences.\n   */\n  loadPreferences(): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(new UserActions.LoadNotificationPreferences(userId));\n    });\n  }\n\n  /**\n   * Clear all notification preferences.\n   */\n  clearPreferences(): void {\n    this.store.dispatch(new UserActions.ClearNotificationPreferences());\n  }\n\n  /**\n   * Returns a loading flag for notification preferences.\n   */\n  getPreferencesLoading(): Observable<boolean> {\n    return (<Store<StateWithUser>>this.store).pipe(\n      select(UsersSelectors.getPreferencesLoading)\n    );\n  }\n\n  /**\n   * Updating notification preferences.\n   * @param preferences a preference list\n   */\n  updatePreferences(preferences: NotificationPreference[]): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateNotificationPreferences({\n          userId,\n          preferences: preferences,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns a loading flag for updating preferences.\n   */\n  getUpdatePreferencesResultLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).select(\n      getProcessLoadingFactory(UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID)\n    );\n  }\n\n  /**\n   * Resets the update notification preferences process state. The state needs to be\n   * reset after the process concludes, regardless if it's a success or an error.\n   */\n  resetNotificationPreferences(): void {\n    this.store.dispatch(new UserActions.ResetNotificationPreferences());\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Country } from '../../model/address.model';\nimport { PaymentDetails } from '../../model/payment.model';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserPaymentService {\n  constructor(\n    protected store: Store<StateWithUser>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Loads all user's payment methods.\n   */\n  loadPaymentMethods(): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(new UserActions.LoadUserPaymentMethods(userId));\n    });\n  }\n\n  /**\n   * Returns all user's payment methods\n   */\n  getPaymentMethods(): Observable<PaymentDetails[]> {\n    return this.store.pipe(select(UsersSelectors.getPaymentMethods));\n  }\n\n  /**\n   * Returns a loading flag for payment methods\n   */\n  getPaymentMethodsLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getPaymentMethodsLoading));\n  }\n\n  getPaymentMethodsLoadedSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(UsersSelectors.getPaymentMethodsLoadedSuccess)\n    );\n  }\n  /**\n   * Sets the payment as a default one\n   * @param paymentMethodId a payment method ID\n   */\n  setPaymentMethodAsDefault(paymentMethodId: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.SetDefaultUserPaymentMethod({\n          userId,\n          paymentMethodId,\n        })\n      );\n    });\n  }\n\n  /**\n   * Deletes the payment method\n   *\n   * @param paymentMethodId a payment method ID\n   */\n  deletePaymentMethod(paymentMethodId: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UserActions.DeleteUserPaymentMethod({\n          userId,\n          paymentMethodId,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns all billing countries\n   */\n  getAllBillingCountries(): Observable<Country[]> {\n    return this.store.pipe(select(UsersSelectors.getAllBillingCountries));\n  }\n\n  /**\n   * Retrieves billing countries\n   */\n  loadBillingCountries(): void {\n    this.store.dispatch(new UserActions.LoadBillingCountries());\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { Title } from '../model/misc.model';\n\nexport abstract class UserProfileFacadeTransitionalToken {\n  abstract getTitles(): Observable<Title[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Optional } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Title } from '../../model/misc.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { StateWithUser } from '../store/user-state';\nimport { UserProfileFacadeTransitionalToken } from '../user-transitional-tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService,\n    // TODO: Remove transitional tokens in 4.0 with #11607\n    @Optional()\n    protected userProfileFacade?: UserProfileFacadeTransitionalToken\n  ) {}\n\n  /**\n   * Returns titles.\n   *\n   * @deprecated since 3.2, use `UserProfileFacade.getTitles()` from `@spartacus/user` package.\n   * We can remove it completely once we move the user-address feature to the User lib.\n   */\n  getTitles(): Observable<Title[]> {\n    if (this.userProfileFacade) {\n      return this.userProfileFacade.getTitles();\n    }\n    throw Error(\n      'Cannot get a titles. Install `@spartacus/user` library which provides required services.'\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './consent.service';\nexport * from './customer-coupon.service';\nexport * from './user-address.service';\nexport * from './user-consent.service';\nexport * from './user-cost-center.service';\nexport * from './user-interests.service';\nexport * from './user-notification-preference.service';\nexport * from './user-payment.service';\nexport * from './user.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { CountryType } from '../../../model/address.model';\nimport { SiteConnector } from '../../../site-context/connectors/site.connector';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class BillingCountriesEffect {\n  loadBillingCountries$: Observable<UserActions.BillingCountriesAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.LOAD_BILLING_COUNTRIES),\n        switchMap(() => {\n          return this.siteConnector.getCountries(CountryType.BILLING).pipe(\n            map(\n              (countries) =>\n                new UserActions.LoadBillingCountriesSuccess(countries)\n            ),\n            catchError((error) =>\n              of(\n                new UserActions.LoadBillingCountriesFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          );\n        })\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class ClearMiscsDataEffect {\n  clearMiscsData$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        SiteContextActions.LANGUAGE_CHANGE,\n        SiteContextActions.CURRENCY_CHANGE\n      ),\n      map(() => {\n        return new UserActions.ClearUserMiscsData();\n      })\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CustomerCouponConnector } from '../../connectors/customer-coupon/customer-coupon.connector';\nimport * as fromCustomerCouponsAction from '../actions/customer-coupon.action';\n\n@Injectable()\nexport class CustomerCouponEffects {\n  loadCustomerCoupons$: Observable<fromCustomerCouponsAction.CustomerCouponAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(fromCustomerCouponsAction.LOAD_CUSTOMER_COUPONS),\n        map(\n          (action: fromCustomerCouponsAction.LoadCustomerCoupons) =>\n            action.payload\n        ),\n        mergeMap((payload) => {\n          return this.customerCouponConnector\n            .getCustomerCoupons(\n              payload.userId,\n              payload.pageSize,\n              payload.currentPage,\n              payload.sort\n            )\n            .pipe(\n              map((coupons: CustomerCouponSearchResult) => {\n                return new fromCustomerCouponsAction.LoadCustomerCouponsSuccess(\n                  coupons\n                );\n              }),\n              catchError((error) =>\n                of(\n                  new fromCustomerCouponsAction.LoadCustomerCouponsFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  subscribeCustomerCoupon$: Observable<fromCustomerCouponsAction.CustomerCouponAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(fromCustomerCouponsAction.SUBSCRIBE_CUSTOMER_COUPON),\n        map(\n          (action: fromCustomerCouponsAction.SubscribeCustomerCoupon) =>\n            action.payload\n        ),\n        mergeMap((payload) => {\n          return this.customerCouponConnector\n            .turnOnNotification(payload.userId, payload.couponCode)\n            .pipe(\n              map((data: any) => {\n                return new fromCustomerCouponsAction.SubscribeCustomerCouponSuccess(\n                  data\n                );\n              }),\n              catchError((error) =>\n                of(\n                  new fromCustomerCouponsAction.SubscribeCustomerCouponFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  unsubscribeCustomerCoupon$: Observable<fromCustomerCouponsAction.CustomerCouponAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(fromCustomerCouponsAction.UNSUBSCRIBE_CUSTOMER_COUPON),\n        map(\n          (action: fromCustomerCouponsAction.UnsubscribeCustomerCoupon) =>\n            action.payload\n        ),\n        mergeMap((payload) => {\n          return this.customerCouponConnector\n            .turnOffNotification(payload.userId, payload.couponCode)\n            .pipe(\n              map(() => {\n                return new fromCustomerCouponsAction.UnsubscribeCustomerCouponSuccess(\n                  payload.couponCode\n                );\n              }),\n              catchError((error) =>\n                of(\n                  new fromCustomerCouponsAction.UnsubscribeCustomerCouponFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  claimCustomerCoupon$: Observable<fromCustomerCouponsAction.CustomerCouponAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(fromCustomerCouponsAction.CLAIM_CUSTOMER_COUPON),\n        map(\n          (action: fromCustomerCouponsAction.ClaimCustomerCoupon) =>\n            action.payload\n        ),\n        mergeMap((payload) => {\n          return this.customerCouponConnector\n            .claimCustomerCoupon(payload.userId, payload.couponCode)\n            .pipe(\n              map((data) => {\n                return new fromCustomerCouponsAction.ClaimCustomerCouponSuccess(\n                  data\n                );\n              }),\n              catchError((error) =>\n                of(\n                  new fromCustomerCouponsAction.ClaimCustomerCouponFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private customerCouponConnector: CustomerCouponConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { CountryType } from '../../../model/address.model';\nimport { SiteConnector } from '../../../site-context/connectors/site.connector';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class DeliveryCountriesEffects {\n  loadDeliveryCountries$: Observable<UserActions.DeliveryCountriesAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.LOAD_DELIVERY_COUNTRIES),\n        switchMap(() => {\n          return this.siteConnector.getCountries(CountryType.SHIPPING).pipe(\n            map(\n              (countries) =>\n                new UserActions.LoadDeliveryCountriesSuccess(countries)\n            ),\n            catchError((error) =>\n              of(\n                new UserActions.LoadDeliveryCountriesFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          );\n        })\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserNotificationPreferenceConnector } from '../../connectors/notification-preference/user-notification-preference.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class NotificationPreferenceEffects {\n  loadPreferences$: Observable<UserActions.NotificationPreferenceAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.LOAD_NOTIFICATION_PREFERENCES),\n        map(\n          (action: UserActions.LoadNotificationPreferences) => action.payload\n        ),\n        switchMap((payload) =>\n          this.connector.loadAll(payload).pipe(\n            map(\n              (preferences) =>\n                new UserActions.LoadNotificationPreferencesSuccess(preferences)\n            ),\n            catchError((error) =>\n              of(\n                new UserActions.LoadNotificationPreferencesFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          )\n        )\n      )\n    );\n\n  updatePreferences$: Observable<UserActions.NotificationPreferenceAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.UPDATE_NOTIFICATION_PREFERENCES),\n        map(\n          (action: UserActions.UpdateNotificationPreferences) => action.payload\n        ),\n        mergeMap((payload) =>\n          this.connector.update(payload.userId, payload.preferences).pipe(\n            map(\n              () =>\n                new UserActions.UpdateNotificationPreferencesSuccess(\n                  payload.preferences\n                )\n            ),\n            catchError((error) =>\n              of(\n                new UserActions.UpdateNotificationPreferencesFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          )\n        )\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private connector: UserNotificationPreferenceConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { PaymentDetails } from '../../../model/payment.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserPaymentConnector } from '../../connectors/payment/user-payment.connector';\nimport { UserActions } from '../actions/index';\nimport { GlobalMessageService } from '../../../global-message/facade/global-message.service';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\n\n@Injectable()\nexport class UserPaymentMethodsEffects {\n  loadUserPaymentMethods$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.LOAD_USER_PAYMENT_METHODS),\n      map((action: UserActions.LoadUserPaymentMethods) => action.payload),\n      mergeMap((payload) => {\n        return this.userPaymentMethodConnector.getAll(payload).pipe(\n          map((payments: PaymentDetails[]) => {\n            return new UserActions.LoadUserPaymentMethodsSuccess(payments);\n          }),\n          catchError((error) =>\n            of(\n              new UserActions.LoadUserPaymentMethodsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n      })\n    )\n  );\n\n  setDefaultUserPaymentMethod$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.SET_DEFAULT_USER_PAYMENT_METHOD),\n      map((action: UserActions.SetDefaultUserPaymentMethod) => action.payload),\n      mergeMap((payload) => {\n        return this.userPaymentMethodConnector\n          .setDefault(payload.userId, payload.paymentMethodId)\n          .pipe(\n            switchMap((data) => [\n              new UserActions.SetDefaultUserPaymentMethodSuccess(data),\n              new UserActions.LoadUserPaymentMethods(payload.userId),\n            ]),\n            catchError((error) =>\n              of(\n                new UserActions.SetDefaultUserPaymentMethodFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          );\n      })\n    )\n  );\n\n  deleteUserPaymentMethod$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.DELETE_USER_PAYMENT_METHOD),\n      map((action: UserActions.DeleteUserPaymentMethod) => action.payload),\n      mergeMap((payload) => {\n        return this.userPaymentMethodConnector\n          .delete(payload.userId, payload.paymentMethodId)\n          .pipe(\n            switchMap((data) => {\n              this.globalMessageService.add(\n                { key: 'paymentCard.deletePaymentSuccess' },\n                GlobalMessageType.MSG_TYPE_CONFIRMATION\n              );\n              return [\n                new UserActions.DeleteUserPaymentMethodSuccess(data),\n                new UserActions.LoadUserPaymentMethods(payload.userId),\n              ];\n            }),\n            catchError((error) =>\n              of(\n                new UserActions.DeleteUserPaymentMethodFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          );\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userPaymentMethodConnector: UserPaymentConnector,\n    private globalMessageService: GlobalMessageService\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserInterestsConnector } from '../../connectors/interests/user-interests.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class ProductInterestsEffect {\n  constructor(\n    private actions$: Actions,\n    private userInterestsConnector: UserInterestsConnector\n  ) {}\n\n  loadProductInteres$: Observable<UserActions.ProductInterestsAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.LOAD_PRODUCT_INTERESTS),\n        map((action: UserActions.LoadProductInterests) => action.payload),\n        switchMap((payload) => {\n          return this.userInterestsConnector\n            .getInterests(\n              payload.userId,\n              payload.pageSize,\n              payload.currentPage,\n              payload.sort,\n              payload.productCode,\n              payload.notificationType\n            )\n            .pipe(\n              map((interests: ProductInterestSearchResult) => {\n                return new UserActions.LoadProductInterestsSuccess(interests);\n              }),\n              catchError((error) =>\n                of(\n                  new UserActions.LoadProductInterestsFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  removeProductInterest$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.REMOVE_PRODUCT_INTEREST),\n      map((action: UserActions.RemoveProductInterest) => action.payload),\n      switchMap((payload) =>\n        this.userInterestsConnector\n          .removeInterest(payload.userId, payload.item)\n          .pipe(\n            switchMap((data) => [\n              new UserActions.LoadProductInterests(\n                payload.singleDelete\n                  ? {\n                      userId: payload.userId,\n                      productCode: payload.item.product?.code,\n                      notificationType:\n                        payload.item.productInterestEntry?.[0].interestType,\n                    }\n                  : { userId: payload.userId }\n              ),\n              new UserActions.RemoveProductInterestSuccess(data),\n            ]),\n            catchError((error) =>\n              of(\n                new UserActions.RemoveProductInterestFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          )\n      )\n    )\n  );\n\n  addProductInterest$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.ADD_PRODUCT_INTEREST),\n      map((action: UserActions.AddProductInterest) => action.payload),\n      switchMap((payload) =>\n        this.userInterestsConnector\n          .addInterest(\n            payload.userId,\n            payload.productCode,\n            payload.notificationType\n          )\n          .pipe(\n            switchMap((res: any) => [\n              new UserActions.LoadProductInterests({\n                userId: payload.userId,\n                productCode: payload.productCode,\n                notificationType: payload.notificationType,\n              }),\n              new UserActions.AddProductInterestSuccess(res),\n            ]),\n            catchError((error) =>\n              of(\n                new UserActions.AddProductInterestFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          )\n      )\n    )\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { SiteConnector } from '../../../site-context/connectors/site.connector';\nimport { StateUtils } from '../../../state/utils/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserActions } from '../actions/index';\nimport { REGIONS } from '../user-state';\n\n@Injectable()\nexport class RegionsEffects {\n  loadRegions$: Observable<UserActions.RegionsAction> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.LOAD_REGIONS),\n      map((action: UserActions.LoadRegions) => {\n        return action.payload;\n      }),\n      switchMap((countryCode: string) => {\n        return this.siteConnector.getRegions(countryCode).pipe(\n          map(\n            (regions) =>\n              new UserActions.LoadRegionsSuccess({\n                entities: regions,\n                country: countryCode,\n              })\n          ),\n          catchError((error) =>\n            of(new UserActions.LoadRegionsFail(normalizeHttpError(error)))\n          )\n        );\n      })\n    )\n  );\n\n  resetRegions$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.CLEAR_USER_MISCS_DATA, UserActions.CLEAR_REGIONS),\n      map(() => {\n        return new StateUtils.LoaderResetAction(REGIONS);\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap, tap } from 'rxjs/operators';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n} from '../../../global-message/index';\nimport { Address } from '../../../model/address.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserAddressConnector } from '../../connectors/address/user-address.connector';\nimport { UserAddressService } from '../../facade/user-address.service';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserAddressesEffects {\n  loadUserAddresses$: Observable<UserActions.UserAddressesAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.LOAD_USER_ADDRESSES),\n        map((action: UserActions.LoadUserAddresses) => action.payload),\n        switchMap((payload) => {\n          return this.userAddressConnector.getAll(payload).pipe(\n            map((addresses: Address[]) => {\n              return new UserActions.LoadUserAddressesSuccess(addresses);\n            }),\n            catchError((error) =>\n              of(\n                new UserActions.LoadUserAddressesFail(normalizeHttpError(error))\n              )\n            )\n          );\n        })\n      )\n    );\n\n  addUserAddress$: Observable<UserActions.UserAddressesAction> = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UserActions.ADD_USER_ADDRESS),\n        map((action: UserActions.AddUserAddress) => action.payload),\n        mergeMap((payload) => {\n          return this.userAddressConnector\n            .add(payload.userId, payload.address)\n            .pipe(\n              map((data: any) => {\n                return new UserActions.AddUserAddressSuccess(data);\n              }),\n              catchError((error) =>\n                of(\n                  new UserActions.AddUserAddressFail(normalizeHttpError(error))\n                )\n              )\n            );\n        })\n      )\n  );\n\n  updateUserAddress$: Observable<UserActions.UserAddressesAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.UPDATE_USER_ADDRESS),\n        map((action: UserActions.UpdateUserAddress) => action.payload),\n        mergeMap((payload) => {\n          return this.userAddressConnector\n            .update(payload.userId, payload.addressId, payload.address)\n            .pipe(\n              map(() => {\n                return new UserActions.UpdateUserAddressSuccess(payload);\n              }),\n              catchError((error) =>\n                of(\n                  new UserActions.UpdateUserAddressFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  deleteUserAddress$: Observable<UserActions.UserAddressesAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.DELETE_USER_ADDRESS),\n        map((action: UserActions.DeleteUserAddress) => action.payload),\n        mergeMap((payload) => {\n          return this.userAddressConnector\n            .delete(payload.userId, payload.addressId)\n            .pipe(\n              map((data) => {\n                return new UserActions.DeleteUserAddressSuccess(data);\n              }),\n              catchError((error) =>\n                of(\n                  new UserActions.DeleteUserAddressFail(\n                    normalizeHttpError(error)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n\n  /**\n   *  Reload addresses and notify about add success\n   */\n\n  showGlobalMessageOnAddSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UserActions.ADD_USER_ADDRESS_SUCCESS),\n        tap(() => {\n          this.loadAddresses();\n          this.showGlobalMessage('addressForm.userAddressAddSuccess');\n        })\n      ),\n    { dispatch: false }\n  );\n\n  /**\n   *  Reload addresses and notify about update success\n   */\n\n  showGlobalMessageOnUpdateSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UserActions.UPDATE_USER_ADDRESS_SUCCESS),\n        map((action: UserActions.UpdateUserAddressSuccess) => action.payload),\n        tap((payload) => {\n          this.loadAddresses();\n          // don't show the message if just setting address as default\n          if (\n            Object.keys(payload?.address).length !== 1 ||\n            !payload?.address?.defaultAddress\n          ) {\n            this.showGlobalMessage('addressForm.userAddressUpdateSuccess');\n          }\n        })\n      ),\n    { dispatch: false }\n  );\n\n  /**\n   *  Reload addresses and notify about delete success\n   */\n\n  showGlobalMessageOnDeleteSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UserActions.DELETE_USER_ADDRESS_SUCCESS),\n        tap(() => {\n          this.loadAddresses();\n          this.showGlobalMessage('addressForm.userAddressDeleteSuccess');\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userAddressConnector: UserAddressConnector,\n    private userAddressService: UserAddressService,\n    private messageService: GlobalMessageService\n  ) {}\n\n  /**\n   * Show global confirmation message with provided text\n   */\n  private showGlobalMessage(text: string) {\n    this.messageService.add(\n      { key: text },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n  }\n\n  private loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\nimport { GlobalMessageActions } from '../../../global-message/store/actions';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConsentConnector } from '../../connectors/consent/user-consent.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserConsentsEffect {\n  resetConsents$: Observable<UserActions.ResetLoadUserConsents> = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(SiteContextActions.LANGUAGE_CHANGE),\n        map(() => new UserActions.ResetLoadUserConsents())\n      )\n  );\n\n  getConsents$: Observable<UserActions.UserConsentsAction> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.LOAD_USER_CONSENTS),\n      map((action: UserActions.LoadUserConsents) => action.payload),\n      concatMap((userId) =>\n        this.userConsentConnector.loadConsents(userId).pipe(\n          map((consents) => new UserActions.LoadUserConsentsSuccess(consents)),\n          catchError((error) =>\n            of(new UserActions.LoadUserConsentsFail(normalizeHttpError(error)))\n          )\n        )\n      )\n    )\n  );\n\n  giveConsent$: Observable<\n    UserActions.UserConsentsAction | GlobalMessageActions.RemoveMessagesByType\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType<\n        UserActions.GiveUserConsent | UserActions.TransferAnonymousConsent\n      >(UserActions.GIVE_USER_CONSENT, UserActions.TRANSFER_ANONYMOUS_CONSENT),\n      concatMap((action) =>\n        this.userConsentConnector\n          .giveConsent(\n            action.payload.userId,\n            action.payload.consentTemplateId ?? '',\n            action.payload.consentTemplateVersion ?? 0\n          )\n          .pipe(\n            map((consent) => new UserActions.GiveUserConsentSuccess(consent)),\n            catchError((error) => {\n              const errors: Array<\n                | UserActions.UserConsentsAction\n                | GlobalMessageActions.RemoveMessagesByType\n              > = [\n                new UserActions.GiveUserConsentFail(normalizeHttpError(error)),\n              ];\n              if (\n                action.type === UserActions.TRANSFER_ANONYMOUS_CONSENT &&\n                error.status === 409\n              ) {\n                errors.push(\n                  new GlobalMessageActions.RemoveMessagesByType(\n                    GlobalMessageType.MSG_TYPE_ERROR\n                  )\n                );\n              }\n              return of(...errors);\n            })\n          )\n      )\n    )\n  );\n\n  withdrawConsent$: Observable<UserActions.UserConsentsAction> = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UserActions.WITHDRAW_USER_CONSENT),\n        map((action: UserActions.WithdrawUserConsent) => action.payload),\n        concatMap(({ userId, consentCode }) =>\n          this.userConsentConnector.withdrawConsent(userId, consentCode).pipe(\n            map(() => new UserActions.WithdrawUserConsentSuccess()),\n            catchError((error) =>\n              of(\n                new UserActions.WithdrawUserConsentFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          )\n        )\n      )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userConsentConnector: UserConsentConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { EntitiesModel } from '../../../model/misc.model';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserCostCenterConnector } from '../../connectors/cost-center/user-cost-center.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserCostCenterEffects {\n  loadActiveCostCenters$: Observable<UserActions.UserCostCenterAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UserActions.LOAD_ACTIVE_COST_CENTERS),\n        map((action: UserActions.LoadActiveCostCenters) => action.payload),\n        switchMap((payload) =>\n          this.userCostCenterConnector.getActiveList(payload).pipe(\n            // TODO(#8875): Should we use here serialize utils?\n            map(\n              (data: EntitiesModel<CostCenter>) =>\n                new UserActions.LoadActiveCostCentersSuccess(data.values)\n            ),\n            catchError((error) =>\n              of(\n                new UserActions.LoadActiveCostCentersFail(\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          )\n        )\n      )\n    );\n\n  constructor(\n    private actions$: Actions,\n    private userCostCenterConnector: UserCostCenterConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BillingCountriesEffect } from './billing-countries.effect';\nimport { ClearMiscsDataEffect } from './clear-miscs-data.effect';\nimport { CustomerCouponEffects } from './customer-coupon.effect';\nimport { DeliveryCountriesEffects } from './delivery-countries.effect';\nimport { NotificationPreferenceEffects } from './notification-preference.effect';\nimport { UserPaymentMethodsEffects } from './payment-methods.effect';\nimport { ProductInterestsEffect } from './product-interests.effect';\nimport { RegionsEffects } from './regions.effect';\nimport { UserAddressesEffects } from './user-addresses.effect';\nimport { UserConsentsEffect } from './user-consents.effect';\nimport { UserCostCenterEffects } from './user-cost-center.effect';\n\nexport const effects: any[] = [\n  ClearMiscsDataEffect,\n  DeliveryCountriesEffects,\n  RegionsEffects,\n  UserAddressesEffects,\n  UserPaymentMethodsEffects,\n  BillingCountriesEffect,\n  UserConsentsEffect,\n  CustomerCouponEffects,\n  NotificationPreferenceEffects,\n  ProductInterestsEffect,\n  UserCostCenterEffects,\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { UserActions } from '../actions/index';\nimport { BillingCountriesState } from '../user-state';\n\nexport const initialState: BillingCountriesState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.BillingCountriesAction | UserActions.ClearUserMiscsData\n): BillingCountriesState {\n  switch (action.type) {\n    case UserActions.LOAD_BILLING_COUNTRIES_SUCCESS: {\n      const billingCountries = action.payload;\n      const entities = billingCountries.reduce(\n        (countryEntities: { [isocode: string]: any }, name: any) => {\n          return {\n            ...countryEntities,\n            [name.isocode]: name,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case UserActions.CLEAR_USER_MISCS_DATA: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n} from '../../../model/customer-coupon.model';\nimport * as fromActions from '../actions/customer-coupon.action';\n\nexport const initialState: CustomerCouponSearchResult = {\n  coupons: [],\n  sorts: [],\n  pagination: {},\n};\nexport function reducer(\n  state = initialState,\n  action: fromActions.CustomerCouponAction\n): CustomerCouponSearchResult {\n  switch (action.type) {\n    case fromActions.LOAD_CUSTOMER_COUPONS_SUCCESS: {\n      return action.payload;\n    }\n\n    case fromActions.SUBSCRIBE_CUSTOMER_COUPON_SUCCESS: {\n      const updatedCustomerCoupon = action.payload.coupon;\n      const customerCoupons = new Array<CustomerCoupon>(\n        state.coupons?.length ?? 0\n      );\n      state.coupons?.forEach((customerCoupon: CustomerCoupon, index) =>\n        updatedCustomerCoupon &&\n        customerCoupon.couponId === updatedCustomerCoupon.couponId\n          ? (customerCoupons[index] = updatedCustomerCoupon)\n          : (customerCoupons[index] = customerCoupon)\n      );\n      return { ...state, coupons: customerCoupons };\n    }\n\n    case fromActions.UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS: {\n      const updatedCouponCode = action.payload;\n      const customerCoupons = new Array<CustomerCoupon>(\n        state.coupons?.length ?? 0\n      );\n      state.coupons?.forEach((customerCoupon: CustomerCoupon, index) =>\n        customerCoupon.couponId === updatedCouponCode\n          ? (customerCoupons[index] = {\n              ...customerCoupon,\n              notificationOn: false,\n            })\n          : (customerCoupons[index] = customerCoupon)\n      );\n      return { ...state, coupons: customerCoupons };\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Country } from '../../../model/address.model';\nimport { UserActions } from '../actions/index';\nimport { DeliveryCountriesState } from '../user-state';\n\nexport const initialState: DeliveryCountriesState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.DeliveryCountriesAction | UserActions.ClearUserMiscsData\n): DeliveryCountriesState {\n  switch (action.type) {\n    case UserActions.LOAD_DELIVERY_COUNTRIES_SUCCESS: {\n      const deliveryCountries = action.payload;\n      const entities = deliveryCountries.reduce(\n        (countryEntities: { [isocode: string]: Country }, country: Country) => {\n          return {\n            ...countryEntities,\n            [country.isocode ?? '']: country,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case UserActions.CLEAR_USER_MISCS_DATA: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NotificationPreference } from '../../../model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: NotificationPreference[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.NotificationPreferenceAction\n): NotificationPreference[] {\n  switch (action.type) {\n    case UserActions.LOAD_NOTIFICATION_PREFERENCES_FAIL: {\n      return initialState;\n    }\n\n    case UserActions.LOAD_NOTIFICATION_PREFERENCES_SUCCESS:\n    case UserActions.UPDATE_NOTIFICATION_PREFERENCES_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PaymentDetails } from '../../../model/payment.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: PaymentDetails[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserPaymentMethodsAction\n): PaymentDetails[] {\n  switch (action.type) {\n    case UserActions.LOAD_USER_PAYMENT_METHODS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n\n    case UserActions.LOAD_USER_PAYMENT_METHODS_FAIL: {\n      return initialState;\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { UserActions } from '../actions/index';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\n\nexport const initialState: ProductInterestSearchResult = {\n  results: [],\n  pagination: {},\n  sorts: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.ProductInterestsAction\n): ProductInterestSearchResult {\n  switch (action.type) {\n    case UserActions.LOAD_PRODUCT_INTERESTS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n    case UserActions.LOAD_PRODUCT_INTERESTS_FAIL: {\n      return initialState;\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Region } from '../../../model/address.model';\nimport { UserActions } from '../actions/index';\nimport { RegionsState } from '../user-state';\n\nexport const initialState: RegionsState = {\n  entities: [],\n  country: null,\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.RegionsAction | UserActions.ClearUserMiscsData\n): RegionsState {\n  switch (action.type) {\n    case UserActions.LOAD_REGIONS_SUCCESS: {\n      const entities: Region[] = action.payload.entities;\n      const country: string = action.payload.country;\n      if (entities || country) {\n        return {\n          ...state,\n          entities,\n          country,\n        };\n      }\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address } from '../../../model/address.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: Address[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserAddressesAction\n): Address[] {\n  switch (action.type) {\n    case UserActions.LOAD_USER_ADDRESSES_FAIL: {\n      return initialState;\n    }\n\n    case UserActions.LOAD_USER_ADDRESSES_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: ConsentTemplate[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserConsentsAction\n): ConsentTemplate[] {\n  switch (action.type) {\n    case UserActions.LOAD_USER_CONSENTS_SUCCESS: {\n      const consents = action.payload;\n      return consents ? consents : initialState;\n    }\n\n    case UserActions.GIVE_USER_CONSENT_SUCCESS: {\n      const updatedConsentTemplate = action.consentTemplate;\n      return state.map((consentTemplate) =>\n        consentTemplate.id === updatedConsentTemplate.id\n          ? updatedConsentTemplate\n          : consentTemplate\n      );\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: CostCenter[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserCostCenterAction\n): CostCenter[] {\n  switch (action.type) {\n    case UserActions.LOAD_ACTIVE_COST_CENTERS_FAIL: {\n      return initialState;\n    }\n\n    case UserActions.LOAD_ACTIVE_COST_CENTERS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { Address } from '../../../model/address.model';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { PaymentDetails } from '../../../model/payment.model';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\nimport { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport {\n  CUSTOMER_COUPONS,\n  NOTIFICATION_PREFERENCES,\n  PRODUCT_INTERESTS,\n  REGIONS,\n  RegionsState,\n  UserState,\n  USER_ADDRESSES,\n  USER_CONSENTS,\n  USER_COST_CENTERS,\n  USER_PAYMENT_METHODS,\n} from '../user-state';\nimport * as fromBillingCountriesReducer from './billing-countries.reducer';\nimport * as fromCustomerCouponReducer from './customer-coupon.reducer';\nimport * as fromDeliveryCountries from './delivery-countries.reducer';\nimport * as fromNotificationPreferenceReducer from './notification-preference.reducer';\nimport * as fromPaymentReducer from './payment-methods.reducer';\nimport * as fromInterestsReducer from './product-interests.reducer';\nimport * as fromRegionsReducer from './regions.reducer';\nimport * as fromAddressesReducer from './user-addresses.reducer';\nimport * as fromUserConsentsReducer from './user-consents.reducer';\nimport * as fromCostCenterReducer from './user-cost-center.reducer';\n\nexport function getReducers(): ActionReducerMap<UserState, any> {\n  return {\n    addresses: loaderReducer<Address[], any>(\n      USER_ADDRESSES,\n      fromAddressesReducer.reducer\n    ),\n    billingCountries: fromBillingCountriesReducer.reducer,\n    consents: loaderReducer<ConsentTemplate[], any>(\n      USER_CONSENTS,\n      fromUserConsentsReducer.reducer\n    ),\n    payments: loaderReducer<PaymentDetails[], any>(\n      USER_PAYMENT_METHODS,\n      fromPaymentReducer.reducer\n    ),\n    countries: fromDeliveryCountries.reducer,\n    regions: loaderReducer<RegionsState, any>(\n      REGIONS,\n      fromRegionsReducer.reducer\n    ),\n    customerCoupons: loaderReducer<CustomerCouponSearchResult, any>(\n      CUSTOMER_COUPONS,\n      fromCustomerCouponReducer.reducer\n    ),\n    notificationPreferences: loaderReducer<NotificationPreference[], any>(\n      NOTIFICATION_PREFERENCES,\n      fromNotificationPreferenceReducer.reducer\n    ),\n    productInterests: loaderReducer<ProductInterestSearchResult, any>(\n      PRODUCT_INTERESTS,\n      fromInterestsReducer.reducer\n    ),\n    costCenters: loaderReducer<CostCenter[], any>(\n      USER_COST_CENTERS,\n      fromCostCenterReducer.reducer\n    ),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<UserState>> =\n  new InjectionToken<ActionReducerMap<UserState>>('UserReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearUserState(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return function (state, action) {\n    if (action.type === AuthActions.LOGOUT) {\n      state = undefined;\n    }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearUserState];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../state/state.module';\nimport { effects } from './effects/index';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\nimport { USER_FEATURE } from './user-state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(USER_FEATURE, reducerToken, { metaReducers }),\n    EffectsModule.forFeature(effects),\n    RouterModule,\n  ],\n  providers: [reducerProvider],\n})\nexport class UserStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UserEventBuilder } from './events/user-event.builder';\nimport { UserEventModule } from './events/user-event.module';\nimport { UserStoreModule } from './store/user-store.module';\n\n@NgModule({\n  imports: [UserStoreModule, UserEventModule],\n  providers: [UserEventBuilder],\n})\nexport class UserModule {\n  static forRoot(): ModuleWithProviders<UserModule> {\n    return {\n      ngModule: UserModule,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\nexport * from './events/index';\nexport * from './facade/index';\nexport * from './store/actions/index';\nexport * from './store/selectors/index';\nexport * from './store/user-state';\nexport * from './user-transitional-tokens';\nexport * from './user.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './window-ref';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './module-initialized-event';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, NgModuleRef } from '@angular/core';\nimport { defer, forkJoin, Observable, of, throwError } from 'rxjs';\nimport { shareReplay, switchMap } from 'rxjs/operators';\nimport { CmsConfig, FeatureModuleConfig } from '../cms/config/cms-config';\nimport { LazyModulesService } from './lazy-modules.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureModulesService {\n  /*\n   * Contains resolvers for features.\n   * Each resolver runs only once and caches the result.\n   */\n  private features: Map<string, Observable<NgModuleRef<any>>> = new Map();\n\n  constructor(\n    protected cmsConfig: CmsConfig,\n    protected lazyModules: LazyModulesService\n  ) {}\n\n  /**\n   * Check if feature is configured properly by providing module the shell app\n   *\n   * @param featureName\n   */\n  isConfigured(featureName: string): boolean {\n    return !!this.getFeatureConfig(featureName)?.module;\n  }\n\n  /**\n   * Resolve feature based on feature name, if feature was not yet resolved\n   *\n   * It will first resolve all module dependencies if defined\n   */\n  resolveFeature(featureName: string): Observable<NgModuleRef<any>> {\n    featureName = this.resolveFeatureAlias(featureName);\n\n    return defer(() => {\n      if (!this.features.has(featureName)) {\n        if (!this.isConfigured(featureName)) {\n          return throwError(\n            new Error('No module defined for Feature Module ' + featureName)\n          );\n        }\n\n        const featureConfig = this.getFeatureConfig(featureName);\n\n        this.features.set(\n          featureName,\n          this.resolveDependencies(featureConfig?.dependencies).pipe(\n            switchMap((deps) =>\n              this.lazyModules.resolveModuleInstance(\n                featureConfig?.module as () => Promise<any>,\n                featureName,\n                deps\n              )\n            ),\n            shareReplay()\n          )\n        );\n      }\n\n      return this.features.get(featureName);\n    });\n  }\n\n  /**\n   * Resolve\n   * @param featureName\n   * @protected\n   */\n  protected getFeatureConfig(\n    featureName: string\n  ): FeatureModuleConfig | undefined {\n    return this.cmsConfig.featureModules?.[\n      this.resolveFeatureAlias(featureName)\n    ] as FeatureModuleConfig | undefined;\n  }\n\n  /**\n   * Will return target feature name, resolving optional feature to feature\n   * string mapping\n   *\n   * @param featureName\n   * @protected\n   */\n  protected resolveFeatureAlias(featureName: string): string {\n    while (typeof this.cmsConfig.featureModules?.[featureName] === 'string') {\n      featureName = this.cmsConfig.featureModules?.[featureName] as string;\n    }\n    return featureName;\n  }\n\n  /**\n   * Resolve dependency modules for the feature\n   *\n   * @param dependencies\n   * @protected\n   */\n  protected resolveDependencies(\n    dependencies: any[] = []\n  ): Observable<NgModuleRef<any>[] | undefined> {\n    return dependencies?.length\n      ? forkJoin(\n          dependencies.map((dependency) => {\n            if (typeof dependency === 'string') {\n              // dependency is a feature, referenced by a feature name\n              return this.resolveFeature(dependency);\n            }\n            // resolve dependency from a module function\n            return this.lazyModules.resolveDependencyModuleInstance(dependency);\n          })\n        )\n      : of(undefined);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AbstractType, Injectable, Injector } from '@angular/core';\nimport {\n  ConnectableObservable,\n  EMPTY,\n  isObservable,\n  Observable,\n  throwError,\n} from 'rxjs';\nimport {\n  delay,\n  map,\n  publishReplay,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\nimport { FeatureModulesService } from '../feature-modules.service';\nimport { FacadeDescriptor } from './facade-descriptor';\n\nconst PROXY_FACADE_INSTANCE_PROP = 'proxyFacadeInstance';\n\n/**\n * Service that can create proxy facade, which is a service that will expose\n * methods and properties from a facade implemented in the lazy loaded module.\n *\n * Returned proxy facade will lazy load the feature and facade implementation\n * at first method call or when first property observable will be subscribed.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacadeFactoryService {\n  constructor(\n    protected featureModules: FeatureModulesService,\n    protected injector: Injector\n  ) {}\n\n  protected getResolver<T>(\n    feature: string,\n    facadeClass: AbstractType<T>,\n    async = false\n  ): Observable<T> {\n    if (!this.featureModules.isConfigured(feature)) {\n      return throwError(\n        new Error(`Feature ${feature} is not configured properly`)\n      );\n    }\n\n    let facadeService$ = this.featureModules.resolveFeature(feature).pipe(\n      map((moduleRef) => moduleRef.injector),\n      map((injector) => injector.get(facadeClass))\n    );\n    if (async) {\n      facadeService$ = facadeService$.pipe(delay(0));\n    }\n    return facadeService$.pipe(shareReplay());\n  }\n\n  /**\n   * Calls a method on a facade\n   *\n   * Method should either return an observable or void. Any other return type\n   * than observable is ignored.\n   *\n   * @param resolver$\n   * @param method\n   * @param args\n   * @protected\n   */\n  protected call(\n    resolver$: Observable<any>,\n    method: string,\n    args: unknown[]\n  ): Observable<unknown> {\n    const callResult$ = resolver$.pipe(\n      map((service) => service[method](...args)),\n      publishReplay()\n    );\n    (callResult$ as ConnectableObservable<any>).connect();\n\n    return callResult$.pipe(\n      switchMap((result) => {\n        if (isObservable(result)) {\n          return result;\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  /**\n   * Get the property value from the facade\n   *\n   * Property has to be an aobservable\n   *\n   * @param resolver$\n   * @param property\n   * @protected\n   */\n  protected get(\n    resolver$: Observable<any>,\n    property: string\n  ): Observable<unknown> {\n    return resolver$.pipe(switchMap((service) => service[property]));\n  }\n\n  create<T extends object>({\n    facade,\n    feature,\n    methods,\n    properties,\n    async,\n  }: FacadeDescriptor<T>): T {\n    const resolver$ = this.getResolver(feature, facade, async);\n\n    const result: any = new (class extends (facade as any) {})();\n    (methods ?? []).forEach((method) => {\n      result[method] = (...args: any[]) =>\n        this.call(resolver$, method as string, args);\n    });\n    (properties ?? []).forEach((property) => {\n      result[property] = this.get(resolver$, property as string);\n    });\n\n    result[PROXY_FACADE_INSTANCE_PROP] = true;\n\n    return result;\n  }\n\n  /**\n   * isProxyFacadeInstance tests if the provided facade is labeled as a proxy instance.\n   * Facade proxy instances contain an object key to label them as such.\n   * @param facade The facade object to evaluate\n   */\n  isProxyFacadeInstance(facade: any) {\n    return !!facade?.[PROXY_FACADE_INSTANCE_PROP];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { inject } from '@angular/core';\nimport { FacadeFactoryService } from './facade-factory.service';\nimport { FacadeDescriptor } from './facade-descriptor';\n\n/**\n * Factory that will create proxy facade, which is a service that will expose\n * methods and properties from a facade implemented in the lazy loaded module.\n *\n * Returned proxy facade will lazy load the feature and facade implementation\n * at first method call or when first property observable will be subscribed.\n *\n * @param descriptor\n */\nexport function facadeFactory<T extends object>(\n  descriptor: FacadeDescriptor<T>\n): T {\n  return inject(FacadeFactoryService).create(descriptor);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './facade-factory.service';\nexport { facadeFactory } from './facade-factory';\nexport { FacadeDescriptor } from './facade-descriptor';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './events/index';\nexport * from './lazy-modules.service';\nexport * from './tokens';\nexport * from './unified-injector';\nexport * from './feature-modules.service';\nexport * from './facade-factory/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  APP_INITIALIZER,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n} from '@angular/core';\nimport { LazyModulesService } from './lazy-modules.service';\nimport { MODULE_INITIALIZER } from './tokens';\n\nexport function moduleInitializersFactory(\n  lazyModuleService: LazyModulesService,\n  moduleInitializerFunctions: (() => any)[]\n): () => any {\n  const factoryFunction = () => {\n    return Promise.all(\n      lazyModuleService.runModuleInitializerFunctions(\n        moduleInitializerFunctions\n      )\n    ).catch((error) => {\n      console.error(\n        'MODULE_INITIALIZER promise was rejected during app initialization.',\n        error\n      );\n      throw error;\n    });\n  };\n  return factoryFunction;\n}\n\n@NgModule({})\nexport class LazyLoadingModule {\n  static forRoot(): ModuleWithProviders<LazyLoadingModule> {\n    return {\n      ngModule: LazyLoadingModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          useFactory: moduleInitializersFactory,\n          deps: [LazyModulesService, [new Optional(), MODULE_INITIALIZER]],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CmsModule } from './cms/cms.module';\nimport { ConfigInitializerModule } from './config/config-initializer/config-initializer.module';\nimport { ConfigValidatorModule } from './config/config-validator/config-validator.module';\nimport { ConfigModule } from './config/config.module';\nimport { FeaturesConfigModule } from './features-config/features-config.module';\nimport { GlobalMessageModule } from './global-message/global-message.module';\nimport { HttpModule } from './http/http.module';\nimport { I18nModule } from './i18n/i18n.module';\nimport { LazyLoadingModule } from './lazy-loading/lazy-loading.module';\nimport { BaseOccModule } from './occ/base-occ.module';\nimport { MetaTagConfigModule } from './occ/config/meta-tag-config.module';\nimport { ProcessModule } from './process/process.module';\nimport { SiteContextModule } from './site-context/site-context.module';\nimport { StateModule } from './state/state.module';\n\n@NgModule({\n  imports: [\n    StateModule.forRoot(),\n    ConfigModule.forRoot(),\n    ConfigInitializerModule.forRoot(),\n    ConfigValidatorModule.forRoot(),\n    I18nModule.forRoot(),\n    CmsModule.forRoot(),\n    GlobalMessageModule.forRoot(),\n    ProcessModule.forRoot(),\n    FeaturesConfigModule.forRoot(),\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n    MetaTagConfigModule.forRoot(),\n    BaseOccModule.forRoot(),\n    LazyLoadingModule.forRoot(),\n    HttpModule.forRoot(),\n  ],\n})\nexport class BaseCoreModule {\n  static forRoot(): ModuleWithProviders<BaseCoreModule> {\n    return {\n      ngModule: BaseCoreModule,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * Public API Surface of core\n */\nexport * from './src/anonymous-consents/index';\nexport * from './src/auth/index';\nexport * from './src/checkout/index';\nexport * from './src/cms/index';\nexport * from './src/config/index';\nexport * from './src/event/index';\nexport * from './src/features-config/index';\nexport * from './src/global-message/index';\nexport * from './src/http/index';\nexport * from './src/i18n/index';\nexport * from './src/model/index';\nexport * from './src/cost-center/index';\nexport * from './src/occ/index';\nexport * from './src/process/index';\nexport * from './src/product/index';\nexport * from './src/routing/index';\nexport * from './src/site-context/index';\nexport * from './src/state/index';\nexport * from './src/user/index';\nexport * from './src/util/index';\nexport * from './src/window/index';\nexport * from './src/lazy-loading/index';\nexport * from './src/base-core.module';\n\n/** AUGMENTABLE_TYPES_START */\nexport { Product, Price, Stock } from './src/model/product.model';\nexport { ProductSearchPage, Facet } from './src/model/product-search.model';\nexport {\n  CostCenter,\n  B2BUnit,\n  B2BUser,\n  B2BUserRole,\n} from './src/model/org-unit.model';\nexport { AuthToken } from './src/auth/user-auth/models/auth-token.model';\nexport { OccEndpoints } from './src/occ/occ-models/occ-endpoints.model';\nexport { Config } from './src/config/config-tokens';\nexport { RoutingConfigDefinition } from './src/routing/configurable-routes/config/routing-config';\nexport { BackendConfig } from './src/occ/config/occ-config';\nexport { Address } from './src/model/address.model';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["loaderResetMeta","StateUtils.LoaderLoadAction","StateUtils.LoaderSuccessAction","StateUtils.LoaderFailAction","StateUtils.LoaderResetAction","StateUtils.loaderValueSelector","StateUtils.loaderLoadingSelector","StateUtils.loaderSuccessSelector","StateUtils.loaderErrorSelector","i1.AuthConfig","i2.OccConfig","i3.WindowRef","i1.RoutingConfig","i1","i1.RoutingConfigService","i2.UrlParsingService","i2.ActivatedRoutesService","RoutingSelector.getRouterState","RoutingSelector.getPageContext","RoutingSelector.getNextPageContext","RoutingActions.ChangeNextPageContext","RoutingSelector.isNavigating","i2.WindowRef","i3.SemanticPathService","i4.RoutingParamsService","i5","i1.RoutingService","i2","i3.AuthRedirectStorageService","i4.AuthFlowRoutesService","SiteContextSelectors.getActiveBaseSite","SiteContextSelectors.getAllBaseSites","SiteContextActions.LoadBaseSites","SiteContextActions.SetActiveBaseSite","i2.SiteContextConfig","i1.BaseSiteService","AuthActions.Login","AuthActions.Logout","i2.UserIdService","i3.OAuthLibWrapperService","i4.AuthStorageService","i5.AuthRedirectService","i6.RoutingService","i7.AuthMultisiteIsolationService","AnonymousConsentsActions.LoadAnonymousConsentTemplates","AnonymousConsentsSelectors.getAnonymousConsentTemplatesValue","AnonymousConsentsSelectors.getAnonymousConsentTemplate","AnonymousConsentsSelectors.getAnonymousConsentTemplatesLoading","AnonymousConsentsSelectors.getAnonymousConsentTemplatesSuccess","AnonymousConsentsSelectors.getAnonymousConsentTemplatesError","AnonymousConsentsActions.ResetLoadAnonymousConsentTemplates","AnonymousConsentsSelectors.getAnonymousConsents","AnonymousConsentsActions.SetAnonymousConsents","AnonymousConsentsSelectors.getAnonymousConsentByTemplateCode","AnonymousConsentsActions.GiveAnonymousConsent","AnonymousConsentsActions.WithdrawAnonymousConsent","AnonymousConsentsActions.ToggleAnonymousConsentsBannerDissmissed","AnonymousConsentsSelectors.getAnonymousConsentsBannerDismissed","AnonymousConsentsSelectors.getAnonymousConsentTemplatesUpdate","AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated","AnonymousConsentsActions.AnonymousConsentCheckUpdatedVersions","i2.AuthService","ClientAuthSelectors.getClientTokenState","ClientAuthActions.LoadClientToken","i1.ClientTokenService","i1.OccConfig","i2.BaseSiteService","i2.ClientErrorHandlingService","i3.OccEndpointsService","interceptors","i1.WindowRef","i1.StatePersistenceService","i3.AuthStorageService","i4.AuthRedirectStorageService","i2.AuthConfigService","ClientAuthActions.LOAD_CLIENT_TOKEN","ClientAuthActions.LoadClientTokenSuccess","ClientAuthActions.LoadClientTokenFail","i2.ClientAuthenticationTokenService","effects","getReducers","reducerToken","reducerProvider","i1.Config","i2.EventService","AuthActions.LOGIN","i1.StateEventService","i3.AuthService","i1.UserAuthEventBuilder","GlobalMessageSelectors.getGlobalMessageEntities","GlobalMessageActions.AddMessage","GlobalMessageActions.RemoveMessage","GlobalMessageActions.RemoveMessagesByType","i1.AuthService","i2.AuthStorageService","i4.RoutingService","i5.OccEndpointsService","i6.GlobalMessageService","i7.AuthRedirectService","i1.AuthHttpHeaderService","i1.AuthStorageService","i1.UserAuthModule","i2.ClientAuthModule","i2.AuthRedirectService","i3","i4.SemanticPathService","i2.SemanticPathService","i1.AnonymousConsentsService","i4.AnonymousConsentsConfig","StateUtils.entityLoaderStateSelector","StateUtils.EntityLoadAction","StateUtils.EntityFailAction","StateUtils.EntitySuccessAction","StateUtils.EntityLoaderResetAction","i1.AnonymousConsentTemplatesAdapter","NOT_FOUND_SYMBOL","i1.EventService","i1.LazyModulesService","i1.UnifiedInjector","i2.OccEndpointsService","i3.ConverterService","i1.ConverterService","i1.FeaturesConfig","i1.FeatureConfigService","i2.Config","i1.ConfigurationService","i1.ConfigModule","i2.OccFieldsService","i4.OccRequestsOptimizerService","SiteContextSelectors.getAllLanguages","SiteContextActions.LoadLanguages","SiteContextSelectors.getActiveLanguage","SiteContextActions.SetActiveLanguage","SiteContextSelectors.getAllCurrencies","SiteContextActions.LoadCurrencies","SiteContextSelectors.getActiveCurrency","SiteContextActions.SetActiveCurrency","i1.LanguageService","i2.CurrencyService","i4.SiteContextConfig","CONTENT_TYPE_JSON_HEADER","headers","i3.OccConfig","i4.ConverterService","i1.UserNotificationPreferenceAdapter","i2.ConverterService","UserActions.LoadUserConsents","UsersSelectors.getConsentsValue","UsersSelectors.getConsentsLoading","UsersSelectors.getConsentsSuccess","UsersSelectors.getConsentsError","UserActions.ResetLoadUserConsents","UsersSelectors.getConsentByTemplateId","UserActions.GiveUserConsent","UserActions.ResetGiveUserConsentProcess","UserActions.WithdrawUserConsent","UserActions.ResetWithdrawUserConsentProcess","i3.UserIdService","AnonymousConsentsActions.ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS","AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail","AnonymousConsentsActions.LOAD_ANONYMOUS_CONSENT_TEMPLATES","AnonymousConsentsActions.LoadAnonymousConsentTemplatesSuccess","UserActions.REGISTER_USER_SUCCESS","UserActions.TransferAnonymousConsent","i2.AnonymousConsentTemplatesConnector","i5.AnonymousConsentsService","i6.UserConsentService","i2.JavaRegExpConverter","i1.SiteAdapter","SiteContextActions.SET_ACTIVE_LANGUAGE","SiteContextActions.SET_ACTIVE_CURRENCY","i1.SiteContextEventBuilder","i2.ConfigInitializerService","i3.SiteContextConfig","i1.CurrencyService","i2.CurrencyStatePersistenceService","i3.ConfigInitializerService","i2.LanguageService","i2.LanguageStatePersistenceService","i1.SiteContextConfig","i2.ContextServiceMap","i1.SiteContextParamsService","i2.SiteContextUrlSerializer","SiteContextActions.LOAD_BASE_SITE","SiteContextActions.LoadBaseSiteSuccess","SiteContextActions.LoadBaseSiteFail","SiteContextActions.LOAD_BASE_SITES","SiteContextActions.LoadBaseSitesSuccess","SiteContextActions.LoadBaseSitesFail","i2.SiteConnector","SiteContextActions.LOAD_CURRENCIES","SiteContextActions.LoadCurrenciesSuccess","SiteContextActions.LoadCurrenciesFail","SiteContextActions.CurrencyChange","SiteContextActions.LOAD_LANGUAGES","SiteContextActions.LoadLanguagesSuccess","SiteContextActions.LoadLanguagesFail","SiteContextActions.LanguageChange","initialState","reducer","SiteContextActions.LOAD_BASE_SITE_SUCCESS","SiteContextActions.SET_ACTIVE_BASE_SITE","SiteContextActions.LOAD_BASE_SITES_SUCCESS","SiteContextActions.LOAD_CURRENCIES_SUCCESS","SiteContextActions.LOAD_LANGUAGES_SUCCESS","fromLanguages.reducer","fromCurrencies.reducer","fromBaseSite.reducer","AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED","AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED","AnonymousConsentsActions.GIVE_ANONYMOUS_CONSENT","AnonymousConsentsActions.WITHDRAW_ANONYMOUS_CONSENT","AnonymousConsentsActions.SET_ANONYMOUS_CONSENTS","fromAnonymousConsents.reducer","fromAnonymousConsentsBanner.reducer","fromAnonymousConsentsUpdate.reducer","AuthActions.LOGOUT","SiteContextActions.LANGUAGE_CHANGE","metaReducers","i3.AnonymousConsentsService","StateUtils.entitySelector","StateUtils.initialLoaderState","CmsSelectors.getPageData","CmsSelectors.componentsLoaderStateSelectorFactory","CmsActions.LoadCmsComponent","CmsSelectors.componentsSelectorFactory","CmsSelectors.getCurrentSlotSelectorFactory","CmsSelectors.getNavigationEntryItems","CmsActions.LoadCmsNavigationItems","CmsActions.LoadCmsPageData","CmsSelectors.getPageComponentTypes","CmsSelectors.getPageStateIndexLoaderState","CmsSelectors.getPageStateIndexValue","CmsActions.CmsSetPageFailIndex","i2.RoutingService","i1.TranslationService","i1.ActivatedRoutesService","i1.PageMetaConfig","i1.CmsService","i2.TranslationService","i3.RoutingPageMetaResolver","i4","i5.PageLinkService","i1.BasePageMetaResolver","i1.CmsStructureConfig","i1.CmsStructureConfigService","i2.CmsComponentAdapter","i3.CmsConfig","CmsActions.LOAD_CMS_COMPONENT","CmsActions.LoadCmsComponentSuccess","CmsActions.LoadCmsComponentFail","i2.CmsComponentConnector","i1.GlobService","i2.UrlMatcherService","i1.SemanticPathService","i1.ExternalRoutesConfig","i1.ProtectedRoutesService","i2.AuthGuard","CmsActions.LOAD_CMS_NAVIGATION_ITEMS","CmsActions.LoadCmsNavigationItemsSuccess","CmsActions.LoadCmsNavigationItemsFail","i3.RoutingService","i1.CmsPageAdapter","i2.CmsStructureConfigService","CmsActions.LOAD_CMS_PAGE_DATA","CmsActions.CmsGetComponentFromPage","CmsActions.LoadCmsPageDataSuccess","CmsActions.CmsSetPageSuccessIndex","CmsActions.LoadCmsPageDataFail","i2.CmsPageConnector","CmsActions.LOAD_CMS_COMPONENT_FAIL","CmsActions.CMS_GET_COMPONENT_FROM_PAGE","CmsActions.LOAD_CMS_COMPONENT_SUCCESS","CmsActions.LOAD_CMS_NAVIGATION_ITEMS_SUCCESS","CmsActions.LOAD_CMS_PAGE_DATA_SUCCESS","CmsActions.LOAD_CMS_PAGE_DATA_FAIL","CmsActions.CMS_SET_PAGE_FAIL_INDEX","CmsActions.CMS_SET_PAGE_SUCCESS_INDEX","fromPageReducer.reducer","fromPageIndexReducer.reducer","fromComponentsReducer.reducer","fromNavigation.reducer","i1.PageMetaModule","i1.GlobalMessageService","GlobalMessageActions.ADD_MESSAGE","GlobalMessageActions.REMOVE_MESSAGE","GlobalMessageActions.REMOVE_MESSAGES_BY_TYPE","fromGlobalMessage.reducer","GlobalMessageSelectors.getGlobalMessageEntitiesByType","GlobalMessageSelectors.getGlobalMessageCountByType","i1.ConfigInitializerService","i1.I18nConfig","i3.I18nextBackendService","i1.ProductAdapter","i1.ProductReferencesAdapter","i1.ProductReviewsAdapter","i1.ProductSearchAdapter","ProductActions.SEARCH_PRODUCTS_SUCCESS","ProductActions.GET_PRODUCT_SUGGESTIONS_SUCCESS","ProductActions.CLEAR_PRODUCT_SEARCH_RESULT","getSearchResults","getAuxSearchResults","getProductSuggestions","fromProductSearch.getSearchResults","fromProductSearch.getAuxSearchResults","fromProductSearch.getProductSuggestions","ProductActions.SearchProducts","ProductSelectors.getSearchResults","ProductActions.ClearProductSearchResult","i2.ProductSearchService","i1.ProductEventBuilder","ProductActions.LOAD_PRODUCT_REFERENCES","ProductActions.LoadProductReferencesSuccess","ProductActions.LoadProductReferencesFail","i2.ProductReferencesConnector","ProductActions.LOAD_PRODUCT_REVIEWS","ProductActions.LoadProductReviewsSuccess","ProductActions.LoadProductReviewsFail","ProductActions.POST_PRODUCT_REVIEW","ProductActions.PostProductReviewSuccess","ProductActions.PostProductReviewFail","ProductActions.POST_PRODUCT_REVIEW_SUCCESS","i2.ProductReviewsConnector","i3.GlobalMessageService","ProductActions.SEARCH_PRODUCTS","ProductActions.SearchProductsSuccess","ProductActions.SearchProductsFail","ProductActions.GET_PRODUCT_SUGGESTIONS","ProductActions.GetProductSuggestionsSuccess","ProductActions.GetProductSuggestionsFail","i2.ProductSearchConnector","ProductActions.LoadProductSuccess","ProductActions.LoadProductFail","SiteContextActions.CURRENCY_CHANGE","ProductActions.LOAD_PRODUCT","ProductActions.ClearProductPrice","i2.ProductConnector","ProductActions.LOAD_PRODUCT_REFERENCES_SUCCESS","ProductActions.CLEAN_PRODUCT_REFERENCES","ProductActions.LOAD_PRODUCT_REVIEWS_SUCCESS","fromProductsSearch.reducer","fromProductReviews.reducer","fromProductReferences.reducer","ProductActions.LoadProductReferences","ProductSelectors.getSelectedProductReferencesFactory","ProductActions.CleanProductReferences","ProductSelectors.getSelectedProductReviewsFactory","ProductActions.LoadProductReviews","ProductActions.PostProductReview","ProductSelectors.getSelectedProductStateFactory","ProductSelectors.getSelectedProductLoadingFactory","ProductActions.LoadProduct","ProductSelectors.getSelectedProductFactory","ProductActions.LOAD_PRODUCT_SUCCESS","ProductActions.LOAD_PRODUCT_FAIL","i4.EventService","ProductSelectors.getSelectedProductSuccessFactory","ProductSelectors.getSelectedProductErrorFactory","i2.ProductLoadingService","ProductSelectors.getAuxSearchResults","ProductSelectors.getProductSuggestions","ProductActions.GetProductSuggestions","i1.ProductSearchService","i2.CmsService","i3.TranslationService","i4.BasePageMetaResolver","i5.SemanticPathService","i2.ProductService","i1.UserAddressAdapter","i1.UserConsentAdapter","i1.UserCostCenterAdapter","i1.CustomerCouponAdapter","i1.UserInterestsAdapter","i1.UserPaymentAdapter","UserActions.UPDATE_USER_ADDRESS","UserActions.ADD_USER_ADDRESS","UserActions.DELETE_USER_ADDRESS","i1.UserEventBuilder","i2.UserConsentService","UserActions.LoadCustomerCoupons","UsersSelectors.getCustomerCouponsState","UsersSelectors.getCustomerCouponsLoaded","UsersSelectors.getCustomerCouponsLoading","UserActions.SubscribeCustomerCoupon","UserActions.UnsubscribeCustomerCoupon","UserActions.ClaimCustomerCoupon","UserActions.LoadUserAddresses","UserActions.AddUserAddress","UserActions.UpdateUserAddress","UserActions.DeleteUserAddress","UsersSelectors.getAddresses","UsersSelectors.getAddressesLoading","UsersSelectors.getAddressesLoadedSuccess","UserActions.LoadDeliveryCountries","UsersSelectors.getAllDeliveryCountries","UsersSelectors.countrySelectorFactory","UserActions.LoadRegions","UserActions.ClearRegions","UsersSelectors.getRegionsDataAndLoading","i3.UserAddressConnector","i4.CommandService","UserActions.LoadActiveCostCenters","UsersSelectors.getCostCentersState","UserActions.LoadProductInterests","UsersSelectors.getInterests","UsersSelectors.getInterestsState","UsersSelectors.getInterestsLoading","UserActions.RemoveProductInterest","UserActions.AddProductInterest","UserActions.ResetAddInterestState","UserActions.ResetRemoveInterestState","UserActions.ClearProductInterests","UsersSelectors.getPreferences","UsersSelectors.getEnabledPreferences","UserActions.LoadNotificationPreferences","UserActions.ClearNotificationPreferences","UsersSelectors.getPreferencesLoading","UserActions.UpdateNotificationPreferences","UserActions.ResetNotificationPreferences","UserActions.LoadUserPaymentMethods","UsersSelectors.getPaymentMethods","UsersSelectors.getPaymentMethodsLoading","UsersSelectors.getPaymentMethodsLoadedSuccess","UserActions.SetDefaultUserPaymentMethod","UserActions.DeleteUserPaymentMethod","UsersSelectors.getAllBillingCountries","UserActions.LoadBillingCountries","i3.UserProfileFacadeTransitionalToken","UserActions.LOAD_BILLING_COUNTRIES","UserActions.LoadBillingCountriesSuccess","UserActions.LoadBillingCountriesFail","UserActions.ClearUserMiscsData","fromCustomerCouponsAction.LOAD_CUSTOMER_COUPONS","fromCustomerCouponsAction.LoadCustomerCouponsSuccess","fromCustomerCouponsAction.LoadCustomerCouponsFail","fromCustomerCouponsAction.SUBSCRIBE_CUSTOMER_COUPON","fromCustomerCouponsAction.SubscribeCustomerCouponSuccess","fromCustomerCouponsAction.SubscribeCustomerCouponFail","fromCustomerCouponsAction.UNSUBSCRIBE_CUSTOMER_COUPON","fromCustomerCouponsAction.UnsubscribeCustomerCouponSuccess","fromCustomerCouponsAction.UnsubscribeCustomerCouponFail","fromCustomerCouponsAction.CLAIM_CUSTOMER_COUPON","fromCustomerCouponsAction.ClaimCustomerCouponSuccess","fromCustomerCouponsAction.ClaimCustomerCouponFail","i2.CustomerCouponConnector","UserActions.LOAD_DELIVERY_COUNTRIES","UserActions.LoadDeliveryCountriesSuccess","UserActions.LoadDeliveryCountriesFail","UserActions.LOAD_NOTIFICATION_PREFERENCES","UserActions.LoadNotificationPreferencesSuccess","UserActions.LoadNotificationPreferencesFail","UserActions.UPDATE_NOTIFICATION_PREFERENCES","UserActions.UpdateNotificationPreferencesSuccess","UserActions.UpdateNotificationPreferencesFail","i2.UserNotificationPreferenceConnector","UserActions.LOAD_USER_PAYMENT_METHODS","UserActions.LoadUserPaymentMethodsSuccess","UserActions.LoadUserPaymentMethodsFail","UserActions.SET_DEFAULT_USER_PAYMENT_METHOD","UserActions.SetDefaultUserPaymentMethodSuccess","UserActions.SetDefaultUserPaymentMethodFail","UserActions.DELETE_USER_PAYMENT_METHOD","UserActions.DeleteUserPaymentMethodSuccess","UserActions.DeleteUserPaymentMethodFail","i2.UserPaymentConnector","UserActions.LOAD_PRODUCT_INTERESTS","UserActions.LoadProductInterestsSuccess","UserActions.LoadProductInterestsFail","UserActions.REMOVE_PRODUCT_INTEREST","UserActions.RemoveProductInterestSuccess","UserActions.RemoveProductInterestFail","UserActions.ADD_PRODUCT_INTEREST","UserActions.AddProductInterestSuccess","UserActions.AddProductInterestFail","i2.UserInterestsConnector","UserActions.LOAD_REGIONS","UserActions.LoadRegionsSuccess","UserActions.LoadRegionsFail","UserActions.CLEAR_USER_MISCS_DATA","UserActions.CLEAR_REGIONS","UserActions.LOAD_USER_ADDRESSES","UserActions.LoadUserAddressesSuccess","UserActions.LoadUserAddressesFail","UserActions.AddUserAddressSuccess","UserActions.AddUserAddressFail","UserActions.UpdateUserAddressSuccess","UserActions.UpdateUserAddressFail","UserActions.DeleteUserAddressSuccess","UserActions.DeleteUserAddressFail","UserActions.ADD_USER_ADDRESS_SUCCESS","UserActions.UPDATE_USER_ADDRESS_SUCCESS","UserActions.DELETE_USER_ADDRESS_SUCCESS","i2.UserAddressConnector","i3.UserAddressService","i4.GlobalMessageService","UserActions.LOAD_USER_CONSENTS","UserActions.LoadUserConsentsSuccess","UserActions.LoadUserConsentsFail","UserActions.GIVE_USER_CONSENT","UserActions.TRANSFER_ANONYMOUS_CONSENT","UserActions.GiveUserConsentSuccess","UserActions.GiveUserConsentFail","UserActions.WITHDRAW_USER_CONSENT","UserActions.WithdrawUserConsentSuccess","UserActions.WithdrawUserConsentFail","i2.UserConsentConnector","UserActions.LOAD_ACTIVE_COST_CENTERS","UserActions.LoadActiveCostCentersSuccess","UserActions.LoadActiveCostCentersFail","i2.UserCostCenterConnector","UserActions.LOAD_BILLING_COUNTRIES_SUCCESS","fromActions.LOAD_CUSTOMER_COUPONS_SUCCESS","fromActions.SUBSCRIBE_CUSTOMER_COUPON_SUCCESS","fromActions.UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS","UserActions.LOAD_DELIVERY_COUNTRIES_SUCCESS","UserActions.LOAD_NOTIFICATION_PREFERENCES_FAIL","UserActions.LOAD_NOTIFICATION_PREFERENCES_SUCCESS","UserActions.UPDATE_NOTIFICATION_PREFERENCES_SUCCESS","UserActions.LOAD_USER_PAYMENT_METHODS_SUCCESS","UserActions.LOAD_USER_PAYMENT_METHODS_FAIL","UserActions.LOAD_PRODUCT_INTERESTS_SUCCESS","UserActions.LOAD_PRODUCT_INTERESTS_FAIL","UserActions.LOAD_REGIONS_SUCCESS","UserActions.LOAD_USER_ADDRESSES_FAIL","UserActions.LOAD_USER_ADDRESSES_SUCCESS","UserActions.LOAD_USER_CONSENTS_SUCCESS","UserActions.GIVE_USER_CONSENT_SUCCESS","UserActions.LOAD_ACTIVE_COST_CENTERS_FAIL","UserActions.LOAD_ACTIVE_COST_CENTERS_SUCCESS","fromAddressesReducer.reducer","fromBillingCountriesReducer.reducer","fromUserConsentsReducer.reducer","fromPaymentReducer.reducer","fromDeliveryCountries.reducer","fromRegionsReducer.reducer","fromCustomerCouponReducer.reducer","fromNotificationPreferenceReducer.reducer","fromInterestsReducer.reducer","fromCostCenterReducer.reducer","i1.CmsConfig","i2.LazyModulesService","i1.FeatureModulesService","i1.StateModule","i2.ConfigModule","i3.ConfigInitializerModule","i4.ConfigValidatorModule","i5.I18nModule","i6.CmsModule","i7.GlobalMessageModule","i8.ProcessModule","i9.FeaturesConfigModule","i10.SiteContextModule","i11.MetaTagConfigModule","i12.BaseOccModule","i13.LazyLoadingModule","i14.HttpModule"],"mappings":"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"}