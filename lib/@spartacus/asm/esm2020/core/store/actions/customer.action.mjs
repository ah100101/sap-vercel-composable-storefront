/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { StateUtils } from '@spartacus/core';
import { CUSTOMER_LIST_CUSTOMERS_SEARCH_DATA, CUSTOMER_SEARCH_DATA, } from '../asm-state';
export const CUSTOMER_SEARCH = '[Asm] Customer Search';
export const CUSTOMER_SEARCH_FAIL = '[Asm] Customer Search Fail';
export const CUSTOMER_SEARCH_SUCCESS = '[Asm] Customer Search Success';
export const CUSTOMER_SEARCH_RESET = '[Asm] Customer Search Reset';
export const CUSTOMER_LIST_CUSTOMERS_SEARCH = '[Asm] Customer List Customers Search';
export const CUSTOMER_LIST_CUSTOMERS_SEARCH_FAIL = '[Asm] Customer List Customers Search Fail';
export const CUSTOMER_LIST_CUSTOMERS_SEARCH_SUCCESS = '[Asm] Customer List Customers Search Success';
export const CUSTOMER_LIST_CUSTOMERS_SEARCH_RESET = '[Asm] Customer List Customers Search Reset';
export class CustomerSearch extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(CUSTOMER_SEARCH_DATA);
        this.payload = payload;
        this.type = CUSTOMER_SEARCH;
    }
}
export class CustomerSearchFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(CUSTOMER_SEARCH_DATA);
        this.payload = payload;
        this.type = CUSTOMER_SEARCH_FAIL;
    }
}
export class CustomerSearchSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(CUSTOMER_SEARCH_DATA);
        this.payload = payload;
        this.type = CUSTOMER_SEARCH_SUCCESS;
    }
}
export class CustomerSearchReset extends StateUtils.LoaderResetAction {
    constructor() {
        super(CUSTOMER_SEARCH_DATA);
        this.type = CUSTOMER_SEARCH_RESET;
    }
}
export class CustomerListCustomersSearch extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(CUSTOMER_LIST_CUSTOMERS_SEARCH_DATA);
        this.payload = payload;
        this.type = CUSTOMER_LIST_CUSTOMERS_SEARCH;
    }
}
export class CustomerListCustomersSearchFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(CUSTOMER_LIST_CUSTOMERS_SEARCH_DATA);
        this.payload = payload;
        this.type = CUSTOMER_LIST_CUSTOMERS_SEARCH_FAIL;
    }
}
export class CustomerListCustomersSearchSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(CUSTOMER_LIST_CUSTOMERS_SEARCH_DATA);
        this.payload = payload;
        this.type = CUSTOMER_LIST_CUSTOMERS_SEARCH_SUCCESS;
    }
}
export class CustomerListCustomersSearchReset extends StateUtils.LoaderResetAction {
    constructor() {
        super(CUSTOMER_LIST_CUSTOMERS_SEARCH_DATA);
        this.type = CUSTOMER_LIST_CUSTOMERS_SEARCH_RESET;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tZXIuYWN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL2FzbS9jb3JlL3N0b3JlL2FjdGlvbnMvY3VzdG9tZXIuYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFHSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUNMLG1DQUFtQyxFQUNuQyxvQkFBb0IsR0FDckIsTUFBTSxjQUFjLENBQUM7QUFFdEIsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLHVCQUF1QixDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLDRCQUE0QixDQUFDO0FBQ2pFLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLCtCQUErQixDQUFDO0FBQ3ZFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLDZCQUE2QixDQUFDO0FBRW5FLE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUN6QyxzQ0FBc0MsQ0FBQztBQUN6QyxNQUFNLENBQUMsTUFBTSxtQ0FBbUMsR0FDOUMsMkNBQTJDLENBQUM7QUFDOUMsTUFBTSxDQUFDLE1BQU0sc0NBQXNDLEdBQ2pELDhDQUE4QyxDQUFDO0FBQ2pELE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUMvQyw0Q0FBNEMsQ0FBQztBQUUvQyxNQUFNLE9BQU8sY0FBZSxTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFN0QsWUFBbUIsT0FBOEI7UUFDL0MsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFEWCxZQUFPLEdBQVAsT0FBTyxDQUF1QjtRQUR4QyxTQUFJLEdBQUcsZUFBZSxDQUFDO0lBR2hDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRWpFLFlBQW1CLE9BQVk7UUFDN0IsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFEWCxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyxvQkFBb0IsQ0FBQztJQUdyQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8scUJBQXNCLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUV2RSxZQUFtQixPQUEyQjtRQUM1QyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQURYLFlBQU8sR0FBUCxPQUFPLENBQW9CO1FBRHJDLFNBQUksR0FBRyx1QkFBdUIsQ0FBQztJQUd4QyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsVUFBVSxDQUFDLGlCQUFpQjtJQUVuRTtRQUNFLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBRnJCLFNBQUksR0FBRyxxQkFBcUIsQ0FBQztJQUd0QyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUUxRSxZQUFtQixPQUE4QjtRQUMvQyxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztRQUQxQixZQUFPLEdBQVAsT0FBTyxDQUF1QjtRQUR4QyxTQUFJLEdBQUcsOEJBQThCLENBQUM7SUFHL0MsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLCtCQUFnQyxTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFOUUsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztRQUQxQixZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyxtQ0FBbUMsQ0FBQztJQUdwRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sa0NBQW1DLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUVwRixZQUFtQixPQUEyQjtRQUM1QyxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztRQUQxQixZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQURyQyxTQUFJLEdBQUcsc0NBQXNDLENBQUM7SUFHdkQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLFVBQVUsQ0FBQyxpQkFBaUI7SUFFaEY7UUFDRSxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztRQUZwQyxTQUFJLEdBQUcsb0NBQW9DLENBQUM7SUFHckQsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ3VzdG9tZXJTZWFyY2hPcHRpb25zLCBDdXN0b21lclNlYXJjaFBhZ2UgfSBmcm9tICdAc3BhcnRhY3VzL2FzbS9yb290JztcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHtcbiAgQ1VTVE9NRVJfTElTVF9DVVNUT01FUlNfU0VBUkNIX0RBVEEsXG4gIENVU1RPTUVSX1NFQVJDSF9EQVRBLFxufSBmcm9tICcuLi9hc20tc3RhdGUnO1xuXG5leHBvcnQgY29uc3QgQ1VTVE9NRVJfU0VBUkNIID0gJ1tBc21dIEN1c3RvbWVyIFNlYXJjaCc7XG5leHBvcnQgY29uc3QgQ1VTVE9NRVJfU0VBUkNIX0ZBSUwgPSAnW0FzbV0gQ3VzdG9tZXIgU2VhcmNoIEZhaWwnO1xuZXhwb3J0IGNvbnN0IENVU1RPTUVSX1NFQVJDSF9TVUNDRVNTID0gJ1tBc21dIEN1c3RvbWVyIFNlYXJjaCBTdWNjZXNzJztcbmV4cG9ydCBjb25zdCBDVVNUT01FUl9TRUFSQ0hfUkVTRVQgPSAnW0FzbV0gQ3VzdG9tZXIgU2VhcmNoIFJlc2V0JztcblxuZXhwb3J0IGNvbnN0IENVU1RPTUVSX0xJU1RfQ1VTVE9NRVJTX1NFQVJDSCA9XG4gICdbQXNtXSBDdXN0b21lciBMaXN0IEN1c3RvbWVycyBTZWFyY2gnO1xuZXhwb3J0IGNvbnN0IENVU1RPTUVSX0xJU1RfQ1VTVE9NRVJTX1NFQVJDSF9GQUlMID1cbiAgJ1tBc21dIEN1c3RvbWVyIExpc3QgQ3VzdG9tZXJzIFNlYXJjaCBGYWlsJztcbmV4cG9ydCBjb25zdCBDVVNUT01FUl9MSVNUX0NVU1RPTUVSU19TRUFSQ0hfU1VDQ0VTUyA9XG4gICdbQXNtXSBDdXN0b21lciBMaXN0IEN1c3RvbWVycyBTZWFyY2ggU3VjY2Vzcyc7XG5leHBvcnQgY29uc3QgQ1VTVE9NRVJfTElTVF9DVVNUT01FUlNfU0VBUkNIX1JFU0VUID1cbiAgJ1tBc21dIEN1c3RvbWVyIExpc3QgQ3VzdG9tZXJzIFNlYXJjaCBSZXNldCc7XG5cbmV4cG9ydCBjbGFzcyBDdXN0b21lclNlYXJjaCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyTG9hZEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDVVNUT01FUl9TRUFSQ0g7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBDdXN0b21lclNlYXJjaE9wdGlvbnMpIHtcbiAgICBzdXBlcihDVVNUT01FUl9TRUFSQ0hfREFUQSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEN1c3RvbWVyU2VhcmNoRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDVVNUT01FUl9TRUFSQ0hfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKENVU1RPTUVSX1NFQVJDSF9EQVRBKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJTZWFyY2hTdWNjZXNzIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJTdWNjZXNzQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENVU1RPTUVSX1NFQVJDSF9TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogQ3VzdG9tZXJTZWFyY2hQYWdlKSB7XG4gICAgc3VwZXIoQ1VTVE9NRVJfU0VBUkNIX0RBVEEpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDdXN0b21lclNlYXJjaFJlc2V0IGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJSZXNldEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDVVNUT01FUl9TRUFSQ0hfUkVTRVQ7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKENVU1RPTUVSX1NFQVJDSF9EQVRBKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJMaXN0Q3VzdG9tZXJzU2VhcmNoIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJMb2FkQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENVU1RPTUVSX0xJU1RfQ1VTVE9NRVJTX1NFQVJDSDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IEN1c3RvbWVyU2VhcmNoT3B0aW9ucykge1xuICAgIHN1cGVyKENVU1RPTUVSX0xJU1RfQ1VTVE9NRVJTX1NFQVJDSF9EQVRBKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJMaXN0Q3VzdG9tZXJzU2VhcmNoRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDVVNUT01FUl9MSVNUX0NVU1RPTUVSU19TRUFSQ0hfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKENVU1RPTUVSX0xJU1RfQ1VTVE9NRVJTX1NFQVJDSF9EQVRBKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJMaXN0Q3VzdG9tZXJzU2VhcmNoU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyU3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDVVNUT01FUl9MSVNUX0NVU1RPTUVSU19TRUFSQ0hfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IEN1c3RvbWVyU2VhcmNoUGFnZSkge1xuICAgIHN1cGVyKENVU1RPTUVSX0xJU1RfQ1VTVE9NRVJTX1NFQVJDSF9EQVRBKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJMaXN0Q3VzdG9tZXJzU2VhcmNoUmVzZXQgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlclJlc2V0QWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENVU1RPTUVSX0xJU1RfQ1VTVE9NRVJTX1NFQVJDSF9SRVNFVDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoQ1VTVE9NRVJfTElTVF9DVVNUT01FUlNfU0VBUkNIX0RBVEEpO1xuICB9XG59XG5cbi8vIGFjdGlvbiB0eXBlc1xuZXhwb3J0IHR5cGUgQ3VzdG9tZXJBY3Rpb24gPVxuICB8IEN1c3RvbWVyU2VhcmNoXG4gIHwgQ3VzdG9tZXJTZWFyY2hGYWlsXG4gIHwgQ3VzdG9tZXJTZWFyY2hTdWNjZXNzXG4gIHwgQ3VzdG9tZXJTZWFyY2hSZXNldFxuICB8IEN1c3RvbWVyTGlzdEN1c3RvbWVyc1NlYXJjaFxuICB8IEN1c3RvbWVyTGlzdEN1c3RvbWVyc1NlYXJjaEZhaWxcbiAgfCBDdXN0b21lckxpc3RDdXN0b21lcnNTZWFyY2hTdWNjZXNzXG4gIHwgQ3VzdG9tZXJMaXN0Q3VzdG9tZXJzU2VhcmNoUmVzZXQ7XG4iXX0=