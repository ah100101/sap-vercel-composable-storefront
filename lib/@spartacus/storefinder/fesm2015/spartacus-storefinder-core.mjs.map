{"version":3,"file":"spartacus-storefinder-core.mjs","sources":["../../../feature-libs/storefinder/core/config/store-finder-config.ts","../../../feature-libs/storefinder/core/connectors/store-finder.adapter.ts","../../../feature-libs/storefinder/core/connectors/store-finder.connector.ts","../../../feature-libs/storefinder/core/connectors/converters.ts","../../../feature-libs/storefinder/core/connectors/index.ts","../../../feature-libs/storefinder/core/store/store-finder-state.ts","../../../feature-libs/storefinder/core/store/actions/find-stores.action.ts","../../../feature-libs/storefinder/core/store/actions/view-all-stores.action.ts","../../../feature-libs/storefinder/core/store/actions/store-finder-group.actions.ts","../../../feature-libs/storefinder/core/store/actions/index.ts","../../../feature-libs/storefinder/core/store/selectors/feature.selector.ts","../../../feature-libs/storefinder/core/store/selectors/find-stores.selectors.ts","../../../feature-libs/storefinder/core/store/selectors/view-all-stores.selectors.ts","../../../feature-libs/storefinder/core/store/selectors/store-finder-group.selectors.ts","../../../feature-libs/storefinder/core/store/selectors/index.ts","../../../feature-libs/storefinder/core/facade/store-finder.service.ts","../../../feature-libs/storefinder/core/facade/index.ts","../../../feature-libs/storefinder/core/model/index.ts","../../../feature-libs/storefinder/core/service/google-map-renderer.service.ts","../../../feature-libs/storefinder/core/service/index.ts","../../../feature-libs/storefinder/core/config/default-store-finder-config.ts","../../../feature-libs/storefinder/core/store/reducers/find-stores.reducer.ts","../../../feature-libs/storefinder/core/store/reducers/view-all-stores.reducer.ts","../../../feature-libs/storefinder/core/store/reducers/index.ts","../../../feature-libs/storefinder/core/store/effects/find-stores.effect.ts","../../../feature-libs/storefinder/core/store/effects/view-all-stores.effect.ts","../../../feature-libs/storefinder/core/store/effects/index.ts","../../../feature-libs/storefinder/core/store/store-finder-store.module.ts","../../../feature-libs/storefinder/core/store-finder-core.module.ts","../../../feature-libs/storefinder/core/public_api.ts","../../../feature-libs/storefinder/core/spartacus-storefinder-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class StoreFinderConfig {\n  googleMaps?: {\n    apiUrl?: string;\n    apiKey?: string;\n    scale?: number;\n    selectedMarkerScale?: number;\n    radius?: number;\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends StoreFinderConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { GeoPoint, PointOfService, SearchConfig } from '@spartacus/core';\nimport { StoreCount, StoreFinderSearchPage } from '../model/store-finder.model';\n\nexport abstract class StoreFinderAdapter {\n  abstract search(\n    query: string,\n    searchConfig: SearchConfig,\n    longitudeLatitude?: GeoPoint,\n    radius?: number\n  ): Observable<StoreFinderSearchPage>;\n\n  abstract loadCounts(): Observable<StoreCount[]>;\n\n  abstract load(storeId: string): Observable<PointOfService>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StoreFinderAdapter } from './store-finder.adapter';\nimport { GeoPoint, PointOfService, SearchConfig } from '@spartacus/core';\nimport { StoreCount, StoreFinderSearchPage } from '../model/store-finder.model';\n\n@Injectable({ providedIn: 'root' })\nexport class StoreFinderConnector {\n  constructor(protected adapter: StoreFinderAdapter) {}\n\n  search(\n    query: string,\n    searchConfig: SearchConfig,\n    longitudeLatitude?: GeoPoint,\n    radius?: number\n  ): Observable<StoreFinderSearchPage> {\n    return this.adapter.search(query, searchConfig, longitudeLatitude, radius);\n  }\n\n  getCounts(): Observable<StoreCount[]> {\n    return this.adapter.loadCounts();\n  }\n\n  get(storeId: string): Observable<PointOfService> {\n    return this.adapter.load(storeId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { StoreCount, StoreFinderSearchPage } from '../model/store-finder.model';\n\nexport const STORE_FINDER_SEARCH_PAGE_NORMALIZER = new InjectionToken<\n  Converter<any, StoreFinderSearchPage>\n>('StoreFinderSearchPageNormalizer');\n\nexport const STORE_COUNT_NORMALIZER = new InjectionToken<\n  Converter<any, StoreCount>\n>('StoreCountNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './store-finder.connector';\nexport * from './store-finder.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '@spartacus/core';\nimport { StoreEntities } from '@spartacus/storefinder/root';\n\nexport const STORE_FINDER_FEATURE = 'stores';\nexport const STORE_FINDER_DATA = '[StoreFinder] Store Finder Data';\n\nexport interface StateWithStoreFinder {\n  [STORE_FINDER_FEATURE]: StoresState;\n}\n\nexport interface StoresState {\n  findStores: StateUtils.LoaderState<FindStoresState>;\n  viewAllStores: StateUtils.LoaderState<ViewAllStoresState>;\n}\n\nexport interface FindStoresState {\n  findStoresEntities: StoreEntities;\n  findStoreEntityById: StoreEntities;\n}\n\nexport interface ViewAllStoresState {\n  viewAllStoresEntities: StoreEntities;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { STORE_FINDER_DATA } from '../store-finder-state';\nimport { GeoPoint, SearchConfig, StateUtils } from '@spartacus/core';\n\nexport const FIND_STORES_ON_HOLD = '[StoreFinder] On Hold';\nexport const FIND_STORES = '[StoreFinder] Find Stores';\nexport const FIND_STORES_FAIL = '[StoreFinder] Find Stores Fail';\nexport const FIND_STORES_SUCCESS = '[StoreFinder] Find Stores Success';\n\nexport const FIND_STORE_BY_ID = '[StoreFinder] Find a Store by Id';\nexport const FIND_STORE_BY_ID_FAIL = '[StoreFinder] Find a Store by Id Fail';\nexport const FIND_STORE_BY_ID_SUCCESS =\n  '[StoreFinder] Find a Store by Id Success';\n\nexport class FindStoresOnHold extends StateUtils.LoaderLoadAction {\n  readonly type = FIND_STORES_ON_HOLD;\n  constructor() {\n    super(STORE_FINDER_DATA);\n  }\n}\n\nexport class FindStores extends StateUtils.LoaderLoadAction {\n  readonly type = FIND_STORES;\n  constructor(\n    public payload: {\n      queryText: string;\n      searchConfig?: SearchConfig;\n      longitudeLatitude?: GeoPoint;\n      useMyLocation?: boolean;\n      countryIsoCode?: string;\n      radius?: number;\n    }\n  ) {\n    super(STORE_FINDER_DATA);\n  }\n}\n\nexport class FindStoresFail extends StateUtils.LoaderFailAction {\n  readonly type = FIND_STORES_FAIL;\n  constructor(public payload: any) {\n    super(STORE_FINDER_DATA, payload);\n  }\n}\n\nexport class FindStoresSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = FIND_STORES_SUCCESS;\n  constructor(public payload: any) {\n    super(STORE_FINDER_DATA);\n  }\n}\n\nexport class FindStoreById extends StateUtils.LoaderLoadAction {\n  readonly type = FIND_STORE_BY_ID;\n  constructor(public payload: { storeId: string }) {\n    super(STORE_FINDER_DATA);\n  }\n}\n\nexport class FindStoreByIdFail extends StateUtils.LoaderFailAction {\n  readonly type = FIND_STORE_BY_ID_FAIL;\n  constructor(public payload: any) {\n    super(STORE_FINDER_DATA, payload);\n  }\n}\n\nexport class FindStoreByIdSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = FIND_STORE_BY_ID_SUCCESS;\n  constructor(public payload: any) {\n    super(STORE_FINDER_DATA);\n  }\n}\n\nexport type FindStoresAction =\n  | FindStoresOnHold\n  | FindStores\n  | FindStoresFail\n  | FindStoresSuccess\n  | FindStoreById\n  | FindStoreByIdFail\n  | FindStoreByIdSuccess;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { STORE_FINDER_DATA } from '../store-finder-state';\nimport { StateUtils } from '@spartacus/core';\nimport { Action } from '@ngrx/store';\n\nexport const VIEW_ALL_STORES = '[StoreFinder] View All Stores';\nexport const VIEW_ALL_STORES_FAIL = '[StoreFinder] View All Stores Fail';\nexport const VIEW_ALL_STORES_SUCCESS = '[StoreFinder] View All Stores Success';\nexport const CLEAR_STORE_FINDER_DATA = '[StoreFinder] Clear Data';\n\nexport class ViewAllStores extends StateUtils.LoaderLoadAction {\n  readonly type = VIEW_ALL_STORES;\n  constructor() {\n    super(STORE_FINDER_DATA);\n  }\n}\n\nexport class ViewAllStoresFail extends StateUtils.LoaderFailAction {\n  readonly type = VIEW_ALL_STORES_FAIL;\n  constructor(public payload: any) {\n    super(STORE_FINDER_DATA, payload);\n  }\n}\n\nexport class ViewAllStoresSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = VIEW_ALL_STORES_SUCCESS;\n  constructor(public payload: any) {\n    super(STORE_FINDER_DATA);\n  }\n}\n\nexport class ClearStoreFinderData implements Action {\n  readonly type = CLEAR_STORE_FINDER_DATA;\n}\n\nexport type ViewAllStoresAction =\n  | ViewAllStores\n  | ViewAllStoresFail\n  | ViewAllStoresSuccess\n  | ClearStoreFinderData;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './find-stores.action';\nexport * from './view-all-stores.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as StoreFinderActions from './store-finder-group.actions';\nexport { StoreFinderActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  StateWithStoreFinder,\n  StoresState,\n  STORE_FINDER_FEATURE,\n} from '../store-finder-state';\n\nexport const getStoreFinderState: MemoizedSelector<\n  StateWithStoreFinder,\n  StoresState\n> = createFeatureSelector<StoresState>(STORE_FINDER_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  FindStoresState,\n  StateWithStoreFinder,\n  StoresState,\n} from '../store-finder-state';\nimport { getStoreFinderState } from './feature.selector';\nimport { StateUtils } from '@spartacus/core';\n\nexport const getFindStoresState: MemoizedSelector<\n  StateWithStoreFinder,\n  StateUtils.LoaderState<FindStoresState>\n> = createSelector(\n  getStoreFinderState,\n  (storesState: StoresState) => storesState.findStores\n);\n\nexport const getFindStoresEntities: MemoizedSelector<\n  StateWithStoreFinder,\n  FindStoresState\n> = createSelector(getFindStoresState, (state) =>\n  StateUtils.loaderValueSelector(state)\n);\n\nexport const getStoresLoading: MemoizedSelector<StateWithStoreFinder, boolean> =\n  createSelector(getFindStoresState, (state) =>\n    StateUtils.loaderLoadingSelector(state)\n  );\n\nexport const getStoresSuccess: MemoizedSelector<StateWithStoreFinder, boolean> =\n  createSelector(getFindStoresState, (state) =>\n    StateUtils.loaderSuccessSelector(state)\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  StateWithStoreFinder,\n  StoresState,\n  ViewAllStoresState,\n} from '../store-finder-state';\nimport { getStoreFinderState } from './feature.selector';\nimport { StateUtils } from '@spartacus/core';\n\nexport const getViewAllStoresState: MemoizedSelector<\n  StateWithStoreFinder,\n  StateUtils.LoaderState<ViewAllStoresState>\n> = createSelector(\n  getStoreFinderState,\n  (storesState: StoresState) => storesState.viewAllStores\n);\n\nexport const getViewAllStoresEntities: MemoizedSelector<\n  StateWithStoreFinder,\n  ViewAllStoresState\n> = createSelector(getViewAllStoresState, (state) =>\n  StateUtils.loaderValueSelector(state)\n);\n\nexport const getViewAllStoresLoading: MemoizedSelector<\n  StateWithStoreFinder,\n  boolean\n> = createSelector(getViewAllStoresState, (state) =>\n  StateUtils.loaderLoadingSelector(state)\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './find-stores.selectors';\nexport * from './view-all-stores.selectors';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as StoreFinderSelectors from './store-finder-group.selectors';\nexport { StoreFinderSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Action, select, Store } from '@ngrx/store';\nimport {\n  GeoPoint,\n  GlobalMessageService,\n  GlobalMessageType,\n  PointOfService,\n  RoutingService,\n  SearchConfig,\n  WindowRef,\n} from '@spartacus/core';\nimport { StoreEntities } from '@spartacus/storefinder/root';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { StoreFinderActions } from '../store/actions/index';\nimport { StoreFinderSelectors } from '../store/selectors/index';\nimport { StateWithStoreFinder } from '../store/store-finder-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreFinderService implements OnDestroy {\n  private geolocationWatchId: number | null = null;\n  protected subscription = new Subscription();\n\n  constructor(\n    protected store: Store<StateWithStoreFinder>,\n    protected winRef: WindowRef,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    @Inject(PLATFORM_ID) protected platformId: any\n  ) {\n    this.reloadStoreEntitiesOnContextChange();\n  }\n\n  /**\n   * Returns boolean observable for store's loading state\n   */\n  getStoresLoading(): Observable<boolean> {\n    return this.store.pipe(select(StoreFinderSelectors.getStoresLoading));\n  }\n\n  /**\n   * Returns boolean observable for store's success state\n   */\n  getStoresLoaded(): Observable<boolean> {\n    return this.store.pipe(select(StoreFinderSelectors.getStoresSuccess));\n  }\n\n  /**\n   * Returns observable for store's entities\n   */\n  getFindStoresEntities(): Observable<StoreEntities> {\n    return this.store.pipe(\n      select(StoreFinderSelectors.getFindStoresEntities),\n      map((data) => data.findStoresEntities)\n    );\n  }\n\n  /**\n   * Returns observable for a single store by Id\n   */\n  getFindStoreEntityById(): Observable<StoreEntities> {\n    return this.store.pipe(\n      select(StoreFinderSelectors.getFindStoresEntities),\n      map((data) => data.findStoreEntityById)\n    );\n  }\n\n  /**\n   * Returns boolean observable for view all store's loading state\n   */\n  getViewAllStoresLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(StoreFinderSelectors.getViewAllStoresLoading)\n    );\n  }\n\n  /**\n   * Returns observable for view all store's entities\n   */\n  getViewAllStoresEntities(): Observable<StoreEntities> {\n    return this.store.pipe(\n      select(StoreFinderSelectors.getViewAllStoresEntities),\n      map((data) => data.viewAllStoresEntities)\n    );\n  }\n\n  /**\n   * Store finding action functionality\n   * @param queryText text query\n   * @param searchConfig search configuration\n   * @param longitudeLatitude longitude and latitude coordinates\n   * @param countryIsoCode country ISO code\n   * @param useMyLocation current location coordinates\n   * @param radius radius of the scope from the center point\n   */\n  findStoresAction(\n    queryText: string,\n    searchConfig?: SearchConfig,\n    longitudeLatitude?: GeoPoint,\n    countryIsoCode?: string,\n    useMyLocation?: boolean,\n    radius?: number\n  ) {\n    if (useMyLocation && this.winRef.nativeWindow) {\n      this.clearWatchGeolocation(new StoreFinderActions.FindStoresOnHold());\n      this.geolocationWatchId =\n        this.winRef.nativeWindow.navigator.geolocation.watchPosition(\n          (pos: GeolocationPosition) => {\n            const position: GeoPoint = {\n              longitude: pos.coords.longitude,\n              latitude: pos.coords.latitude,\n            };\n\n            this.clearWatchGeolocation(\n              new StoreFinderActions.FindStores({\n                queryText: queryText,\n                searchConfig: searchConfig,\n                longitudeLatitude: position,\n                countryIsoCode: countryIsoCode,\n                radius: radius,\n              })\n            );\n          },\n          () => {\n            this.globalMessageService.add(\n              { key: 'storeFinder.geolocationNotEnabled' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n            this.routingService.go(['/store-finder']);\n          }\n        );\n    } else {\n      this.clearWatchGeolocation(\n        new StoreFinderActions.FindStores({\n          queryText: queryText,\n          searchConfig: searchConfig,\n          longitudeLatitude: longitudeLatitude,\n          countryIsoCode: countryIsoCode,\n          radius: radius,\n        })\n      );\n    }\n  }\n\n  /**\n   * View all stores\n   */\n  viewAllStores() {\n    this.clearWatchGeolocation(new StoreFinderActions.ViewAllStores());\n  }\n\n  /**\n   * View all stores by id\n   * @param storeId store id\n   */\n  viewStoreById(storeId: string) {\n    this.clearWatchGeolocation(\n      new StoreFinderActions.FindStoreById({ storeId })\n    );\n  }\n\n  private clearWatchGeolocation(callbackAction: Action) {\n    if (this.geolocationWatchId !== null) {\n      this.winRef.nativeWindow?.navigator.geolocation.clearWatch(\n        this.geolocationWatchId\n      );\n      this.geolocationWatchId = null;\n    }\n    this.store.dispatch(callbackAction);\n  }\n\n  private isEmpty(store: StoreEntities): boolean {\n    return (\n      !store || (typeof store === 'object' && Object.keys(store).length === 0)\n    );\n  }\n\n  /**\n   * Reload store data when store entities are empty because of the context change\n   */\n  protected reloadStoreEntitiesOnContextChange(): void {\n    if (isPlatformBrowser(this.platformId) || !this.platformId) {\n      this.subscription = this.getFindStoresEntities()\n        .pipe(\n          filter((data) => this.isEmpty(data)),\n          withLatestFrom(\n            this.getStoresLoading(),\n            this.getStoresLoaded(),\n            this.routingService.getParams()\n          )\n        )\n        .subscribe(([, loading, loaded, routeParams]) => {\n          if (!loading && !loaded) {\n            if (routeParams.country && !routeParams.store) {\n              this.callFindStoresAction(routeParams);\n            }\n            if (routeParams.store) {\n              this.viewStoreById(routeParams.store);\n            }\n          }\n        });\n    }\n  }\n\n  callFindStoresAction(routeParams: { [key: string]: string }): void {\n    this.findStoresAction(\n      '',\n      {\n        pageSize: -1,\n      },\n      undefined,\n      routeParams.country\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /**\n   * Returns store latitude\n   * @param location store location\n   */\n  getStoreLatitude(location: PointOfService): number | undefined {\n    return location?.geoPoint?.latitude;\n  }\n\n  /**\n   * Returns store longitude\n   * @param location store location\n   */\n  getStoreLongitude(location: PointOfService): number | undefined {\n    return location?.geoPoint?.longitude;\n  }\n\n  /**\n   * Generates a link leading to the directions of the given store location\n   * @param location store location\n   * @returns URL for directions to the store\n   */\n  getDirections(location: PointOfService): string {\n    const url = 'https://www.google.com/maps/dir/Current+Location/';\n    const latitude = this.getStoreLatitude(location);\n    const longitude = this.getStoreLongitude(location);\n    return url + latitude + ',' + longitude;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './store-finder.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './search-query';\nexport * from './store-finder.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/// <reference types=\"@types/google.maps\" />\nimport { Injectable, isDevMode } from '@angular/core';\nimport { ScriptLoader } from '@spartacus/core';\nimport { GOOGLE_MAPS_DEVELOPMENT_KEY_CONFIG } from '@spartacus/storefinder/root';\nimport { StoreFinderConfig } from '../config/store-finder-config';\nimport { StoreFinderService } from '../facade/store-finder.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GoogleMapRendererService {\n  private googleMap: google.maps.Map = null;\n  private markers: google.maps.Marker[];\n\n  constructor(\n    protected config: StoreFinderConfig,\n    protected storeFinderService: StoreFinderService,\n    protected scriptLoader: ScriptLoader\n  ) {}\n\n  /**\n   * Renders google map on the given element and draws markers on it.\n   * If map already exists it will use an existing map otherwise it will create one\n   * @param mapElement HTML element inside of which the map will be displayed\n   * @param locations array containign geo data to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n  renderMap(\n    mapElement: HTMLElement,\n    locations: any[],\n    selectMarkerHandler?: Function\n  ): void {\n    if (this.config.googleMaps?.apiKey) {\n      if (Object.entries(locations[Object.keys(locations)[0]]).length > 0) {\n        if (this.googleMap === null) {\n          const apiKey =\n            this.config.googleMaps.apiKey === GOOGLE_MAPS_DEVELOPMENT_KEY_CONFIG\n              ? ''\n              : this.config.googleMaps.apiKey;\n\n          this.scriptLoader.embedScript({\n            src: this.config.googleMaps.apiUrl,\n            params: { key: apiKey },\n            attributes: { type: 'text/javascript' },\n            callback: () => {\n              this.drawMap(mapElement, locations, selectMarkerHandler);\n            },\n          });\n        } else {\n          this.drawMap(mapElement, locations, selectMarkerHandler);\n        }\n      }\n    } else {\n      if (isDevMode()) {\n        console.warn(\n          'A Google Maps api key is required in the store finder configuration to display the Google map.'\n        );\n      }\n    }\n  }\n\n  /**\n   * Centers the map to the given point\n   * @param latitute latitude of the new center\n   * @param longitude longitude of the new center\n   */\n  centerMap(latitute: number, longitude: number): void {\n    this.googleMap.panTo({ lat: latitute, lng: longitude });\n    this.googleMap.setZoom(this.config.googleMaps.selectedMarkerScale);\n  }\n\n  /**\n   * Defines and returns {@link google.maps.LatLng} representing a point where the map will be centered\n   * @param locations list of locations\n   */\n  private defineMapCenter(locations: any[]): google.maps.LatLng {\n    return new google.maps.LatLng(\n      this.storeFinderService.getStoreLatitude(locations[0]),\n      this.storeFinderService.getStoreLongitude(locations[0])\n    );\n  }\n\n  /**\n   * Creates google map inside if the given HTML element centered to the given point\n   * @param mapElement {@link HTMLElement} inside of which the map will be created\n   * @param mapCenter {@link google.maps.LatLng} the point where the map will be centered\n   */\n  private initMap(\n    mapElement: HTMLElement,\n    mapCenter: google.maps.LatLng\n  ): void {\n    type GestureHandlingOptions = 'cooperative' | 'greedy' | 'none' | 'auto';\n    const gestureOption: GestureHandlingOptions = 'greedy';\n\n    const mapProp = {\n      center: mapCenter,\n      zoom: this.config.googleMaps.scale,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      gestureHandling: gestureOption,\n    };\n    this.googleMap = new google.maps.Map(mapElement, mapProp);\n  }\n\n  /**\n   * Erases the current map's markers and create a new one based on the given locations\n   * @param locations array of locations to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n  private createMarkers(\n    locations: any[],\n    selectMarkerHandler?: Function\n  ): void {\n    this.markers = [];\n    locations.forEach((element, index) => {\n      const marker = new google.maps.Marker({\n        position: new google.maps.LatLng(\n          this.storeFinderService.getStoreLatitude(element),\n          this.storeFinderService.getStoreLongitude(element)\n        ),\n        label: index + 1 + '',\n      });\n      this.markers.push(marker);\n      marker.setMap(this.googleMap);\n      marker.addListener('mouseover', function () {\n        marker.setAnimation(google.maps.Animation.BOUNCE);\n      });\n      marker.addListener('mouseout', function () {\n        marker.setAnimation(null);\n      });\n      if (selectMarkerHandler) {\n        marker.addListener('click', function () {\n          selectMarkerHandler(index);\n        });\n      }\n    });\n  }\n\n  /**\n   * Initialize and draw the map\n   * @param mapElement {@link HTMLElement} inside of which the map will be drawn\n   * @param locations array of locations to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n  private drawMap(\n    mapElement: HTMLElement,\n    locations: any[],\n    selectMarkerHandler: Function\n  ) {\n    this.initMap(mapElement, this.defineMapCenter(locations));\n    this.createMarkers(locations, selectMarkerHandler);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './google-map-renderer.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StoreFinderConfig } from './store-finder-config';\n\nexport const defaultStoreFinderConfig: StoreFinderConfig = {\n  googleMaps: {\n    apiUrl: 'https://maps.googleapis.com/maps/api/js',\n    apiKey: '',\n    scale: 5,\n    selectedMarkerScale: 17,\n    radius: 50000,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StoreFinderActions } from '../actions/index';\nimport { FindStoresState } from '../store-finder-state';\n\nexport const initialState: FindStoresState = {\n  findStoresEntities: {},\n  findStoreEntityById: {},\n};\n\nexport function findStoresReducer(\n  state = initialState,\n  action: StoreFinderActions.FindStoresAction\n): FindStoresState {\n  switch (action.type) {\n    case StoreFinderActions.FIND_STORES_SUCCESS: {\n      const findStoresEntities = action.payload;\n\n      return { ...state, findStoresEntities };\n    }\n    case StoreFinderActions.FIND_STORE_BY_ID_SUCCESS: {\n      const findStoreEntityById = action.payload;\n\n      return { ...state, findStoreEntityById };\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StoreFinderActions } from '../actions/index';\nimport { ViewAllStoresState } from '../store-finder-state';\n\nexport const initialState: ViewAllStoresState = {\n  viewAllStoresEntities: {},\n};\n\nexport function viewAllStoresReducer(\n  state = initialState,\n  action: StoreFinderActions.ViewAllStoresAction\n): ViewAllStoresState {\n  switch (action.type) {\n    case StoreFinderActions.VIEW_ALL_STORES_SUCCESS: {\n      const viewAllStoresEntities = action.payload;\n\n      return {\n        ...state,\n        viewAllStoresEntities,\n      };\n    }\n  }\n\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  MetaReducer,\n} from '@ngrx/store';\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { StoresState, STORE_FINDER_DATA } from '../store-finder-state';\nimport { SiteContextActions, StateUtils } from '@spartacus/core';\nimport { StoreFinderActions } from '../actions';\nimport { findStoresReducer } from './find-stores.reducer';\nimport { viewAllStoresReducer } from './view-all-stores.reducer';\n\nexport function getReducers(): ActionReducerMap<StoresState> {\n  return {\n    findStores: StateUtils.loaderReducer(STORE_FINDER_DATA, findStoresReducer),\n    viewAllStores: StateUtils.loaderReducer(\n      STORE_FINDER_DATA,\n      viewAllStoresReducer\n    ),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<StoresState>> =\n  new InjectionToken<ActionReducerMap<StoresState>>('StoreFinderReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearStoreFinderState(\n  reducer: ActionReducer<StoresState, Action>\n): ActionReducer<StoresState, Action> {\n  return function (state, action) {\n    if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n      state = undefined;\n    }\n    if (action.type === StoreFinderActions.CLEAR_STORE_FINDER_DATA) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearStoreFinderState];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { StoreFinderConnector } from '../../connectors/store-finder.connector';\nimport { StoreFinderActions } from '../actions/index';\nimport { normalizeHttpError } from '@spartacus/core';\n\n@Injectable()\nexport class FindStoresEffect {\n  constructor(\n    private actions$: Actions,\n    private storeFinderConnector: StoreFinderConnector\n  ) {}\n\n  findStores$: Observable<\n    StoreFinderActions.FindStoresSuccess | StoreFinderActions.FindStoresFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StoreFinderActions.FIND_STORES),\n      map((action: StoreFinderActions.FindStores) => action.payload),\n      mergeMap((payload) =>\n        this.storeFinderConnector\n          .search(\n            payload.queryText,\n            payload.searchConfig,\n            payload.longitudeLatitude,\n            payload.radius\n          )\n          .pipe(\n            map((data) => {\n              if (payload.countryIsoCode) {\n                data.stores = data.stores.filter(\n                  (store) =>\n                    store.address.country.isocode === payload.countryIsoCode\n                );\n                data.stores.sort((a, b) =>\n                  a.name < b.name ? -1 : a.name > b.name ? 1 : 0\n                );\n              }\n\n              return new StoreFinderActions.FindStoresSuccess(data);\n            }),\n            catchError((error) =>\n              of(\n                new StoreFinderActions.FindStoresFail(normalizeHttpError(error))\n              )\n            )\n          )\n      )\n    )\n  );\n\n  findStoreById$: Observable<\n    | StoreFinderActions.FindStoreByIdSuccess\n    | StoreFinderActions.FindStoreByIdFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StoreFinderActions.FIND_STORE_BY_ID),\n      map((action: StoreFinderActions.FindStoreById) => action.payload),\n      switchMap((payload) =>\n        this.storeFinderConnector.get(payload.storeId).pipe(\n          map((data) => new StoreFinderActions.FindStoreByIdSuccess(data)),\n          catchError((error) =>\n            of(\n              new StoreFinderActions.FindStoreByIdFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { StoreFinderConnector } from '../../connectors/store-finder.connector';\nimport { StoreFinderActions } from '../actions/index';\nimport { normalizeHttpError, SiteContextActions } from '@spartacus/core';\n\n@Injectable()\nexport class ViewAllStoresEffect {\n  constructor(\n    private actions$: Actions,\n    private storeFinderConnector: StoreFinderConnector\n  ) {}\n\n  viewAllStores$: Observable<\n    | StoreFinderActions.ViewAllStoresSuccess\n    | StoreFinderActions.ViewAllStoresFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        StoreFinderActions.VIEW_ALL_STORES,\n        StoreFinderActions.CLEAR_STORE_FINDER_DATA\n      ),\n      switchMap(() => {\n        return this.storeFinderConnector.getCounts().pipe(\n          map((data) => {\n            data.sort((a, b) =>\n              a.name < b.name ? -1 : a.name > b.name ? 1 : 0\n            );\n            return new StoreFinderActions.ViewAllStoresSuccess(data);\n          }),\n          catchError((error) =>\n            of(\n              new StoreFinderActions.ViewAllStoresFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n      })\n    )\n  );\n\n  clearStoreFinderData$: Observable<StoreFinderActions.ClearStoreFinderData> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(\n          SiteContextActions.LANGUAGE_CHANGE,\n          SiteContextActions.CURRENCY_CHANGE\n        ),\n        map(() => {\n          return new StoreFinderActions.ClearStoreFinderData();\n        })\n      )\n    );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { FindStoresEffect } from './find-stores.effect';\nimport { ViewAllStoresEffect } from './view-all-stores.effect';\n\nexport const effects: any[] = [FindStoresEffect, ViewAllStoresEffect];\n\nexport * from './find-stores.effect';\nexport * from './view-all-stores.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducerProvider, reducerToken, metaReducers } from './reducers/index';\nimport { effects } from './effects/index';\nimport { STORE_FINDER_FEATURE } from './store-finder-state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n      metaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class StoreFinderStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultStoreFinderConfig } from './config/default-store-finder-config';\nimport { StoreFinderStoreModule } from './store/store-finder-store.module';\nimport { StoreFinderConnector } from './connectors/store-finder.connector';\n\n@NgModule({\n  imports: [StoreFinderStoreModule],\n  providers: [\n    provideDefaultConfig(defaultStoreFinderConfig),\n    StoreFinderConnector,\n  ],\n})\nexport class StoreFinderCoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/store-finder-config';\nexport * from './connectors/index';\nexport * from './facade/index';\nexport * from './model/index';\nexport * from './service/index';\nexport * from './store-finder-core.module';\nexport * from './store/actions/index';\nexport * from './store/selectors/index';\nexport * from './store/store-finder-state';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.StoreFinderAdapter","StoreFinderSelectors.getStoresLoading","StoreFinderSelectors.getStoresSuccess","StoreFinderSelectors.getFindStoresEntities","StoreFinderSelectors.getViewAllStoresLoading","StoreFinderSelectors.getViewAllStoresEntities","StoreFinderActions.FindStoresOnHold","StoreFinderActions.FindStores","StoreFinderActions.ViewAllStores","StoreFinderActions.FindStoreById","i1.StoreFinderConfig","i2.StoreFinderService","i3","initialState","StoreFinderActions.FIND_STORES_SUCCESS","StoreFinderActions.FIND_STORE_BY_ID_SUCCESS","StoreFinderActions.VIEW_ALL_STORES_SUCCESS","StoreFinderActions.CLEAR_STORE_FINDER_DATA","StoreFinderActions.FIND_STORES","StoreFinderActions.FindStoresSuccess","StoreFinderActions.FindStoresFail","StoreFinderActions.FIND_STORE_BY_ID","StoreFinderActions.FindStoreByIdSuccess","StoreFinderActions.FindStoreByIdFail","i1","i2.StoreFinderConnector","StoreFinderActions.VIEW_ALL_STORES","StoreFinderActions.ViewAllStoresSuccess","StoreFinderActions.ViewAllStoresFail","StoreFinderActions.ClearStoreFinderData","i2"],"mappings":"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"}