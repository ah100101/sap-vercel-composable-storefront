/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefinder/core";
import * as i2 from "@angular/router";
import * as i3 from "@angular/common";
import * as i4 from "@spartacus/storefront";
import * as i5 from "../store-finder-list-item/store-finder-list-item.component";
import * as i6 from "@spartacus/core";
export class StoreFinderGridComponent {
    constructor(storeFinderService, route) {
        this.storeFinderService = storeFinderService;
        this.route = route;
    }
    ngOnInit() {
        this.isLoading$ = this.storeFinderService.getStoresLoading();
        this.locations$ = this.storeFinderService.getFindStoresEntities();
        this.defaultLocation = {};
        this.findStores();
    }
    findStores() {
        if (this.route.snapshot.params.country) {
            this.storeFinderService.callFindStoresAction(this.route.snapshot.params);
        }
    }
}
StoreFinderGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: StoreFinderGridComponent, deps: [{ token: i1.StoreFinderService }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
StoreFinderGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: StoreFinderGridComponent, selector: "cx-store-finder-grid", ngImport: i0, template: "<ng-container\n  *ngIf=\"\n    !(isLoading$ | async) && (locations$ | async) as locations;\n    else loading\n  \"\n>\n  <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n  <div\n    class=\"container\"\n    aria-live=\"assertive\"\n    aria-atomic=\"true\"\n    aria-relevant=\"additions\"\n  >\n    <div class=\"cx-visually-hidden\">\n      {{\n        'storeFinder.storesFound'\n          | cxTranslate: { count: locations?.stores?.length }\n      }}\n    </div>\n    <div class=\"row\">\n      <div\n        class=\"col-sm-6 col-md-4 col-lg-3 item\"\n        *ngFor=\"let location of locations?.stores\"\n      >\n        <cx-store-finder-list-item\n          [location]=\"location\"\n        ></cx-store-finder-list-item>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.SpinnerComponent, selector: "cx-spinner" }, { kind: "component", type: i5.StoreFinderListItemComponent, selector: "cx-store-finder-list-item", inputs: ["locationIndex", "listOrderLabel", "displayDistance", "useClickEvent"], outputs: ["storeItemClick"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: StoreFinderGridComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-store-finder-grid', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container\n  *ngIf=\"\n    !(isLoading$ | async) && (locations$ | async) as locations;\n    else loading\n  \"\n>\n  <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n  <div\n    class=\"container\"\n    aria-live=\"assertive\"\n    aria-atomic=\"true\"\n    aria-relevant=\"additions\"\n  >\n    <div class=\"cx-visually-hidden\">\n      {{\n        'storeFinder.storesFound'\n          | cxTranslate: { count: locations?.stores?.length }\n      }}\n    </div>\n    <div class=\"row\">\n      <div\n        class=\"col-sm-6 col-md-4 col-lg-3 item\"\n        *ngFor=\"let location of locations?.stores\"\n      >\n        <cx-store-finder-list-item\n          [location]=\"location\"\n        ></cx-store-finder-list-item>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.StoreFinderService }, { type: i2.ActivatedRoute }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtZmluZGVyLWdyaWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3N0b3JlZmluZGVyL2NvbXBvbmVudHMvc3RvcmUtZmluZGVyLWdyaWQvc3RvcmUtZmluZGVyLWdyaWQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3N0b3JlZmluZGVyL2NvbXBvbmVudHMvc3RvcmUtZmluZGVyLWdyaWQvc3RvcmUtZmluZGVyLWdyaWQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBVzNFLE1BQU0sT0FBTyx3QkFBd0I7SUFPbkMsWUFDVSxrQkFBc0MsRUFDdEMsS0FBcUI7UUFEckIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxVQUFLLEdBQUwsS0FBSyxDQUFnQjtJQUM1QixDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDN0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUNsRSxJQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDcEIsQ0FBQztJQUVTLFVBQVU7UUFDbEIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFO1lBQ3RDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMxRTtJQUNILENBQUM7O3FIQXZCVSx3QkFBd0I7eUdBQXhCLHdCQUF3Qiw0RENqQnJDLHE1QkFtQ0E7MkZEbEJhLHdCQUF3QjtrQkFMcEMsU0FBUzsrQkFDRSxzQkFBc0IsbUJBRWYsdUJBQXVCLENBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgR2VvUG9pbnQgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgU3RvcmVGaW5kZXJTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9zdG9yZWZpbmRlci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtc3RvcmUtZmluZGVyLWdyaWQnLFxuICB0ZW1wbGF0ZVVybDogJy4vc3RvcmUtZmluZGVyLWdyaWQuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgU3RvcmVGaW5kZXJHcmlkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgZGVmYXVsdExvY2F0aW9uOiBHZW9Qb2ludDtcbiAgY291bnRyeTogc3RyaW5nO1xuICByZWdpb246IHN0cmluZztcbiAgbG9jYXRpb25zJDogYW55O1xuICBpc0xvYWRpbmckOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgc3RvcmVGaW5kZXJTZXJ2aWNlOiBTdG9yZUZpbmRlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGVcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaXNMb2FkaW5nJCA9IHRoaXMuc3RvcmVGaW5kZXJTZXJ2aWNlLmdldFN0b3Jlc0xvYWRpbmcoKTtcbiAgICB0aGlzLmxvY2F0aW9ucyQgPSB0aGlzLnN0b3JlRmluZGVyU2VydmljZS5nZXRGaW5kU3RvcmVzRW50aXRpZXMoKTtcbiAgICB0aGlzLmRlZmF1bHRMb2NhdGlvbiA9IHt9O1xuICAgIHRoaXMuZmluZFN0b3JlcygpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGZpbmRTdG9yZXMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMucm91dGUuc25hcHNob3QucGFyYW1zLmNvdW50cnkpIHtcbiAgICAgIHRoaXMuc3RvcmVGaW5kZXJTZXJ2aWNlLmNhbGxGaW5kU3RvcmVzQWN0aW9uKHRoaXMucm91dGUuc25hcHNob3QucGFyYW1zKTtcbiAgICB9XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXJcbiAgKm5nSWY9XCJcbiAgICAhKGlzTG9hZGluZyQgfCBhc3luYykgJiYgKGxvY2F0aW9ucyQgfCBhc3luYykgYXMgbG9jYXRpb25zO1xuICAgIGVsc2UgbG9hZGluZ1xuICBcIlxuPlxuICA8ZGl2IHJvbGU9XCJzdGF0dXNcIiBbYXR0ci5hcmlhLWxhYmVsXT1cIidjb21tb24ubG9hZGVkJyB8IGN4VHJhbnNsYXRlXCI+PC9kaXY+XG4gIDxkaXZcbiAgICBjbGFzcz1cImNvbnRhaW5lclwiXG4gICAgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCJcbiAgICBhcmlhLWF0b21pYz1cInRydWVcIlxuICAgIGFyaWEtcmVsZXZhbnQ9XCJhZGRpdGlvbnNcIlxuICA+XG4gICAgPGRpdiBjbGFzcz1cImN4LXZpc3VhbGx5LWhpZGRlblwiPlxuICAgICAge3tcbiAgICAgICAgJ3N0b3JlRmluZGVyLnN0b3Jlc0ZvdW5kJ1xuICAgICAgICAgIHwgY3hUcmFuc2xhdGU6IHsgY291bnQ6IGxvY2F0aW9ucz8uc3RvcmVzPy5sZW5ndGggfVxuICAgICAgfX1cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiY29sLXNtLTYgY29sLW1kLTQgY29sLWxnLTMgaXRlbVwiXG4gICAgICAgICpuZ0Zvcj1cImxldCBsb2NhdGlvbiBvZiBsb2NhdGlvbnM/LnN0b3Jlc1wiXG4gICAgICA+XG4gICAgICAgIDxjeC1zdG9yZS1maW5kZXItbGlzdC1pdGVtXG4gICAgICAgICAgW2xvY2F0aW9uXT1cImxvY2F0aW9uXCJcbiAgICAgICAgPjwvY3gtc3RvcmUtZmluZGVyLWxpc3QtaXRlbT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGUgI2xvYWRpbmc+XG4gIDxkaXYgY2xhc3M9XCJjeC1zcGlubmVyXCI+PGN4LXNwaW5uZXI+PC9jeC1zcGlubmVyPjwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==