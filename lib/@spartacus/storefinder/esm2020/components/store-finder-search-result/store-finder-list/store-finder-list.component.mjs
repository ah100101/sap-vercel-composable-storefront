/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { DOCUMENT } from '@angular/common';
import { Component, Inject, Input, ViewChild } from '@angular/core';
import { ICON_TYPE } from '@spartacus/storefront';
import { LocationDisplayMode } from './store-finder-list.model';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefinder/core";
import * as i2 from "@angular/common";
import * as i3 from "@spartacus/storefront";
import * as i4 from "../../store-finder-map/store-finder-map.component";
import * as i5 from "../../store-finder-list-item/store-finder-list-item.component";
import * as i6 from "../../store-finder-store-description/store-finder-store-description.component";
import * as i7 from "../../store-finder-pagination-details/store-finder-pagination-details.component";
import * as i8 from "@spartacus/core";
export class StoreFinderListComponent {
    constructor(storeFinderService, document) {
        this.storeFinderService = storeFinderService;
        this.document = document;
        this.iconTypes = ICON_TYPE;
        this.displayModes = LocationDisplayMode;
        this.activeDisplayMode = LocationDisplayMode.LIST_VIEW;
        this.isDetailsModeVisible = false;
    }
    centerStoreOnMapByIndex(index, location) {
        this.showStoreDetails(location);
        this.selectedStoreIndex = index;
        this.selectedStore = location;
        this.storeMap.centerMap(this.storeFinderService.getStoreLatitude(this.locations.stores[index]), this.storeFinderService.getStoreLongitude(this.locations.stores[index]));
    }
    selectStoreItemList(index) {
        this.selectedStoreIndex = index;
        const storeListItem = this.document.getElementById('item-' + index);
        storeListItem.scrollIntoView({
            behavior: 'smooth',
            block: 'center',
        });
    }
    showStoreDetails(location) {
        this.isDetailsModeVisible = true;
        this.storeDetails = location;
    }
    hideStoreDetails() {
        this.isDetailsModeVisible = false;
        this.selectedStoreIndex = undefined;
        this.selectedStore = undefined;
        this.storeMap.renderMap();
    }
    setDisplayMode(mode) {
        this.activeDisplayMode = mode;
    }
    isDisplayModeActive(mode) {
        return this.activeDisplayMode === mode;
    }
}
StoreFinderListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: StoreFinderListComponent, deps: [{ token: i1.StoreFinderService }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });
StoreFinderListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: StoreFinderListComponent, selector: "cx-store-finder-list", inputs: { locations: "locations", useMylocation: "useMylocation" }, viewQueries: [{ propertyName: "storeMap", first: true, predicate: ["storeMap"], descendants: true }], ngImport: i0, template: "<ng-container *ngIf=\"locations\">\n  <div class=\"container mb-2\" aria-atomic=\"true\" aria-live=\"assertive\">\n    <div class=\"row\" *ngIf=\"locations?.pagination\">\n      <div class=\"col-md-12\">\n        <cx-store-finder-pagination-details\n          [pagination]=\"locations.pagination\"\n        ></cx-store-finder-pagination-details>\n      </div>\n      <div class=\"text-left cx-back-wrapper\">\n        <div class=\"cx-visually-hidden\">\n          {{ storeDetails?.displayName }}\n        </div>\n        <button\n          class=\"btn btn-block btn-secondary cx-back\"\n          *ngIf=\"isDetailsModeVisible\"\n          (click)=\"hideStoreDetails()\"\n        >\n          <cx-icon [type]=\"iconTypes.CARET_LEFT\"></cx-icon>\n          {{ 'storeFinder.back' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <div *ngIf=\"locations?.stores\" class=\"row cx-columns\">\n      <div class=\"col-md-4 cx-address-col\">\n        <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\n          <cx-store-finder-store-description\n            [location]=\"storeDetails\"\n            [disableMap]=\"true\"\n          ></cx-store-finder-store-description>\n        </div>\n        <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\n          <li\n            *ngFor=\"let location of locations?.stores; let i = index\"\n            id=\"{{ 'item-' + i }}\"\n            [ngClass]=\"{\n              'cx-selected-item': selectedStoreIndex === i\n            }\"\n            class=\"cx-list-items\"\n          >\n            <cx-store-finder-list-item\n              [location]=\"location\"\n              [locationIndex]=\"i\"\n              [displayDistance]=\"useMylocation\"\n              [useClickEvent]=\"true\"\n              (storeItemClick)=\"centerStoreOnMapByIndex($event, location)\"\n              [listOrderLabel]=\"\n                i +\n                locations.pagination.currentPage *\n                  locations.pagination.pageSize +\n                1\n              \"\n            ></cx-store-finder-list-item>\n          </li>\n        </ol>\n      </div>\n      <div class=\"col-md-8 cx-map-col\">\n        <cx-store-finder-map\n          #storeMap\n          [locations]=\"locations.stores\"\n          (selectedStoreItem)=\"selectStoreItemList($event)\"\n        ></cx-store-finder-map>\n      </div>\n    </div>\n\n    <!-- mobile tabs for column set only -->\n    <div *ngIf=\"locations?.stores\" class=\"cx-columns-mobile\">\n      <ul class=\"nav cx-nav\" role=\"tablist\">\n        <li\n          class=\"nav-item cx-nav-item\"\n          *ngFor=\"let mode of displayModes | keyvalue\"\n        >\n          <button\n            [id]=\"'tab-' + mode?.value\"\n            role=\"tab\"\n            [ngClass]=\"{\n              'nav-link': true,\n              active: isDisplayModeActive(mode?.value)\n            }\"\n            [attr.aria-controls]=\"'tab-' + mode?.value + '-panel'\"\n            [attr.aria-selected]=\"isDisplayModeActive(mode?.value)\"\n            aria-disabled=\"false\"\n            (click)=\"setDisplayMode(mode?.value)\"\n          >\n            {{ 'storeFinder.' + mode?.value | cxTranslate }}\n          </button>\n        </li>\n      </ul>\n      <div class=\"tab-content\">\n        <div [ngSwitch]=\"activeDisplayMode\">\n          <ng-template [ngSwitchCase]=\"displayModes.LIST_VIEW\">\n            <div\n              id=\"tab-listView-panel\"\n              role=\"tabpanel\"\n              aria-labelledby=\"tab-listView\"\n            >\n              <div class=\"cx-address-col\">\n                <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\n                  <cx-store-finder-store-description\n                    [location]=\"storeDetails\"\n                    [disableMap]=\"true\"\n                  ></cx-store-finder-store-description>\n                </div>\n                <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\n                  <li\n                    *ngFor=\"let location of locations?.stores; let i = index\"\n                    id=\"{{ 'item-' + i }}\"\n                    [ngClass]=\"{\n                      'cx-selected-item': selectedStoreIndex === i\n                    }\"\n                    class=\"cx-list-items\"\n                  >\n                    <cx-store-finder-list-item\n                      [location]=\"location\"\n                      [locationIndex]=\"i\"\n                      [displayDistance]=\"useMylocation\"\n                      [useClickEvent]=\"true\"\n                      (storeItemClick)=\"\n                        centerStoreOnMapByIndex($event, location)\n                      \"\n                      [listOrderLabel]=\"\n                        i +\n                        locations.pagination.currentPage *\n                          locations.pagination.pageSize +\n                        1\n                      \"\n                    ></cx-store-finder-list-item>\n                  </li>\n                </ol>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template [ngSwitchCase]=\"displayModes.MAP_VIEW\">\n            <div\n              id=\"tab-mapView-panel\"\n              role=\"tabpanel\"\n              aria-labelledby=\"tab-mapView\"\n            >\n              <div class=\"cx-map-col\">\n                <cx-store-finder-map\n                  #storeMap\n                  [locations]=\"\n                    selectedStore ? [selectedStore] : locations.stores\n                  \"\n                  (selectedStoreItem)=\"selectStoreItemList($event)\"\n                ></cx-store-finder-map>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <!-- mobile tabs end -->\n\n    <div *ngIf=\"!locations?.stores\" class=\"row\">\n      <div class=\"col-md-12 cx-not-found\">\n        {{ 'storeFinder.noStoreFound' | cxTranslate }}\n      </div>\n    </div>\n  </div>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "component", type: i3.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "component", type: i4.StoreFinderMapComponent, selector: "cx-store-finder-map", inputs: ["locations"], outputs: ["selectedStoreItem"] }, { kind: "component", type: i5.StoreFinderListItemComponent, selector: "cx-store-finder-list-item", inputs: ["locationIndex", "listOrderLabel", "displayDistance", "useClickEvent"], outputs: ["storeItemClick"] }, { kind: "component", type: i6.StoreFinderStoreDescriptionComponent, selector: "cx-store-finder-store-description", inputs: ["location", "disableMap"] }, { kind: "component", type: i7.StoreFinderPaginationDetailsComponent, selector: "cx-store-finder-pagination-details", inputs: ["pagination"] }, { kind: "pipe", type: i2.KeyValuePipe, name: "keyvalue" }, { kind: "pipe", type: i8.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: StoreFinderListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-store-finder-list', template: "<ng-container *ngIf=\"locations\">\n  <div class=\"container mb-2\" aria-atomic=\"true\" aria-live=\"assertive\">\n    <div class=\"row\" *ngIf=\"locations?.pagination\">\n      <div class=\"col-md-12\">\n        <cx-store-finder-pagination-details\n          [pagination]=\"locations.pagination\"\n        ></cx-store-finder-pagination-details>\n      </div>\n      <div class=\"text-left cx-back-wrapper\">\n        <div class=\"cx-visually-hidden\">\n          {{ storeDetails?.displayName }}\n        </div>\n        <button\n          class=\"btn btn-block btn-secondary cx-back\"\n          *ngIf=\"isDetailsModeVisible\"\n          (click)=\"hideStoreDetails()\"\n        >\n          <cx-icon [type]=\"iconTypes.CARET_LEFT\"></cx-icon>\n          {{ 'storeFinder.back' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <div *ngIf=\"locations?.stores\" class=\"row cx-columns\">\n      <div class=\"col-md-4 cx-address-col\">\n        <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\n          <cx-store-finder-store-description\n            [location]=\"storeDetails\"\n            [disableMap]=\"true\"\n          ></cx-store-finder-store-description>\n        </div>\n        <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\n          <li\n            *ngFor=\"let location of locations?.stores; let i = index\"\n            id=\"{{ 'item-' + i }}\"\n            [ngClass]=\"{\n              'cx-selected-item': selectedStoreIndex === i\n            }\"\n            class=\"cx-list-items\"\n          >\n            <cx-store-finder-list-item\n              [location]=\"location\"\n              [locationIndex]=\"i\"\n              [displayDistance]=\"useMylocation\"\n              [useClickEvent]=\"true\"\n              (storeItemClick)=\"centerStoreOnMapByIndex($event, location)\"\n              [listOrderLabel]=\"\n                i +\n                locations.pagination.currentPage *\n                  locations.pagination.pageSize +\n                1\n              \"\n            ></cx-store-finder-list-item>\n          </li>\n        </ol>\n      </div>\n      <div class=\"col-md-8 cx-map-col\">\n        <cx-store-finder-map\n          #storeMap\n          [locations]=\"locations.stores\"\n          (selectedStoreItem)=\"selectStoreItemList($event)\"\n        ></cx-store-finder-map>\n      </div>\n    </div>\n\n    <!-- mobile tabs for column set only -->\n    <div *ngIf=\"locations?.stores\" class=\"cx-columns-mobile\">\n      <ul class=\"nav cx-nav\" role=\"tablist\">\n        <li\n          class=\"nav-item cx-nav-item\"\n          *ngFor=\"let mode of displayModes | keyvalue\"\n        >\n          <button\n            [id]=\"'tab-' + mode?.value\"\n            role=\"tab\"\n            [ngClass]=\"{\n              'nav-link': true,\n              active: isDisplayModeActive(mode?.value)\n            }\"\n            [attr.aria-controls]=\"'tab-' + mode?.value + '-panel'\"\n            [attr.aria-selected]=\"isDisplayModeActive(mode?.value)\"\n            aria-disabled=\"false\"\n            (click)=\"setDisplayMode(mode?.value)\"\n          >\n            {{ 'storeFinder.' + mode?.value | cxTranslate }}\n          </button>\n        </li>\n      </ul>\n      <div class=\"tab-content\">\n        <div [ngSwitch]=\"activeDisplayMode\">\n          <ng-template [ngSwitchCase]=\"displayModes.LIST_VIEW\">\n            <div\n              id=\"tab-listView-panel\"\n              role=\"tabpanel\"\n              aria-labelledby=\"tab-listView\"\n            >\n              <div class=\"cx-address-col\">\n                <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\n                  <cx-store-finder-store-description\n                    [location]=\"storeDetails\"\n                    [disableMap]=\"true\"\n                  ></cx-store-finder-store-description>\n                </div>\n                <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\n                  <li\n                    *ngFor=\"let location of locations?.stores; let i = index\"\n                    id=\"{{ 'item-' + i }}\"\n                    [ngClass]=\"{\n                      'cx-selected-item': selectedStoreIndex === i\n                    }\"\n                    class=\"cx-list-items\"\n                  >\n                    <cx-store-finder-list-item\n                      [location]=\"location\"\n                      [locationIndex]=\"i\"\n                      [displayDistance]=\"useMylocation\"\n                      [useClickEvent]=\"true\"\n                      (storeItemClick)=\"\n                        centerStoreOnMapByIndex($event, location)\n                      \"\n                      [listOrderLabel]=\"\n                        i +\n                        locations.pagination.currentPage *\n                          locations.pagination.pageSize +\n                        1\n                      \"\n                    ></cx-store-finder-list-item>\n                  </li>\n                </ol>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template [ngSwitchCase]=\"displayModes.MAP_VIEW\">\n            <div\n              id=\"tab-mapView-panel\"\n              role=\"tabpanel\"\n              aria-labelledby=\"tab-mapView\"\n            >\n              <div class=\"cx-map-col\">\n                <cx-store-finder-map\n                  #storeMap\n                  [locations]=\"\n                    selectedStore ? [selectedStore] : locations.stores\n                  \"\n                  (selectedStoreItem)=\"selectStoreItemList($event)\"\n                ></cx-store-finder-map>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <!-- mobile tabs end -->\n\n    <div *ngIf=\"!locations?.stores\" class=\"row\">\n      <div class=\"col-md-12 cx-not-found\">\n        {{ 'storeFinder.noStoreFound' | cxTranslate }}\n      </div>\n    </div>\n  </div>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.StoreFinderService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; }, propDecorators: { locations: [{
                type: Input
            }], useMylocation: [{
                type: Input
            }], storeMap: [{
                type: ViewChild,
                args: ['storeMap']
            }] } });
//# sourceMappingURL=data:application/json;base64,