/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { BehaviorSubject, of } from 'rxjs';
import { distinctUntilChanged, switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "./page-layout.service";
import * as i2 from "@angular/common";
import * as i3 from "../../outlet/outlet.directive";
import * as i4 from "../slot/page-slot.component";
import * as i5 from "./page-template.directive";
export class PageLayoutComponent {
    set section(value) {
        this.section$.next(value);
    }
    constructor(pageLayoutService) {
        this.pageLayoutService = pageLayoutService;
        this.section$ = new BehaviorSubject(undefined);
        this.templateName$ = this.pageLayoutService.templateName$;
        this.layoutName$ = this.section$.pipe(switchMap((section) => (section ? of(section) : this.templateName$)));
        this.slots$ = this.section$.pipe(switchMap((section) => this.pageLayoutService.getSlots(section)));
        this.pageFoldSlot$ = this.templateName$.pipe(switchMap((templateName) => this.pageLayoutService.getPageFoldSlot(templateName)), distinctUntilChanged());
    }
}
PageLayoutComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: PageLayoutComponent, deps: [{ token: i1.PageLayoutService }], target: i0.ɵɵFactoryTarget.Component });
PageLayoutComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: PageLayoutComponent, selector: "cx-page-layout", inputs: { section: "section" }, ngImport: i0, template: "<ng-template\n  *ngIf=\"layoutName$ | async as layoutName\"\n  [cxPageTemplateStyle]=\"layoutName\"\n  [cxOutlet]=\"layoutName\"\n  [cxOutletContext]=\"{\n    templateName$: templateName$,\n    slots$: slots$,\n    section$: section$\n  }\"\n>\n  <ng-content></ng-content>\n\n  <cx-page-slot\n    *ngFor=\"let slot of slots$ | async\"\n    [position]=\"slot\"\n    [isPageFold]=\"slot === (pageFoldSlot$ | async)\"\n  ></cx-page-slot>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer", "cxComponentRef"], outputs: ["loaded", "cxComponentRefChange"] }, { kind: "component", type: i4.PageSlotComponent, selector: "cx-page-slot,[cx-page-slot]", inputs: ["position", "class", "isPageFold", "hasComponents"] }, { kind: "directive", type: i5.PageTemplateDirective, selector: "[cxPageTemplateStyle]", inputs: ["cxPageTemplateStyle"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: PageLayoutComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-page-layout', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template\n  *ngIf=\"layoutName$ | async as layoutName\"\n  [cxPageTemplateStyle]=\"layoutName\"\n  [cxOutlet]=\"layoutName\"\n  [cxOutletContext]=\"{\n    templateName$: templateName$,\n    slots$: slots$,\n    section$: section$\n  }\"\n>\n  <ng-content></ng-content>\n\n  <cx-page-slot\n    *ngFor=\"let slot of slots$ | async\"\n    [position]=\"slot\"\n    [isPageFold]=\"slot === (pageFoldSlot$ | async)\"\n  ></cx-page-slot>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.PageLayoutService }]; }, propDecorators: { section: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1sYXlvdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RvcmVmcm9udGxpYi9jbXMtc3RydWN0dXJlL3BhZ2UvcGFnZS1sYXlvdXQvcGFnZS1sYXlvdXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RvcmVmcm9udGxpYi9jbXMtc3RydWN0dXJlL3BhZ2UvcGFnZS1sYXlvdXQvcGFnZS1sYXlvdXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFFLE9BQU8sRUFBRSxlQUFlLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7OztBQVFqRSxNQUFNLE9BQU8sbUJBQW1CO0lBQzlCLElBQWEsT0FBTyxDQUFDLEtBQWE7UUFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQXNCRCxZQUFzQixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQXJCakQsYUFBUSxHQUFHLElBQUksZUFBZSxDQUFxQixTQUFTLENBQUMsQ0FBQztRQUU5RCxrQkFBYSxHQUNwQixJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxDQUFDO1FBRTlCLGdCQUFXLEdBQXVCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUMzRCxTQUFTLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUNyRSxDQUFDO1FBRU8sV0FBTSxHQUF5QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDeEQsU0FBUyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQ2pFLENBQUM7UUFFTyxrQkFBYSxHQUNwQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FDckIsU0FBUyxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FDekIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsQ0FDckQsRUFDRCxvQkFBb0IsRUFBRSxDQUN2QixDQUFDO0lBRXlELENBQUM7O2dIQXpCbkQsbUJBQW1CO29HQUFuQixtQkFBbUIsc0ZDaEJoQyxzY0FrQkE7MkZERmEsbUJBQW1CO2tCQUwvQixTQUFTOytCQUNFLGdCQUFnQixtQkFFVCx1QkFBdUIsQ0FBQyxNQUFNO3dHQUdsQyxPQUFPO3NCQUFuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRpc3RpbmN0VW50aWxDaGFuZ2VkLCBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBQYWdlTGF5b3V0U2VydmljZSB9IGZyb20gJy4vcGFnZS1sYXlvdXQuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LXBhZ2UtbGF5b3V0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BhZ2UtbGF5b3V0LmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFBhZ2VMYXlvdXRDb21wb25lbnQge1xuICBASW5wdXQoKSBzZXQgc2VjdGlvbih2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5zZWN0aW9uJC5uZXh0KHZhbHVlKTtcbiAgfVxuICByZWFkb25seSBzZWN0aW9uJCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8c3RyaW5nIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG4gIHJlYWRvbmx5IHRlbXBsYXRlTmFtZSQ6IE9ic2VydmFibGU8c3RyaW5nPiA9XG4gICAgdGhpcy5wYWdlTGF5b3V0U2VydmljZS50ZW1wbGF0ZU5hbWUkO1xuXG4gIHJlYWRvbmx5IGxheW91dE5hbWUkOiBPYnNlcnZhYmxlPHN0cmluZz4gPSB0aGlzLnNlY3Rpb24kLnBpcGUoXG4gICAgc3dpdGNoTWFwKChzZWN0aW9uKSA9PiAoc2VjdGlvbiA/IG9mKHNlY3Rpb24pIDogdGhpcy50ZW1wbGF0ZU5hbWUkKSlcbiAgKTtcblxuICByZWFkb25seSBzbG90cyQ6IE9ic2VydmFibGU8c3RyaW5nW10+ID0gdGhpcy5zZWN0aW9uJC5waXBlKFxuICAgIHN3aXRjaE1hcCgoc2VjdGlvbikgPT4gdGhpcy5wYWdlTGF5b3V0U2VydmljZS5nZXRTbG90cyhzZWN0aW9uKSlcbiAgKTtcblxuICByZWFkb25seSBwYWdlRm9sZFNsb3QkOiBPYnNlcnZhYmxlPHN0cmluZyB8IHVuZGVmaW5lZD4gPVxuICAgIHRoaXMudGVtcGxhdGVOYW1lJC5waXBlKFxuICAgICAgc3dpdGNoTWFwKCh0ZW1wbGF0ZU5hbWUpID0+XG4gICAgICAgIHRoaXMucGFnZUxheW91dFNlcnZpY2UuZ2V0UGFnZUZvbGRTbG90KHRlbXBsYXRlTmFtZSlcbiAgICAgICksXG4gICAgICBkaXN0aW5jdFVudGlsQ2hhbmdlZCgpXG4gICAgKTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcGFnZUxheW91dFNlcnZpY2U6IFBhZ2VMYXlvdXRTZXJ2aWNlKSB7fVxufVxuIiwiPG5nLXRlbXBsYXRlXG4gICpuZ0lmPVwibGF5b3V0TmFtZSQgfCBhc3luYyBhcyBsYXlvdXROYW1lXCJcbiAgW2N4UGFnZVRlbXBsYXRlU3R5bGVdPVwibGF5b3V0TmFtZVwiXG4gIFtjeE91dGxldF09XCJsYXlvdXROYW1lXCJcbiAgW2N4T3V0bGV0Q29udGV4dF09XCJ7XG4gICAgdGVtcGxhdGVOYW1lJDogdGVtcGxhdGVOYW1lJCxcbiAgICBzbG90cyQ6IHNsb3RzJCxcbiAgICBzZWN0aW9uJDogc2VjdGlvbiRcbiAgfVwiXG4+XG4gIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblxuICA8Y3gtcGFnZS1zbG90XG4gICAgKm5nRm9yPVwibGV0IHNsb3Qgb2Ygc2xvdHMkIHwgYXN5bmNcIlxuICAgIFtwb3NpdGlvbl09XCJzbG90XCJcbiAgICBbaXNQYWdlRm9sZF09XCJzbG90ID09PSAocGFnZUZvbGRTbG90JCB8IGFzeW5jKVwiXG4gID48L2N4LXBhZ2Utc2xvdD5cbjwvbmctdGVtcGxhdGU+XG4iXX0=