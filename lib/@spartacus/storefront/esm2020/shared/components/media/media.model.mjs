/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * Indicates how the browser should load the image.
 *
 * While this might not add too much value in some scenarios, as we have other
 * optimizations to defer loading of larger pieces of the DOM, there might be
 * components who haven't implemented other lazy loading techniques. Moreover,
 * a server sides rendered page that lands directly in the browser could benefit
 * enormously from the lazy loading of images.
 */
export var ImageLoadingStrategy;
(function (ImageLoadingStrategy) {
    /**
     * Loads the image immediately, regardless of whether or not the image
     * is currently within the visible viewport (this is the default value).
     */
    ImageLoadingStrategy["EAGER"] = "eager";
    /**
     * Defers loading the image until it reaches a calculated distance from the viewport,
     * as defined by the browser. The intent is to avoid the network and storage bandwidth
     * needed to handle the image until it's reasonably certain that it will be needed.
     * This generally improves the performance of the content in most typical use cases.
     */
    ImageLoadingStrategy["LAZY"] = "lazy";
})(ImageLoadingStrategy || (ImageLoadingStrategy = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVkaWEubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NoYXJlZC9jb21wb25lbnRzL21lZGlhL21lZGlhLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFpREg7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQU4sSUFBWSxvQkFhWDtBQWJELFdBQVksb0JBQW9CO0lBQzlCOzs7T0FHRztJQUNILHVDQUFlLENBQUE7SUFDZjs7Ozs7T0FLRztJQUNILHFDQUFhLENBQUE7QUFDZixDQUFDLEVBYlcsb0JBQW9CLEtBQXBCLG9CQUFvQixRQWEvQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBNZWRpYSB7XG4gIC8qKlxuICAgKiBJZGVudGlmeSB0aGUg4oCcZGVmYXVsdOKAnSBpbWFnZSBVUkwgd2hpY2ggaXMgdXNlZCBpbiBjYXNlIHRoZSBzcmNzZXQgaXMgbm90IHNwZWNpZmllZC5cbiAgICogQnJvd3NlcnMgd2l0aG91dCBzcmNzZXQgc3VwcG9ydCB3aWxsIGFsc28gZmFsbGJhY2sgdG8gdGhpcyBVUmwuXG4gICAqL1xuICBzcmM6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHNyY3NldCBhdHRyaWJ1dGUgaG9sZHMgYSBsaXN0IG9mIGltYWdlIGZpbGUgVVJMcywgYWxvbmcgd2l0aCBzaXplIGRlc2NyaXB0aW9ucy5cbiAgICovXG4gIHNyY3NldD86IHN0cmluZztcblxuICAvKipcbiAgICogUHJvdmlkZXMgYWx0ZXJuYXRpdmUgaW5mb3JtYXRpb24gZm9yIGEgbWVkaWEgaWYgYSB1c2VyIGNhbm5vdCB2aWV3IHRoZSB2aXN1YWwuIEl0IGlzXG4gICAqIGFsc28gdXNlZCBieSB3ZWIgY3Jhd2xlcnMgYW5kIHNjcmVlbiByZWFkZXJzLlxuICAgKi9cbiAgYWx0Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBEZXNjcmliZXMgdGhlIHJvbGUgb2YgYW4gZWxlbWVudCBpbiBwcm9ncmFtcyB0aGF0IGNhbiBtYWtlIHVzZSBvZiBpdCwgc3VjaCBhcyBzY3JlZW5cbiAgICogcmVhZGVycyBvciBtYWduaWZpZXJzXG4gICAqL1xuICByb2xlPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIENvbnRhaW5zIG11bHRpcGxlIG1lZGlhIGZvciBkaWZmZXJlbnQgZm9ybWF0c1xuICovXG5leHBvcnQgaW50ZXJmYWNlIE1lZGlhQ29udGFpbmVyIHtcbiAgW2Zvcm1hdDogc3RyaW5nXTogSW1hZ2U7XG59XG5cbi8qKlxuICogU3BlY2lmaWVzIG1lZGlhIHNpemUgaW5mb3JtYXRpb24gdGhhdCBjYW4gYmUgdXNlZCB0byBnZW5lcmF0ZSBpbmZvcm1hdGlvbiBmb3IgdGhlXG4gKiBicm93c2VyIHRvIHJlc29sdmUgdGhlIHJpZ2h0IG1lZGlhIGZvciB0aGUgcmlnaHQgbGF5b3V0IG9yIGRldmljZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNZWRpYUZvcm1hdFNpemUge1xuICAvKipcbiAgICogU3BlY2lmaWVzIHRoZSB3aWR0aCBmb3IgYSBnaXZlbiBtZWRpYSBmb3JtYXQuIFRoZSBtZWRpYSBmb3JtYXQgd2lkdGggaXMgdXNlZFxuICAgKiB0byBhbGlnbiB0aGUgd2lkdGggb2YgdGhlIG1lZGlhIHdpdGggdGhlIGF2YWlsYWJsZSBzaXplIGluIHRoZSBsYXlvdXQsIHNvIHRoYXRcbiAgICogZGlmZmVyZW50IG1lZGlhJ3MgY2FuIGJlIHVzZWQgaW4gYSByZXNwb25zaXZlIGxheW91dC5cbiAgICovXG4gIHdpZHRoPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIEluZGljYXRlcyBob3cgdGhlIGJyb3dzZXIgc2hvdWxkIGxvYWQgdGhlIGltYWdlLlxuICpcbiAqIFdoaWxlIHRoaXMgbWlnaHQgbm90IGFkZCB0b28gbXVjaCB2YWx1ZSBpbiBzb21lIHNjZW5hcmlvcywgYXMgd2UgaGF2ZSBvdGhlclxuICogb3B0aW1pemF0aW9ucyB0byBkZWZlciBsb2FkaW5nIG9mIGxhcmdlciBwaWVjZXMgb2YgdGhlIERPTSwgdGhlcmUgbWlnaHQgYmVcbiAqIGNvbXBvbmVudHMgd2hvIGhhdmVuJ3QgaW1wbGVtZW50ZWQgb3RoZXIgbGF6eSBsb2FkaW5nIHRlY2huaXF1ZXMuIE1vcmVvdmVyLFxuICogYSBzZXJ2ZXIgc2lkZXMgcmVuZGVyZWQgcGFnZSB0aGF0IGxhbmRzIGRpcmVjdGx5IGluIHRoZSBicm93c2VyIGNvdWxkIGJlbmVmaXRcbiAqIGVub3Jtb3VzbHkgZnJvbSB0aGUgbGF6eSBsb2FkaW5nIG9mIGltYWdlcy5cbiAqL1xuZXhwb3J0IGVudW0gSW1hZ2VMb2FkaW5nU3RyYXRlZ3kge1xuICAvKipcbiAgICogTG9hZHMgdGhlIGltYWdlIGltbWVkaWF0ZWx5LCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgb3Igbm90IHRoZSBpbWFnZVxuICAgKiBpcyBjdXJyZW50bHkgd2l0aGluIHRoZSB2aXNpYmxlIHZpZXdwb3J0ICh0aGlzIGlzIHRoZSBkZWZhdWx0IHZhbHVlKS5cbiAgICovXG4gIEVBR0VSID0gJ2VhZ2VyJyxcbiAgLyoqXG4gICAqIERlZmVycyBsb2FkaW5nIHRoZSBpbWFnZSB1bnRpbCBpdCByZWFjaGVzIGEgY2FsY3VsYXRlZCBkaXN0YW5jZSBmcm9tIHRoZSB2aWV3cG9ydCxcbiAgICogYXMgZGVmaW5lZCBieSB0aGUgYnJvd3Nlci4gVGhlIGludGVudCBpcyB0byBhdm9pZCB0aGUgbmV0d29yayBhbmQgc3RvcmFnZSBiYW5kd2lkdGhcbiAgICogbmVlZGVkIHRvIGhhbmRsZSB0aGUgaW1hZ2UgdW50aWwgaXQncyByZWFzb25hYmx5IGNlcnRhaW4gdGhhdCBpdCB3aWxsIGJlIG5lZWRlZC5cbiAgICogVGhpcyBnZW5lcmFsbHkgaW1wcm92ZXMgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBjb250ZW50IGluIG1vc3QgdHlwaWNhbCB1c2UgY2FzZXMuXG4gICAqL1xuICBMQVpZID0gJ2xhenknLFxufVxuIl19