/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { GlobalMessageType, } from '@spartacus/core';
import { combineLatest } from 'rxjs';
import { map, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "../../../shared/components/assistive-technology-message/assistive-technology-message.directive";
import * as i3 from "@angular/common";
import * as i4 from "../../../shared/components/list-navigation/sorting/sorting.component";
import * as i5 from "../../../shared/components/list-navigation/pagination/pagination.component";
import * as i6 from "../../../shared/components/media/media.component";
import * as i7 from "../../../shared/components/spinner/spinner.component";
import * as i8 from "@angular/router";
export class MyInterestsComponent {
    constructor(productInterestService, translationService, productService, globalMessageService) {
        this.productInterestService = productInterestService;
        this.translationService = translationService;
        this.productService = productService;
        this.globalMessageService = globalMessageService;
        this.DEFAULT_PAGE_SIZE = 10;
        this.sortMapping = {
            byNameAsc: 'name:asc',
            byNameDesc: 'name:desc',
        };
        this.sortChanged = false;
        this.sort = 'byNameAsc';
        this.sortOptions = [
            {
                code: 'byNameAsc',
                selected: false,
            },
            {
                code: 'byNameDesc',
                selected: false,
            },
        ];
    }
    ngOnInit() {
        this.interests$ = this.productInterestService
            .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)
            .pipe(tap((interests) => (this.pagination = {
            currentPage: interests.pagination?.page,
            pageSize: interests.pagination?.count,
            totalPages: interests.pagination?.totalPages,
            totalResults: interests.pagination?.totalCount,
            sort: 'byNameAsc',
        })), tap(() => {
            if (this.sortChanged) {
                this.sortChanged = false;
                this.globalMessageService?.add({ key: 'sorting.pageViewUpdated' }, GlobalMessageType.MSG_TYPE_ASSISTIVE, 500);
            }
        }), map((interest) => ({
            ...interest,
            results: interest.results
                ? interest.results.map((result) => ({
                    ...result,
                    product$: this.getProduct(result),
                }))
                : interest.results,
        })));
        this.getInterestsloading$ =
            this.productInterestService.getProdutInterestsLoading();
        this.isRemoveDisabled$ = combineLatest([
            this.getInterestsloading$,
            this.productInterestService.getRemoveProdutInterestLoading(),
        ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));
        this.sortLabels = this.getSortLabels();
    }
    getSortLabels() {
        return combineLatest([
            this.translationService.translate('myInterests.sorting.byNameAsc'),
            this.translationService.translate('myInterests.sorting.byNameDesc'),
        ]).pipe(map(([asc, desc]) => {
            return {
                byNameAsc: asc,
                byNameDesc: desc,
            };
        }));
    }
    getProduct(interest) {
        return this.productService.get(interest.product?.code ?? '', "details" /* ProductScope.DETAILS */);
    }
    removeInterest(relation) {
        this.productInterestService.removeProdutInterest({
            product: relation.product,
            productInterestEntry: relation.productInterestEntry,
        });
    }
    sortChange(sort) {
        this.sort = sort;
        this.sortChanged = true;
        this.productInterestService.loadProductInterests(this.DEFAULT_PAGE_SIZE, 0, this.sortMapping[sort]);
    }
    pageChange(page) {
        this.productInterestService.loadProductInterests(this.DEFAULT_PAGE_SIZE, page, this.sortMapping[this.sort]);
    }
    ngOnDestroy() {
        this.productInterestService.clearProductInterests();
        this.productInterestService.resetRemoveInterestState();
    }
}
MyInterestsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: MyInterestsComponent, deps: [{ token: i1.UserInterestsService }, { token: i1.TranslationService }, { token: i1.ProductService }, { token: i1.GlobalMessageService }], target: i0.ɵɵFactoryTarget.Component });
MyInterestsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: MyInterestsComponent, selector: "cx-my-interests", ngImport: i0, template: "<div *ngIf=\"interests$ | async as interests\" class=\"container\">\n  <div class=\"cx-product-interests-title\">\n    <h2>{{ 'myInterests.header' | cxTranslate }}</h2>\n  </div>\n  <div\n    class=\"cx-product-interests-body\"\n    *ngIf=\"!(getInterestsloading$ | async); else loading\"\n  >\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container\n      *ngIf=\"\n        interests.pagination &&\n          interests.pagination.totalCount &&\n          interests.pagination.totalCount > 0;\n        else noInterest\n      \"\n    >\n      <div class=\"cx-product-interests-sort top row\">\n        <label\n          class=\"\n            cx-product-interests-form-group\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n            [ariaLabel]=\"'myInterests.sortInterests' | cxTranslate\"\n            ariaControls=\"product-interests-table\"\n          >\n          </cx-sorting>\n        </label>\n        <div\n          class=\"\n            cx-product-interests-pagination cx-product-interests-thead-mobile\n          \"\n        >\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n\n      <table\n        id=\"product-interests-table\"\n        class=\"table cx-product-interests-table cx-product-interests-table-list\"\n      >\n        <caption class=\"cx-visually-hidden\">\n          {{\n            'myInterests.caption' | cxTranslate\n          }}\n        </caption>\n        <thead\n          class=\"cx-product-interests-thead-mobile cx-product-interests-header\"\n        >\n          <th role=\"columnheader\">\n            {{ 'myInterests.item' | cxTranslate }}\n          </th>\n          <th role=\"columnheader\">\n            {{ 'myInterests.price' | cxTranslate }}\n          </th>\n          <th role=\"columnheader\">\n            {{ 'myInterests.notifications' | cxTranslate }}\n          </th>\n          <th srole=\"columnheader\">\n            {{ 'myInterests.actions' | cxTranslate }}\n          </th>\n        </thead>\n        <tbody>\n          <tr\n            *ngFor=\"let interest of interests.results\"\n            class=\"cx-product-interests-product-item\"\n            role=\"row\"\n          >\n            <ng-container *ngIf=\"interest.product$ | async as product\">\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-cell-wrapper\">\n                  <div class=\"cx-product-interests-label\">\n                    <a\n                      class=\"cx-product-interests-product-image-link\"\n                      tabindex=\"-1\"\n                      [routerLink]=\"\n                        { cxRoute: 'product', params: product } | cxUrl\n                      \"\n                    >\n                      <cx-media\n                        [container]=\"product.images?.PRIMARY\"\n                        format=\"thumbnail\"\n                      ></cx-media>\n                    </a>\n                  </div>\n\n                  <div class=\"cx-info col-10\">\n                    <div class=\"cx-info-container row\">\n                      <div>\n                        <div *ngIf=\"product.name\" class=\"cx-name\">\n                          <a\n                            class=\"\n                              cx-link cx-product-interests-product-code-link\n                            \"\n                            [routerLink]=\"\n                              { cxRoute: 'product', params: product } | cxUrl\n                            \"\n                          >\n                            {{ product.name }}\n                          </a>\n                        </div>\n                        <div *ngIf=\"product.code\" class=\"cx-code\">\n                          <span>{{\n                            'myInterests.productId'\n                              | cxTranslate: { code: product.code }\n                          }}</span>\n                        </div>\n\n                        <ng-container\n                          *ngFor=\"let baseOptions of product.baseOptions\"\n                        >\n                          <div\n                            *ngFor=\"\n                              let variant of baseOptions.selected\n                                ?.variantOptionQualifiers\n                            \"\n                            class=\"cx-property\"\n                          >\n                            <div\n                              class=\"cx-label cx-product-interests-variant-name\"\n                            >\n                              {{ variant.name }}\n                            </div>\n                            <div\n                              class=\"\n                                cx-value cx-product-interests-variant-value\n                              \"\n                            >\n                              {{ variant.value }}\n                            </div>\n                          </div>\n                        </ng-container>\n                        <div\n                          class=\"cx-property\"\n                          *ngIf=\"\n                            product.stock?.stockLevelStatus === 'outOfStock'\n                          \"\n                        >\n                          <div\n                            class=\"cx-label cx-product-interests-product-stock\"\n                          >\n                            {{ 'myInterests.outOfStock' | cxTranslate }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-product-price\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.price' | cxTranslate }}\n                  </div>\n                  <span>{{ product.price?.formattedValue }}</span>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-subscriptions\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.notifications' | cxTranslate }}\n                  </div>\n                  <div\n                    class=\"cx-product-interests-notification\"\n                    *ngFor=\"let interestEntry of interest.productInterestEntry\"\n                  >\n                    <span class=\"cx-product-interests-type\">\n                      {{\n                        'myInterests.' + interestEntry.interestType\n                          | cxTranslate\n                      }}\n                    </span>\n                    <span class=\"cx-product-interests-expiration-date\">\n                      {{\n                        'myInterests.expirationDate'\n                          | cxTranslate\n                            : {\n                                expirationDate:\n                                  interestEntry.expirationDate | cxDate\n                              }\n                      }}\n                    </span>\n                  </div>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-actions cx-product-interests-remove-button\">\n                  <button\n                    type=\"button\"\n                    class=\"\n                      cx-product-interests-remove-btn\n                      link\n                      cx-action-link cx-remove-btn\n                    \"\n                    [cxAtMessage]=\"'myInterests.itemRemoved' | cxTranslate\"\n                    [disabled]=\"isRemoveDisabled$ | async\"\n                    (click)=\"removeInterest(interest)\"\n                  >\n                    {{ 'myInterests.remove' | cxTranslate }}\n                  </button>\n                </div>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"cx-product-interests-sort bottom row\">\n        <label\n          class=\"\n            cx-product-interests-form-group cx-product-interests-thead-mobile\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n            [ariaLabel]=\"'myInterests.sortInterests' | cxTranslate\"\n            ariaControls=\"product-interests-table\"\n          >\n          </cx-sorting>\n        </label>\n        <div class=\"cx-product-interests-pagination\">\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n<ng-template #noInterest>\n  <div class=\"cx-product-interests-message\">\n    {{ 'myInterests.noInterests' | cxTranslate }}\n  </div>\n</ng-template>\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i2.AtMessageDirective, selector: "[cxAtMessage]", inputs: ["cxAtMessage"] }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.SortingComponent, selector: "cx-sorting", inputs: ["sortOptions", "ariaControls", "ariaLabel", "selectedOption", "placeholder", "sortLabels"], outputs: ["sortListEvent"] }, { kind: "component", type: i5.PaginationComponent, selector: "cx-pagination", inputs: ["pageRoute", "queryParam", "defaultPage", "pagination"], outputs: ["viewPageEvent"] }, { kind: "component", type: i6.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { kind: "component", type: i7.SpinnerComponent, selector: "cx-spinner" }, { kind: "directive", type: i8.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i1.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i1.CxDatePipe, name: "cxDate" }, { kind: "pipe", type: i1.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: MyInterestsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-my-interests', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div *ngIf=\"interests$ | async as interests\" class=\"container\">\n  <div class=\"cx-product-interests-title\">\n    <h2>{{ 'myInterests.header' | cxTranslate }}</h2>\n  </div>\n  <div\n    class=\"cx-product-interests-body\"\n    *ngIf=\"!(getInterestsloading$ | async); else loading\"\n  >\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container\n      *ngIf=\"\n        interests.pagination &&\n          interests.pagination.totalCount &&\n          interests.pagination.totalCount > 0;\n        else noInterest\n      \"\n    >\n      <div class=\"cx-product-interests-sort top row\">\n        <label\n          class=\"\n            cx-product-interests-form-group\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n            [ariaLabel]=\"'myInterests.sortInterests' | cxTranslate\"\n            ariaControls=\"product-interests-table\"\n          >\n          </cx-sorting>\n        </label>\n        <div\n          class=\"\n            cx-product-interests-pagination cx-product-interests-thead-mobile\n          \"\n        >\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n\n      <table\n        id=\"product-interests-table\"\n        class=\"table cx-product-interests-table cx-product-interests-table-list\"\n      >\n        <caption class=\"cx-visually-hidden\">\n          {{\n            'myInterests.caption' | cxTranslate\n          }}\n        </caption>\n        <thead\n          class=\"cx-product-interests-thead-mobile cx-product-interests-header\"\n        >\n          <th role=\"columnheader\">\n            {{ 'myInterests.item' | cxTranslate }}\n          </th>\n          <th role=\"columnheader\">\n            {{ 'myInterests.price' | cxTranslate }}\n          </th>\n          <th role=\"columnheader\">\n            {{ 'myInterests.notifications' | cxTranslate }}\n          </th>\n          <th srole=\"columnheader\">\n            {{ 'myInterests.actions' | cxTranslate }}\n          </th>\n        </thead>\n        <tbody>\n          <tr\n            *ngFor=\"let interest of interests.results\"\n            class=\"cx-product-interests-product-item\"\n            role=\"row\"\n          >\n            <ng-container *ngIf=\"interest.product$ | async as product\">\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-cell-wrapper\">\n                  <div class=\"cx-product-interests-label\">\n                    <a\n                      class=\"cx-product-interests-product-image-link\"\n                      tabindex=\"-1\"\n                      [routerLink]=\"\n                        { cxRoute: 'product', params: product } | cxUrl\n                      \"\n                    >\n                      <cx-media\n                        [container]=\"product.images?.PRIMARY\"\n                        format=\"thumbnail\"\n                      ></cx-media>\n                    </a>\n                  </div>\n\n                  <div class=\"cx-info col-10\">\n                    <div class=\"cx-info-container row\">\n                      <div>\n                        <div *ngIf=\"product.name\" class=\"cx-name\">\n                          <a\n                            class=\"\n                              cx-link cx-product-interests-product-code-link\n                            \"\n                            [routerLink]=\"\n                              { cxRoute: 'product', params: product } | cxUrl\n                            \"\n                          >\n                            {{ product.name }}\n                          </a>\n                        </div>\n                        <div *ngIf=\"product.code\" class=\"cx-code\">\n                          <span>{{\n                            'myInterests.productId'\n                              | cxTranslate: { code: product.code }\n                          }}</span>\n                        </div>\n\n                        <ng-container\n                          *ngFor=\"let baseOptions of product.baseOptions\"\n                        >\n                          <div\n                            *ngFor=\"\n                              let variant of baseOptions.selected\n                                ?.variantOptionQualifiers\n                            \"\n                            class=\"cx-property\"\n                          >\n                            <div\n                              class=\"cx-label cx-product-interests-variant-name\"\n                            >\n                              {{ variant.name }}\n                            </div>\n                            <div\n                              class=\"\n                                cx-value cx-product-interests-variant-value\n                              \"\n                            >\n                              {{ variant.value }}\n                            </div>\n                          </div>\n                        </ng-container>\n                        <div\n                          class=\"cx-property\"\n                          *ngIf=\"\n                            product.stock?.stockLevelStatus === 'outOfStock'\n                          \"\n                        >\n                          <div\n                            class=\"cx-label cx-product-interests-product-stock\"\n                          >\n                            {{ 'myInterests.outOfStock' | cxTranslate }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-product-price\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.price' | cxTranslate }}\n                  </div>\n                  <span>{{ product.price?.formattedValue }}</span>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-subscriptions\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.notifications' | cxTranslate }}\n                  </div>\n                  <div\n                    class=\"cx-product-interests-notification\"\n                    *ngFor=\"let interestEntry of interest.productInterestEntry\"\n                  >\n                    <span class=\"cx-product-interests-type\">\n                      {{\n                        'myInterests.' + interestEntry.interestType\n                          | cxTranslate\n                      }}\n                    </span>\n                    <span class=\"cx-product-interests-expiration-date\">\n                      {{\n                        'myInterests.expirationDate'\n                          | cxTranslate\n                            : {\n                                expirationDate:\n                                  interestEntry.expirationDate | cxDate\n                              }\n                      }}\n                    </span>\n                  </div>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-actions cx-product-interests-remove-button\">\n                  <button\n                    type=\"button\"\n                    class=\"\n                      cx-product-interests-remove-btn\n                      link\n                      cx-action-link cx-remove-btn\n                    \"\n                    [cxAtMessage]=\"'myInterests.itemRemoved' | cxTranslate\"\n                    [disabled]=\"isRemoveDisabled$ | async\"\n                    (click)=\"removeInterest(interest)\"\n                  >\n                    {{ 'myInterests.remove' | cxTranslate }}\n                  </button>\n                </div>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"cx-product-interests-sort bottom row\">\n        <label\n          class=\"\n            cx-product-interests-form-group cx-product-interests-thead-mobile\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n            [ariaLabel]=\"'myInterests.sortInterests' | cxTranslate\"\n            ariaControls=\"product-interests-table\"\n          >\n          </cx-sorting>\n        </label>\n        <div class=\"cx-product-interests-pagination\">\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n<ng-template #noInterest>\n  <div class=\"cx-product-interests-message\">\n    {{ 'myInterests.noInterests' | cxTranslate }}\n  </div>\n</ng-template>\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.UserInterestsService }, { type: i1.TranslationService }, { type: i1.ProductService }, { type: i1.GlobalMessageService }]; } });
//# sourceMappingURL=data:application/json;base64,