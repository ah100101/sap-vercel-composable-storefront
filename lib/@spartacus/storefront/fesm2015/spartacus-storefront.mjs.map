{"version":3,"file":"spartacus-storefront.mjs","sources":["../../../projects/storefrontlib/layout/a11y/keyboard-focus/keyboard-focus.model.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/base/base-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/base/base-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/block/block-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/services/select-focus.util.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/keyboard-focus.module.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/focus-testing.module.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/services/index.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/index.ts","../../../projects/storefrontlib/layout/launch-dialog/config/launch-config.ts","../../../projects/storefrontlib/layout/launch-dialog/config/index.ts","../../../projects/storefrontlib/layout/launch-dialog/services/launch-render.strategy.ts","../../../projects/storefrontlib/layout/config/layout-config.ts","../../../projects/storefrontlib/layout/launch-dialog/services/launch-dialog.service.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.html","../../../projects/storefrontlib/layout/launch-dialog/services/inline-render.strategy.ts","../../../projects/storefrontlib/layout/launch-dialog/services/inline-root-render.strategy.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.model.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.service.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet-renderer.service.ts","../../../projects/storefrontlib/layout/loading/intersection.service.ts","../../../projects/storefrontlib/layout/loading/defer-loader.service.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.directive.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.providers.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.module.ts","../../../projects/storefrontlib/cms-structure/outlet/index.ts","../../../projects/storefrontlib/layout/launch-dialog/services/outlet-render.strategy.ts","../../../projects/storefrontlib/layout/launch-dialog/services/routing-render.strategy.ts","../../../projects/storefrontlib/layout/launch-dialog/services/index.ts","../../../projects/storefrontlib/layout/launch-dialog/launch-dialog.module.ts","../../../projects/storefrontlib/layout/launch-dialog/index.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.model.ts","../../../projects/storefrontlib/cms-components/misc/icon/fontawesome-icon.config.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon-loader.service.ts","../../../projects/storefrontlib/layout/direction/config/direction.model.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.component.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.component.html","../../../projects/storefrontlib/cms-components/misc/icon/default-icon.config.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.module.ts","../../../projects/storefrontlib/cms-components/misc/icon/testing/icon-testing.module.ts","../../../projects/storefrontlib/cms-components/misc/icon/index.ts","../../../projects/storefrontlib/shared/components/spinner/spinner.component.ts","../../../projects/storefrontlib/shared/components/spinner/spinner.component.html","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.html","../../../projects/storefrontlib/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.ts","../../../projects/storefrontlib/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.html","../../../projects/storefrontlib/cms-components/anonymous-consent-management/default-anonymous-consent-layout.config.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.html","../../../projects/storefrontlib/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/index.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout-handler.ts","../../../projects/storefrontlib/layout/breakpoint/breakpoint.service.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-features.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-components.service.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.service.ts","../../../projects/storefrontlib/cms-structure/page/component/events/component.event.ts","../../../projects/storefrontlib/cms-structure/page/component/handlers/component-handler.ts","../../../projects/storefrontlib/cms-structure/page/component/services/component-handler.service.ts","../../../projects/storefrontlib/cms-structure/page/model/cms-component-data.ts","../../../projects/storefrontlib/cms-structure/page/component/services/component-data.provider.ts","../../../projects/storefrontlib/cms-structure/page/component/services/cms-injector.service.ts","../../../projects/storefrontlib/cms-structure/page/component/component-wrapper.directive.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.component.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.component.html","../../../projects/storefrontlib/cms-structure/page/page-layout/page-template.directive.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.component.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.component.html","../../../projects/storefrontlib/cms-structure/services/cms-guards.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-routes-impl.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-routes.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-i18n.service.ts","../../../projects/storefrontlib/cms-structure/guards/cms-page-guard.service.ts","../../../projects/storefrontlib/cms-structure/guards/cms-page.guard.ts","../../../projects/storefrontlib/cms-structure/guards/index.ts","../../../projects/storefrontlib/cms-structure/page/component/events/index.ts","../../../projects/storefrontlib/cms-structure/page/component/handlers/default-component.handler.ts","../../../projects/storefrontlib/cms-structure/page/component/handlers/lazy-component.handler.ts","../../../projects/storefrontlib/cms-structure/page/component/handlers/index.ts","../../../projects/storefrontlib/cms-structure/page/component/inner-components-host.directive.ts","../../../projects/storefrontlib/cms-structure/page/component/page-component.module.ts","../../../projects/storefrontlib/cms-structure/page/component/services/index.ts","../../../projects/storefrontlib/cms-structure/page/component/index.ts","../../../projects/storefrontlib/cms-structure/page/model/index.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.module.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.module.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/index.ts","../../../projects/storefrontlib/cms-structure/page/slot/index.ts","../../../projects/storefrontlib/cms-structure/page/index.ts","../../../projects/storefrontlib/cms-structure/pwa/pwa.module-config.ts","../../../projects/storefrontlib/cms-structure/pwa/services/add-to-home-screen.service.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen.component.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.html","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.html","../../../projects/storefrontlib/cms-structure/pwa/pwa.module.ts","../../../projects/storefrontlib/cms-structure/pwa/index.ts","../../../projects/storefrontlib/cms-structure/routing/cms-route/add-cms-route.ts","../../../projects/storefrontlib/cms-structure/routing/cms-route/cms-route.module.ts","../../../projects/storefrontlib/cms-structure/routing/cms-route/index.ts","../../../projects/storefrontlib/cms-structure/routing/default-routing-config.ts","../../../projects/storefrontlib/cms-structure/routing/routing.module.ts","../../../projects/storefrontlib/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","../../../projects/storefrontlib/cms-structure/routing/suffix-routes/index.ts","../../../projects/storefrontlib/cms-structure/routing/index.ts","../../../projects/storefrontlib/cms-structure/seo/page-meta-link.service.ts","../../../projects/storefrontlib/cms-structure/seo/seo-meta.service.ts","../../../projects/storefrontlib/cms-structure/seo/config/default-seo.config.ts","../../../projects/storefrontlib/cms-structure/seo/config/seo.config.ts","../../../projects/storefrontlib/cms-structure/seo/config/index.ts","../../../projects/storefrontlib/cms-structure/seo/html-lang-provider.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/json-ld-script.factory.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/json-ld.directive.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/tokens.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/structured-data.factory.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/structured-data.module.ts","../../../projects/storefrontlib/cms-structure/seo/seo.module.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/breadcrumb/index.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","../../../projects/storefrontlib/cms-components/product/current-product.service.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/index.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/index.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/index.ts","../../../projects/storefrontlib/cms-structure/seo/index.ts","../../../projects/storefrontlib/cms-structure/services/index.ts","../../../projects/storefrontlib/cms-structure/utils/cms-structure.model.ts","../../../projects/storefrontlib/cms-structure/utils/cms-structure.util.ts","../../../projects/storefrontlib/cms-structure/utils/index.ts","../../../projects/storefrontlib/cms-structure/index.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.service.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.component.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.component.html","../../../projects/storefrontlib/cms-components/content/banner-carousel/banner-carousel.component.ts","../../../projects/storefrontlib/cms-components/content/banner-carousel/banner-carousel.component.html","../../../projects/storefrontlib/shared/components/spinner/spinner.module.ts","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-management.component.ts","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-management.component.html","../../../projects/storefrontlib/cms-components/myaccount/consent-management/consent-management.module.ts","../../../projects/storefrontlib/shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module.ts","../../../projects/storefrontlib/shared/components/anonymous-consents-dialog/index.ts","../../../projects/storefrontlib/shared/components/assistive-technology-message/assistive-technology-message.directive.ts","../../../projects/storefrontlib/shared/components/popover/popover.model.ts","../../../projects/storefrontlib/shared/services/positioning/positioning.service.ts","../../../projects/storefrontlib/shared/components/popover/popover.component.ts","../../../projects/storefrontlib/shared/components/popover/popover.component.html","../../../projects/storefrontlib/shared/components/popover/popover.service.ts","../../../projects/storefrontlib/shared/components/popover/popover.directive.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate.pipe.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate-text-popover.component.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate-text-popover.component.html","../../../projects/storefrontlib/shared/components/card/card.component.ts","../../../projects/storefrontlib/shared/components/card/card.component.html","../../../projects/storefrontlib/shared/components/popover/popover.module.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate-text-popover.module.ts","../../../projects/storefrontlib/shared/components/assistive-technology-message/assistive-technology-message.module.ts","../../../projects/storefrontlib/shared/components/card/card.module.ts","../../../projects/storefrontlib/shared/components/card/index.ts","../../../projects/storefrontlib/shared/components/media/media.model.ts","../../../projects/storefrontlib/shared/components/media/media.service.ts","../../../projects/storefrontlib/shared/components/media/media.component.ts","../../../projects/storefrontlib/shared/components/media/media.component.html","../../../projects/storefrontlib/shared/components/media/media.module.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.module.ts","../../../projects/storefrontlib/shared/components/carousel/index.ts","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.service.ts","../../../projects/storefrontlib/shared/components/form/form-errors/form-errors.component.ts","../../../projects/storefrontlib/shared/components/form/form-errors/form-errors.component.html","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.component.ts","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.component.html","../../../projects/storefrontlib/shared/components/form/form-errors/form-errors.module.ts","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.module.ts","../../../projects/storefrontlib/shared/components/form/date-picker/index.ts","../../../projects/storefrontlib/shared/components/form/form-errors/index.ts","../../../projects/storefrontlib/shared/components/form/file-upload/file-upload.component.ts","../../../projects/storefrontlib/shared/components/form/file-upload/file-upload.component.html","../../../projects/storefrontlib/shared/components/form/file-upload/file-upload.module.ts","../../../projects/storefrontlib/shared/components/form/file-upload/index.ts","../../../projects/storefrontlib/shared/components/form/password-visibility-toggle/password-visibility-toggle.component.ts","../../../projects/storefrontlib/shared/components/form/password-visibility-toggle/password-visibility-toggle.component.html","../../../projects/storefrontlib/shared/config/form-config.ts","../../../projects/storefrontlib/shared/components/form/password-visibility-toggle/password-visibility-toggle.directive.ts","../../../projects/storefrontlib/shared/config/default-form-config.ts","../../../projects/storefrontlib/shared/components/form/password-visibility-toggle/password-visibility-toggle.module.ts","../../../projects/storefrontlib/shared/components/form/password-visibility-toggle/index.ts","../../../projects/storefrontlib/shared/components/form/index.ts","../../../projects/storefrontlib/shared/components/generic-link/generic-link-component.service.ts","../../../projects/storefrontlib/shared/components/generic-link/generic-link.component.ts","../../../projects/storefrontlib/shared/components/generic-link/generic-link.component.html","../../../projects/storefrontlib/shared/components/generic-link/generic-link.module.ts","../../../projects/storefrontlib/shared/components/generic-link/index.ts","../../../projects/storefrontlib/shared/components/item-counter/item-counter.component.ts","../../../projects/storefrontlib/shared/components/item-counter/item-counter.component.html","../../../projects/storefrontlib/shared/components/item-counter/item-counter.module.ts","../../../projects/storefrontlib/shared/components/item-counter/index.ts","../../../projects/storefrontlib/shared/components/ng-select-a11y/ng-select-a11y.directive.ts","../../../projects/storefrontlib/shared/components/list-navigation/sorting/sorting.component.ts","../../../projects/storefrontlib/shared/components/list-navigation/sorting/sorting.component.html","../../../projects/storefrontlib/shared/components/ng-select-a11y/ng-select-a11y.module.ts","../../../projects/storefrontlib/shared/components/list-navigation/sorting/sorting.module.ts","../../../projects/storefrontlib/shared/components/list-navigation/sorting/index.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/config/default-pagination.config.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/config/pagination.config.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/config/index.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.model.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.builder.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.component.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.component.html","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.module.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/index.ts","../../../projects/storefrontlib/shared/components/list-navigation/total/total.component.ts","../../../projects/storefrontlib/shared/components/list-navigation/total/total.component.html","../../../projects/storefrontlib/shared/components/list-navigation/total/total.module.ts","../../../projects/storefrontlib/shared/components/list-navigation/total/index.ts","../../../projects/storefrontlib/shared/components/list-navigation/list-navigation.module.ts","../../../projects/storefrontlib/shared/components/list-navigation/index.ts","../../../projects/storefrontlib/shared/components/media/media.config.ts","../../../projects/storefrontlib/shared/components/media/index.ts","../../../projects/storefrontlib/shared/components/popover/index.ts","../../../projects/storefrontlib/shared/components/progress-button/progress-button.component.ts","../../../projects/storefrontlib/shared/components/progress-button/progress-button.component.html","../../../projects/storefrontlib/shared/components/progress-button/progress-button.module.ts","../../../projects/storefrontlib/shared/components/progress-button/index.ts","../../../projects/storefrontlib/shared/components/spinner/index.ts","../../../projects/storefrontlib/shared/components/split-view/split-view.service.ts","../../../projects/storefrontlib/shared/components/split-view/split/split-view.component.ts","../../../projects/storefrontlib/shared/components/split-view/split/split-view.component.html","../../../projects/storefrontlib/shared/components/split-view/view/view.component.ts","../../../projects/storefrontlib/shared/components/split-view/view/view.component.html","../../../projects/storefrontlib/shared/components/split-view/split-view.module.ts","../../../projects/storefrontlib/shared/components/split-view/split/index.ts","../../../projects/storefrontlib/shared/components/split-view/view/index.ts","../../../projects/storefrontlib/shared/components/split-view/index.ts","../../../projects/storefrontlib/cms-components/misc/global-message/global-message.component.ts","../../../projects/storefrontlib/cms-components/misc/global-message/global-message.component.html","../../../projects/storefrontlib/cms-components/misc/global-message/global-message.module.ts","../../../projects/storefrontlib/cms-components/misc/global-message/index.ts","../../../projects/storefrontlib/cms-components/misc/message/message.component.ts","../../../projects/storefrontlib/cms-components/misc/message/message.component.html","../../../projects/storefrontlib/cms-components/misc/message/message.module.ts","../../../projects/storefrontlib/cms-components/misc/message/index.ts","../../../projects/storefrontlib/cms-components/misc/promotions/promotions.component.ts","../../../projects/storefrontlib/cms-components/misc/promotions/promotions.component.html","../../../projects/storefrontlib/cms-components/misc/promotions/promotions.module.ts","../../../projects/storefrontlib/cms-components/misc/promotions/index.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context.model.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-component.service.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-selector.component.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-selector.component.html","../../../projects/storefrontlib/cms-components/misc/site-context-selector/language-currency.component.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-selector.module.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/index.ts","../../../projects/storefrontlib/cms-components/misc/index.ts","../../../projects/storefrontlib/shared/components/star-rating/star-rating.component.ts","../../../projects/storefrontlib/shared/components/star-rating/star-rating.component.html","../../../projects/storefrontlib/shared/components/star-rating/star-rating.module.ts","../../../projects/storefrontlib/shared/components/star-rating/index.ts","../../../projects/storefrontlib/shared/components/table/table-data-cell/table-data-cell.component.ts","../../../projects/storefrontlib/shared/components/table/table-header-cell/table-header-cell.component.ts","../../../projects/storefrontlib/shared/components/table/config/default-table.config.ts","../../../projects/storefrontlib/shared/components/table/config/table.config.ts","../../../projects/storefrontlib/shared/components/table/table-data-cell/table-data-cell.module.ts","../../../projects/storefrontlib/shared/components/table/table-header-cell/table-header-cell.module.ts","../../../projects/storefrontlib/shared/components/table/table-renderer.service.ts","../../../projects/storefrontlib/shared/components/table/table.model.ts","../../../projects/storefrontlib/shared/components/table/table.component.ts","../../../projects/storefrontlib/shared/components/table/table.component.html","../../../projects/storefrontlib/shared/components/table/table.module.ts","../../../projects/storefrontlib/shared/components/table/table.service.ts","../../../projects/storefrontlib/shared/components/table/index.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/index.ts","../../../projects/storefrontlib/shared/components/ng-select-a11y/index.ts","../../../projects/storefrontlib/shared/components/assistive-technology-message/index.ts","../../../projects/storefrontlib/shared/services/file/files-form-validators.ts","../../../projects/storefrontlib/shared/components/chat-messaging/avatar/avatar.component.ts","../../../projects/storefrontlib/shared/components/chat-messaging/avatar/avatar.component.html","../../../projects/storefrontlib/shared/components/chat-messaging/messaging/messaging.component.ts","../../../projects/storefrontlib/shared/components/chat-messaging/messaging/messaging.component.html","../../../projects/storefrontlib/shared/components/chat-messaging/messaging/index.ts","../../../projects/storefrontlib/shared/components/chat-messaging/avatar/index.ts","../../../projects/storefrontlib/shared/components/chat-messaging/chat-messaging.module.ts","../../../projects/storefrontlib/shared/components/chat-messaging/index.ts","../../../projects/storefrontlib/shared/components/index.ts","../../../projects/storefrontlib/cms-components/content/banner-carousel/banner-carousel.module.ts","../../../projects/storefrontlib/cms-components/content/banner/banner.component.ts","../../../projects/storefrontlib/cms-components/content/banner/banner.component.html","../../../projects/storefrontlib/cms-components/content/banner/banner.module.ts","../../../projects/storefrontlib/cms-components/content/link/link.component.ts","../../../projects/storefrontlib/cms-components/content/link/link.component.html","../../../projects/storefrontlib/cms-components/content/link/link.module.ts","../../../projects/storefrontlib/shared/pipes/suplement-hash-anchors/supplement-hash-anchors.pipe.ts","../../../projects/storefrontlib/cms-components/content/paragraph/paragraph.component.ts","../../../projects/storefrontlib/cms-components/content/paragraph/paragraph.component.html","../../../projects/storefrontlib/shared/pipes/suplement-hash-anchors/supplement-hash-anchors.module.ts","../../../projects/storefrontlib/cms-components/content/paragraph/paragraph.module.ts","../../../projects/storefrontlib/cms-components/content/pdf/pdf.component.ts","../../../projects/storefrontlib/cms-components/content/pdf/pdf.component.html","../../../projects/storefrontlib/cms-components/content/pdf/pdf.module.ts","../../../projects/storefrontlib/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","../../../projects/storefrontlib/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.html","../../../projects/storefrontlib/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","../../../projects/storefrontlib/cms-components/content/video/video.component.ts","../../../projects/storefrontlib/cms-components/content/video/video.component.html","../../../projects/storefrontlib/cms-components/content/video/video.module.ts","../../../projects/storefrontlib/cms-components/content/index.ts","../../../projects/storefrontlib/utils/address-number-utils.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.component.service.ts","../../../projects/storefrontlib/shared/utils/forms/title-utils.ts","../../../projects/storefrontlib/layout/a11y/skip-link/config/skip-link.config.ts","../../../projects/storefrontlib/layout/a11y/skip-link/service/skip-link.service.ts","../../../projects/storefrontlib/layout/a11y/skip-link/component/skip-link.component.ts","../../../projects/storefrontlib/layout/a11y/skip-link/component/skip-link.component.html","../../../projects/storefrontlib/layout/a11y/skip-link/config/default-skip-link.config.ts","../../../projects/storefrontlib/layout/a11y/skip-link/config/index.ts","../../../projects/storefrontlib/layout/a11y/skip-link/directive/skip-link.directive.ts","../../../projects/storefrontlib/layout/a11y/skip-link/skip-link.module.ts","../../../projects/storefrontlib/layout/a11y/skip-link/index.ts","../../../projects/storefrontlib/layout/a11y/index.ts","../../../projects/storefrontlib/layout/breakpoint/index.ts","../../../projects/storefrontlib/layout/config/default-layout.config.ts","../../../projects/storefrontlib/layout/config/index.ts","../../../projects/storefrontlib/layout/direction/config/direction.config.ts","../../../projects/storefrontlib/layout/direction/config/default-direction.config.ts","../../../projects/storefrontlib/layout/direction/direction.service.ts","../../../projects/storefrontlib/layout/direction/direction.module.ts","../../../projects/storefrontlib/layout/direction/index.ts","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.service.ts","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.component.ts","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.component.html","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.module.ts","../../../projects/storefrontlib/layout/header/index.ts","../../../projects/storefrontlib/layout/theme/theme.service.ts","../../../projects/storefrontlib/layout/theme/theme.module.ts","../../../projects/storefrontlib/layout/layout.module.ts","../../../projects/storefrontlib/layout/loading/index.ts","../../../projects/storefrontlib/layout/main/storefront-outlets.model.ts","../../../projects/storefrontlib/layout/main/storefront.component.ts","../../../projects/storefrontlib/layout/main/storefront.component.html","../../../projects/storefrontlib/layout/main/storefront-component.module.ts","../../../projects/storefrontlib/layout/main/index.ts","../../../projects/storefrontlib/layout/theme/index.ts","../../../projects/storefrontlib/layout/index.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/address-form.component.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/address-form.component.html","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.component.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.component.html","../../../projects/storefrontlib/shared/config/view-config.ts","../../../projects/storefrontlib/shared/config/index.ts","../../../projects/storefrontlib/shared/pipes/index.ts","../../../projects/storefrontlib/shared/services/file/file-download.service.ts","../../../projects/storefrontlib/shared/services/file/csv/export-csv-file.service.ts","../../../projects/storefrontlib/shared/services/file/file-reader.service.ts","../../../projects/storefrontlib/shared/services/file/csv/import-csv-file.service.ts","../../../projects/storefrontlib/shared/services/file/csv/index.ts","../../../projects/storefrontlib/shared/services/file/index.ts","../../../projects/storefrontlib/shared/services/index.ts","../../../projects/storefrontlib/shared/utils/validators/custom-form-validators.ts","../../../projects/storefrontlib/shared/utils/index.ts","../../../projects/storefrontlib/shared/index.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.html","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/address-form.module.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/suggested-addresses-dialog/default-suggested-addresses-dialog-layout.config.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.module.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/index.ts","../../../projects/storefrontlib/cms-components/myaccount/consent-management/index.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/default-coupon-card-layout.config.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.module.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/index.ts","../../../projects/storefrontlib/cms-components/myaccount/my-interests/my-interests.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-interests/my-interests.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-interests/my-interests.module.ts","../../../projects/storefrontlib/cms-components/myaccount/notification-preference/notification-preference.component.ts","../../../projects/storefrontlib/cms-components/myaccount/notification-preference/notification-preference.component.html","../../../projects/storefrontlib/cms-components/myaccount/notification-preference/notification-preference.module.ts","../../../projects/storefrontlib/cms-components/myaccount/notification-preference/index.ts","../../../projects/storefrontlib/cms-components/myaccount/payment-methods/payment-methods.component.ts","../../../projects/storefrontlib/cms-components/myaccount/payment-methods/payment-methods.component.html","../../../projects/storefrontlib/cms-components/myaccount/payment-methods/payment-methods.module.ts","../../../projects/storefrontlib/cms-components/myaccount/index.ts","../../../projects/storefrontlib/cms-components/navigation/page-header/page-title.component.ts","../../../projects/storefrontlib/cms-components/navigation/page-header/page-title.component.html","../../../projects/storefrontlib/cms-components/navigation/breadcrumb/breadcrumb.component.ts","../../../projects/storefrontlib/cms-components/navigation/breadcrumb/breadcrumb.component.html","../../../projects/storefrontlib/cms-components/navigation/breadcrumb/breadcrumb.module.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.service.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation-ui.component.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation-ui.component.html","../../../projects/storefrontlib/cms-components/navigation/category-navigation/category-navigation.component.ts","../../../projects/storefrontlib/cms-components/navigation/category-navigation/category-navigation.component.html","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.component.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.component.html","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.module.ts","../../../projects/storefrontlib/cms-components/navigation/category-navigation/category-navigation.module.ts","../../../projects/storefrontlib/cms-components/navigation/footer-navigation/footer-navigation.component.ts","../../../projects/storefrontlib/cms-components/navigation/footer-navigation/footer-navigation.component.html","../../../projects/storefrontlib/cms-components/navigation/footer-navigation/footer-navigation.module.ts","../../../projects/storefrontlib/cms-components/navigation/page-header/page-title.module.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/highlight.pipe.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.events.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box-component.service.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.component.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.component.html","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.module.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/index.ts","../../../projects/storefrontlib/cms-components/navigation/scroll-to-top/scroll-to-top.component.ts","../../../projects/storefrontlib/cms-components/navigation/scroll-to-top/scroll-to-top.component.html","../../../projects/storefrontlib/cms-components/navigation/scroll-to-top/scroll-to-top.module.ts","../../../projects/storefrontlib/cms-components/navigation/index.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel.service.ts","../../../projects/storefrontlib/cms-components/product/product-list/container/product-list-component.service.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-view/product-view.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-view/product-view.component.html","../../../projects/storefrontlib/cms-components/product/product-outlets.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/model/product-list-item-context.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/model/product-list-item-context-source.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-list-item/product-list-item.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-list-item/product-list-item.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-grid-item/product-grid-item.component.html","../../../projects/storefrontlib/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/container/product-scroll/product-scroll.component.html","../../../projects/storefrontlib/cms-components/product/product-list/container/product-list.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/container/product-list.component.html","../../../projects/storefrontlib/cms-components/product/product-list/container/index.ts","../../../projects/storefrontlib/cms-components/product/product-list/model/index.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/active-facets/index.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet/facet.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet-list/index.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet/index.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/services/index.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/index.ts","../../../projects/storefrontlib/cms-components/product/config/default-view-config.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-list.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/index.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel-item/product-carousel-item.component.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel-item/product-carousel-item.component.html","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel/product-carousel.component.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel/product-carousel.component.html","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel/product-carousel.module.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-references/product-references.component.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-references/product-references.component.html","../../../projects/storefrontlib/cms-components/product/carousel/product-references/product-references.module.ts","../../../projects/storefrontlib/cms-components/product/carousel/index.ts","../../../projects/storefrontlib/cms-components/product/product-images/product-images.component.ts","../../../projects/storefrontlib/cms-components/product/product-images/product-images.component.html","../../../projects/storefrontlib/cms-components/product/product-images/product-images.module.ts","../../../projects/storefrontlib/cms-components/product/product-intro/product-intro.component.ts","../../../projects/storefrontlib/cms-components/product/product-intro/product-intro.component.html","../../../projects/storefrontlib/cms-components/product/product-intro/product-intro.module.ts","../../../projects/storefrontlib/cms-components/product/product-summary/product-summary.component.ts","../../../projects/storefrontlib/cms-components/product/product-summary/product-summary.component.html","../../../projects/storefrontlib/cms-components/product/product-summary/product-summary.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-attributes/product-attributes.component.html","../../../projects/storefrontlib/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.html","../../../projects/storefrontlib/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-reviews/product-reviews.component.html","../../../projects/storefrontlib/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-tabs.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/index.ts","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.html","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification.component.ts","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification.component.html","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification-dialog/default-stock-notification-layout.config.ts","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification.module.ts","../../../projects/storefrontlib/cms-components/product/index.ts","../../../projects/storefrontlib/cms-components/user/login-route/login.guard.ts","../../../projects/storefrontlib/cms-components/user/login-route/login-route.module.ts","../../../projects/storefrontlib/cms-components/user/logout/logout.guard.ts","../../../projects/storefrontlib/cms-components/user/logout/logout.module.ts","../../../projects/storefrontlib/cms-components/user/user.module.ts","../../../projects/storefrontlib/cms-components/user/index.ts","../../../projects/storefrontlib/cms-components/index.ts","../../../projects/storefrontlib/cms-pages/product-details-page/product-details-url-matcher.ts","../../../projects/storefrontlib/cms-pages/product-details-page/product-details-page.module.ts","../../../projects/storefrontlib/cms-pages/product-details-page/index.ts","../../../projects/storefrontlib/cms-pages/product-listing-page/product-listing-url-matcher.ts","../../../projects/storefrontlib/cms-pages/product-listing-page/product-listing-page.module.ts","../../../projects/storefrontlib/cms-pages/product-listing-page/index.ts","../../../projects/storefrontlib/cms-pages/index.ts","../../../projects/storefrontlib/context/routing-context.service.ts","../../../projects/storefrontlib/context/context.service.ts","../../../projects/storefrontlib/context/index.ts","../../../projects/storefrontlib/events/navigation/navigation.event.ts","../../../projects/storefrontlib/events/page/page.events.ts","../../../projects/storefrontlib/events/home/home-page.events.ts","../../../projects/storefrontlib/events/home/home-page-event.builder.ts","../../../projects/storefrontlib/events/home/home-page-event.module.ts","../../../projects/storefrontlib/events/home/index.ts","../../../projects/storefrontlib/events/navigation/navigation-event.builder.ts","../../../projects/storefrontlib/events/navigation/navigation-event.module.ts","../../../projects/storefrontlib/events/navigation/index.ts","../../../projects/storefrontlib/events/page/index.ts","../../../projects/storefrontlib/events/product/product-page.events.ts","../../../projects/storefrontlib/events/product/product-page-event.builder.ts","../../../projects/storefrontlib/events/product/product-page-event.module.ts","../../../projects/storefrontlib/events/product/index.ts","../../../projects/storefrontlib/events/index.ts","../../../projects/storefrontlib/recipes/config/default-media.config.ts","../../../projects/storefrontlib/recipes/config/layout-config.ts","../../../projects/storefrontlib/recipes/config/static-cms-structure.ts","../../../projects/storefrontlib/recipes/config/index.ts","../../../projects/storefrontlib/recipes/index.ts","../../../projects/storefrontlib/router/config/default-on-navigate-config.ts","../../../projects/storefrontlib/router/config/on-navigate-config.ts","../../../projects/storefrontlib/router/config/index.ts","../../../projects/storefrontlib/router/on-navigate.service.ts","../../../projects/storefrontlib/router/app-routing.module.ts","../../../projects/storefrontlib/router/index.ts","../../../projects/storefrontlib/utils/form-utils.ts","../../../projects/storefrontlib/utils/index.ts","../../../projects/storefrontlib/base-storefront.module.ts","../../../projects/storefrontlib/public_api.ts","../../../projects/storefrontlib/spartacus-storefront.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** The element attribute used to store the focus state */\nexport const FOCUS_ATTR = 'data-cx-focus';\n/** The element attribute used to store the focus group state */\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\n\nexport const enum MOVE_FOCUS {\n  NEXT = 1,\n  PREV = -1,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseFocusConfig {}\n\nexport interface VisibleFocusConfig {\n  /**\n   * When set to true, the `mouse-focus` class is added to the host element,\n   * indicating that the element focus should not be made visible.\n   */\n  disableMouseFocus?: boolean;\n}\n\nexport interface BlockFocusConfig extends VisibleFocusConfig {\n  block?: boolean;\n}\n\nexport interface PersistFocusConfig extends BlockFocusConfig {\n  /**\n   * A key to maintain the focus of an element in case the component is\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\n   */\n  key?: string;\n\n  /**\n   * Optional group identifier that can be used to persist the focus. This allows\n   * to have separate persisted focus available when the DOM is partially rebuild.\n   */\n  group?: string;\n}\n\nexport interface EscapeFocusConfig extends PersistFocusConfig {\n  focusOnEscape?: boolean;\n  /**\n   * Force an autofocus in case of double-escape\n   */\n  focusOnDoubleEscape?: boolean;\n}\n\nexport interface AutoFocusConfig extends EscapeFocusConfig {\n  /**\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\n   * In case the focus is explicitly set to `true`, the first accessible element\n   * is focussed in case there is no _autofocus_ element found.\n   * If the focus is set to false, autofocus will be disabled completely.\n   *\n   * If a string value is given, the autofocus will be restored based on the persisted\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\n   *\n   * Defaults to `true`.\n   */\n  autofocus?: boolean | string;\n\n  /**\n   * whenever the focus should be applied based on a specific trigger, you can user\n   * the refreshFocus property. This property can be dynamically applied so that the refresh\n   * only happens on specific occasions.\n   *\n   * The refreshFocus token doesn't have a specific format, it acts as a meaning less token that\n   * will effect the ngOnChange lifecycle hook of the auto focus logic. Any truthy value will\n   * autofocus the element dynamically.\n   */\n  refreshFocus?: unknown;\n}\n\nexport interface TabFocusConfig extends AutoFocusConfig {\n  tab?: boolean | 'scroll' | string;\n}\n\nexport enum TrapFocus {\n  /**\n   * Will trap the focus at the start of the focus group.\n   */\n  start = 'start',\n  /**\n   * Will trap the focus only at the end of the focus group.\n   */\n  end = 'end',\n  /**\n   * Will not trap the focus in both directions. This is actually not are\n   * a great example of focus trap, but it will give the benefit of keyboard\n   * tabbing by arrows.\n   */\n  both = 'both',\n}\n\nexport type TrapFocusType =\n  | boolean\n  | TrapFocus.start\n  | TrapFocus.end\n  | TrapFocus.both;\n\n/**\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\n * for the nested focusable elements. This means that the focus can not\n * \"leave\" the elements. If the last element is focused, the keyboard will\n * navigate to the first element and visa versa.\n */\nexport interface TrapFocusConfig extends TabFocusConfig {\n  /** traps the focus */\n  trap?: TrapFocusType;\n}\n\nexport interface LockFocusConfig extends TrapFocusConfig {\n  /**\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\n   */\n  lock?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface FocusConfig extends LockFocusConfig {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseFocusService {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { BaseFocusConfig } from '../keyboard-focus.model';\nimport { BaseFocusService } from './base-focus.service';\n\n/**\n * Abstract directive that provides a common interface for all focus directives:\n * - Block Focus\n * - Persist Focus\n * - Escape Focus\n * - Auto Focus\n * - Tab Focus\n * - Trap Focus\n * - Lock Focus\n */\n@Directive()\nexport abstract class BaseFocusDirective implements OnInit, OnChanges {\n  /**\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\n   * focus directive.\n   */\n  protected config: BaseFocusConfig;\n\n  /**\n   * A default config can be provided for each directive if a specific focus directive\n   * is used directly. i.e. `<div cxAutoFocus></div>`\n   */\n  protected defaultConfig: BaseFocusConfig = {};\n\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected service: BaseFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.setDefaultConfiguration();\n    this.requiredTabindex = -1;\n  }\n\n  // empty, but sub classes might have an implementation\n  ngOnChanges(_changes: SimpleChanges): void {\n    // Intentional empty method\n  }\n\n  /**\n   * Override the (input) config if it undefined or an empty string, with the\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\n   * specific (inherited) defaultConfig will be used.\n   */\n  protected setDefaultConfiguration(): void {\n    if ((!this.config || this.config === '') && this.defaultConfig) {\n      this.config = this.defaultConfig;\n    }\n  }\n\n  /**\n   * Helper method to return the host element for the directive\n   * given by the `elementRef`.\n   */\n  protected get host(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /**\n   * Force a tabindex on the host element if it is _required_ to make the element\n   * focusable. If the element is focusable by nature or by a given tabindex, the\n   * `tabindex` is not applied.\n   *\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\n   */\n  protected set requiredTabindex(tabindex: number) {\n    if (this.requiresExplicitTabIndex) {\n      this.tabindex = tabindex;\n    }\n  }\n\n  /**\n   * Returns true if the host element does not have a tabindex defined\n   * and it also doesn't get focus by browsers nature (i.e. button or\n   * active link).\n   */\n  protected get requiresExplicitTabIndex(): boolean {\n    return (\n      this.tabindex === undefined &&\n      ['button', 'input', 'select', 'textarea'].indexOf(\n        this.host.tagName.toLowerCase()\n      ) === -1 &&\n      !(\n        this.host.tagName === 'A' &&\n        (this.host.hasAttribute('href') ||\n          this.host.hasAttribute('routerlink') ||\n          this.host.getAttribute('ng-reflect-router-link'))\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, HostBinding, HostListener } from '@angular/core';\nimport { BaseFocusDirective } from '../base/base-focus.directive';\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\n\n/**\n * Directive implementation that adds a CSS class to the host element\n * when the moused is used to focus an element. As soon as the keyboard\n * is used, the class is removed.\n *\n * This feature must be explicitly enabled with the `disableMouseFocus` config.\n *\n * The appearance of the visual focus depends on the CSS implementation to\n * begin with. Spartacus styles add a blue border around each focusable element.\n * This can be considered annoying by keyboard users, as they won't need such a\n * strong indication of the selected element.\n */\n@Directive() // selector: '[cxVisibleFocus]'\nexport class VisibleFocusDirective extends BaseFocusDirective {\n  protected defaultConfig: VisibleFocusConfig = {\n    disableMouseFocus: true,\n  };\n\n  // @Input('cxVisibleFocus')\n  protected config: VisibleFocusConfig;\n\n  /** Controls a css class to hide focus visible CSS rules */\n  @HostBinding('class.mouse-focus') mouseFocus = false;\n\n  @HostListener('mousedown') handleMousedown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = true;\n    }\n  }\n\n  @HostListener('keydown', ['$event']) handleKeydown(event: KeyboardEvent) {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = !this.isNavigating(event);\n    }\n  }\n\n  /**\n   * Indicates whether the configurations setup to disable visual focus.\n   */\n  protected get shouldFocusVisible(): boolean | undefined {\n    return this.config?.disableMouseFocus;\n  }\n\n  /**\n   * Indicates whether the event is used to navigate the storefront. Some keyboard events\n   * are used by mouse users to fill a form or interact with the OS or browser.\n   */\n  protected isNavigating(event: KeyboardEvent): boolean {\n    // when the cmd or ctrl keys are used, the user doesn't navigate the storefront\n    if (event.metaKey) {\n      return false;\n    }\n    // when the tab key is used, users are for navigating away from the current (form) element\n    if (event.code === 'Tab') {\n      return true;\n    }\n    // If the user fill in a form, we don't considering it part of storefront navigation.\n    if (['INPUT', 'TEXTAREA'].includes((event.target as HTMLElement).tagName)) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, ElementRef, OnInit } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { BlockFocusConfig } from '../keyboard-focus.model';\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\n\n@Directive()\n// { selector: '[cxBlockFocus]' }\nexport class BlockFocusDirective\n  extends VisibleFocusDirective\n  implements OnInit\n{\n  protected defaultConfig: BlockFocusConfig = { block: true };\n\n  // @Input('cxBlockFocus')\n  protected config: BlockFocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: BaseFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.config.block) {\n      this.tabindex = -1;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\n\nconst GLOBAL_GROUP = '_g_';\n\n/**\n * Shared service to persist the focus for an element or a group\n * of elements. The persisted element focus can be used to persist\n * the focus for a DOM tree, so that the focus remains after a repaint\n * or reoccurs when a DOM tree is \"unlocked\".\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersistFocusService extends BaseFocusService {\n  // this is going to fail as we have sub services. They will al have their own map.\n  // We must bring this to a singleton map.\n  protected focus = new Map<string, string>();\n\n  get(group?: string | null): string | undefined {\n    return this.focus.get(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Persist the keyboard focus state for the given key. The focus is stored globally\n   * or for the given group.\n   */\n  set(key: string | undefined, group?: string | null) {\n    if (key) {\n      this.focus.set(group || GLOBAL_GROUP, key);\n    }\n  }\n\n  /**\n   * Clears the persisted keyboard focus state globally or for the given group.\n   */\n  clear(group?: string) {\n    this.focus.delete(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Returns the group for the host element based on the configured group or\n   * by the `data-cx-focus-group` attribute stored on the host.\n   */\n  getPersistenceGroup(\n    host: HTMLElement | undefined | null,\n    config?: PersistFocusConfig\n  ): string | null | undefined {\n    return config?.group ? config.group : host?.getAttribute(FOCUS_GROUP_ATTR);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { BlockFocusDirective } from '../block/block-focus.directive';\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from './persist-focus.service';\n\n/**\n * Directive that provides persistence of the focused state. This is useful\n * when a group of focusable elements got refocused or even recreated. That\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\n *\n * The focus state is based on a configured _key_, which can be passed in the\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\n *\n * ```html\n * <button cxPersistFocus=\"myKey\"></button>\n * <button cxFocus=\"myKey\"></button>\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\n * ```\n *\n * The focus state can be part of a focus _group_, so that the state is shared\n * and remember for the given group. In order to detect the persistence for a\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\n *\n * ```html\n * <button data-cx-focus=\"myKey\"></button>\n * ```\n *\n * Other keyboard focus directives can read the key to understand whether the element\n * should retrieve focus.\n *\n */\n@Directive() // selector: '[cxPersistFocus]',\nexport class PersistFocusDirective\n  extends BlockFocusDirective\n  implements OnInit, AfterViewInit\n{\n  protected defaultConfig: PersistFocusConfig = {};\n\n  /**\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\n   * While this could be considered a global key, the likeliness of conflicts\n   * is very small since the key is cleared when the focus is changed.\n   */\n  // @Input('cxPersistFocus')\n  protected config: PersistFocusConfig = {};\n\n  /**\n   * The persistence key is maintained in an element attribute for other\n   * implementations. This is needed to ensure that we can resolve the focus\n   * state in case of a repaint.\n   */\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string | undefined;\n\n  @HostListener('focus', ['$event'])\n  handleFocus(event?: KeyboardEvent) {\n    this.service.set(this.key, this.group);\n\n    event?.preventDefault();\n    event?.stopPropagation();\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: PersistFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.attr = this.key ? this.key : undefined;\n  }\n\n  protected setDefaultConfiguration() {\n    if (typeof this.config === 'string' && this.config !== '') {\n      this.config = { key: this.config };\n    }\n    super.setDefaultConfiguration();\n  }\n\n  /**\n   * Focus the element explicitly if it was focused before.\n   */\n  ngAfterViewInit() {\n    if (this.isPersisted) {\n      this.host.focus({ preventScroll: true });\n    }\n  }\n\n  protected get isPersisted(): boolean {\n    return !!this.key && this.service.get(this.group) === this.key;\n  }\n\n  /**\n   * Returns the key for the host element, which is used to persist the\n   * focus state. This is useful in cases where the DOM is rebuild.\n   */\n  protected get key(): string | undefined {\n    return (this.config as PersistFocusConfig)?.key;\n  }\n\n  /**\n   * returns the persistence group (if any) for the focusable elements.\n   */\n  protected get group(): string | null | undefined {\n    return this.service.getPersistenceGroup(\n      this.host,\n      this.config as PersistFocusConfig\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectFocusUtility {\n  /**\n   * Query selectors used to query focusable child elements of the host element.\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\n   */\n  protected focusableSelectors: string[] = [\n    'a[href]',\n    'button',\n    '[tabindex]',\n    'input',\n    'select',\n    'textarea',\n  ];\n\n  // like to leave out the following as we don't use it, and make this list exensible.\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\n  //   `iframe`, // we really don't like iframes...\n  //   `area[href]`, // very debatable!\n\n  protected focusableSelectorSuffix =\n    ':not([disabled]):not([hidden]):not([aria-hidden])';\n\n  query(host: HTMLElement | null | undefined, selector: string): HTMLElement[] {\n    if (!selector || selector === '') {\n      return [];\n    }\n    return Array.from(\n      host?.querySelectorAll(selector) as NodeListOf<HTMLElement>\n    );\n  }\n\n  findFirstFocusable(\n    host: HTMLElement | null | undefined,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement | undefined {\n    const selector =\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\n    // fallback to first focusable\n    return (\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\n      this.findFocusable(host).find((el) => Boolean(el))\n    );\n  }\n\n  /**\n   * returns all focusable child elements of the host element. The element selectors\n   * are build from the `focusableSelectors`.\n   *\n   * @param host the `HTMLElement` used to query focusable elements\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\n   * @param invisible indicates whether hidden focusable elements should be returned\n   */\n  findFocusable(\n    host: HTMLElement | null | undefined,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    let suffix = this.focusableSelectorSuffix;\n    if (!locked) {\n      suffix += `:not([tabindex='-1'])`;\n    }\n    const selector = this.focusableSelectors\n      .map((s) => (s += suffix))\n      .join(',');\n    return this.query(host, selector).filter((el) =>\n      !invisible ? !this.isHidden(el) : Boolean(el)\n    );\n  }\n\n  /**\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\n   *\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\n   * phyisical location on the element itself or any of it's anchestor elements. Those\n   * technique require to work with the _computed styles_, which will cause a performance\n   * downgrade. We don't do this in the standard implementaton.\n   */\n  protected isHidden(el: HTMLElement): boolean {\n    return el.offsetParent === null;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from '../persist/persist-focus.service';\nimport { SelectFocusUtility } from '../services/select-focus.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EscapeFocusService extends PersistFocusService {\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\n    super();\n  }\n\n  shouldFocus(config: EscapeFocusConfig): boolean {\n    return !!config?.focusOnEscape;\n  }\n\n  handleEscape(\n    host: HTMLElement,\n    config: EscapeFocusConfig,\n    event: KeyboardEvent\n  ): void {\n    if (this.shouldFocus(config)) {\n      if (host !== event.target) {\n        host.focus({ preventScroll: true });\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        if (config?.focusOnDoubleEscape) {\n          this.selectFocusUtil\n            .findFirstFocusable(host, { autofocus: true })\n            ?.focus();\n        }\n      }\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\nimport { EscapeFocusService } from './escape-focus.service';\n\n/**\n * Directive to focus the host element whenever the `escape` key is captured.\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\n * on a tree of elements. Each time the escape key is used, the focus will\n * move up in the DOM tree.\n *\n */\n@Directive() // selector: '[cxEscFocus]',\nexport class EscapeFocusDirective\n  extends PersistFocusDirective\n  implements OnInit\n{\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\n\n  // @Input('cxEscFocus')\n  protected config: EscapeFocusConfig;\n\n  @Output() esc = new EventEmitter<boolean>();\n\n  /**\n   * Handles the escape key event.\n   * @param event the native keyboard event which contains the escape keydown event\n   */\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    if (this.service.shouldFocus(this.config)) {\n      this.service.handleEscape(this.host, this.config, event);\n    }\n    this.esc.emit(this.service.shouldFocus(this.config));\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: EscapeFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    if (this.service.shouldFocus(this.config)) {\n      this.requiredTabindex = -1;\n    }\n    super.ngOnInit();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { EscapeFocusService } from '../escape/escape-focus.service';\nimport {\n  AutoFocusConfig,\n  FOCUS_ATTR,\n  PersistFocusConfig,\n} from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutoFocusService extends EscapeFocusService {\n  /**\n   * Returns the first focusable child element of the host element.\n   */\n  findFirstFocusable(\n    host: HTMLElement | null | undefined,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement | undefined | null {\n    if (config?.autofocus === ':host') {\n      return host;\n    } else if (this.hasPersistedFocus(host, config)) {\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\n    } else {\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\n    }\n  }\n\n  /**\n   * Indicates whether any of the focusable child elements is focused.\n   */\n  hasPersistedFocus(\n    host: HTMLElement | null | undefined,\n    config: PersistFocusConfig\n  ): boolean {\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\n  }\n\n  /**\n   * Returns the element that has a persisted focus state.\n   *\n   * @param host the `HTMLElement` used to query for focusable children\n   * @param group the optional group for the persistent state, to separate different focus\n   *   groups and remain the persistence\n   */\n  protected getPersisted(\n    host?: HTMLElement | null,\n    group?: string | null\n  ): HTMLElement | undefined {\n    if (!this.get(group)) {\n      return;\n    }\n    const focussed = Array.from(\n      host?.querySelectorAll(\n        `[${FOCUS_ATTR}='${this.get(group)}']`\n      ) as NodeListOf<HTMLElement>\n    );\n    return focussed.length > 0 ? focussed[0] : undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\nimport { AutoFocusService } from './auto-focus.service';\n\n/**\n * Directive that focus the first nested _focusable_ element based on state and configuration:\n *\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\n * 4. first focusable element\n * 5. the host element, in case the configured CSS selector is `:host`.\n *\n * Example configurations:\n *\n * `<div cxAutoFocus>[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\n *\n * When your element is added dynamically (ie. by using an *ngIf or after a DOM change), the\n * focus can be refreshed by using the refreshFocus configuration.\n */\n@Directive() // selector: '[cxAutoFocus]'\nexport class AutoFocusDirective\n  extends EscapeFocusDirective\n  implements AfterViewInit, OnChanges\n{\n  /** The AutoFocusDirective will be using autofocus by default  */\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\n\n  // @Input('cxAutoFocus')\n  protected config: AutoFocusConfig;\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: AutoFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Focus the element explicitly if it was focussed before.\n   */\n  ngAfterViewInit(): void {\n    if (this.shouldAutofocus) {\n      this.handleFocus();\n    }\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\n      super.ngAfterViewInit();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // responsible for refresh focus based on the configured refresh property name\n    if (!!(changes.config?.currentValue as AutoFocusConfig)?.refreshFocus) {\n      // ensure the autofocus when it's to provided initially\n      if (!this.config.autofocus) {\n        this.config.autofocus = true;\n      }\n      this.handleFocus();\n    }\n    super.ngOnChanges(changes);\n  }\n\n  /**\n   * Mimic the focus without setting the actual focus on the host. The first\n   * focusable child element will be focussed.\n   */\n  handleFocus(event?: KeyboardEvent) {\n    if (this.shouldAutofocus) {\n      if (!event?.target || event.target === this.host) {\n        this.firstFocusable?.focus();\n      } else {\n        (event.target as HTMLElement).focus();\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  /**\n   * Helper function to get the first focusable child element\n   */\n  protected get hasPersistedFocus() {\n    return this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Helper function to indicate whether we should use autofocus for the\n   * child elements.\n   */\n  protected get shouldAutofocus(): boolean {\n    return !!this.config?.autofocus;\n  }\n\n  /**\n   * Helper function to get the first focusable child element.\n   *\n   * We keep this private to not pollute the API.\n   */\n  private get firstFocusable(): HTMLElement | null | undefined {\n    return this.service.findFirstFocusable(this.host, this.config);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TabFocusService extends AutoFocusService {\n  /**\n   * Moves to the next (or previous) tab.\n   */\n  moveTab(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS,\n    event: KeyboardEvent\n  ): void {\n    if (config?.tab) {\n      const next =\n        config.tab === 'scroll'\n          ? this.findNextScrollable(host, config, increment)\n          : this.findNext(host, config, increment);\n\n      next?.focus();\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * builds out virtual slides out of the full scrollable area, to allow\n   * for maximum flexibility for the underlying layout without using hardcoded\n   * slide sizes.\n   */\n  protected findNextScrollable(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement | undefined {\n    const active = this.getActiveChild(host, config);\n\n    if (!active) {\n      return;\n    }\n    // slide count\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\n\n    // find current virtual slide\n    const currentVirtualSlide = Math.round(\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\n    );\n\n    let nextVirtualSlide = currentVirtualSlide + increment;\n    if (\n      increment === MOVE_FOCUS.NEXT &&\n      nextVirtualSlide >= virtualSlideCount\n    ) {\n      nextVirtualSlide = 0;\n    }\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\n      nextVirtualSlide = virtualSlideCount - 1;\n    }\n\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\n      (tab) =>\n        tab.offsetLeft >=\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\n    );\n\n    return firstItemOnNextSlide;\n  }\n\n  protected findNext(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement | undefined {\n    const childs = this.getChildren(host, config);\n    let activeIndex = childs?.findIndex(\n      (c) => c === this.getActiveChild(host, config)\n    );\n\n    if (!activeIndex || activeIndex === -1) {\n      activeIndex = 0;\n    }\n    activeIndex += increment;\n\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\n      activeIndex = childs.length - 1;\n    }\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\n      activeIndex = 0;\n    }\n    return childs ? childs[activeIndex] : undefined;\n  }\n\n  /**\n   * Returns the active focusable child element. If there's no active\n   * focusable child element, the first focusable child is returned.\n   */\n  protected getActiveChild(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement {\n    const persisted = this.getPersisted(host, config?.group);\n    if (persisted) {\n      return persisted;\n    }\n    const children = this.getChildren(host, config);\n    let index = children.findIndex((tab) => this.isActive(tab));\n    if (!index || index === -1) {\n      index = 0;\n    }\n    return children[index];\n  }\n\n  protected getChildren(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement[] {\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\n      return this.selectFocusUtil.query(host, config.tab);\n    } else {\n      return this.findFocusable(host, true);\n    }\n  }\n\n  /**\n   * Returns all focusable child elements of the host element.\n   *\n   * @param host The host element is used to query child focusable elements.\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\n  }\n\n  protected isActive(el: HTMLElement): boolean {\n    const child = document.activeElement;\n    const selector = child?.tagName;\n\n    return (\n      el === child ||\n      (!!selector &&\n        !!Array.from(el.querySelectorAll(selector)).find((e) => e === child))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, ElementRef, HostListener } from '@angular/core';\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from './tab-focus.service';\n\n/**\n * Directive to move the focus of (\"locked\") child elements. This is useful\n * for a nested list of tabs, carousel slides or any group of elements that\n * requires horizontal navigation.\n */\n@Directive() // selector: '[cxTabFocus]'\nexport class TabFocusDirective extends AutoFocusDirective {\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\n  protected defaultConfig: TabFocusConfig = { tab: true };\n\n  // @Input('cxTabFocus')\n  protected config: TabFocusConfig = {};\n\n  @HostListener('keydown.arrowRight', ['$event'])\n  handleNextTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\n    }\n  }\n\n  @HostListener('keydown.arrowLeft', ['$event'])\n  handlePreviousTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TabFocusService\n  ) {\n    super(elementRef, service);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  MOVE_FOCUS,\n  TrapFocus,\n  TrapFocusConfig,\n  TrapFocusType,\n} from '../keyboard-focus.model';\nimport { TabFocusService } from '../tab/tab-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrapFocusService extends TabFocusService {\n  /**\n   * Indicates whether any of the child elements of the host are focusable.\n   *\n   * @param host `HTMLElement` that is used to query the focusable elements.\n   */\n  hasFocusableChildren(host: HTMLElement): boolean {\n    return this.findFocusable(host).length > 0;\n  }\n\n  /**\n   * Focus the next or previous element of all available focusable elements.\n   * The focus is _trapped_ in case there's no next or previous available element.\n   * The focus will automatically move the start or end of the list.\n   */\n  moveFocus(\n    host: HTMLElement,\n    config: TrapFocusConfig,\n    increment: MOVE_FOCUS,\n    event: UIEvent\n  ): void {\n    const focusable: HTMLElement[] = this.findFocusable(host);\n\n    let index = focusable.findIndex((v) => v === event.target) + increment;\n\n    const shouldMoveFocus =\n      (index >= 0 && index < focusable.length) ||\n      (index < 0 && this.getTrapStart(config.trap)) ||\n      (index >= focusable.length && this.getTrapEnd(config.trap));\n\n    if (shouldMoveFocus) {\n      if (index >= focusable.length) {\n        index = 0;\n      }\n      if (index < 0) {\n        index = focusable.length - 1;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const el = focusable[index];\n\n      el.focus();\n    }\n  }\n\n  protected getTrapStart(trap: TrapFocusType | undefined): boolean {\n    return trap === true || trap === TrapFocus.start;\n  }\n\n  protected getTrapEnd(trap: TrapFocusType | undefined): boolean {\n    return trap === true || trap === TrapFocus.end;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\nimport { TrapFocusService } from './trap-focus.service';\n\n/**\n * Directive that keeps the focus inside the focusable child elements,\n * also known as a _focus trap_.\n */\n@Directive() // selector: '[cxTrapFocus]'\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\n  protected defaultConfig: TrapFocusConfig = { trap: true };\n\n  // @Input('cxTrapFocus')\n  protected config: TrapFocusConfig = {};\n\n  @HostListener('keydown.arrowdown', ['$event'])\n  @HostListener('keydown.tab', ['$event'])\n  handleTrapDown = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\n    }\n  };\n\n  @HostListener('keydown.arrowup', ['$event'])\n  @HostListener('keydown.shift.tab', ['$event'])\n  handleTrapUp = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.PREV);\n    }\n  };\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TrapFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Moves the focus of the element reference up or down, depending on the increment.\n   * The focus of the element is trapped to avoid it from going out of the group.\n   *\n   * @param event UIEvent that is used to get the target element. The event is blocked\n   *   from standard execution and further bubbling.\n   * @param increment indicates whether the next or previous is focussed.\n   */\n  protected moveFocus(event: UIEvent, increment: number) {\n    if (this.service.hasFocusableChildren(this.host)) {\n      this.service.moveFocus(\n        this.host,\n        this.config,\n        increment,\n        event as UIEvent\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { TrapFocusService } from '../trap/trap-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LockFocusService extends TrapFocusService {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\nimport { LockFocusService } from './lock-focus.service';\n\n/**\n * Focusable elements exclude hidden elements by default, but this contradicts with\n * unlocking (hidden) elements.\n */\nconst UNLOCK_HIDDEN_ELEMENTS = true;\n/**\n * Directive that adds persistence for focussed element in case\n * the elements are being rebuild. This happens often when change\n * detection kicks in because of new data set from the backend.\n */\n@Directive() // selector: '[cxLockFocus]'\nexport class LockFocusDirective\n  extends TrapFocusDirective\n  implements OnInit, AfterViewInit\n{\n  protected defaultConfig: LockFocusConfig = { lock: true };\n\n  // @Input('cxLockFocus')\n  protected config: LockFocusConfig = {};\n\n  /**\n   * Indicates that the host is configured to use locking. This is available as a\n   * CSS class `focus-lock`.\n   */\n  @HostBinding('class.focus-lock') shouldLock: boolean | undefined;\n\n  /**\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\n   */\n  @HostBinding('class.is-locked') isLocked: boolean;\n\n  /**\n   * Emits an event when the host is unlocked.\n   */\n  @Output() unlock = new EventEmitter<boolean>();\n\n  /**\n   * When the user selects enter or space, the focusable childs are\n   * unlocked, which means that the tabindex is set to 0.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handleEnter(event: KeyboardEvent) {\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\n      this.unlockFocus(event);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * In case any of the children elements is touched by the mouse,\n   * we unlock the group to not break the mouse-experience.\n   */\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if (this.shouldLock && this.isLocked) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: LockFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service);\n  }\n\n  protected lockFocus() {\n    this.addTabindexToChildren(-1);\n  }\n\n  protected unlockFocus(event?: UIEvent) {\n    this.unlock.emit(true);\n    this.addTabindexToChildren(0);\n    // we focus the host if the event was triggered from a child\n    if (event?.target === this.host) {\n      // we wait a few milliseconds, mainly because firefox will otherwise apply\n      // the mouse event on the new focused child element\n      setTimeout(() => {\n        super.handleFocus(event as KeyboardEvent);\n      }, 100);\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.shouldLock = this.config?.lock;\n\n    if (this.shouldLock) {\n      this.tabindex = 0;\n\n      // Locked elements will be set to `autofocus` by default if it's not\n      // been configured. This will ensure that autofocus kicks in upon unlock.\n      if (!this.config.hasOwnProperty('autofocus')) {\n        this.config.autofocus = true;\n      }\n      // Locked elements will be set to `focusOnEscape` by default if it's not\n      // been configured. This will ensure that  the host gets locked again when\n      // `escape` is pressed.\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.shouldLock) {\n      /**\n       * If the component hosts a group of focusable children elements,\n       * we persist the group key to the children, so that they can taken this\n       * into account when they persist their focus state.\n       */\n      if (!!this.group) {\n        const group = this.group;\n        this.service.findFocusable(this.host).forEach((el) =>\n          // we must do this in after view init as\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, group)\n        );\n      }\n\n      if (this.shouldAutofocus) {\n        this.handleFocus();\n      }\n    }\n    super.ngAfterViewInit();\n  }\n\n  handleFocus(event?: KeyboardEvent): void {\n    if (this.shouldLock) {\n      if (this.shouldUnlockAfterAutofocus(event)) {\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\n        setTimeout(() => this.unlockFocus(event));\n      } else {\n        setTimeout(() => this.lockFocus());\n        event?.stopPropagation();\n        return;\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  handleEscape(event: KeyboardEvent): void {\n    if (this.shouldLock) {\n      this.service.clear(this.config.group);\n    }\n    super.handleEscape(event);\n  }\n\n  /**\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\n   * In this case we unlock the focusable children in case there's a focusable child that\n   * was unlocked before.\n   *\n   * We keep this private to not polute the API.\n   */\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Add the tabindex attribute to the focusable children elements\n   */\n  protected addTabindexToChildren(i = 0): void {\n    if (this.shouldLock) {\n      this.isLocked = i === -1;\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\n        this.focusable.forEach((el) =>\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\n        );\n      }\n    }\n  }\n\n  /**\n   * Utility method, returns all focusable children for the host element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get hasFocusableChildren(): boolean {\n    return this.service.hasFocusableChildren(this.host);\n  }\n\n  /**\n   * Returns the focusable children of the host element. If the host element\n   * is configured to be locked, the query is restricted to child elements\n   * with a tabindex !== `-1`.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get focusable(): HTMLElement[] {\n    return this.service.findFocusable(\n      this.host,\n      this.shouldLock,\n      UNLOCK_HIDDEN_ELEMENTS\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { LockFocusService } from '../lock/lock-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeyboardFocusService extends LockFocusService {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\nimport { LockFocusDirective } from './lock/lock-focus.directive';\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class FocusDirective extends LockFocusDirective {\n  protected defaultConfig: FocusConfig = {};\n\n  @Input('cxFocus') config: FocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: KeyboardFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service, renderer);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\n\nconst directives = [\n  // PersistFocusDirective,\n  // VisibleFocusDirective,\n  // BlockFocusDirective,\n  // AutoFocusDirective,\n  // EscapeFocusDirective,\n  // LockFocusDirective,\n  // TrapFocusDirective,\n  // TabFocusDirective,\n  FocusDirective,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...directives],\n  exports: [...directives],\n})\nexport class KeyboardFocusModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class MockKeyboardFocusDirective {\n  @Input('cxFocus') config: FocusConfig = {};\n}\n\n@NgModule({\n  declarations: [MockKeyboardFocusDirective],\n  exports: [MockKeyboardFocusDirective],\n})\nexport class KeyboardFocusTestingModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './keyboard-focus.service';\nexport * from './select-focus.util';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// given that we're likely going to refactor the directives, we're\n// NOT exposing all it to the public API.\nexport * from './focus.directive';\nexport { FocusConfig, TrapFocus, TrapFocusType } from './keyboard-focus.model';\nexport * from './keyboard-focus.module';\nexport * from './focus-testing.module';\nexport * from './services/index';\n\n// export * from './autofocus/index';\n// export * from './base/index';\n// export * from './block/index';\n// export * from './escape/index';\n// export * from './lock/index';\n// export * from './on-navigate/index';\n// export * from './persist/index';\n// export * from './tab/index';\n// export * from './trap/index';\n// export * from './visible/index';\n// export * from './keyboard-focus.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\n\nexport interface LaunchConfig {\n  [key: string]: LaunchOptions;\n}\n\nexport type LaunchOptions =\n  | LaunchOutletDialog\n  | LaunchInlineDialog\n  | LaunchRoute\n  | LaunchInlineRootDialog;\n\n/**\n * Parent type for configurations that render components\n */\nexport interface LaunchDialog {\n  component: any;\n  /**\n   * Can the element be rendered multiple times\n   */\n  multi?: boolean;\n  /**\n   * Dialog type is used to apply CSS classes\n   */\n  dialogType?: DIALOG_TYPE;\n}\n\n/**\n * Configuration type to render a component in an outlet.\n * Outlet rendering should only be used for elements that open once and do not close.\n */\nexport interface LaunchOutletDialog extends LaunchDialog {\n  /**\n   * The outlet to render the element in\n   */\n  outlet: string;\n  /**\n   * Default: OutletPosition.BEFORE\n   */\n  position?: OutletPosition;\n}\n\n/**\n * Configuration type to render a component inline (next to the trigger)\n */\nexport interface LaunchInlineDialog extends LaunchDialog {\n  inline: boolean;\n}\n\n/**\n * Configuration type to render a component directly inside the cx-storefront (storefront selector).\n * Best used for global elements like dialogs.\n */\nexport interface LaunchInlineRootDialog extends LaunchDialog {\n  inlineRoot: boolean;\n}\n\n/**\n * Configuration type to render as link\n */\nexport interface LaunchRoute {\n  /**\n   * The route for the url\n   */\n  cxRoute: string;\n  /**\n   * The parameters for the route\n   */\n  params?: { [param: string]: any };\n}\n\n/**\n * Types of dialog openings supported\n */\nexport enum DIALOG_TYPE {\n  POPOVER = 'POPOVER',\n  POPOVER_CENTER = 'POPOVER_CENTER',\n  POPOVER_CENTER_BACKDROP = 'POPOVER_CENTER_BACKDROP',\n  DIALOG = 'DIALOG',\n  SIDEBAR_START = 'SIDEBAR_START',\n  SIDEBAR_END = 'SIDEBAR_END',\n}\n\n/**\n * List of available callers\n */\nexport const enum LAUNCH_CALLER {\n  ASM = 'ASM',\n  SKIP_LINKS = 'SKIP_LINKS',\n  ANONYMOUS_CONSENT = 'ANONYMOUS_CONSENT',\n  REPLENISHMENT_ORDER = 'REPLENISHMENT_ORDER',\n  PLACE_ORDER_SPINNER = 'PLACE_ORDER_SPINNER',\n  SUGGESTED_ADDRESSES = 'SUGGESTED_ADDRESSES',\n  COUPON = 'COUPON',\n  STOCK_NOTIFICATION = 'STOCK_NOTIFICATION',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './launch-config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ComponentRef,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Applicable, Priority } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  DIALOG_TYPE,\n  LaunchDialog,\n  LaunchOptions,\n  LAUNCH_CALLER,\n} from '../config';\n\nexport abstract class LaunchRenderStrategy implements Applicable {\n  // List of called references; only used for rendered elements\n  protected renderedCallers: Array<{\n    caller: LAUNCH_CALLER | string;\n    element?: any;\n    component?: ComponentRef<any>;\n  }> = [];\n\n  /**\n   * Classes to apply to the component when the dialog is a DIALOG\n   */\n  protected readonly dialogClasses = ['d-block', 'fade', 'modal', 'show'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER\n   */\n  protected readonly popoverClasses = ['cx-dialog-popover'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER_CENTER\n   */\n  protected readonly popoverCenterClasses = ['cx-dialog-popover-center'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER_CENTER with a backdrop\n   */\n  protected readonly popoverCenterBackdropClasses = [\n    'cx-dialog-popover-center-backdrop',\n  ];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_END\n   */\n  protected readonly sidebarEndClasses = ['cx-sidebar-end'];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_START\n   */\n  protected readonly sidebarStartClasses = ['cx-sidebar-start'];\n\n  protected renderer: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2\n  ) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /**\n   * Render method to implement based on the strategy\n   *\n   * @param config Launch configuration\n   */\n  abstract render(\n    config: LaunchOptions,\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef\n  ): Observable<ComponentRef<any> | undefined> | void;\n\n  /**\n   * Determines if the strategy is the right one for the provided configuration\n   *\n   * @param config\n   */\n  abstract hasMatch(config: LaunchOptions): boolean;\n\n  /**\n   * Determines if element should render\n   *\n   * @param caller\n   * @param config\n   */\n  protected shouldRender(\n    caller: LAUNCH_CALLER | string,\n    config: LaunchDialog\n  ): boolean {\n    return (\n      Boolean(config.component) &&\n      (this.renderedCallers.some((el) => el.caller === caller)\n        ? !!config.multi\n        : true)\n    );\n  }\n\n  protected applyClasses(\n    component: ComponentRef<any>,\n    dialogType: DIALOG_TYPE\n  ): void {\n    let classes = [];\n\n    // TODO: make classes configurable\n    switch (dialogType) {\n      case DIALOG_TYPE.DIALOG:\n        classes = this.dialogClasses;\n        this.renderer.addClass(this.document.body, 'modal-open');\n        break;\n      case DIALOG_TYPE.POPOVER:\n        classes = this.popoverClasses;\n        break;\n      case DIALOG_TYPE.POPOVER_CENTER:\n        classes = this.popoverCenterClasses;\n        break;\n      case DIALOG_TYPE.POPOVER_CENTER_BACKDROP:\n        classes = this.popoverCenterBackdropClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_END:\n        classes = this.sidebarEndClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_START:\n        classes = this.sidebarStartClasses;\n        break;\n    }\n\n    for (const newClass of classes) {\n      this.renderer.addClass(component.location.nativeElement, newClass);\n    }\n  }\n\n  /**\n   * Method to call when rendered element is destroyed\n   * The element will be removed from the list of rendered elements\n   *\n   * @param caller\n   * @param _config optional parameters used in children strategies\n   */\n  public remove(caller: LAUNCH_CALLER | string, config: LaunchOptions): void {\n    this.renderedCallers = this.renderedCallers.filter(\n      (el) => el.caller !== caller\n    );\n\n    if ((config as LaunchDialog)?.dialogType === DIALOG_TYPE.DIALOG) {\n      this.renderer.removeClass(this.document.body, 'modal-open');\n    }\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW; // low, as it's a default matcher\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config, DeferLoadingStrategy } from '@spartacus/core';\nimport { LaunchConfig } from '../launch-dialog/index';\n\n/**\n * The `BREAKPOINT` typing defaults to five default screen names:\n * xs, sm, md, lg, xl.\n *\n * The type can be extended to allow for custom screens, such as XLL or `tablet`.\n *\n * While the screen names are fully configurable, other features might have\n * pre-configured layout settings per screen. Page layouts or table configurations,\n * for example, are driven by screen size. In case you change the screen size or\n * introduce new screen names, you might loose out on these configurations.\n */\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n\n  /**\n   * The page fold identifies the last expected page slot above-the-fold.\n   * It's perfectly fine to specify this by indication, but keep in mind that\n   * a more precise indication will gain a more positive impact on performance.\n   */\n  pageFold?: string;\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\n};\n\nexport interface BreakPoint {\n  /**\n   * The minimum screen width.\n   */\n  min?: number;\n\n  /**\n   * The minimum screen width.\n   */\n  max?: number;\n}\n\n/**\n * The `LayoutBreakPoints` can be used to configure the size of a specific screen. The screen\n * are defined by breakpoints, with a min and/or max value. The breakpoint size is in pixels,\n * hence a numeric value is expected.\n */\nexport type LayoutBreakPoints = {\n  [t in BREAKPOINT]?: number | BreakPoint;\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breakpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class LayoutConfig {\n  /**\n   * The breakpoint configuration is used to defined various screens. A specific screen name can\n   * be used to further configure certain features, such as the overall layout or specific\n   * component configurations.\n   */\n  breakpoints?: LayoutBreakPoints;\n\n  layoutSlots?: LayoutSlotConfig;\n\n  /**\n   * Deferred loading is a technique to hold of with the loading / creation\n   * of DOM elements which are not not in the initial view port.\n   * This technique wil increase performance.\n   */\n  deferredLoading?: {\n    /**\n     * The global strategy will be used as a fallback strategy for all DOM creation,\n     * but can be overridden by local configuration, i.e. for cms components.\n     */\n    strategy?: DeferLoadingStrategy;\n    /**\n     * The intersection margin contains the offset used by the Intersection Observer\n     * to observe elements outside the view port.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\n     */\n    intersectionMargin?: string;\n  };\n\n  launch?: LaunchConfig;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends LayoutConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  ViewContainerRef,\n} from '@angular/core';\nimport { resolveApplicable } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\nimport { LayoutConfig } from '../../config/layout-config';\nimport { LaunchOptions, LAUNCH_CALLER } from '../config/launch-config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class LaunchDialogService {\n  private _dialogClose = new BehaviorSubject<any | undefined>(undefined);\n  private _dataSubject = new BehaviorSubject<any>(undefined);\n\n  get data$(): Observable<any> {\n    return this._dataSubject.asObservable();\n  }\n\n  constructor(\n    @Inject(LaunchRenderStrategy)\n    protected renderStrategies: LaunchRenderStrategy[],\n    protected layoutConfig: LayoutConfig\n  ) {\n    this.renderStrategies = this.renderStrategies || [];\n  }\n\n  /**\n   * Open the dialog\n   *\n   * @param caller LAUNCH_CALLER\n   * @param openElement button's Element ref\n   * @param vcr View Container Ref of the container for inline rendering\n   * @param data optional data which could be passed to dialog\n   */\n  openDialog(\n    caller: LAUNCH_CALLER | string,\n    openElement?: ElementRef,\n    vcr?: ViewContainerRef,\n    data?: any\n  ): Observable<any> | undefined {\n    const component = this.launch(caller, vcr, data);\n\n    if (component) {\n      return combineLatest([component, this.dialogClose]).pipe(\n        filter(([, close]) => close !== undefined),\n        tap(([comp]) => {\n          openElement?.nativeElement.focus();\n          this.clear(caller);\n          comp?.destroy();\n        }),\n        map(([comp]) => comp)\n      );\n    }\n  }\n  /**\n   * Render the element based on the strategy from the launch configuration\n   *\n   * @param caller LAUNCH_CALLER\n   * @param vcr View Container Ref of the container for inline rendering\n   */\n  launch(\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef,\n    data?: any\n  ): void | Observable<ComponentRef<any> | undefined> {\n    const config = this.findConfiguration(caller);\n    if (config) {\n      const renderer = this.getStrategy(config);\n\n      // Render if the strategy exists\n      if (renderer) {\n        this._dialogClose.next(undefined);\n        this._dataSubject.next(data);\n\n        return renderer.render(config, caller, vcr);\n      }\n    } else if (isDevMode()) {\n      console.warn('No configuration provided for caller ' + caller);\n    }\n  }\n\n  /**\n   * Opens dialog and subscribe in the service. Should be used if the trigger component might get destroyed while the component is open.\n   *\n   * @param caller Launch Caller\n   * @param openElement Element to open\n   * @param data Data to provide to the rendered element\n   */\n  openDialogAndSubscribe(\n    caller: LAUNCH_CALLER | string,\n    openElement?: ElementRef,\n    data?: any\n  ): void {\n    this.openDialog(caller, openElement, undefined, data)\n      ?.pipe(take(1))\n      .subscribe();\n  }\n\n  /**\n   * Util method to remove element from rendered elements list\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  clear(caller: LAUNCH_CALLER | string): void {\n    const config = this.findConfiguration(caller);\n\n    if (config) {\n      const renderer = this.getStrategy(config);\n\n      // Render if the strategy exists\n      if (renderer) {\n        renderer.remove(caller, config);\n      }\n    }\n  }\n\n  get dialogClose(): Observable<any | undefined> {\n    return this._dialogClose.asObservable();\n  }\n\n  closeDialog(reason: any) {\n    this._dialogClose.next(reason);\n  }\n\n  /**\n   * Returns the configuration for the caller\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  protected findConfiguration(\n    caller: LAUNCH_CALLER | string\n  ): LaunchOptions | undefined {\n    if (this.layoutConfig?.launch) {\n      return this.layoutConfig.launch[caller];\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the render strategy based on the configuration\n   *\n   * @param config Configuration for launch\n   */\n  protected getStrategy(\n    config: LaunchOptions\n  ): LaunchRenderStrategy | undefined {\n    return resolveApplicable(this.renderStrategies, [config]);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnDestroy, ViewContainerRef } from '@angular/core';\nimport { AnonymousConsentsService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/launch-config';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-management-banner',\n  templateUrl: './anonymous-consent-management-banner.component.html',\n})\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\n  private subscriptions = new Subscription();\n\n  bannerVisible$: Observable<boolean> =\n    this.anonymousConsentsService.isBannerVisible();\n\n  constructor(\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected vcr: ViewContainerRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  viewDetails(): void {\n    this.hideBanner();\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\n      undefined,\n      this.vcr\n    );\n    if (dialog) {\n      this.subscriptions.add(dialog.subscribe());\n    }\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      this.anonymousConsentsService\n        .giveAllConsents()\n        .pipe(tap(() => this.hideBanner()))\n        .subscribe()\n    );\n  }\n\n  hideBanner(): void {\n    this.anonymousConsentsService.toggleBannerDismissed(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"bannerVisible$ | async as bannerVisible\">\n  <div\n    [ngClass]=\"{ 'anonymous-consent-banner-hidden': !bannerVisible }\"\n    class=\"anonymous-consent-banner\"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-7 col-xs-12\">\n          <div class=\"cx-banner-title\">\n            {{ 'anonymousConsents.banner.title' | cxTranslate }}\n          </div>\n          <div class=\"cx-banner-description\">\n            {{ 'anonymousConsents.banner.description' | cxTranslate }}\n          </div>\n        </div>\n\n        <div class=\"col-lg-5 col-xs-12 cx-banner-buttons\">\n          <button class=\"btn btn-secondary\" (click)=\"viewDetails()\">\n            {{ 'anonymousConsents.banner.viewDetails' | cxTranslate }}\n          </button>\n          <button class=\"btn btn-primary\" (click)=\"allowAll()\">\n            {{ 'anonymousConsents.banner.allowAll' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the component from the configuration in the view container ref\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchInlineDialog,\n    caller: LAUNCH_CALLER | string,\n    vcr: ViewContainerRef\n  ): Observable<ComponentRef<any>> | void {\n    // Only render if a ViewContainerRef is provided\n    if (vcr && this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n\n      const component = vcr.createComponent(template);\n\n      if (config?.dialogType) {\n        this.applyClasses(component, config?.dialogType);\n      }\n\n      this.renderedCallers.push({ caller, element: vcr.element, component });\n\n      return of(component);\n    } else if (isDevMode()) {\n      if (!vcr) {\n        console.warn(`No view container ref provided for ${caller}`);\n      } else {\n        console.warn(\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\n        );\n      }\n    }\n  }\n\n  hasMatch(config: LaunchInlineDialog) {\n    return Boolean(config.inline);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  RendererFactory2,\n} from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LaunchInlineRootDialog, LAUNCH_CALLER } from '../config/launch-config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class InlineRootRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected injector: Injector\n  ) {\n    super(document, rendererFactory);\n  }\n\n  get hostComponent() {\n    return this.injector.get(ApplicationRef)?.components?.[0];\n  }\n\n  render(\n    config: LaunchInlineRootDialog,\n    caller: LAUNCH_CALLER | string\n  ): Observable<ComponentRef<any>> | void {\n    if (this.shouldRender(caller, config)) {\n      const componentFactory =\n        this.componentFactoryResolver.resolveComponentFactory(config.component);\n\n      const contentInjector = Injector.create({\n        providers: [],\n      });\n\n      const componentRef = componentFactory.create(contentInjector);\n\n      this.injector.get(ApplicationRef)?.attachView(componentRef.hostView);\n\n      this.renderer.appendChild(\n        this.hostComponent?.location.nativeElement,\n        componentRef.location.nativeElement\n      );\n\n      if (config?.dialogType) {\n        this.applyClasses(componentRef, config?.dialogType);\n      }\n\n      this.renderedCallers.push({ caller, component: componentRef });\n\n      return of(componentRef);\n    }\n  }\n\n  hasMatch(config: LaunchInlineRootDialog) {\n    return Boolean(config.inlineRoot);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\n\nexport enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n\n/**\n * Token for injecting outlet related context to the component rendered in the outlet\n */\nexport abstract class OutletContextData<T = any> {\n  /**\n   * Provides reference of the outlet where component is rendered in\n   */\n  reference: string;\n  /**\n   * Provides position of the outlet\n   */\n  position: OutletPosition;\n  /**\n   * Provides outlet context\n   *\n   * WARNING: Avoid using it if you need to read the latest value of the context. This property\n   *          is only the initial context value and won't be updated when the new context appears.\n   *          Use `context$` observable instead.\n   *\n   * @deprecated since 3.0 - use `context$` observable instead\n   */\n  context: T;\n  /**\n   * Provides outlet context as an observable\n   */\n  context$: Observable<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ComponentFactory, Injectable, TemplateRef } from '@angular/core';\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService<T = TemplateRef<any> | ComponentFactory<any>> {\n  private templatesRefs = {\n    [OutletPosition.BEFORE]: new Map<string, T[]>(),\n    [OutletPosition.REPLACE]: new Map<string, T[]>(),\n    [OutletPosition.AFTER]: new Map<string, T[]>(),\n  };\n\n  /**\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\n   * The UI position where this template or ComponentFactory is inserted is given by a\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\n   * is either before or after, or replaces the entire UI.\n   *\n   * @param outlet the UI location represented by a string\n   * @param template the `TemplateRef` that will be used to insert UI\n   * @param position the `OutletPosition` in the UI\n   */\n  add(outlet: string, template: T, position?: OutletPosition): void;\n  /**\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\n   */\n  add(\n    outlet: string,\n    // eslint-disable-next-line @typescript-eslint/unified-signatures\n    factory: T,\n    position?: OutletPosition\n  ): void;\n  /**\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\n   */\n  add(\n    outlet: string,\n    templateOrFactory: T,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    const store = this.templatesRefs[position];\n    if (store) {\n      const existing = store.get(outlet) || [];\n      const newValue: T[] = existing.concat([templateOrFactory]);\n      store.set(outlet, newValue);\n    }\n  }\n\n  /**\n   *\n   * Returns a single object or multiple objects for the given outlet reference,\n   * depending on the `stacked` argument.\n   *\n   * @param outlet The outlet reference\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\n   * @param stacked Indicates whether an array of outlet components is returned\n   */\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    stacked = AVOID_STACKED_OUTLETS\n  ): T[] | T | undefined {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    const templateRef: T[] | undefined = store.get(outlet);\n    if (templateRef && !stacked) {\n      return templateRef[0];\n    }\n    return templateRef;\n  }\n\n  remove(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    value?: T\n  ): void {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    this.removeValueOrAll(store, outlet, value);\n  }\n\n  protected removeValueOrAll(\n    store: Map<string, T[]>,\n    outlet: string,\n    value?: T\n  ): void {\n    if (!value && store.has(outlet)) {\n      store.delete(outlet);\n    } else if (value && store.has(outlet)) {\n      let existing = store.get(outlet);\n\n      existing = existing?.filter((val) => val !== value);\n\n      if (existing) {\n        store.set(outlet, existing);\n      }\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit, OnDestroy {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n\n  ngOnDestroy() {\n    this.outletService.remove(this.cxOutletRef, this.cxOutletPos, this.tpl);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { isNotNullable } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { OutletDirective } from './outlet.directive';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletRendererService {\n  private outletRefs = new BehaviorSubject(new Map<string, OutletDirective>());\n\n  /**\n   * Dynamically render the templates in the specified array\n   *\n   * @param outlet\n   */\n  render(outlet: string): void {\n    if (this.outletRefs.value.size !== 0) {\n      this.outletRefs.value.get(outlet)?.render();\n    }\n  }\n\n  /**\n   * Register outlet to be available to render dynamically\n   *\n   * @param cxOutlet\n   * @param context\n   */\n  register(cxOutlet: string, context: OutletDirective): void {\n    this.outletRefs.next(this.outletRefs.value.set(cxOutlet, context));\n  }\n  /**\n   * Returns map of outlets\n   *\n   */\n  getOutletRef(outlet: string): Observable<OutletDirective> {\n    return this.outletRefs.asObservable().pipe(\n      map((val) => val.get(outlet)),\n      filter(isNotNullable)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { distinctUntilChanged, first, map, mergeMap } from 'rxjs/operators';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\n\nexport type IntersectingCondition = (\n  entry: IntersectionObserverEntry\n) => boolean;\n\n/**\n * The IntersectionService uses the native IntersectionObserver (v2), which\n * can be used to implement pre-loading and deferred loading of DOM content.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntersectionService {\n  constructor(protected config: LayoutConfig) {}\n\n  /**\n   * Returns an Observable that emits only once a boolean value whenever\n   * the given element has shown in the view port.\n   *\n   * The returned observable will only emit the first value. The\n   * observable must be cleaned up either way, since the value might never emit; it\n   * depends on whether the element appears in the view port.\n   *\n   * @param element - HTML element\n   * @param options - Allows to specify an optional root margin, in order to fire before the element shows up in the viewport\n   * @param intersectingCondition - Allows to specify an intersecting condition.\n   * If this parameter is not set, then the transition state of the element will be verified whenever the element intersects the view port.\n   * @returns Element intersects?\n   */\n  isIntersected(\n    element: HTMLElement,\n    options?: IntersectionOptions,\n    intersectingCondition?: IntersectingCondition\n  ): Observable<boolean> {\n    return this.intersects(element, options, intersectingCondition).pipe(\n      first((v) => v === true)\n    );\n  }\n\n  /**\n   * Returns an observable that emits for every change of intersection of a given element.\n   *\n   * @param element - HTML element\n   * @param options - Allows to specify an optional root margin, in order to fire before the element shows up in the viewport\n   * @param intersectingCondition - Allows to specify an intersecting condition.\n   * If this parameter is not set, then the transition state of the element will be verified whenever the element intersects the view port.\n   * @returns Element intersects?\n   */\n  isIntersecting(\n    element: HTMLElement,\n    options?: IntersectionOptions,\n    intersectingCondition?: IntersectingCondition\n  ): Observable<boolean> {\n    return this.intersects(element, options, intersectingCondition);\n  }\n\n  /**\n   * Indicates whenever the element intersects the view port. An optional margin\n   * is used to intersects before the element shows up in the viewport.\n   * A value is emitted each time the element intersects.\n   */\n  private intersects(\n    element: HTMLElement,\n    options: IntersectionOptions = {},\n    intersectingCondition?: IntersectingCondition\n  ): Observable<boolean> {\n    return this.createIntersectionObservable(element, options).pipe(\n      mergeMap((entries: IntersectionObserverEntry[]) => entries),\n      map((entry: IntersectionObserverEntry) =>\n        intersectingCondition\n          ? intersectingCondition(entry)\n          : entry.isIntersecting\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  private createIntersectionObservable(\n    element: HTMLElement,\n    options: IntersectionOptions\n  ): Observable<IntersectionObserverEntry[]> {\n    return new Observable((observer: Observer<IntersectionObserverEntry[]>) => {\n      const rootMargin = this.getRootMargin(options);\n      const intersectOptions = { rootMargin, threshold: options.threshold };\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        observer.next(entries);\n      }, intersectOptions);\n      intersectionObserver.observe(element);\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    });\n  }\n\n  private getRootMargin(options: IntersectionOptions = {}): string | undefined {\n    if (options.rootMargin) {\n      return options.rootMargin;\n    }\n    const layoutConfig = this.config as LayoutConfig;\n    if (\n      layoutConfig.deferredLoading &&\n      layoutConfig.deferredLoading.intersectionMargin\n    ) {\n      return layoutConfig.deferredLoading.intersectionMargin;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\nimport { IntersectionService } from './intersection.service';\n\n/**\n * The defer loading serivce is used to defer loading of DOM elements\n * until the elements are required for the user experience.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeferLoaderService {\n  globalLoadStrategy: DeferLoadingStrategy;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected config: LayoutConfig,\n    protected intersectionService: IntersectionService\n  ) {\n    this.globalLoadStrategy =\n      config.deferredLoading?.strategy ?? DeferLoadingStrategy.INSTANT;\n  }\n\n  /**\n   * Defer loading till the element intersects the viewport.\n   *\n   * We evaluate whether we instantly load the element for different reasons:\n   * - we run in SSR mode\n   * - there's no global strategy given\n   * - the global loading strategy is set to INSTANT loading,\n   *   and the loading strategy in the given is not set to DEFER\n   * - the loading strategy in the given options is set to INSTANT\n   */\n  load(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\n      return of(true);\n    } else {\n      return this.intersectionService.isIntersected(element, options);\n    }\n  }\n\n  private shouldLoadInstantly(\n    elementLoadingStrategy: DeferLoadingStrategy | undefined\n  ): boolean {\n    return (\n      isPlatformServer(this.platformId) ||\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ComponentFactory,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\nimport { OutletRendererService } from './outlet-renderer.service';\nimport {\n  OutletContextData,\n  OutletPosition,\n  USE_STACKED_OUTLETS,\n} from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective<T = any> implements OnDestroy, OnChanges {\n  private renderedTemplate: any[] = [];\n  public renderedComponents = new Map<\n    OutletPosition,\n    Array<ComponentRef<any> | EmbeddedViewRef<any>>\n  >();\n\n  @Input() cxOutlet: string;\n\n  /**\n   * Context data to be provided to child view of the outlet\n   */\n  @Input() cxOutletContext: T;\n\n  /**\n   * Observable with current outlet context\n   */\n  private readonly outletContext$ = new ReplaySubject<T>(1);\n\n  /**\n   * Defers loading options for the the templates of this outlet.\n   */\n  @Input() cxOutletDefer: IntersectionOptions;\n\n  @Output() loaded: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  @Input() cxComponentRef: ComponentRef<any> | EmbeddedViewRef<any>;\n  @Output() cxComponentRefChange = new EventEmitter<\n    ComponentRef<any> | EmbeddedViewRef<any>\n  >();\n\n  subscription = new Subscription();\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService,\n    private deferLoaderService: DeferLoaderService,\n    private outletRendererService: OutletRendererService\n  ) {}\n\n  /**\n   * Renders view for outlet or defers it, depending on the input `cxOutletDefer`\n   */\n  public render(): void {\n    this.vcr.clear();\n    this.renderedTemplate = [];\n    this.renderedComponents.clear();\n    this.subscription.unsubscribe();\n    this.subscription = new Subscription();\n\n    if (this.cxOutletDefer) {\n      this.deferLoading();\n    } else {\n      this.build();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.cxOutlet) {\n      this.render();\n      this.outletRendererService.register(this.cxOutlet, this);\n    }\n    if (changes.cxOutletContext) {\n      this.outletContext$.next(this.cxOutletContext);\n    }\n  }\n\n  private deferLoading(): void {\n    this.loaded.emit(false);\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\n    // Although the deferLoaderService might emit only once, as long as the hostElement\n    // isn't being loaded, there's no value being emitted. Therefore we need to clean up\n    // the subscription on destroy.\n    this.subscription.add(\n      this.deferLoaderService\n        .load(hostElement, this.cxOutletDefer)\n        .subscribe(() => {\n          this.build();\n          this.loaded.emit(true);\n        })\n    );\n  }\n\n  /**\n   * Renders view for outlet\n   */\n  private build() {\n    this.buildOutlet(OutletPosition.BEFORE);\n    this.buildOutlet(OutletPosition.REPLACE);\n    this.buildOutlet(OutletPosition.AFTER);\n  }\n\n  /**\n   * Renders view in a given position for outlet\n   */\n  private buildOutlet(position: OutletPosition): void {\n    let templates: any[] = <any[]>(\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\n    );\n\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\n\n    if (!templates && position === OutletPosition.REPLACE) {\n      templates = [this.templateRef];\n    }\n\n    // Just in case someone extended the `OutletService` and\n    // returns a singular object.\n    if (!Array.isArray(templates)) {\n      templates = [templates];\n    }\n\n    const components: (ComponentRef<any> | EmbeddedViewRef<any>)[] = [];\n    templates.forEach((obj) => {\n      const component = this.create(obj, position);\n      if (component) {\n        components.push(component);\n      }\n    });\n\n    this.renderedComponents.set(position, components);\n  }\n\n  /**\n   * Renders view based on the given template or component factory\n   */\n  private create(\n    tmplOrFactory: any,\n    position: OutletPosition\n  ): ComponentRef<any> | EmbeddedViewRef<any> | undefined {\n    this.renderedTemplate.push(tmplOrFactory);\n\n    if (tmplOrFactory instanceof ComponentFactory) {\n      const component = this.vcr.createComponent(\n        tmplOrFactory,\n        undefined,\n        this.getComponentInjector(position)\n      );\n      this.cxComponentRefChange.emit(component);\n      return component;\n    } else if (tmplOrFactory instanceof TemplateRef) {\n      const view = this.vcr.createEmbeddedView(\n        <TemplateRef<any>>tmplOrFactory,\n        {\n          $implicit: this.cxOutletContext,\n        }\n      );\n\n      // we do not know if content is created dynamically or not\n      // so we apply change detection anyway\n      view.markForCheck();\n\n      this.cxComponentRefChange.emit(view);\n      return view;\n    }\n  }\n\n  /**\n   * Returns injector with OutletContextData that can be injected to the component\n   * rendered in the outlet\n   */\n  private getComponentInjector(position: OutletPosition): Injector {\n    const contextData: OutletContextData<T> = {\n      reference: this.cxOutlet,\n      position,\n      context: this.cxOutletContext,\n      context$: this.outletContext$.asObservable(),\n    };\n\n    return Injector.create({\n      providers: [\n        {\n          provide: OutletContextData,\n          useValue: contextData,\n        },\n      ],\n      parent: this.vcr.injector,\n    });\n  }\n\n  /**\n   * Returns the closest `HtmlElement`, by iterating over the\n   * parent nodes of the given element.\n   *\n   * We avoid traversing the parent _elements_, as this is blocking\n   * ie11 implementations. One of the spare exclusions we make to not\n   * supporting ie11.\n   *\n   * @param element\n   */\n  private getHostElement(element: Node): HTMLElement {\n    if (element instanceof HTMLElement) {\n      return element;\n    }\n    return this.getHostElement(<HTMLElement>element.parentNode);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.outletContext$.complete();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, StaticProvider, Type } from '@angular/core';\nimport { OutletPosition } from './outlet.model';\n\n/**\n * @private We plan to drive the outlets by standard configuration\n */\nexport const PROVIDE_OUTLET_OPTIONS = new InjectionToken<ProvideOutletOptions>(\n  'PROVIDE_OUTLET_OPTIONS'\n);\n\nexport interface ProvideOutletOptions {\n  /**\n   *  Unique id of the outlet\n   */\n  id: string;\n\n  /**\n   * Component to be registered for the outlet\n   */\n  component: Type<any>;\n\n  /**\n   * Component's position in the outlet\n   */\n  position?: OutletPosition;\n}\n\n/**\n * Helper function to register a component for an outlet.\n *\n * @param options.id unique id of the outlet\n * @param options.component Component to be registered for the outlet\n * @param options.position Component's position in the outlet (default: `OutletPosition.AFTER`)\n */\nexport function provideOutlet(options: ProvideOutletOptions): StaticProvider {\n  return {\n    provide: PROVIDE_OUTLET_OPTIONS,\n    useValue: options,\n    multi: true,\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  Type,\n} from '@angular/core';\nimport { MODULE_INITIALIZER } from '@spartacus/core';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletPosition } from './outlet.model';\nimport {\n  ProvideOutletOptions,\n  PROVIDE_OUTLET_OPTIONS,\n} from './outlet.providers';\nimport { OutletService } from './outlet.service';\n\n/**\n * @private\n */\nexport function registerOutletsFactory(\n  providedOutletOptions: ProvideOutletOptions[],\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService<ComponentFactory<Type<any>>>\n): () => void {\n  const result = () => {\n    (providedOutletOptions ?? []).forEach((options) => {\n      const factory = componentFactoryResolver.resolveComponentFactory(\n        options.component\n      );\n      outletService.add(\n        options.id,\n        factory,\n        options.position ?? OutletPosition.AFTER\n      );\n    });\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  exports: [OutletDirective],\n})\nexport class OutletModule {\n  static forRoot(): ModuleWithProviders<OutletModule> {\n    return {\n      ngModule: OutletModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          useFactory: registerOutletsFactory,\n          deps: [\n            [new Optional(), PROVIDE_OUTLET_OPTIONS],\n            ComponentFactoryResolver,\n            OutletService,\n          ],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders<OutletModule> {\n    return {\n      ngModule: OutletModule,\n      providers: [\n        {\n          provide: MODULE_INITIALIZER,\n          useFactory: registerOutletsFactory,\n          deps: [\n            [new Optional(), PROVIDE_OUTLET_OPTIONS],\n            ComponentFactoryResolver,\n            OutletService,\n          ],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './outlet-ref/outlet-ref.directive';\nexport * from './outlet-ref/outlet-ref.module';\nexport * from './outlet-renderer.service';\nexport * from './outlet.directive';\nexport * from './outlet.model';\nexport { OutletModule } from './outlet.module';\nexport { provideOutlet, ProvideOutletOptions } from './outlet.providers';\nexport * from './outlet.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  RendererFactory2,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport {\n  OutletPosition,\n  OutletService,\n} from '../../../cms-structure/outlet/index';\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected outletService: OutletService<ComponentFactory<any>>,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected outletRendererService: OutletRendererService\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the element in the configured outlet\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchOutletDialog,\n    caller: LAUNCH_CALLER | string\n  ): Observable<ComponentRef<any> | undefined> | void {\n    if (this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n      this.outletService.add(\n        config.outlet,\n        template,\n        config.position ? config.position : OutletPosition.BEFORE\n      );\n      this.outletRendererService.render(config.outlet);\n      this.renderedCallers.push({ caller });\n\n      return this.outletRendererService.getOutletRef(config.outlet).pipe(\n        map((outletDirective) => {\n          const components = outletDirective.renderedComponents.get(\n            config.position ? config.position : OutletPosition.BEFORE\n          ) as ComponentRef<any>[];\n\n          return components\n            .reverse()\n            .find(\n              (component) => component.componentType === template.componentType\n            );\n        }),\n        tap((component) => {\n          if (config?.dialogType && component) {\n            this.applyClasses(component, config?.dialogType);\n          }\n        })\n      );\n    }\n  }\n\n  hasMatch(config: LaunchOutletDialog) {\n    return Boolean(config.outlet);\n  }\n\n  remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void {\n    const template = this.componentFactoryResolver.resolveComponentFactory(\n      config.component\n    );\n\n    this.outletService.remove(\n      config.outlet,\n      config.position ? config.position : OutletPosition.BEFORE,\n      template\n    );\n\n    super.remove(caller, config);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, RendererFactory2 } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected routingService: RoutingService\n  ) {\n    super(document, rendererFactory);\n  }\n  /**\n   * Navigates to the route configured for the caller\n   */\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER | string) {\n    this.routingService.go(config);\n  }\n\n  hasMatch(config: LaunchRoute) {\n    return Boolean(config.cxRoute);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './inline-render.strategy';\nexport * from './inline-root-render.strategy';\nexport * from './launch-dialog.service';\nexport * from './launch-render.strategy';\nexport * from './outlet-render.strategy';\nexport * from './routing-render.strategy';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { LayoutConfig } from '../config/layout-config';\nimport {\n  InlineRenderStrategy,\n  LaunchRenderStrategy,\n  OutletRenderStrategy,\n  RoutingRenderStrategy,\n} from './services/index';\nimport { InlineRootRenderStrategy } from './services/inline-root-render.strategy';\n\n@NgModule({\n  providers: [\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: OutletRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: InlineRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: RoutingRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: InlineRootRenderStrategy,\n      multi: true,\n    },\n  ],\n})\nexport class LaunchDialogModule {\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\n    return {\n      ngModule: LaunchDialogModule,\n      providers: [{ provide: LayoutConfig, useExisting: Config }],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/index';\nexport * from './launch-dialog.module';\nexport * from './services/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\n\nexport enum ICON_TYPE {\n  ACTIVE = 'ACTIVE',\n  ADDRESS_BOOK = 'ADDRESS_BOOK',\n  AMEX = 'AMEX',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CARET_UP = 'CARET_UP',\n  CART = 'CART',\n  CHECK = 'CHECK',\n  CIRCLE = 'CIRCLE',\n  CLIPBOARD_LIST = 'CLIPBOARD_LIST',\n  CLOCK = 'CLOCK',\n  CLOSE = 'CLOSE',\n  COLLAPSE = 'COLLAPSE',\n  CREDIT_CARD = 'CREDIT_CARD',\n  DINERS_CLUB = 'DINERS_CLUB',\n  DOWNLOAD = 'DOWNLOAD',\n  EMPTY_HEART = 'EMPTY_HEART',\n  ERROR = 'ERROR',\n  EXPAND = 'EXPAND',\n  EXPAND_ARROWS = 'EXPAND_ARROWS',\n  EYE = 'EYE',\n  EYE_SLASH = 'EYE_SLASH',\n  FILE = 'FILE',\n  FILTER = 'FILTER',\n  GRID = 'GRID',\n  HEART = 'HEART',\n  INFO = 'INFO',\n  LINK_OUT = 'LINK_OUT',\n  LIST = 'LIST',\n  MASTER_CARD = 'MASTER_CARD',\n  OFF = 'OFF',\n  ON = 'ON',\n  ORDER = 'ORDER',\n  PENCIL = 'PENCIL',\n  RESET = 'RESET',\n  REPEAT = 'REPEAT',\n  SEARCH = 'SEARCH',\n  SORT = 'SORT',\n  SORT_AMOUNT_DOWN = 'SORT_AMOUNT_DOWN',\n  SORT_AMOUNT_UP = 'SORT_AMOUNT_UP',\n  SORT_DOWN = 'SORT_DOWN',\n  STAR = 'STAR',\n  SUCCESS = 'SUCCESS',\n  TRASH = 'TRASH',\n  USER_FRIENDS = 'USER_FRIENDS',\n  VISA = 'VISA',\n  WARNING = 'WARNING',\n  HEADSET = 'HEADSET',\n  ATTACHMENT = 'ATTACHMENT',\n  UPLOAD = 'UPLOAD',\n  USER = 'USER',\n  ARROW_LEFT = 'ARROW_LEFT',\n  ARROW_RIGHT = 'ARROW_RIGHT',\n  ARROW_DOWN = 'ARROW_DOWN',\n  ARROW_UP = 'ARROW_UP',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class IconConfig {\n  icon?: IconOptions;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends IconConfig {}\n}\n\nexport interface IconOptions {\n  /**\n   * Each icon type can be configured with a so-called symbol. The symbol will\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n   * a font based icon. The following configuration would map to a fontawesome\n   * icon:\n   *\n   * icon: {\n   *   symbols: {\n   *     CART: 'fas fa-shopping-cart'\n   *   }\n   * }\n   */\n  symbols?: {\n    [ICON_TYPE: string]: string;\n  };\n\n  /**\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n   * is used for the SVG xlink reference.\n   */\n  resources?: IconConfigResource[];\n\n  /**\n   * Lists icons that should be flipped for a specific direction.\n   */\n  flipDirection?: {\n    [ICON_TYPE: string]: DirectionMode;\n  };\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: (ICON_TYPE | string)[];\n}\n\n/**\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\n * The resources will be automatically loaded in case they're required for the `ICON_TYPE`.\n */\nexport enum IconResourceType {\n  /**\n   * An svg based icon requires an SVG resource that must be loaded,\n   * this is typically a sprite svg file.\n   */\n  SVG = 'svg',\n\n  /**\n   * A font based ICON might require an additional CSS file to be loaded.\n   */\n  LINK = 'link',\n  /**\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\n   */\n  TEXT = 'text',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      ACTIVE: 'fas fa-check',\n      ADDRESS_BOOK: 'far fa-address-book',\n      AMEX: 'fab fa-cc-amex',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_LEFT: 'fas fa-angle-left',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_UP: 'fas fa-angle-up',\n      CART: 'fas fa-shopping-cart',\n      CHECK: 'fas fa-check',\n      CIRCLE: 'fas fa-circle',\n      CLIPBOARD_LIST: 'fas fa-clipboard-list',\n      CLOCK: 'far fa-clock',\n      CLOSE: 'fas fa-times',\n      COLLAPSE: 'fas fa-minus',\n      CREDIT_CARD: 'fas fa-credit-card',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      DOWNLOAD: 'fas fa-download',\n      EMPTY_HEART: 'far fa-heart',\n      ERROR: 'fas fa-exclamation-circle',\n      EXPAND_ARROWS: 'fas fa-expand',\n      EXPAND: 'fas fa-plus',\n      EYE_SLASH: 'fas fa-eye-slash',\n      EYE: 'fas fa-eye',\n      FILE: 'fas fa-file',\n      FILTER: 'fas fa-filter',\n      GRID: 'fas fa-th-large',\n      HEART: 'fas fa-heart',\n      INFO: 'fas fa-info-circle',\n      LINK_OUT: 'fas fa-external-link-alt',\n      LIST: 'fas fa-bars',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      OFF: 'fas fa-toggle-off',\n      ON: 'fas fa-toggle-on',\n      ORDER: 'fas fa-clipboard-list',\n      PDF_FILE: 'fas fa-file-pdf',\n      PENCIL: 'fas fa-pencil-alt',\n      REPEAT: 'fas fa-retweet',\n      RESET: 'fas fa-times-circle',\n      SEARCH: 'fas fa-search',\n      SORT_AMOUNT_DOWN: 'fas fa-sort-amount-down',\n      SORT_AMOUNT_UP: 'fas fa-sort-amount-up',\n      SORT_DOWN: 'fas fa-sort-down',\n      SORT: 'fas fa-sort',\n      STAR: 'fas fa-star',\n      SUCCESS: 'fas fa-check-circle',\n      TRASH: 'fas fa-trash',\n      USER_FRIENDS: 'fas fa-user-friends',\n      VISA: 'fab fa-cc-visa',\n      WARNING: 'fas fa-exclamation-triangle',\n      HEADSET: 'fas fa-headset',\n      ATTACHMENT: 'fas fa-paperclip',\n      UPLOAD: 'fas fa-upload',\n      USER: 'fas fa-user',\n      ARROW_LEFT: 'fas fa-arrow-left',\n      ARROW_RIGHT: 'fas  fa-arrow-right',\n      ARROW_DOWN: 'fas  fa-arrow-down',\n      ARROW_UP: 'fas  fa-arrow-up',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: '',\n      },\n    ],\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, SecurityContext } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconOptions,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources: string[] = [];\n  constructor(\n    protected winRef: WindowRef,\n    protected iconConfig: IconConfig,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  /**\n   * Returns an html fragment which can be added to the DOM in a safe way.\n   */\n  getHtml(type: ICON_TYPE | string): SafeHtml | undefined {\n    if (this.isResourceType(type, IconResourceType.SVG)) {\n      const url = this.sanitizer.sanitize(\n        SecurityContext.URL,\n        this.getSvgPath(type) || null\n      );\n      if (url) {\n        const useElement = this.winRef.document.createElement('use');\n        useElement.setAttribute('xlink:href', url);\n        const svgElement = this.winRef.document.createElement('svg');\n        svgElement.appendChild(useElement);\n        return this.sanitizer.bypassSecurityTrustHtml(svgElement.outerHTML);\n      }\n    }\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\n      const symbol = this.getSymbol(type);\n      if (symbol) {\n        const helperDiv = this.winRef.document.createElement('div');\n        helperDiv.textContent = symbol;\n        return this.sanitizer.bypassSecurityTrustHtml(helperDiv.innerHTML);\n      }\n    }\n  }\n\n  /**\n   * Return the direction for which the icon should mirror (ltr vs rtl). The icon direction\n   * is configurable, but optional, as only a few icons should be flipped for rtl direction.\n   */\n  getFlipDirection(type: ICON_TYPE | string): DirectionMode | undefined {\n    return this.config?.flipDirection?.[type];\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Indicates whether the given `ICON_TYPE` is configured for\n   * the given `IconResourceType`.\n   */\n  private isResourceType(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): boolean {\n    return (\n      this.config?.resources !== undefined &&\n      !!this.config.resources.find(\n        (res) =>\n          res.types && res.type === resourceType && res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config a[[s been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  private getSvgPath(iconType: ICON_TYPE | string): string | undefined {\n    const svgResource = this.config?.resources?.find(\n      (res) =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE | string): void {\n    const resource = this.findResource(iconType, IconResourceType.LINK);\n\n    if (resource?.url && !this.loadedResources.includes(resource.url)) {\n      this.loadedResources.push(resource.url);\n      // using DOM APIs, so need to sanitize our URLs manually\n      const sanitizedUrl = this.sanitizer.sanitize(\n        SecurityContext.URL,\n        resource.url\n      );\n      if (sanitizedUrl) {\n        const head = this.winRef.document.getElementsByTagName('head')[0];\n        const link = this.winRef.document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = sanitizedUrl;\n        head.appendChild(link);\n      }\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): IconConfigResource | undefined {\n    if (!this.config?.resources) {\n      return;\n    }\n\n    let resource = this.config.resources.find(\n      (res) =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.resources.find(\n        (res) =>\n          (res.type === resourceType && !res.types) ||\n          (res.types && res.types.length === 0)\n      );\n    }\n    return resource;\n  }\n\n  getSymbol(iconType: ICON_TYPE | string) {\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\n      return this.config.symbols[iconType];\n    }\n  }\n\n  private get config(): IconOptions | undefined {\n    return this.iconConfig.icon;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * The ltr and rtl directions can be used to configure the storefront for a certain direction, both statically\n * or dynamically.\n *\n * The HTML5 \"auto\" value is not supported in Spartacus, as it's considered to be too fragile for the global\n * direction.\n */\nexport enum DirectionMode {\n  /**\n   * Indicates Left to Right direction.\n   */\n  LTR = 'ltr',\n  /**\n   * Indicates Right to Left direction.\n   */\n  RTL = 'rtl',\n}\n\n/**\n * Contains the configuration mode for language driven directionality. The detect mode is recommended\n * for a multi-site or multi-lingual setup where the active language should dictate the direction mode.\n */\nexport interface Direction {\n  /**\n   * The default direction mode is used for the direction mode of the overall storefront. The default mode\n   * can be used for all languages, but can be further enhanced dynamically by using the language detect mode.\n   * The default mode will also be used in detect mode for those languages that are not listed in either\n   * `rtlLanguages` or `ltrLanguages`.\n   */\n  default?: DirectionMode;\n\n  /**\n   * If detect is enabled, the direction is driven by the active language. The language is compared to the\n   * list of configured `rtlLanguages` vs `ltrLanguages`. If no language is resolved, the default direction\n   * mode is used.\n   *\n   * If no direction can be resolved, the direction is removed.\n   */\n  detect?: boolean;\n\n  /**\n   * The language isoCodes that are used to detect Right to Left languages.\n   */\n  rtlLanguages?: string[];\n\n  /**\n   * The language isoCodes that are used to detect Left to Right languages.\n   */\n  ltrLanguages?: string[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE as DEFAULT_ICON_TYPE } from './icon.model';\n\ntype ICON_TYPE = DEFAULT_ICON_TYPE | string;\n\n/**\n *\n * The icon component can be added in different ways:\n *\n * With the component selector:\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\n *\n * With the attribute selector:\n * `<span cxIcon=\"STAR\"></span>`\n *\n * Additionally, content can be projected to the icon:\n *\n * `<button cxIcon=\"HAPPY\">happy label</button>`\n *\n * The above button would become (based on a TEXT resource type):\n * `<button>😊happy label</button>`\n *\n * While the content is projected, the icon itself doesn't require an\n * additional DOM node which is an advantage over the component selector.\n */\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set cxIcon(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set type(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * the icon provides an html fragment that is used to add SVG or text based icons.\n   */\n  icon: SafeHtml | undefined;\n\n  /**\n   * The `flip-at-rtl` class is added to the DOM for the style layer to flip the icon in RTL direction.\n   */\n  @HostBinding('class.flip-at-rtl') flipAtRtl: boolean;\n\n  /**\n   * The `flip-at-ltr` class is added to the DOM for the style layer to flip the icon in LTR direction.\n   */\n  @HostBinding('class.flip-at-ltr') flipAtLtr: boolean;\n\n  /**\n   * Maintains the applied style classes so we can remove them when the\n   * icon type changes at run time.\n   */\n  protected styleClasses: string[];\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected renderer: Renderer2\n  ) {}\n\n  protected setIcon(type: ICON_TYPE): void {\n    if (!type || <string>type === '') {\n      return;\n    }\n    this.icon = this.iconLoader.getHtml(type);\n    this.addStyleClasses(type);\n    this.iconLoader.addLinkResource(type);\n    this.flipIcon(type);\n  }\n\n  /**\n   * The icons supports flipping for some icons to support rtl and ltr directions.\n   */\n  protected flipIcon(type: ICON_TYPE) {\n    // TODO: this can be dropped with the next major release.\n    if (!this.iconLoader.getFlipDirection) {\n      return;\n    }\n    const iconDirection = this.iconLoader.getFlipDirection(type);\n    this.flipAtLtr = iconDirection === DirectionMode.LTR;\n    this.flipAtRtl = iconDirection === DirectionMode.RTL;\n  }\n\n  /**\n   * Adds the style classes and the link resource (if available).\n   */\n  protected addStyleClasses(type: ICON_TYPE): void {\n    this.renderer.addClass(this.host, 'cx-icon');\n\n    this.styleClasses?.forEach((cls) =>\n      this.renderer.removeClass(this.host, cls)\n    );\n\n    this.styleClasses = this.iconLoader.getStyleClasses(type)?.split(' ');\n    this.styleClasses?.forEach((cls) => {\n      if (cls !== '') {\n        this.renderer.addClass(this.host, cls);\n      }\n    });\n  }\n\n  protected get host() {\n    return this.elementRef.nativeElement;\n  }\n}\n","<i [outerHTML]=\"icon\"></i><ng-content></ng-content>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconConfig } from './icon.model';\n\nexport const defaultIconConfig: IconConfig = {\n  icon: {\n    flipDirection: {\n      CARET_RIGHT: DirectionMode.RTL,\n      CARET_LEFT: DirectionMode.RTL,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultIconConfig } from './default-icon.config';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultIconConfig),\n    // TODO: move the opinionated fontawesome config to a recipe\n    provideDefaultConfig(fontawesomeIconConfig),\n  ],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, Input, NgModule } from '@angular/core';\nimport { IconLoaderService } from '../icon-loader.service';\n\n// PRIVATE TESTING UTIL\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  template: `{{ type || cxIcon }}`,\n})\nexport class MockIconComponent {\n  @Input() cxIcon: any;\n  @Input() type: any;\n}\n\nconst mockComponents = [MockIconComponent];\n\nexport class MockIconLoaderService {\n  getHtml() {\n    // Intentional empty method\n  }\n  getStyleClasses() {\n    // Intentional empty method\n  }\n  addStyleClasses() {\n    // Intentional empty method\n  }\n  addLinkResource() {\n    // Intentional empty method\n  }\n}\n\n@NgModule({\n  declarations: mockComponents,\n  exports: mockComponents,\n  providers: [\n    {\n      provide: IconLoaderService,\n      useClass: MockIconLoaderService,\n    },\n  ],\n})\nexport class IconTestingModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './fontawesome-icon.config';\nexport * from './icon-loader.service';\nexport * from './icon.component';\nexport * from './icon.model';\nexport * from './icon.module';\nexport * from './testing/icon-testing.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n","<div class=\"loader-container\" role=\"status\">\n  <div class=\"loader\">{{ 'spinner.loading' | cxTranslate }}</div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  consentGiven = false;\n\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Input()\n  requiredConsents: string[] = [];\n\n  @Input()\n  consent: AnonymousConsent | null;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  ngOnInit(): void {\n    if (this.consent) {\n      this.consentGiven = Boolean(\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    } else {\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n          this.consentGiven = false;\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n          this.consentGiven = true;\n        }\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentGiven = !this.consentGiven;\n\n    this.consentChanged.emit({\n      given: this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n\n  isRequired(templateId: string | undefined): boolean {\n    return templateId ? this.requiredConsents.includes(templateId) : false;\n  }\n}\n","<div class=\"form-check\">\n  <label>\n    <input\n      type=\"checkbox\"\n      class=\"form-check-input\"\n      (change)=\"onConsentChange()\"\n      [checked]=\"consentGiven\"\n      [disabled]=\"isRequired(consentTemplate?.id)\"\n    />\n    <span class=\"form-check-label cx-be-bold\">\n      {{ consentTemplate?.name }}\n    </span>\n    <br />\n    <span class=\"form-check-label\">\n      {{ consentTemplate?.description }}\n    </span>\n  </label>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog',\n  templateUrl: './anonymous-consent-dialog.component.html',\n})\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\n  @HostBinding('attr.role') role = 'dialog';\n  @HostBinding('attr.aria-modal') modal = true;\n\n  private subscriptions = new Subscription();\n\n  showLegalDescription: boolean | undefined = true;\n  iconTypes = ICON_TYPE;\n  requiredConsents: string[] = [];\n\n  loading$: Observable<boolean>;\n  templates$: Observable<ConsentTemplate[]>;\n  consents$: Observable<AnonymousConsent[]>;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'input[type=\"checkbox\"]',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    // Close on click outside the dialog window\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected config: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected el: ElementRef,\n    protected launchDialogService: LaunchDialogService\n  ) {\n    if (this.config.anonymousConsents) {\n      this.showLegalDescription =\n        this.config.anonymousConsents.showLegalDescriptionInDialog;\n      if (this.config.anonymousConsents.requiredConsents) {\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.templates$ = this.anonymousConsentsService.getTemplates();\n    this.consents$ = this.anonymousConsentsService.getConsents();\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\n  }\n\n  close(reason?: any): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  rejectAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                consent &&\n                this.anonymousConsentsService.isConsentGiven(consent)\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                if (template.id) {\n                  this.anonymousConsentsService.withdrawConsent(template.id);\n                }\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('rejectAll');\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                consent &&\n                (consent.consentState == null ||\n                  this.anonymousConsentsService.isConsentWithdrawn(consent))\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                if (template.id) {\n                  this.anonymousConsentsService.giveConsent(template.id);\n                }\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('allowAll');\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return Boolean(\n      template.id &&\n        this.config.anonymousConsents?.requiredConsents &&\n        this.config.anonymousConsents.requiredConsents.includes(template.id)\n    );\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (template.id) {\n      if (given) {\n        this.anonymousConsentsService.giveConsent(template.id);\n      } else {\n        this.anonymousConsentsService.withdrawConsent(template.id);\n      }\n    }\n  }\n\n  getCorrespondingConsent(\n    template: ConsentTemplate,\n    consents: AnonymousConsent[] = []\n  ): AnonymousConsent | null {\n    for (const consent of consents) {\n      if (template.id === consent.templateCode) {\n        return consent;\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div\n  class=\"cx-anonymous-consent-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n>\n  <div class=\"cx-dialog-content\">\n    <div *ngIf=\"loading$ | async; else dialogBody\">\n      <cx-spinner></cx-spinner>\n    </div>\n    <ng-template #dialogBody>\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <div class=\"cx-dialog-header\">\n        <h3>\n          {{ 'anonymousConsents.dialog.title' | cxTranslate }}\n        </h3>\n        <button\n          type=\"button\"\n          class=\"close\"\n          [attr.aria-label]=\"'common.close' | cxTranslate\"\n          (click)=\"close('Cross click')\"\n        >\n          <span aria-hidden=\"true\">\n            <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n          </span>\n        </button>\n      </div>\n      <!-- Separator -->\n      <div class=\"cx-dialog-description\" *ngIf=\"showLegalDescription\">\n        {{ 'anonymousConsents.dialog.legalDescription' | cxTranslate }}\n        <div\n          class=\"cx-dialog-separator col-sm-12 d-xs-block d-sm-block d-md-none\"\n        ></div>\n      </div>\n      <!-- Actions -->\n      <div class=\"cx-dialog-buttons\">\n        <a tabindex=\"0\" class=\"btn-link cx-action-link\" (click)=\"rejectAll()\">{{\n          'anonymousConsents.dialog.clearAll' | cxTranslate\n        }}</a>\n        <a tabindex=\"0\" class=\"btn-link cx-action-link\" (click)=\"allowAll()\">{{\n          'anonymousConsents.dialog.selectAll' | cxTranslate\n        }}</a>\n      </div>\n      <!-- Modal Body -->\n      <div class=\"cx-dialog-body\" *ngIf=\"templates$ | async as templates\">\n        <ng-container *ngIf=\"consents$ | async as consents\">\n          <div\n            class=\"cx-dialog-row col-sm-12 col-md-6\"\n            *ngFor=\"let template of templates\"\n          >\n            <cx-consent-management-form\n              [consentTemplate]=\"template\"\n              [requiredConsents]=\"requiredConsents\"\n              [consent]=\"getCorrespondingConsent(template, consents)\"\n              (consentChanged)=\"onConsentChange($event)\"\n            ></cx-consent-management-form>\n          </div>\n        </ng-container>\n      </div>\n    </ng-template>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { DIALOG_TYPE } from '../../layout/launch-dialog/index';\nimport { AnonymousConsentDialogComponent } from '../../shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component';\n\nexport const defaultAnonymousConsentLayoutConfig: LayoutConfig = {\n  launch: {\n    ANONYMOUS_CONSENT: {\n      inlineRoot: true,\n      component: AnonymousConsentDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Component,\n  ElementRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/launch-config';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-anonymous-consent-open-dialog',\n  templateUrl: './anonymous-consent-open-dialog.component.html',\n})\nexport class AnonymousConsentOpenDialogComponent {\n  @ViewChild('open') openElement: ElementRef;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  openDialog(): void {\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\n      this.openElement,\n      this.vcr\n    );\n    if (dialog) {\n      dialog.pipe(take(1)).subscribe();\n    }\n  }\n}\n","<button #open class=\"btn btn-link\" (click)=\"openDialog()\">\n  {{ 'anonymousConsents.preferences' | cxTranslate }}\n</button>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  DeferLoadingStrategy,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../layout/a11y/keyboard-focus/index';\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\nimport { defaultAnonymousConsentLayoutConfig } from './default-anonymous-consent-layout.config';\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultAnonymousConsentLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AnonymousConsentManagementBannerComponent: {\n          component: AnonymousConsentManagementBannerComponent,\n          deferLoading: DeferLoadingStrategy.INSTANT,\n        },\n        AnonymousConsentOpenDialogComponent: {\n          component: AnonymousConsentOpenDialogComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  exports: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n})\nexport class AnonymousConsentManagementBannerModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consent-management.module';\nexport * from './banner/anonymous-consent-management-banner.component';\nexport * from './open-dialog/anonymous-consent-open-dialog.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport {\n  BreakPoint,\n  BREAKPOINT,\n  LayoutBreakPoints,\n  LayoutConfig,\n} from '../config/layout-config';\n\n/**\n * The `BreakpointService` resolves the various screen sizes that are used in\n * the storefront. The screen sizes are globally configurable based on your\n * layout requirements. You can adjust the screen sizes by setting the minimum\n * and/or maximum size for a breakpoint, as well as extending the configuration\n * with new screens.\n *\n * By default, the `BreakpointService` is based on the breakpoints from the\n * Bootstrap ui library:\n * - `xs`: < 576px\n * - `sm`: 576px - 767px\n * - `md`: 768px - 991px\n * - `lg`: 992px - 1199px\n * - `xl`: >= 1200px\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  private _breakpoints: BREAKPOINT[];\n\n  breakpoint$: Observable<BREAKPOINT> = isPlatformBrowser(this.platform)\n    ? this.winRef.resize$.pipe(\n        map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\n        distinctUntilChanged()\n      )\n    : of(this.fallbackBreakpoint);\n\n  constructor(\n    protected winRef: WindowRef,\n    protected layoutConfig: LayoutConfig,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  /**\n   * Returns the breakpoints for the storefront layout.\n   *\n   * The breakpoints are driven by the `LayoutConfig.breakpoints` and sorted based on\n   * the given screen size.\n   */\n  get breakpoints(): BREAKPOINT[] {\n    if (!this._breakpoints) {\n      this._breakpoints = this.resolveBreakpointsFromConfig();\n    }\n    return this._breakpoints;\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpoint, given by the `LayoutConfig.breakpoints`\n   * configuration.\n   */\n  getSize(breakpoint: BREAKPOINT): number | null {\n    return (\n      this.getMaxSize(breakpoint) ??\n      // if there's no direct max value or explicit max value\n      // we must derive the max value from the previous min\n      this.getMinSize(\n        this.breakpoints?.[this.breakpoints.indexOf(breakpoint) + 1]\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is smaller than the maximum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\n   */\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is larger than the minimum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\n   */\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(this.breakpoints.indexOf(breakpoint))\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the given breakpoint fits in the current screen size.\n   */\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\n  }\n\n  /**\n   * Returns the fallback breakpoint in case no breakpoint can be resolved. This is\n   * typically the case when we're on SSR without an actual window.\n   *\n   * Returns the smallest screen size (mobile first).\n   */\n  protected get fallbackBreakpoint(): BREAKPOINT {\n    return this.breakpoints?.[0];\n  }\n\n  /**\n   * Resolves the breakpoints and sorts them according to the configured size.\n   *\n   * The sort order is by small to large screens.\n   */\n  protected resolveBreakpointsFromConfig(): BREAKPOINT[] {\n    const sortByScreenSize = (next: BREAKPOINT, prev: BREAKPOINT): number => {\n      const nextMinSize = this.getMinSize(next);\n      const maxNext = Math.max(\n        nextMinSize ? nextMinSize + 1 : 0,\n        this.getMaxSize(next) || 0\n      );\n      const preMinSize = this.getMinSize(prev);\n      const maxPrev = Math.max(\n        preMinSize ? preMinSize + 1 : 0,\n        this.getMaxSize(prev) || 0\n      );\n      return maxNext < maxPrev ? -1 : 0;\n    };\n    return (Object.keys(this.config) as BREAKPOINT[]).sort(sortByScreenSize);\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpoint, given by the\n   * `LayoutConfig.breakpoints` configuration. We will try to resolve the\n   * max size form the current breakpoint, but if this is not available, we\n   * resolve it form the next breakpoint\n   */\n  protected getMaxSize(breakpoint: BREAKPOINT): number | null {\n    const breakpointConfig = this.config[breakpoint];\n\n    if (!breakpointConfig) {\n      return null;\n    }\n\n    // we treat numbers as the max number by default\n    if (typeof breakpointConfig === 'number') {\n      return breakpointConfig as number;\n    } else if (breakpointConfig.max) {\n      return breakpointConfig.max;\n    } else {\n      return null;\n    }\n  }\n\n  protected getMinSize(breakpoint: BREAKPOINT): number | null {\n    return (this.config[breakpoint] as BreakPoint)?.min ?? null;\n  }\n\n  /**\n   * Returns a `BREAKPOINT` for the given window size.\n   *\n   * This method tries to match the closest breakpoint for the given\n   * window size. We'll fallback to the `largest` size in case the window\n   * is greater than the largest configurable breakpoint.\n   *\n   * The windowWidth should be smaller than the maximum size of any of the\n   * screen sizes defined in the `LayoutConfig.breakpoints`.\n   */\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    return (\n      this.breakpoints.find((br) => {\n        const size = this.getSize(br);\n        return size !== null && windowWidth < size;\n      }) ?? this.breakpoints?.[this.breakpoints.length - 1]\n    );\n  }\n\n  /**\n   * Helper method to return the breakpoint configuration.\n   */\n  protected get config(): LayoutBreakPoints {\n    return this.layoutConfig?.breakpoints || {};\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode, OnDestroy } from '@angular/core';\nimport {\n  CmsService,\n  isNotUndefined,\n  Page,\n  UnifiedInjector,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageLayoutService implements OnDestroy {\n  protected handlers: PageLayoutHandler[];\n  protected subscription = new Subscription();\n\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    private unifiedInjector: UnifiedInjector\n  ) {\n    this.subscription.add(\n      this.unifiedInjector\n        .getMulti(PAGE_LAYOUT_HANDLER)\n        .subscribe((handlers) => (this.handlers = handlers))\n    );\n  }\n\n  // Prints warn messages for missing layout configs.\n  // The warnings are only printed once per config\n  // to not pollute the console log.\n  private warnLogMessages: any = {};\n  private logSlots: any = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged((a, b) => {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n\n  /**\n   * Returns an observable with the last page slot above-the-fold\n   * for the given pageTemplate / breakpoint.\n   *\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\n   */\n  getPageFoldSlot(pageTemplate: string): Observable<string | undefined> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => {\n        if (!this.config.layoutSlots) {\n          // no layout config available\n          return undefined;\n        }\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\n        const config = this.getResponsiveSlotConfig(\n          <LayoutSlotConfig>pageTemplateConfig,\n          'pageFold',\n          breakpoint\n        );\n        return config ? config.pageFold : undefined;\n      })\n    );\n  }\n\n  private resolveSlots(\n    page: Page,\n    section: string | undefined,\n    breakpoint: BREAKPOINT\n  ): string[] {\n    const config = this.getSlotConfig(\n      page.template ?? '',\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      const pageSlots = page.slots ? Object.keys(page.slots) : [];\n      return config.slots.filter((slot) => pageSlots.includes(slot));\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return page.slots ? Object.keys(page.slots) : [];\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      map((page: Page) => page.template),\n      filter(isNotUndefined)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig | undefined {\n    if (!this.config.layoutSlots) {\n      return undefined;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig | undefined {\n    const pageTemplateConfig: any = this.config.layoutSlots?.[templateUid];\n\n    if (!pageTemplateConfig || !section) {\n      return undefined;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots?.[section];\n\n    if (!sectionConfig) {\n      return undefined;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots?.[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuration\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!layoutSlotConfig || !breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.slice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (page.template && !this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // eslint-disable-next-line no-console\n      console.info(\n        `Available CMS page slots: '${(page.slots\n          ? Object.keys(page.slots)\n          : []\n        ).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (cacheKey && !this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Injector, NgModuleRef } from '@angular/core';\nimport {\n  CMSComponentConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  ConfigChunk,\n  ConfigInitializerService,\n  deepMerge,\n  DefaultConfigChunk,\n  FeatureModuleConfig,\n  FeatureModulesService,\n} from '@spartacus/core';\nimport { defer, Observable, of } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\ninterface FeatureInstance extends FeatureModuleConfig {\n  moduleRef?: NgModuleRef<any>;\n  componentsMappings?: CMSComponentConfig;\n}\n\n/**\n * Service responsible for resolving cms config based feature modules.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsFeaturesService {\n  // feature modules configuration\n  private featureModulesConfig?: {\n    [featureName: string]: FeatureModuleConfig | string;\n  };\n\n  // maps componentType to feature\n  private componentFeatureMap: Map<string, string> = new Map();\n\n  /*\n   * Contains either FeatureInstance or FeatureInstance resolver for not yet\n   * resolved feature modules\n   */\n  private featureInstances: Map<string, Observable<FeatureInstance>> =\n    new Map();\n\n  constructor(\n    protected configInitializer: ConfigInitializerService,\n    protected featureModules: FeatureModulesService\n  ) {\n    this.initFeatureMap();\n  }\n\n  private initFeatureMap(): void {\n    this.configInitializer\n      .getStable('featureModules')\n      .subscribe((config: CmsConfig) => {\n        this.featureModulesConfig = config.featureModules ?? {};\n\n        for (const [featureName, featureConfig] of Object.entries(\n          this.featureModulesConfig\n        )) {\n          if (\n            typeof featureConfig !== 'string' &&\n            featureConfig?.module &&\n            featureConfig?.cmsComponents?.length\n          ) {\n            for (const component of featureConfig.cmsComponents) {\n              this.componentFeatureMap.set(component, featureName);\n            }\n          }\n        }\n      });\n  }\n\n  /**\n   * Check if there is feature module configuration that covers specified\n   * component type\n   */\n  hasFeatureFor(componentType: string): boolean {\n    return this.componentFeatureMap.has(componentType);\n  }\n\n  /**\n   * Return full CmsComponent mapping defined in feature module\n   */\n  getCmsMapping(\n    componentType: string\n  ): Observable<CmsComponentMapping | undefined> {\n    const feature = this.componentFeatureMap.get(componentType);\n\n    if (!feature) {\n      return of(undefined);\n    }\n\n    return this.resolveFeatureInstance(feature).pipe(\n      map(\n        (featureInstance) => featureInstance.componentsMappings?.[componentType]\n      )\n    );\n  }\n\n  /**\n   * Resolves feature module for provided component type\n   *\n   * @param componentType\n   */\n  getModule(componentType: string): NgModuleRef<any> | undefined {\n    const feature = this.componentFeatureMap.get(componentType);\n\n    if (!feature) {\n      return undefined;\n    }\n\n    let module;\n\n    // we are returning injectors only for already resolved features\n    this.featureInstances\n      .get(feature)\n      ?.subscribe((featureInstance) => {\n        module = featureInstance.moduleRef;\n      })\n      .unsubscribe();\n    return module;\n  }\n\n  /**\n   * Resolve feature based on feature name, if feature was not yet resolved\n   *\n   * It will first resolve all module dependencies if defined\n   */\n  private resolveFeatureInstance(\n    featureName: string\n  ): Observable<FeatureInstance> {\n    return defer(() => {\n      if (!this.featureInstances.has(featureName)) {\n        this.featureInstances.set(\n          featureName,\n          this.featureModules.resolveFeature(featureName).pipe(\n            map((moduleRef) =>\n              this.createFeatureInstance(moduleRef, featureName)\n            ),\n            shareReplay()\n          )\n        );\n      }\n\n      return this.featureInstances.get(featureName);\n    });\n  }\n\n  /**\n   * Create feature instance from feature's moduleRef\n   */\n  private createFeatureInstance(\n    moduleRef: NgModuleRef<any>,\n    feature: string\n  ): FeatureInstance {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const featureConfig = this.featureModulesConfig![\n      feature\n    ] as FeatureModuleConfig;\n\n    const featureInstance: FeatureInstance = {\n      moduleRef,\n      componentsMappings: {},\n    };\n\n    // resolve configuration for feature module\n    const resolvedConfiguration = this.resolveFeatureConfiguration(\n      moduleRef.injector\n    );\n\n    // extract cms components configuration from feature config\n    for (const componentType of featureConfig.cmsComponents ?? []) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      featureInstance.componentsMappings![componentType] =\n        resolvedConfiguration.cmsComponents?.[componentType] ?? {};\n    }\n    return featureInstance;\n  }\n\n  /**\n   * Returns configuration provided in feature module\n   */\n  private resolveFeatureConfiguration(featureInjector: Injector): CmsConfig {\n    // get config chunks from feature lib\n    const featureConfigChunks = featureInjector.get<any[]>(ConfigChunk, [], {\n      self: true,\n    });\n    // get default config chunks from feature lib\n    const featureDefaultConfigChunks = featureInjector.get<any[]>(\n      DefaultConfigChunk,\n      [],\n      { self: true }\n    );\n\n    return deepMerge(\n      {},\n      ...(featureDefaultConfigChunks ?? []),\n      ...(featureConfigChunks ?? [])\n    ) as CmsConfig;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformServer } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  NgModuleRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  CmsComponent,\n  CmsComponentChildRoutesConfig,\n  CMSComponentConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  ConfigInitializerService,\n  deepMerge,\n  DeferLoadingStrategy,\n  isNotUndefined,\n} from '@spartacus/core';\nimport { defer, forkJoin, Observable, of } from 'rxjs';\nimport { filter, mapTo, share, tap } from 'rxjs/operators';\nimport { CmsFeaturesService } from './cms-features.service';\n\n/**\n * Service with logic related to resolving component from cms mapping\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsComponentsService {\n  // Component mappings that were identified as missing\n  protected missingComponents: string[] = [];\n\n  // Already resolved mappings\n  protected mappings: { [componentType: string]: CmsComponentMapping } = {};\n\n  // Copy of initial/static cms mapping configuration unaffected by lazy-loaded modules\n  protected staticCmsConfig: CMSComponentConfig | undefined;\n\n  // Contains already initialized resolvers for specified component typez\n  protected mappingResolvers: Map<string, Observable<CmsComponentMapping>> =\n    new Map();\n\n  constructor(\n    protected config: CmsConfig,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected featureModules: CmsFeaturesService,\n    protected configInitializer: ConfigInitializerService\n  ) {\n    this.configInitializer\n      .getStable('cmsComponents')\n      .subscribe((cmsConfig: CmsConfig) => {\n        // we want to grab cms configuration available at config initialization phase\n        // as lazy-loaded modules can affect global configuration resulting in\n        // non-deterministic state\n        this.staticCmsConfig = { ...cmsConfig.cmsComponents };\n      });\n  }\n\n  /**\n   * Should be called to make sure all component mappings are determined,\n   * especially lazy loaded ones.\n   *\n   * It's recommended way to make sure all other methods of CmsComponentService\n   * will be able to work synchronously for asked component types and avoid risk\n   * of potential errors that could be thrown otherwise.\n   */\n  determineMappings(componentTypes: string[]): Observable<string[]> {\n    return defer(() => {\n      // we use defer, to be sure the logic below used to compose final observable\n      // will be executed at subscription time (with up to date state at the time,\n      // when it will be needed)\n      const featureResolvers = [];\n\n      for (const componentType of componentTypes) {\n        if (!this.mappings[componentType]) {\n          const staticConfig = (this.staticCmsConfig ??\n            this.config.cmsComponents)?.[componentType];\n\n          // check if this component type is managed by feature module\n          if (this.featureModules.hasFeatureFor(componentType)) {\n            featureResolvers.push(\n              // we delegate populating this.mappings to feature resolver\n              this.getFeatureMappingResolver(componentType, staticConfig)\n            );\n          } else {\n            // simply use only static config\n            if (staticConfig) {\n              this.mappings[componentType] = staticConfig;\n            }\n          }\n        }\n      }\n\n      if (featureResolvers.length) {\n        return forkJoin(featureResolvers).pipe(mapTo(componentTypes));\n      } else {\n        return of(componentTypes);\n      }\n    });\n  }\n\n  private getFeatureMappingResolver(\n    componentType: string,\n    staticConfig?: CmsComponentMapping\n  ): Observable<CmsComponentMapping> | undefined {\n    if (!this.mappingResolvers.has(componentType)) {\n      const mappingResolver$ = this.featureModules\n        .getCmsMapping(componentType)\n        .pipe(\n          filter(isNotUndefined),\n          tap((featureComponentMapping) => {\n            // We treat cms mapping configuration from a feature as a default,\n            // that can be overridden by app/static configuration\n            this.mappings[componentType] = deepMerge(\n              {},\n              featureComponentMapping,\n              staticConfig\n            );\n            this.mappingResolvers.delete(componentType);\n          }),\n          share()\n        );\n      this.mappingResolvers.set(componentType, mappingResolver$);\n    }\n    return this.mappingResolvers.get(componentType);\n  }\n\n  /**\n   * Returns the feature module for a cms component.\n   * It will only work for cms components provided by feature modules.\n   *\n   * @param componentType\n   */\n  getModule(componentType: string): NgModuleRef<any> | undefined {\n    if (this.featureModules.hasFeatureFor(componentType)) {\n      return this.featureModules.getModule(componentType);\n    }\n  }\n\n  /**\n   * Return collection of component mapping configuration for specified list of\n   * component types.\n   *\n   * If component mapping can't be determined synchronously, for example, lazy\n   * loaded one, it will throw an error.\n   *\n   * To make sure component mapping is available, determineMappings()\n   * should be called and completed first.\n   */\n  getMapping(componentType: string): CmsComponentMapping {\n    const componentConfig =\n      this.mappings[componentType] ??\n      (this.staticCmsConfig ?? this.config.cmsComponents)?.[componentType];\n\n    if (isDevMode() && !componentConfig) {\n      if (!this.missingComponents.includes(componentType)) {\n        this.missingComponents.push(componentType);\n        console.warn(\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n\n    return componentConfig;\n  }\n\n  /**\n   * Checks, if component should be rendered as some components\n   * could be disabled for server side renderings\n   */\n  shouldRender(componentType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\n  }\n\n  /**\n   * Return DeferLoadingStrategy for component type.\n   */\n  getDeferLoadingStrategy(\n    componentType: string\n  ): DeferLoadingStrategy | undefined {\n    return (this.staticCmsConfig ?? this.config.cmsComponents)?.[componentType]\n      ?.deferLoading;\n  }\n\n  /**\n   * Get cms driven child routes for components\n   */\n  getChildRoutes(componentTypes: string[]): CmsComponentChildRoutesConfig {\n    const configs = [];\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        configs.push(this.getMapping(componentType)?.childRoutes ?? []);\n      }\n    }\n\n    return this.standardizeChildRoutes(configs);\n  }\n\n  /**\n   * Returns the static data for the component type.\n   */\n  getStaticData<T extends CmsComponent = CmsComponent>(\n    componentType: string\n  ): T | undefined {\n    return this.getMapping(componentType)?.data as T;\n  }\n\n  /**\n   * Standardizes the format of `childRoutes` config.\n   *\n   * Some `childRoutes` configs are simple arrays of Routes (without the notion of the parent route).\n   * But some configs can be an object with children routes and their parent defined in separate property.\n   */\n  protected standardizeChildRoutes(\n    childRoutesConfigs: (Route[] | CmsComponentChildRoutesConfig)[]\n  ): CmsComponentChildRoutesConfig {\n    const result: CmsComponentChildRoutesConfig = { children: [] };\n\n    (childRoutesConfigs || []).forEach((config) => {\n      if (Array.isArray(config)) {\n        result.children?.push(...config);\n      } else {\n        result.children?.push(...(config.children || []));\n        if (config.parent) {\n          result.parent = config.parent;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Get cms driven guards for components\n   */\n  getGuards(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  /**\n   * Get i18n keys associated with components\n   */\n  getI18nKeys(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { CmsComponentsService } from '../../services/cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageSlotService {\n  protected prerenderedSlots: (string | null)[] | undefined;\n\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    @Inject(DOCUMENT) protected document: Document\n  ) {\n    this.resolvePrerenderedSlots();\n  }\n\n  /**\n   * Finds all slots visible in the SSR pre-rendered DOM\n   */\n  protected resolvePrerenderedSlots(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.prerenderedSlots = Array.from(\n        this.document.querySelectorAll('cx-page-slot')\n      )\n        .filter(\n          (el: Element) =>\n            el.getBoundingClientRect().top <\n            this.document.documentElement.clientHeight\n        )\n        .map((el: Element) => el.getAttribute('position'));\n    }\n  }\n\n  /**\n   * Indicates if certain slot should be rendered instantly.\n   *\n   * It's especially useful when transitioning from SSR to CSR application,\n   * where we don't want to apply deferring logic to slots that are visible\n   * to avoid unnecessary flickering.\n   */\n  shouldNotDefer(slot: string): boolean {\n    if (this.prerenderedSlots?.includes(slot)) {\n      this.prerenderedSlots.splice(this.prerenderedSlots.indexOf(slot), 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the defer options for the given component. If the wrapping\n   * page slot is prerendered, we would ignore the defer options altogether.\n   */\n  getComponentDeferOptions(\n    slot: string | undefined,\n    componentType: string\n  ): IntersectionOptions {\n    if (slot && this.shouldNotDefer(slot)) {\n      return { deferLoading: DeferLoadingStrategy.INSTANT };\n    }\n    const deferLoading =\n      this.cmsComponentsService.getDeferLoadingStrategy(componentType);\n    return { deferLoading };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CxEvent } from '@spartacus/core';\n\n/**\n * Lifecycle events for the creation and removal of CMS components.\n *\n * Triggers when the component is added or removed from the DOM, using\n * sub event `ComponentCreateEvent` and `ComponentDestroyEvent`.\n */\nexport abstract class ComponentEvent extends CxEvent {\n  /**\n   * The component type code.\n   */\n  typeCode: string;\n  /**\n   * The unique id for the component instance.\n   */\n  id: string;\n}\n\n/**\n * Indicates that the component is added to the DOM.\n */\nexport class ComponentCreateEvent extends ComponentEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'ComponentCreate';\n  /**\n   * The component host element.\n   */\n  host: HTMLElement;\n}\n\n/**\n * Indicates that the component is removed from the DOM.\n */\nexport class ComponentDestroyEvent extends ComponentEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'ComponentDestroy';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ComponentRef,\n  ElementRef,\n  Injector,\n  NgModuleRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * ComponentHandler implementations can be used for instantiating and launching\n * different types of CMS mapped components\n */\nexport abstract class ComponentHandler implements Applicable {\n  /**\n   * Returns component resource - an observable stream used to launch and dispose\n   * component.\n   *\n   * Instantiate and launch component by subscribing to launcher.\n   * Successful component launch will be followed by emission of ElementRef\n   * (and in case of native Angular component, also ComponentRef).\n   * Unsubscribing from the launcher will remove and tear down the component.\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   * @param module\n   */\n  abstract launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\n\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\n  abstract getPriority?(): Priority;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  Injector,\n  isDevMode,\n  NgModuleRef,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ComponentHandler } from '../handlers/component-handler';\n\n/**\n * Responsible for obtaining component handler for specified component mapping\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentHandlerService {\n  constructor(\n    @Optional()\n    @Inject(ComponentHandler)\n    protected handlers: ComponentHandler[]\n  ) {}\n\n  protected invalidMappings = new Set<CmsComponentMapping<any>>();\n\n  /**\n   * Get best matching component handler\n   *\n   * @param componentMapping\n   */\n  protected resolve(\n    componentMapping: CmsComponentMapping\n  ): ComponentHandler | undefined {\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\n\n    if (isDevMode() && !handler) {\n      if (!this.invalidMappings.has(componentMapping)) {\n        this.invalidMappings.add(componentMapping);\n        console.warn(\n          \"Can't resolve handler for component mapping: \",\n          componentMapping\n        );\n      }\n    }\n\n    return handler;\n  }\n\n  /**\n   * Get launcher for specified component mapping\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  getLauncher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ):\n    | Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>\n    | undefined {\n    return this.resolve(componentMapping)?.launcher(\n      componentMapping,\n      viewContainerRef,\n      elementInjector,\n      module\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CmsComponent, CmsService } from '@spartacus/core';\nimport { defer, EMPTY, Observable, of } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { CmsComponentsService } from '../../../services/cms-components.service';\n\n/**\n * Provides data for `CmsComponentData`. This is used while component is injected\n * dynamically, so that the component implementation can access the data.\n *\n * The data is resolved from dynamic data (CMS api) as well as static configured data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentDataProvider {\n  constructor(\n    protected componentsService: CmsComponentsService,\n    protected cmsService: CmsService\n  ) {}\n\n  /**\n   * Return the component data for a component given by the `uid`.\n   *\n   * If the `type` is provided, static component data (if available) is\n   * merged into the component data. The static data is complemented and\n   * overridden with data retrieved from the cms service.\n   */\n  get<T extends CmsComponent>(uid: string, type?: string): Observable<T> {\n    return defer(() => {\n      let staticComponentData: T | undefined;\n\n      if (type) {\n        staticComponentData = this.componentsService.getStaticData<T>(type);\n      }\n\n      if (uid) {\n        if (staticComponentData) {\n          return this.cmsService.getComponentData<T>(uid).pipe(\n            map((data) => ({\n              ...staticComponentData,\n              ...data,\n            })),\n            startWith(staticComponentData)\n          );\n        } else {\n          return this.cmsService.getComponentData<T>(uid);\n        }\n      } else {\n        return staticComponentData ? of(staticComponentData) : EMPTY;\n      }\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CmsComponentsService } from '../../../services/cms-components.service';\nimport { CmsComponentData } from '../../model/cms-component-data';\nimport { ComponentDataProvider } from './component-data.provider';\n\n/**\n * Used to prepare injector for CMS components.\n *\n * Injector will take into account configured providers and provides CmsComponentData\n * for specified component's uid\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsInjectorService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  public getInjector(\n    type: string,\n    uid: string,\n    parentInjector?: Injector\n  ): Injector {\n    const configProviders =\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useFactory: (dataProvider: ComponentDataProvider) => ({\n            uid,\n            data$: dataProvider.get(uid, type),\n          }),\n          deps: [ComponentDataProvider],\n        },\n        ...configProviders,\n      ],\n      parent: parentInjector ?? this.injector,\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ContentSlotComponentData,\n  DynamicAttributeService,\n  EventService,\n  isNotUndefined,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { filter, finalize, tap } from 'rxjs/operators';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nimport {\n  ComponentCreateEvent,\n  ComponentDestroyEvent,\n  ComponentEvent,\n} from './events/component.event';\nimport { CmsInjectorService } from './services/cms-injector.service';\nimport { ComponentHandlerService } from './services/component-handler.service';\n\n/**\n * Directive used to facilitate instantiation of CMS driven dynamic components\n */\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n  @Output() cxComponentRef = new EventEmitter<ComponentRef<any>>();\n\n  /**\n   * This property in unsafe, i.e.\n   * - cmpRef can be set later because of lazy loading or deferred loading\n   * - cmpRef can be not set at all if for example, web components are used as cms components\n   */\n  protected cmpRef?: ComponentRef<any>;\n\n  private launcherResource?: Subscription;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected componentHandler: ComponentHandlerService,\n    protected cmsInjector: CmsInjectorService,\n    protected eventService: EventService\n  ) {}\n\n  ngOnInit() {\n    this.cmsComponentsService\n      .determineMappings([this.cxComponentWrapper.flexType ?? ''])\n      .subscribe(() => {\n        if (\n          this.cmsComponentsService.shouldRender(\n            this.cxComponentWrapper.flexType ?? ''\n          )\n        ) {\n          this.launchComponent();\n        }\n      });\n  }\n\n  private launchComponent() {\n    const componentMapping = this.cmsComponentsService.getMapping(\n      this.cxComponentWrapper.flexType ?? ''\n    );\n\n    if (!componentMapping) {\n      return;\n    }\n\n    this.launcherResource = this.componentHandler\n      .getLauncher(\n        componentMapping,\n        this.vcr,\n        this.cmsInjector.getInjector(\n          this.cxComponentWrapper.flexType ?? '',\n          this.cxComponentWrapper.uid ?? '',\n          this.injector\n        ),\n        this.cmsComponentsService.getModule(\n          this.cxComponentWrapper.flexType ?? ''\n        )\n      )\n      ?.pipe(\n        filter(isNotUndefined),\n        tap(({ elementRef, componentRef }) => {\n          this.cmpRef = componentRef;\n\n          this.cxComponentRef.emit(componentRef);\n\n          this.dispatchEvent(ComponentCreateEvent, elementRef);\n          this.decorate(elementRef);\n          this.injector.get(ChangeDetectorRef).markForCheck();\n        }),\n        finalize(() => this.dispatchEvent(ComponentDestroyEvent))\n      )\n      .subscribe();\n  }\n\n  /**\n   * Dispatch the component event.\n   *\n   * The event is dispatched during creation and removal of the component.\n   */\n  protected dispatchEvent(\n    event: Type<ComponentEvent>,\n    elementRef?: ElementRef\n  ) {\n    const payload = {\n      typeCode: this.cxComponentWrapper.typeCode,\n      id: this.cxComponentWrapper.uid,\n    } as ComponentEvent;\n    if (event === ComponentCreateEvent) {\n      (payload as ComponentCreateEvent).host = elementRef?.nativeElement;\n    }\n    this.eventService.dispatch(payload, event);\n  }\n\n  private decorate(elementRef: ElementRef): void {\n    this.dynamicAttributeService.addAttributesToComponent(\n      elementRef.nativeElement,\n      this.renderer,\n      this.cxComponentWrapper\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.launcherResource) {\n      this.launcherResource.unsubscribe();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DynamicAttributeService,\n  isNotUndefined,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { PageSlotService } from './page-slot.service';\n\n/**\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\n *\n * The Page slot host element will be supplemented with css classes so that the layout\n * can be fully controlled by customers:\n * - The page slot _position_ is added as a css class by default.\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\n */\n@Component({\n  selector: 'cx-page-slot,[cx-page-slot]',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent implements OnInit, OnDestroy {\n  /**\n   * The position represents the unique key for a page slot on a single page, but can\n   * be reused cross pages.\n   *\n   * The position is used to find the CMS components for the page slot. It is also\n   * added as an additional CSS class so that layout can be applied.\n   */\n  @HostBinding('attr.position')\n  @Input()\n  set position(value: string | undefined) {\n    this.position$.next(value);\n  }\n  get position(): string | undefined {\n    return this.position$.value;\n  }\n\n  /**\n   * Maintains css classes introduced by the host and adds additional classes.\n   */\n  @Input() @HostBinding() class: string;\n\n  /**\n   * Indicates that the page slot is the last page slot above the fold.\n   */\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\n\n  /**\n   * Indicates that the components of the page slot haven't been loaded as long\n   * as the isPending state is true.\n   */\n  @HostBinding('class.cx-pending') isPending = true;\n\n  /**\n   * Indicates that the page slot doesn't contain any components. This is no\n   * longer used in spartacus, but kept for backwards compatibility.\n   */\n  @HostBinding('class.has-components') @Input() hasComponents = false;\n\n  protected position$ = new BehaviorSubject<string | undefined>(undefined);\n\n  components: ContentSlotComponentData[];\n\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\n    filter(isNotUndefined),\n    switchMap((position) => this.cmsService.getContentSlot(position)),\n    distinctUntilChanged(this.isDistinct)\n  );\n\n  /** Observes the components for the given page slot. */\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\n    map((slot) => slot?.components ?? [])\n  );\n\n  protected subscription: Subscription = new Subscription();\n\n  /** Keeps track of the pending components that must be loaded for the page slot */\n  private pendingComponentCount = 0;\n\n  /** Tracks the last used position, in case the page slot is used dynamically */\n  private lastPosition: string;\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected elementRef: ElementRef,\n    protected cd: ChangeDetectorRef,\n    protected pageSlotService: PageSlotService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\n        this.components = value?.components || [];\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  protected decorate(slot: ContentSlotData): void {\n    let cls = this.class || '';\n\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\n      cls = cls.replace(this.lastPosition, '');\n    }\n    if (this.position$.value) {\n      cls += ` ${this.position$.value}`;\n      this.lastPosition = this.position$.value;\n    }\n\n    // host bindings\n    this.pending = slot?.components?.length || 0;\n    this.hasComponents = slot?.components\n      ? slot?.components?.length > 0\n      : false;\n    if (cls && cls !== this.class) {\n      this.class = cls;\n    }\n\n    if (slot) {\n      this.dynamicAttributeService.addAttributesToSlot(\n        this.elementRef.nativeElement,\n        this.renderer,\n        slot\n      );\n    }\n  }\n\n  /**\n   * Sets the pending count for the page slot components. Once all pending components are\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\n   */\n  protected set pending(count: number) {\n    this.pendingComponentCount = count;\n    this.isPending = this.pendingComponentCount > 0;\n  }\n\n  protected get pending(): number {\n    return this.pendingComponentCount;\n  }\n\n  /*\n   * Is triggered when a component is added to the view. This is used to\n   * update the pending count\n   */\n  isLoaded(loadState: boolean) {\n    if (loadState) {\n      this.pending--;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * The `DeferLoadingStrategy` indicates whether the component should be\n   * rendered instantly or whether it should be deferred.\n   */\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\n    return this.pageSlotService.getComponentDeferOptions(\n      this.position,\n      componentType\n    );\n  }\n\n  protected isDistinct(\n    old: ContentSlotData,\n    current: ContentSlotData\n  ): boolean {\n    return Boolean(\n      current.components &&\n        old.components &&\n        old.components.length === current.components.length &&\n        !old.components.find(\n          (el, index) => el.uid !== current.components?.[index].uid\n        )\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<ng-template\n  *ngIf=\"position\"\n  [cxOutlet]=\"position\"\n  [cxOutletContext]=\"{ components$: components$ }\"\n>\n  <ng-container *ngFor=\"let component of components\">\n    <ng-template\n      *ngIf=\"component.flexType\"\n      [cxOutlet]=\"component.flexType\"\n      [cxOutletContext]=\"{ component: component }\"\n      [cxOutletDefer]=\"getComponentDeferOptions(component.flexType)\"\n      (loaded)=\"isLoaded($event)\"\n    >\n      <ng-container [cxComponentWrapper]=\"component\"></ng-container>\n    </ng-template>\n  </ng-container>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PageLayoutService } from './page-layout.service';\n\n/**\n * Directive that Adds a style class to the host element based on the cms page\n * template. The CMS page template is driven by the CMS structure, which is configurable\n * in the backend.\n *\n * The style class is added to the host element of the directive. The host element is resolved\n * from the `elementRef`, or, in case the directive is used in an `ng-template`, by the\n * `TemplateRef`.\n *\n * An example of the usage is given below:\n *\n * ```html\n * <cx-storefront class=\"LandingPageTemplate\">\n *   <ng-template cxPageTemplateStyle>...</ng-template>\n * <cx-storefront>\n * ```\n *\n * The style class can also be provided by an input:\n *\n * ```html\n * <ng-template [cxPageTemplateStyle]=\"pageTemplateName\">\n * ```\n *\n */\n@Directive({\n  selector: '[cxPageTemplateStyle]',\n})\nexport class PageTemplateDirective implements OnInit, OnDestroy {\n  /**\n   * Indicates whether this component is driven by an input template or should\n   * observe the CMS driven page layout template.\n   */\n  protected useTemplateFromInput: boolean;\n\n  /**\n   * Adds a style class to the host element based on the cms page template, unless\n   * the class is given as an input.\n   *\n   * The host element is either the actual host, or the parent element in case this\n   * is used inside an `ng-template`.\n   */\n  @Input('cxPageTemplateStyle') set setTemplate(template: string) {\n    if (template && template !== '') {\n      this.useTemplateFromInput = true;\n      this.addStyleClass(template);\n    } else if (this.useTemplateFromInput) {\n      // we only clear the template if it has been provided by the input before\n      this.clear();\n    }\n  }\n\n  // Maintains the page template subscription\n  protected subscription: Subscription = new Subscription();\n\n  /**\n   * Holds the current page template, so we can remove previous page templates\n   * from the element classList.\n   */\n  protected currentTemplate: string;\n\n  constructor(\n    protected pageLayoutService: PageLayoutService,\n    protected elementRef: ElementRef,\n    @Optional() protected templateRef: TemplateRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.useTemplateFromInput) {\n      this.subscription.add(\n        this.pageLayoutService.templateName$.subscribe((template) =>\n          this.addStyleClass(template)\n        )\n      );\n    }\n  }\n\n  /**\n   * Adds the page template as a style class to the given element. If any\n   * page template was added before, we clean it up.\n   *\n   * We'll not use hostBinding for the style class, as it will potential drop\n   * an existing class name on the host. This is why we need to work with\n   * the lower level change detection api.\n   */\n  protected addStyleClass(template: string, el?: HTMLElement): void {\n    this.clear(el);\n    if (template) {\n      this.currentTemplate = template;\n      (el ?? this.host).classList.add(this.currentTemplate);\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Cleans up the class host binding, if a template class was assigned before.\n   */\n  protected clear(el?: HTMLElement) {\n    if (this.currentTemplate) {\n      (el ?? this.host).classList?.remove(this.currentTemplate);\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Returns the host element (`HTMLElement`).\n   *\n   * If the directive is used on an `ng-template`, we take the parent element,\n   * to ensure that we're not ending up with a comment.\n   */\n  protected get host(): HTMLElement {\n    return !!this.templateRef\n      ? this.templateRef.elementRef.nativeElement.parentElement\n      : this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$ = new BehaviorSubject<string | undefined>(undefined);\n\n  readonly templateName$: Observable<string> =\n    this.pageLayoutService.templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap((section) => (section ? of(section) : this.templateName$))\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap((section) => this.pageLayoutService.getSlots(section))\n  );\n\n  readonly pageFoldSlot$: Observable<string | undefined> =\n    this.templateName$.pipe(\n      switchMap((templateName) =>\n        this.pageLayoutService.getPageFoldSlot(templateName)\n      ),\n      distinctUntilChanged()\n    );\n\n  constructor(protected pageLayoutService: PageLayoutService) {}\n}\n","<ng-template\n  *ngIf=\"layoutName$ | async as layoutName\"\n  [cxPageTemplateStyle]=\"layoutName\"\n  [cxOutlet]=\"layoutName\"\n  [cxOutletContext]=\"{\n    templateName$: templateName$,\n    slots$: slots$,\n    section$: section$\n  }\"\n>\n  <ng-content></ng-content>\n\n  <cx-page-slot\n    *ngFor=\"let slot of slots$ | async\"\n    [position]=\"slot\"\n    [isPageFold]=\"slot === (pageFoldSlot$ | async)\"\n  ></cx-page-slot>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  getLastValueSync,\n  UnifiedInjector,\n} from '@spartacus/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    // TODO:#checkout - handle breaking changes in schematics\n    protected unifiedInjector: UnifiedInjector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map((guard) =>\n        this.canActivateGuard(guard, route, state)\n      );\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n\n  canActivateGuard(\n    guardClass: any,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guard = getLastValueSync(\n      this.unifiedInjector.get<CanActivate>(guardClass)\n    );\n    if (isCanActivate(guard)) {\n      return wrapIntoObservable(guard.canActivate(route, state)).pipe(first());\n    } else {\n      throw new Error('Invalid CanActivate guard in cmsMapping');\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport {\n  CmsComponentChildRoutesConfig,\n  CmsRoute,\n  deepMerge,\n  PageContext,\n  PageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsComponentsService } from './cms-components.service';\nimport { CmsGuardsService } from './cms-guards.service';\n\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\n@Injectable({ providedIn: 'root' })\nexport class CmsRoutesImplService {\n  constructor(\n    private router: Router,\n    private cmsComponentsService: CmsComponentsService,\n    private cmsGuardsService: CmsGuardsService\n  ) {}\n\n  private cmsRouteExists(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean {\n    if (this.cmsRouteExists(currentPageLabel)) {\n      return true;\n    }\n\n    const childRoutesConfig =\n      this.cmsComponentsService.getChildRoutes(componentTypes);\n\n    if (childRoutesConfig?.children?.length) {\n      if (\n        this.updateRouting(pageContext, currentPageLabel, childRoutesConfig)\n      ) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(\n    pageContext: PageContext,\n    pageLabel: string,\n    childRoutesConfig: CmsComponentChildRoutesConfig\n  ): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageLabel.startsWith('/') &&\n      pageLabel.length > 1\n    ) {\n      const children = this.wrapCmsGuardsRecursively(\n        childRoutesConfig.children ?? []\n      );\n\n      const newRoute: CmsRoute = {\n        path: pageLabel.substr(1),\n        component: PageLayoutComponent,\n        children: children,\n        data: deepMerge({}, childRoutesConfig?.parent?.data ?? {}, {\n          cxCmsRouteContext: {\n            type: pageContext.type,\n            id: pageLabel,\n          },\n        }),\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Traverses recursively the given Routes and wraps each `canActivate`\n   * guard of each Route with a special `CanActivateFn` function.\n   *\n   * This special wrapper function allows for resolving\n   * those guards by the Angular Router using the `UnifiedInjector`\n   * instead of only root injector.\n   *\n   * This allows Angular Router to inject the guards (and their dependencies)\n   * even when they are provided only in a child injector of a lazy-loaded module.\n   */\n  private wrapCmsGuardsRecursively(routes: Route[]): Route[] {\n    return routes.map((route) => {\n      if (route.children) {\n        route.children = this.wrapCmsGuardsRecursively(route.children);\n      }\n\n      if (route?.canActivate?.length) {\n        route.canActivate = route.canActivate.map((guard) =>\n          this.wrapCmsGuard(guard)\n        );\n      }\n\n      return route;\n    });\n  }\n\n  /**\n   * Returns a wrapper function `CanActivateFn` (https://angular.io/api/router/CanActivateFn)\n   * that injects the given guard instance and runs its method `.canActivate()`.\n   *\n   * It allows to inject the guard's instance (and it's dependencies)\n   * even if it's 'provided only in a child injector of a lazy-loaded module.\n   */\n  private wrapCmsGuard(\n    guardClass: Type<any>\n  ): (\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) => Observable<boolean | UrlTree> {\n    return (\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): Observable<boolean | UrlTree> => {\n      return this.cmsGuardsService.canActivateGuard(guardClass, route, state);\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PageContext } from '@spartacus/core';\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\n\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\n// After #7070, this class should be replaced with a real implementation.\n@Injectable({\n  providedIn: 'root',\n  useExisting: CmsRoutesImplService,\n})\nexport abstract class CmsRoutesService {\n  abstract handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected translation: TranslationService,\n    protected translationChunk: TranslationChunkService\n  ) {}\n\n  loadForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  Page,\n  PageContext,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n  SMART_EDIT_CONTEXT,\n  SMART_EDIT_DUMMY_COMPONENT_TYPE,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CmsComponentsService } from '../services/cms-components.service';\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n/**\n * Helper service for `CmsPageGuard`\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuardService {\n  constructor(\n    protected semanticPathService: SemanticPathService,\n    protected cmsService: CmsService,\n    protected cmsRoutes: CmsRoutesService,\n    protected cmsI18n: CmsI18nService,\n    protected cmsGuards: CmsGuardsService,\n    protected cmsComponentsService: CmsComponentsService,\n    protected routing: RoutingService\n  ) {}\n\n  /**\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\n   *\n   * Based on `cmsComponents` config for the components in the page:\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\n   * - If all components' guards emitted true, then the route can be activated\n   * - Then we trigger loading of configured i18n chunks in parallel\n   * - And we register the configured children routes of cms components\n   *\n   * @param pageContext current cms page context\n   * @param pageData cms page data\n   * @param route activated route snapshot\n   * @param state router state snapshot\n   *\n   * @returns boolean observable - whether the route can be activated\n   */\n  canActivatePage(\n    pageContext: PageContext,\n    pageData: Page,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      map((componentTypes) =>\n        pageContext.id === SMART_EDIT_CONTEXT\n          ? [SMART_EDIT_DUMMY_COMPONENT_TYPE, ...componentTypes]\n          : componentTypes\n      ),\n      take(1),\n      switchMap((componentTypes) =>\n        this.cmsComponentsService.determineMappings(componentTypes)\n      ),\n      switchMap((componentTypes) =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url,\n            pageLabel\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  /**\n   * Activates the \"NOT FOUND\" cms page.\n   *\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\n   */\n  canActivateNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundLabel = this.semanticPathService.get('notFound');\n    if (!notFoundLabel) {\n      return of(false);\n    }\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: notFoundLabel,\n    };\n\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\n      switchMap((notFoundPage) => {\n        if (notFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap((notFoundIndex) => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n              this.routing.changeNextPageContext(notFoundCmsPageContext);\n            }),\n            switchMap((notFoundIndex) =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter((index) => index === notFoundIndex)\n              )\n            ),\n            switchMap(() =>\n              this.canActivatePage(pageContext, notFoundPage, route, state)\n            )\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  isNotUndefined,\n  ProtectedRoutesGuard,\n  RouteLoadStrategy,\n  RoutingConfigService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, first, switchMap, take } from 'rxjs/operators';\nimport { CmsPageGuardService } from './cms-page-guard.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected cmsService: CmsService,\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\n    protected service: CmsPageGuardService,\n    protected routingConfig: RoutingConfigService\n  ) {}\n\n  /**\n   * Tries to load the CMS page data for the anticipated route and returns:\n   * - `true` - if it can be activated\n   * - `false` - if it cannot be activated\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\n   *\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\n   * based on their configuration (`cmsComponents` config).\n   *\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\n   */\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.protectedRoutesGuard.canActivate(route).pipe(\n      switchMap((canActivate) =>\n        canActivate === true\n          ? this.routingService.getNextPageContext().pipe(\n              filter(isNotUndefined),\n              take(1),\n              switchMap((pageContext) =>\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\n                  first(),\n                  switchMap((pageData) =>\n                    pageData\n                      ? this.service.canActivatePage(\n                          pageContext,\n                          pageData,\n                          route,\n                          state\n                        )\n                      : this.service.canActivateNotFoundPage(\n                          pageContext,\n                          route,\n                          state\n                        )\n                  )\n                )\n              )\n            )\n          : of(canActivate)\n      )\n    );\n  }\n\n  /**\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\n   */\n  private shouldReload(): boolean {\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-page.guard';\nexport * from './cms-page-guard.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './component.event';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  NgModuleRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from './component-handler';\nimport { Observable } from 'rxjs';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * Default component handler used for dynamically launching cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DefaultComponentHandler implements ComponentHandler {\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return typeof componentMapping.component === 'function';\n  }\n\n  getPriority(): Priority {\n    return Priority.FALLBACK;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return new Observable<{\n      elementRef: ElementRef;\n      componentRef?: ComponentRef<any>;\n    }>((subscriber) => {\n      let componentRef: ComponentRef<any>;\n\n      const injector = elementInjector ?? viewContainerRef.injector;\n\n      const dispose = () => {\n        if (componentRef) {\n          componentRef.destroy();\n        }\n      };\n\n      const factory = this.getComponentFactory(\n        injector,\n        componentMapping.component\n      );\n\n      if (factory) {\n        componentRef = viewContainerRef.createComponent(\n          factory,\n          undefined,\n          injector,\n          undefined,\n          module\n        );\n        subscriber.next({ elementRef: componentRef.location, componentRef });\n      }\n\n      return dispose;\n    });\n  }\n\n  protected getComponentFactory(injector: Injector, component: any): any {\n    if (!component) {\n      return null;\n    }\n    const factory = injector\n      .get(ComponentFactoryResolver)\n      .resolveComponentFactory(component);\n\n    return factory;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  NgModuleRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\nimport { from, Observable } from 'rxjs';\nimport { DefaultComponentHandler } from './default-component.handler';\nimport { switchMap } from 'rxjs/operators';\nimport { ComponentHandler } from './component-handler';\n\n/**\n * Lazy component handler used for launching lazy loaded cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyComponentHandler implements ComponentHandler {\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\n\n  /**\n   * We want to mach dynamic import signature () => import('')\n   */\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return (\n      typeof componentMapping.component === 'function' &&\n      this.isNotClass(componentMapping.component)\n    );\n  }\n\n  private isNotClass(symbol: any): boolean {\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\n    return signature.startsWith('function()') || signature.startsWith('()=>');\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return from(componentMapping.component()).pipe(\n      switchMap((component) =>\n        this.defaultHandler.launcher(\n          { ...componentMapping, component },\n          viewContainerRef,\n          elementInjector,\n          module\n        )\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './component-handler';\nexport * from './default-component.handler';\nexport * from './lazy-component.handler';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Directive,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  CmsComponent,\n  DynamicAttributeService,\n  EventService,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nimport { CmsComponentData } from '../model/cms-component-data';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\nimport { CmsInjectorService } from './services/cms-injector.service';\nimport { ComponentHandlerService } from './services/component-handler.service';\n\n@Directive({\n  selector: '[cxInnerComponentsHost]',\n})\nexport class InnerComponentsHostDirective implements OnInit, OnDestroy {\n  protected innerComponents$ = this.data.data$.pipe(\n    map((data) => data?.composition?.inner ?? []),\n    distinctUntilChanged()\n  );\n\n  protected componentWrappers: any[] = [];\n  protected subscription?: Subscription;\n\n  constructor(\n    protected data: CmsComponentData<CmsComponent>,\n    protected vcr: ViewContainerRef,\n    // dependencies required for ComponentWrapper directive\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected componentHandler: ComponentHandlerService,\n    protected cmsInjector: CmsInjectorService,\n    protected eventService: EventService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.innerComponents$.subscribe((x) => {\n      this.renderComponents(x);\n    });\n  }\n\n  protected renderComponents(components: string[]) {\n    this.clearComponents();\n    components.forEach((component) => this.renderComponent(component));\n  }\n\n  protected renderComponent(component: string) {\n    const componentWrapper = new ComponentWrapperDirective(\n      this.vcr,\n      this.cmsComponentsService,\n      this.injector,\n      this.dynamicAttributeService,\n      this.renderer,\n      this.componentHandler,\n      this.cmsInjector,\n      this.eventService\n    );\n    componentWrapper.cxComponentWrapper = { flexType: component, uid: '' };\n    componentWrapper.ngOnInit();\n    this.componentWrappers.push(componentWrapper);\n  }\n\n  protected clearComponents() {\n    this.componentWrappers.forEach((wrapper) => wrapper.ngOnDestroy());\n    this.componentWrappers = [];\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n    this.clearComponents();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\nimport { ComponentHandler } from './handlers/component-handler';\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\nimport { InnerComponentsHostDirective } from './inner-components-host.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ComponentWrapperDirective, InnerComponentsHostDirective],\n  exports: [ComponentWrapperDirective, InnerComponentsHostDirective],\n})\nexport class PageComponentModule {\n  static forRoot(): ModuleWithProviders<PageComponentModule> {\n    return {\n      ngModule: PageComponentModule,\n      providers: [\n        {\n          provide: ComponentHandler,\n          useExisting: DefaultComponentHandler,\n          multi: true,\n        },\n        {\n          provide: ComponentHandler,\n          useExisting: LazyComponentHandler,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-injector.service';\nexport * from './component-handler.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './component-wrapper.directive';\nexport * from './events/index';\nexport * from './handlers/index';\nexport * from './page-component.module';\nexport * from './services/index';\nexport * from './inner-components-host.directive';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-component-data';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\nimport { PageSlotService } from './page-slot.service';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {\n  // instantiate PageSlotService ASAP, so it can examine SSR pre-rendered DOM\n  constructor(_pageSlot: PageSlotService) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageTemplateDirective } from './page-template.directive';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent, PageTemplateDirective],\n  exports: [PageLayoutComponent, PageTemplateDirective],\n})\nexport class PageLayoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './page-layout-handler';\nexport * from './page-layout.component';\nexport * from './page-layout.module';\nexport * from './page-layout.service';\nexport * from './page-template.directive';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './page-slot.component';\nexport * from './page-slot.module';\nexport * from './page-slot.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './component/index';\nexport * from './model/index';\nexport * from './page-layout/index';\nexport * from './slot/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n\ndeclare module '@spartacus/core' {\n  interface Config extends PWAModuleConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddToHomeScreenService {\n  protected deferredEvent: any;\n\n  protected canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    protected config: PWAModuleConfig,\n    protected globalMessageService: GlobalMessageService,\n    protected winRef: WindowRef\n  ) {\n    if (this.config.pwa?.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        (event) => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OnInit, Directive } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","<div *ngIf=\"canPrompt$ | async\">\n  <div class=\"cx-add-to-home-screen-banner\">\n    <div class=\"cx-add-to-home-screen-banner-inner\">\n      <p>\n        {{ 'pwa.addToHomeScreenDescription' | cxTranslate }}\n      </p>\n      <ul>\n        <li>{{ 'pwa.noInstallationNeeded' | cxTranslate }}</li>\n        <li>{{ 'pwa.fastAccessToApplication' | cxTranslate }}</li>\n      </ul>\n      <button (click)=\"prompt()\" class=\"btn btn-primary\">\n        {{ 'pwa.addToHomeScreen' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","<span (click)=\"prompt()\">\n  <ng-content *ngIf=\"canPrompt$ | async\"></ng-content>\n</span>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa?.enabled) || false };\n}\n\nexport function pwaFactory(\n  addToHomeScreenService: AddToHomeScreenService\n): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ServiceWorkerModule.register('ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultPWAModuleConfig),\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nexport * from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nexport * from './components/add-to-home-screen.component';\nexport { PwaModule } from './pwa.module';\nexport * from './pwa.module-config';\nexport * from './services/add-to-home-screen.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector): () => void {\n  const result = () => {\n    // Router could not be injected via `deps[]` due to a cyclic dependency with APP_INITIALIZER:\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-route.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n\n  // semantic links for login related pages\n  login: {\n    paths: ['login'],\n    protected: false,\n    authFlow: true,\n  },\n  register: {\n    paths: ['login/register'],\n    protected: false,\n    authFlow: true,\n  },\n  forgotPassword: {\n    paths: ['login/forgot-password'],\n    protected: false,\n    authFlow: true,\n  },\n  resetPassword: {\n    paths: ['login/pw/change'],\n    protected: false,\n    authFlow: true,\n  },\n  logout: { paths: ['logout'], protected: false, authFlow: true },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  coupons: { paths: ['my-account/coupons'] },\n  couponClaim: {\n    paths: ['my-account/coupon/claim/:couponCode'],\n    paramsMapping: { couponCode: 'code' },\n  },\n  myInterests: {\n    paths: ['my-account/my-interests'],\n  },\n  notificationPreference: {\n    paths: ['my-account/notification-preference'],\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isDevMode } from '@angular/core';\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function getSuffixUrlMatcher({\n  marker,\n  paramName,\n  precedingParamName,\n}: {\n  marker: string;\n  paramName: string;\n  precedingParamName?: string;\n}) {\n  precedingParamName = precedingParamName || 'param';\n  const matcher = function suffixUrlMatcher(\n    segments: UrlSegment[]\n  ): UrlMatchResult | null {\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n    if (markerIndex === -1 || isMarkerLastSegment) {\n      return null;\n    }\n\n    const paramIndex = markerIndex + 1;\n    const posParams: { [name: string]: UrlSegment } = {\n      [paramName]: segments[paramIndex],\n    };\n\n    for (let i = 0; i < markerIndex; i++) {\n      posParams[`${precedingParamName}${i}`] = segments[i];\n    }\n\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\n  };\n\n  if (isDevMode()) {\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\n  }\n\n  return matcher;\n}\n\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './suffix-url-matcher';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-route/index';\nexport { RoutingModule } from './routing.module';\nexport * from './suffix-routes/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageMetaLinkService {\n  constructor(\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2\n  ) {}\n\n  /**\n   * Adds a canonical link element to the document head.\n   *\n   * If an id is provided, the link will be updated.\n   * If no url is provided, the link element will be deleted.\n   */\n  setCanonicalLink(url: string | undefined): void {\n    let link: HTMLLinkElement = this.winRef.document.querySelector(\n      'link[rel=\"canonical\"]'\n    ) as HTMLLinkElement;\n\n    if (!url) {\n      // Removing the link is an edge case, but useful if the canonical url\n      // is created in CSR while developing/testing.\n      link?.remove();\n      return;\n    }\n\n    if (!link) {\n      link = this.renderer.createElement('link');\n      link.rel = 'canonical';\n      link.href = url;\n      this.renderer.appendChild(this.winRef.document.head, link);\n    } else {\n      link?.setAttribute('href', url);\n    }\n  }\n\n  protected get renderer(): Renderer2 {\n    return this.rendererFactory.createRenderer(null, null);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport {\n  isNotNullable,\n  PageMeta,\n  PageMetaService,\n  PageRobotsMeta,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { PageMetaLinkService } from './page-meta-link.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService implements OnDestroy {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService,\n    protected pageMetaLinkService?: PageMetaLinkService\n  ) {}\n\n  private subscription: Subscription;\n\n  init() {\n    this.subscription = this.pageMetaService\n      .getMeta()\n      .pipe(filter(isNotNullable))\n      .subscribe((meta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots;\n    this.canonicalUrl = meta.canonicalUrl;\n  }\n\n  protected set title(title: string | undefined) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string | undefined) {\n    if (value) {\n      this.addTag({ name: 'description', content: value || '' });\n    } else {\n      this.ngMeta.removeTag('name=\"description\"');\n    }\n  }\n\n  protected set image(imageUrl: string | undefined) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    } else {\n      this.ngMeta.removeTag('name=\"og:image\"');\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[] | undefined) {\n    if (value && value.length > 0) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  /**\n   * Add the canonical Url to the head of the page.\n   *\n   * If the canonical url already exists the link is removed. This is quite\n   * unlikely though, since canonical links are (typically) only added in SSR.\n   */\n  protected set canonicalUrl(url: string | undefined) {\n    this.pageMetaLinkService?.setCanonicalLink(url);\n  }\n\n  protected addTag(meta: MetaDefinition): void {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SeoConfig } from './seo.config';\n\nexport const defaultSeoConfig: SeoConfig = {\n  seo: {\n    structuredData: {\n      disableInDevMode: true,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SeoConfig {\n  seo?: SeoOptions;\n}\n\nexport interface SeoOptions {\n  structuredData?: StructuredData;\n}\n\nexport interface StructuredData {\n  disableInDevMode?: boolean;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends SeoConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-seo.config';\nexport * from './seo.config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, Provider } from '@angular/core';\nimport { LanguageService, WindowRef } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n): () => void {\n  const result = () => {\n    languageService.getActive().subscribe((lang) => {\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\n    });\n  };\n  return result;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { SeoConfig } from '../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  protected renderer: Renderer2 = this.rendererFactory.createRenderer(\n    null,\n    null\n  );\n\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected config: SeoConfig\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.getJsonLdScriptElement().textContent = this.escapeHtml(schema);\n    }\n  }\n\n  /**\n   * Indicates whether json ld data should be generated.\n   *\n   * This is only required on the server, but can be enabled in dev mode.\n   */\n  isJsonLdRequired(): boolean {\n    return (\n      !isPlatformBrowser(this.platformId) ||\n      (isDevMode() && !this.config.seo?.structuredData?.disableInDevMode)\n    );\n  }\n\n  /**\n   * Creates a json-ld script element. The element is created one, and appended\n   * to the html body element.\n   *\n   * ```html\n   * <script id=\"json-ld\" type=\"application/ld+json\">\n   * </script>\n   * ```\n   */\n  protected getJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const script: HTMLScriptElement = this.renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      this.renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Secure the given json-ld schema by encoding html characters (aka escaping), eg: <script> becomes &lt;script&gt;\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  escapeHtml(schema: {}): string {\n    const div: HTMLScriptElement = this.renderer.createElement('div');\n    div.textContent = JSON.stringify(schema);\n    return div.innerHTML;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n *\n * This helper directive is actually not used in Spartacus, as Spartacus\n * appends json-ld the data to the document body.\n *\n * This directive can however be used by merchants to write static schema data\n * to the DOM in a save way.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  /**\n   * Writes the schema data to a json-ld script element.\n   */\n  @Input() set cxJsonLd(schema: string | {}) {\n    this.generateJsonLdScript(schema);\n  }\n\n  constructor(\n    protected renderer: Renderer2,\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected element: ElementRef\n  ) {}\n\n  /**\n   * attach the json-ld script tag to DOM with the schema data secured by encoding html tags (aka escaping)\n   */\n  protected generateJsonLdScript(schema: string | {}): void {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const script: HTMLScriptElement = this.renderer.createElement('script');\n      script.type = 'application/ld+json';\n      script.textContent = this.jsonLdScriptFactory.escapeHtml(schema);\n      this.renderer.appendChild(this.element.nativeElement, script);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lower level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schemas.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { SchemaBuilder } from './builders/schema.interface';\nimport { SCHEMA_BUILDER } from './builders/tokens';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Factory service that is used to build the structured data for\n * all configured schema builders.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StructuredDataFactory implements OnDestroy {\n  constructor(\n    private scriptBuilder: JsonLdScriptFactory,\n    @Optional()\n    @Inject(SCHEMA_BUILDER)\n    private builders: SchemaBuilder[]\n  ) {}\n\n  protected subscription: Subscription = new Subscription();\n\n  /**\n   * Initiates the build of structured data by collecting all schema\n   * builders.\n   */\n  build(): void {\n    if (this.scriptBuilder.isJsonLdRequired() && this.builders) {\n      this.subscription.add(\n        this.collectSchemas().subscribe((schema: {}[]) => {\n          this.scriptBuilder.build(schema);\n        })\n      );\n    }\n  }\n\n  /**\n   * Collects all schema builders and observe their structured data.\n   */\n  protected collectSchemas(): Observable<any[]> {\n    return combineLatest(this.builders.map((builder) => builder.build()));\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector): () => void {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultSeoConfig } from './config';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector): () => void {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    provideDefaultConfig(defaultSeoConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PageMeta, PageMetaService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaBuilder } from '../schema.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\n  constructor(protected pageMetaService: PageMetaService) {}\n\n  build(): Observable<any> {\n    return this.pageMetaService\n      .getMeta()\n      .pipe(map((pageMeta: PageMeta | null) => this.collect(pageMeta)));\n  }\n\n  protected collect(pageMeta: PageMeta | null): any {\n    if (!pageMeta?.breadcrumbs) {\n      return;\n    }\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@id': crumb.link,\n          name: crumb.label,\n        },\n      };\n    });\n\n    if (pageMeta.title) {\n      crumbs.push({\n        '@type': 'ListItem',\n        position: crumbs.length + 1,\n        item: {\n          '@id': pageMeta.title,\n          name: pageMeta.title,\n        },\n      });\n    }\n\n    return {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: crumbs,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './breadcrumb-schema.builder';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  /**\n   * Returns the product sku, name and description.\n   */\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  /**\n   * Returns the image object with the main product image url.\n   *\n   * If the image is not available, an empty object is returned.\n   */\n  protected getProductImage(product: Product): { image?: string } {\n    const image = (<any>product.images?.PRIMARY)?.zoom?.url;\n    return image ? { image } : {};\n  }\n\n  /**\n   * Returns the brand object with the product manufacturer.\n   *\n   * If the brand is not available, an empty object is returned.\n   */\n  protected getProductBrand(product: Product): { brand?: string } {\n    const brand = product.manufacturer;\n    return brand ? { brand } : {};\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n\n    if (product.price?.value) {\n      schema.price = product.price.value;\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({ offers: schema });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SeoConfig } from '../../../config';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product reviews, see https://schema.org/Review.\n * The data includes the aggregated product rating and the individual reviews.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected config: SeoConfig\n  ) {}\n\n  build(product: Product): Observable<any> {\n    return this.reviewService.getByProductCode(product.code ?? '').pipe(\n      map((reviews: Review[]) =>\n        reviews?.length > 0\n          ? {\n              aggregateRating: this.buildAggregatedReviews(product, reviews),\n              review: reviews.map((review) => this.buildReviews(review)),\n            }\n          : {}\n      )\n    );\n  }\n\n  protected buildAggregatedReviews(product: Product, reviews: Review[]) {\n    const aggregated: any = {\n      '@type': 'AggregateRating',\n    };\n    if (product.averageRating) {\n      aggregated.ratingValue = product.averageRating;\n    }\n    if (reviews) {\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\n    }\n    return aggregated;\n  }\n\n  protected buildReviews(review: Review) {\n    const reviewSchema: any = {\n      '@type': 'review',\n    };\n\n    if (review.principal && review.principal.name) {\n      reviewSchema.author = review.principal.name;\n    }\n    if (review.date) {\n      const date = new Date(review.date);\n      reviewSchema.datePublished = `${date.getFullYear()}-${\n        date.getMonth() + 1\n      }-${date.getDate()}`;\n    }\n    if (review.headline) {\n      reviewSchema.name = review.headline;\n    }\n    if (review.comment) {\n      reviewSchema.description = review.comment;\n    }\n    if (review.rating) {\n      reviewSchema.reviewRating = {\n        '@type': 'Rating',\n        ratingValue: review.rating.toString(),\n      };\n    }\n\n    return reviewSchema;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  isNotUndefined,\n  Product,\n  ProductScope,\n  ProductService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\n\n  /**\n   * Returns an observable for the current product\n   * @returns Product\n   * @returns null if product can't be found\n   *\n   * @param scopes\n   */\n  getProduct(\n    scopes?: (ProductScope | string)[] | ProductScope | string\n  ): Observable<Product | null> {\n    return this.getCode().pipe(\n      distinctUntilChanged(),\n      switchMap((productCode: string) => {\n        return productCode\n          ? this.productService.get(\n              productCode,\n              scopes || this.DEFAULT_PRODUCT_SCOPE\n            )\n          : of(null);\n      }),\n      filter(isNotUndefined)\n    );\n  }\n\n  protected getCode(): Observable<string> {\n    return this.routingService\n      .getRouterState()\n      .pipe(map((state) => state.state.params['productCode']));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\n\n/**\n * Adds the minimal structured data for the product, see https://schema.org/product.\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\n * using the `JSONLD_PRODUCT_BUILDER` token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSchemaBuilder implements SchemaBuilder {\n  constructor(\n    private currentProduct: CurrentProductService,\n    @Optional()\n    @Inject(JSONLD_PRODUCT_BUILDER)\n    protected builders: JsonLdBuilder<Product>[]\n  ) {}\n\n  build(): Observable<any> {\n    return this.currentProduct.getProduct().pipe(\n      switchMap((product: Product | null) => {\n        if (product) {\n          return combineLatest(this.collect(product)).pipe(\n            map((res: {}[]) => Object.assign({}, ...res))\n          );\n        }\n        return of({});\n      })\n    );\n  }\n\n  protected collect(product: Product): Observable<any>[] {\n    if (!product || !product.code) {\n      return [];\n    }\n    const builders = this.builders\n      ? this.builders.map((builder) => builder.build(product))\n      : [];\n    return [\n      of({\n        '@context': 'http://schema.org',\n        '@type': 'Product',\n      }),\n      ...builders,\n    ];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './jsonld-base-product.builder';\nexport * from './jsonld-product-offer.builder';\nexport * from './jsonld-product-review.builder';\nexport * from './product-schema.builder';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to collecting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-grained control\n    // for product related schemas\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './breadcrumb/index';\nexport * from './json-ld-builder.module';\nexport * from './product/index';\nexport * from './schema.interface';\nexport * from './tokens';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './builders/index';\nexport * from './json-ld-script.factory';\nexport * from './json-ld.directive';\nexport { StructuredDataModule } from './structured-data.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './page-meta-link.service';\nexport * from './seo-meta.service';\nexport * from './seo.module';\nexport * from './structured-data/index';\nexport * from './config/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-guards.service';\nexport * from './cms-i18n.service';\nexport * from './cms-components.service';\nexport * from './cms-features.service';\nexport * from './cms-routes.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BREAKPOINT } from '../../layout/config/layout-config';\n\nexport enum PageSection {\n  HEADER = 'header',\n  FOOTER = 'footer',\n  NAVIGATION = 'navigation',\n}\n\nexport interface CmsStructureOptions {\n  /**\n   * The componentId is used to provide a static configuration of (cms) components.\n   */\n  componentId?: string;\n  /**\n   * Page slot position is used to provide the slot configuration.\n   */\n  pageSlotPosition?: string;\n  /**\n   * The page template is used to provide the page slot to the given page template.\n   */\n  pageTemplate?: string;\n  /**\n   * The section is used to provide the page slot to the given section.\n   */\n  section?: PageSection | string;\n  /**\n   * The breakpoint is used to provide the page slot for a specific breakpoint.\n   */\n  breakpoint?: BREAKPOINT;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ValueProvider } from '@angular/core';\nimport { CmsStructureConfig, provideConfig } from '@spartacus/core';\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { CmsStructureOptions } from './cms-structure.model';\n\n/**\n * Helper function to simplify the creation of static CMS structure (`CmsStructureConfig`).\n * The helper function leverage the `provideConfig`, and is only providing an easy way to\n * generate the cms structure. The function creates a configuration structure for components,\n * page slot and page template. The following example adds a component to a page slot:\n *\n * ```ts\n * provideCmsStructure({\n *   componentId: 'LoginComponent',\n *   pageSlotPosition: 'SiteLogin'\n * })\n * ```\n *\n * @param options.componentId component identifier is used to provide component structure\n * @param options.pageSlotPosition page slot position is used to provide the slot configuration\n * @param options.pageTemplate the page template is used to provide the page slot to the given page template\n * @param options.section the section is used to provide the page slot to the given section\n * @param options.breakpoint the breakpoint is used to provide the page slot for a specific breakpoint\n */\nexport function provideCmsStructure(\n  options: CmsStructureOptions\n): ValueProvider {\n  return provideConfig({\n    ...buildCmsStructure(options),\n    ...buildLayoutConfig(options),\n  });\n}\n\n/**\n * @private\n */\nfunction buildCmsStructure({\n  componentId,\n  pageSlotPosition,\n}: CmsStructureOptions = {}): CmsStructureConfig {\n  const config: CmsStructureConfig = { cmsStructure: {} };\n\n  if (componentId) {\n    config.cmsStructure = {\n      components: {\n        [componentId]: {\n          typeCode: componentId,\n          flexType: componentId,\n        },\n      },\n    };\n  }\n\n  if (componentId && pageSlotPosition && config.cmsStructure) {\n    config.cmsStructure.slots = {\n      [pageSlotPosition]: { componentIds: [componentId] },\n    };\n  }\n  return config;\n}\n\n/**\n * @private\n */\nfunction buildLayoutConfig({\n  pageTemplate,\n  pageSlotPosition,\n  breakpoint,\n  section,\n}: CmsStructureOptions = {}): LayoutConfig {\n  const layoutConfig: LayoutConfig = {};\n  if (pageTemplate && pageSlotPosition) {\n    const pageTemplateSlots: any = {};\n    if (breakpoint) {\n      pageTemplateSlots[breakpoint] = {\n        slots: [pageSlotPosition],\n      };\n    } else {\n      pageTemplateSlots.slots = [pageSlotPosition];\n    }\n    layoutConfig.layoutSlots = {\n      [pageTemplate]: pageTemplateSlots,\n    };\n  }\n\n  if (section && pageSlotPosition) {\n    const sectionSlots: any = {};\n    if (breakpoint) {\n      sectionSlots[breakpoint] = { slots: [pageSlotPosition] };\n    } else {\n      sectionSlots.slots = [pageSlotPosition];\n    }\n    if (layoutConfig.layoutSlots) {\n      layoutConfig.layoutSlots[section] = sectionSlots;\n    } else {\n      layoutConfig.layoutSlots = {\n        [section]: sectionSlots,\n      };\n    }\n  }\n  return layoutConfig;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cms-structure.model';\nexport * from './cms-structure.util';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './guards/index';\nexport * from './outlet/index';\nexport * from './page/index';\nexport * from './pwa/index';\nexport * from './routing/index';\nexport * from './seo/index';\nexport * from './services/index';\nexport * from './utils/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string | undefined | null;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the items can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n\n  getSlideNumber(size: number, currentIndex: number): number {\n    const normalizedCurrentIndex = currentIndex + 1;\n    return Math.ceil(normalizedCurrentIndex / size);\n  }\n}\n","<ng-container *ngIf=\"items && items.length > 0 && (size$ | async) as size\">\n  <h2 *ngIf=\"title\">{{ title }}</h2>\n\n  <div class=\"carousel-panel\" [ngClass]=\"'size-' + size\">\n    <button\n      *ngIf=\"size < items.length\"\n      class=\"previous\"\n      (click)=\"activeSlide = activeSlide - size\"\n      [disabled]=\"activeSlide === 0\"\n      [attr.aria-label]=\"'carousel.previousSlide' | cxTranslate\"\n    >\n      <cx-icon [type]=\"previousIcon\"></cx-icon>\n    </button>\n\n    <div class=\"slides\">\n      <ng-container *ngFor=\"let _ of items; let i = index\">\n        <div\n          class=\"slide\"\n          *ngIf=\"i % size === 0\"\n          [class.active]=\"i === activeSlide\"\n        >\n          <ng-container\n            *ngFor=\"let item of items | slice: i:i + size; let j = index\"\n          >\n            <div\n              *ngIf=\"item | async as data\"\n              class=\"item\"\n              [class.active]=\"i === activeSlide\"\n            >\n              <ng-container\n                *ngTemplateOutlet=\"template; context: { item: data }\"\n              ></ng-container>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </div>\n\n    <button\n      *ngIf=\"size < items.length\"\n      class=\"next\"\n      (click)=\"activeSlide = activeSlide + size\"\n      tabindex=\"-1\"\n      [disabled]=\"activeSlide > items.length - size - 1\"\n      [attr.aria-label]=\"'carousel.nextSlide' | cxTranslate\"\n    >\n      <cx-icon [type]=\"nextIcon\"></cx-icon>\n    </button>\n  </div>\n\n  <div *ngIf=\"!hideIndicators && size < items.length\" class=\"indicators\">\n    <ng-container *ngFor=\"let _ of items; let i = index\">\n      <button\n        *ngIf=\"i % size === 0\"\n        (click)=\"activeSlide = i\"\n        [disabled]=\"i === activeSlide\"\n        [attr.aria-label]=\"\n          'carousel.slideNumber'\n            | cxTranslate: { currentSlideNumber: getSlideNumber(size, i) }\n        \"\n        tabindex=\"-1\"\n      >\n        <cx-icon [type]=\"indicatorIcon\" aria-hidden=\"true\"></cx-icon>\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter((data) => Boolean(data)),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<Observable<ContentSlotComponentData>[]> =\n    this.componentData$.pipe(\n      map((data) => data.banners?.trim().split(' ') ?? []),\n      map((codes) =>\n        codes.map((code) => this.cmsService.getComponentData(code))\n      )\n    );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","<cx-carousel\n  *ngIf=\"getItems() | async as items\"\n  [items]=\"items\"\n  [template]=\"template\"\n  itemWidth=\"100%\"\n  class=\"inline-navigation\"\n></cx-carousel>\n\n<ng-template #template let-item=\"item\">\n  <ng-container\n    [cxComponentWrapper]=\"{\n      flexType: item.typeCode,\n      typeCode: item.typeCode,\n      uid: item?.uid\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  AuthService,\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserConsentService,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concat,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  skipWhile,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  requiredConsents: string[] = [];\n\n  constructor(\n    protected userConsentService: UserConsentService,\n    protected globalMessageService: GlobalMessageService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n      this.authService.isUserLoggedIn(),\n      this.allConsentsLoading,\n    ]).pipe(\n      map(\n        ([\n          consentLoading,\n          giveConsentLoading,\n          withdrawConsentLoading,\n          isUserLoggedIn,\n          allConsentsLoading,\n        ]) =>\n          consentLoading ||\n          giveConsentLoading ||\n          withdrawConsentLoading ||\n          !isUserLoggedIn ||\n          allConsentsLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      withLatestFrom(\n        this.anonymousConsentsService.getTemplates(),\n        this.authService.isUserLoggedIn()\n      ),\n      filter(\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\n      ),\n      tap(([templateList, _anonymousTemplates]) => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      }),\n      map(([templateList, anonymousTemplates]) => {\n        if (this.anonymousConsentsConfig.anonymousConsents) {\n          if (this.anonymousConsentsConfig.anonymousConsents.requiredConsents) {\n            this.requiredConsents =\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\n          }\n          if (\n            this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          ) {\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\n          }\n        }\n\n        return templateList;\n      })\n    );\n  }\n\n  private hideAnonymousConsents(\n    templateList: ConsentTemplate[],\n    anonymousTemplates: ConsentTemplate[] = []\n  ): ConsentTemplate[] {\n    let hideTemplateIds: string[] = [];\n\n    if (\n      !this.anonymousConsentsConfig.anonymousConsents?.consentManagementPage\n        ?.showAnonymousConsents\n    ) {\n      hideTemplateIds = anonymousTemplates.map((template) => template.id ?? '');\n      return this.userConsentService.filterConsentTemplates(\n        templateList,\n        hideTemplateIds\n      );\n    }\n\n    if (\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents &&\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents.length > 0\n    ) {\n      hideTemplateIds =\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents;\n    }\n\n    return this.userConsentService.filterConsentTemplates(\n      templateList,\n      hideTemplateIds\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe((success) => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap((withdrawalSuccess) => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe((withdrawalSuccess) =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given && template.id && template.version !== undefined) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else if (template.currentConsent?.code) {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  rejectAll(templates: ConsentTemplate[] = []): void {\n    const consentsToWithdraw: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (\n        template.currentConsent &&\n        this.userConsentService.isConsentGiven(template.currentConsent)\n      ) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n        consentsToWithdraw.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupWithdrawalStream(consentsToWithdraw)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupWithdrawalStream(\n    consentsToWithdraw: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getWithdrawConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const withdraw$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToWithdraw.length) {\n          const code = consentsToWithdraw[i].currentConsent?.code;\n          if (code) {\n            this.userConsentService.withdrawConsent(code);\n          }\n        }\n      })\n    );\n    const checkTimesLoaded$ = withdraw$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  allowAll(templates: ConsentTemplate[] = []): void {\n    const consentsToGive: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (\n        template.currentConsent &&\n        this.userConsentService.isConsentWithdrawn(template.currentConsent)\n      ) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n      }\n      consentsToGive.push(template);\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupGiveStream(consentsToGive)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupGiveStream(\n    consentsToGive: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getGiveConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const giveConsent$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToGive.length) {\n          const consent = consentsToGive[i];\n          if (consent.id && consent.version !== undefined) {\n            this.userConsentService.giveConsent(consent.id, consent.version);\n          }\n        }\n      })\n    );\n    const checkTimesLoaded$ = giveConsent$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return Boolean(\n      template.id &&\n        this.anonymousConsentsConfig.anonymousConsents &&\n        this.anonymousConsentsConfig.anonymousConsents?.requiredConsents &&\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n          template.id\n        )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.allConsentsLoading.unsubscribe();\n\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","<div *ngIf=\"loading$ | async; else consentManagementForm\">\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</div>\n\n<ng-template #consentManagementForm>\n  <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n  <ng-container *ngIf=\"templateList$ | async as templateList\">\n    <div class=\"cx-consent-action-links\">\n      <div class=\"col-sm-12 col-md-8 col-lg-6\">\n        <button\n          tabindex=\"0\"\n          class=\"btn btn-link cx-action-link\"\n          (click)=\"rejectAll(templateList)\"\n        >\n          {{ 'consentManagementForm.clearAll' | cxTranslate }}\n        </button>\n        <button\n          tabindex=\"0\"\n          class=\"btn btn-link cx-action-link\"\n          (click)=\"allowAll(templateList)\"\n        >\n          {{ 'consentManagementForm.selectAll' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"cx-consent-toggles\">\n      <div class=\"col-sm-12 col-md-8 col-lg-6\">\n        <cx-consent-management-form\n          *ngFor=\"let consentTemplate of templateList\"\n          [consentTemplate]=\"consentTemplate\"\n          [requiredConsents]=\"requiredConsents\"\n          (consentChanged)=\"onConsentChange($event)\"\n        ></cx-consent-management-form>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\n})\nexport class ConsentManagementModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/index';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { AnonymousConsentDialogComponent } from './anonymous-consent-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConsentManagementModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [AnonymousConsentDialogComponent],\n  exports: [AnonymousConsentDialogComponent],\n})\nexport class AnonymousConsentsDialogModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consent-dialog.component';\nexport * from './anonymous-consents-dialog.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Optional,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { take } from 'rxjs/operators';\n\n@Directive({\n  selector: '[cxAtMessage]',\n})\nexport class AtMessageDirective {\n  /**\n   * Usage [cxAtMessage]=\"'translatableKey' | cxTranslate\"\n   */\n  @Input() cxAtMessage: string | string[] | undefined;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    @Optional() protected templateRef: TemplateRef<HTMLElement>,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  protected get host(): HTMLElement {\n    return !!this.templateRef\n      ? this.templateRef.elementRef.nativeElement.parentElement\n      : this.elementRef.nativeElement;\n  }\n\n  /**\n   * Emit assistive global meesage to improve screen reader vocalization.\n   * @param event\n   */\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent): void {\n    event?.preventDefault();\n\n    if (event?.target === this.host && this.cxAtMessage) {\n      const message = Array.isArray(this.cxAtMessage)\n        ? this.cxAtMessage.join('\\n')\n        : this.cxAtMessage;\n\n      this.globalMessageService\n        .get()\n        .pipe(take(1))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          // Override current assitive message.\n          if (globalMessageEntities[GlobalMessageType.MSG_TYPE_ASSISTIVE]) {\n            this.globalMessageService.remove(\n              GlobalMessageType.MSG_TYPE_ASSISTIVE\n            );\n          }\n          this.globalMessageService.add(\n            message,\n            GlobalMessageType.MSG_TYPE_ASSISTIVE\n          );\n        });\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport type PopoverPosition =\n  | 'auto'\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'right'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left-top'\n  | 'left-bottom'\n  | 'right-top'\n  | 'right-bottom';\n\nexport type PopoverPositionArray =\n  | PopoverPosition\n  | Array<PopoverPosition>\n  | string;\n\nexport enum PopoverEvent {\n  INSIDE_CLICK = 'insideClick',\n  OUTSIDE_CLICK = 'outsideClick',\n  ESCAPE_KEYDOWN = 'escapeKeydown',\n  CLOSE_BUTTON_CLICK = 'closeButtonClick',\n  CLOSE_BUTTON_KEYDOWN = 'closeButtonKeydown',\n  ROUTE_CHANGE = 'routeChange',\n  OPEN = 'open',\n  OPEN_BY_KEYBOARD = 'openByKeyboard',\n}\n\nexport interface PopoverOptions {\n  /**\n   * The preferred placement of the popover. Default popover position is 'top'.\n   *\n   *  Allowed popover positions: 'auto', 'top', 'bottom', 'left', 'right',\n   * 'top-left', 'top-right', 'bottom-left', 'bottom-right',\n   * 'left-top', 'left-bottom', 'right-top', 'right-bottom'.\n   */\n  placement?: PopoverPosition;\n\n  /**\n   * Flag used to define if popover should look for the best placement\n   * in case if there is not enough space in viewport for preferred position.\n   *\n   * By default this property is set to `true`.\n   *\n   * Value of this flag is omitted if preferred position is set to `auto`.\n   */\n  autoPositioning?: boolean;\n\n  /**\n   * Flag used to prevent firing popover open function.\n   */\n  disable?: boolean;\n\n  /**\n   * Custom class name passed to popover component.\n   *\n   * If this property is not set the default popover class is `cx-popover`.\n   */\n  class?: string;\n\n  /**\n   * Flag used to hide close button in popover component.\n   */\n  displayCloseButton?: boolean;\n\n  /**\n   * Append popover component into 'body' selector.\n   */\n  appendToBody?: boolean;\n\n  /**\n   * Flag indicates if popover should be re-positioned on scroll event.\n   */\n  positionOnScroll?: boolean;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  PopoverPosition,\n  PopoverPositionArray,\n} from '../../components/popover/popover.model';\n\n// replacement for the `ClientRect` from TypeScript 4.2, which was removed in 4.4\nexport interface UIPositionRectangle {\n  bottom: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  width: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PositioningService {\n  constructor(protected winRef: WindowRef) {}\n\n  protected get allowedPlacements(): Array<PopoverPositionArray> {\n    return [\n      'top',\n      'bottom',\n      'left',\n      'right',\n      'top-left',\n      'top-right',\n      'bottom-left',\n      'bottom-right',\n      'left-top',\n      'left-bottom',\n      'right-top',\n      'right-bottom',\n    ];\n  }\n\n  protected get placementSeparator(): RegExp {\n    return /\\s+/;\n  }\n\n  protected get window(): Window | undefined {\n    return this.winRef.nativeWindow;\n  }\n\n  protected get document(): Document {\n    return this.winRef.document;\n  }\n\n  protected getAllStyles(\n    element: HTMLElement\n  ): CSSStyleDeclaration | undefined {\n    return this.window?.getComputedStyle(element);\n  }\n\n  protected getPositionStyleProperty(element: HTMLElement): string | undefined {\n    const styles = this.getAllStyles(element);\n\n    if (styles) {\n      return styles['position'] || undefined;\n    }\n  }\n\n  protected isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getPositionStyleProperty(element) || 'static') === 'static';\n  }\n\n  protected offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || this.document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== this.document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || this.document.documentElement;\n  }\n\n  protected position(element: HTMLElement, round = true): UIPositionRectangle {\n    let elPosition: UIPositionRectangle;\n    let parentOffset: UIPositionRectangle = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    };\n\n    if (this.getPositionStyleProperty(element) === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width,\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== this.document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  protected offset(element: HTMLElement, round = true): UIPositionRectangle {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top:\n        (this.window &&\n          this.window.pageYOffset - this.document.documentElement.clientTop) ||\n        0,\n      left:\n        (this.window &&\n          this.window.pageXOffset - this.document.documentElement.clientLeft) ||\n        0,\n    };\n\n    const elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left,\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport.\n  */\n  protected _positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): boolean {\n    const [placementPrimary = 'top', placementSecondary = 'center'] =\n      placement.split('-');\n\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    if (targetElStyles) {\n      const marginTop = parseFloat(targetElStyles.marginTop);\n      const marginBottom = parseFloat(targetElStyles.marginBottom);\n      const marginLeft = parseFloat(targetElStyles.marginLeft);\n      const marginRight = parseFloat(targetElStyles.marginRight);\n\n      let topPosition = 0;\n      let leftPosition = 0;\n\n      switch (placementPrimary) {\n        case 'top':\n          topPosition =\n            hostElPosition.top -\n            (targetElement.offsetHeight + marginTop + marginBottom);\n          break;\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height;\n          break;\n        case 'left':\n          leftPosition =\n            hostElPosition.left -\n            (targetElement.offsetWidth + marginLeft + marginRight);\n          break;\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width;\n          break;\n      }\n\n      switch (placementSecondary) {\n        case 'top':\n          topPosition = hostElPosition.top;\n          break;\n        case 'bottom':\n          topPosition =\n            hostElPosition.top +\n            hostElPosition.height -\n            targetElement.offsetHeight;\n          break;\n        case 'left':\n          leftPosition = hostElPosition.left;\n          break;\n        case 'right':\n          leftPosition =\n            hostElPosition.left +\n            hostElPosition.width -\n            targetElement.offsetWidth;\n          break;\n        case 'center':\n          if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n            leftPosition =\n              hostElPosition.left +\n              hostElPosition.width / 2 -\n              targetElement.offsetWidth / 2;\n          } else {\n            topPosition =\n              hostElPosition.top +\n              hostElPosition.height / 2 -\n              targetElement.offsetHeight / 2;\n          }\n          break;\n      }\n\n      targetElement.style.transform = `translate(${Math.round(\n        leftPosition\n      )}px, ${Math.round(topPosition)}px)`;\n\n      // Check if the targetElement is inside the viewport\n      const targetElBCR = targetElement.getBoundingClientRect();\n      const html = this.document.documentElement;\n      const windowHeight = this.window?.innerHeight || html.clientHeight;\n      const windowWidth = this.window?.innerWidth || html.clientWidth;\n\n      return (\n        targetElBCR.left >= 0 &&\n        targetElBCR.top >= 0 &&\n        targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight\n      );\n    }\n\n    return false;\n  }\n\n  /*\n   * Accept the placement array and applies the appropriate placement dependent on the viewport.\n   * Returns the applied placement.\n   * In case of auto placement, placements are selected in order\n   *   'top', 'bottom', 'left', 'right',\n   *   'top-left', 'top-right',\n   *   'bottom-left', 'bottom-right',\n   *   'left-top', 'left-bottom',\n   *   'right-top', 'right-bottom'.\n   * */\n  positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string | PopoverPosition | PopoverPositionArray,\n    appendToBody?: boolean\n  ): PopoverPosition {\n    const placementVals: Array<PopoverPosition> = Array.isArray(placement)\n      ? placement\n      : (placement.split(this.placementSeparator) as Array<PopoverPosition>);\n\n    let hasAuto = placementVals.findIndex((val) => val === 'auto');\n    if (hasAuto >= 0) {\n      this.allowedPlacements.forEach((obj) => {\n        if (placementVals.find((val) => val.search('^' + obj) !== -1) == null) {\n          placementVals.splice(hasAuto++, 1, obj as PopoverPosition);\n        }\n      });\n    }\n\n    const style = targetElement.style;\n    style.position = 'absolute';\n    style.top = '0';\n    style.left = '0';\n\n    let testPlacement: PopoverPosition = 'auto';\n    let isInViewport = false;\n    for (testPlacement of placementVals) {\n      if (\n        this._positionElements(\n          hostElement,\n          targetElement,\n          testPlacement,\n          appendToBody\n        )\n      ) {\n        isInViewport = true;\n        break;\n      }\n    }\n\n    if (!isInViewport) {\n      this._positionElements(\n        hostElement,\n        targetElement,\n        testPlacement,\n        appendToBody\n      );\n    }\n\n    return testPlacement;\n  }\n\n  getPositioningClass(\n    position?: PopoverPosition,\n    autoPositioning?: boolean\n  ): string {\n    let positionClass = `${position || 'top'}`;\n    if (autoPositioning && positionClass !== 'auto') {\n      positionClass = `${positionClass} auto`;\n    }\n\n    return positionClass;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { WindowRef } from '@spartacus/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { PositioningService } from '../../services/positioning/positioning.service';\nimport { PopoverEvent, PopoverPosition } from './popover.model';\n\n@Component({\n  selector: 'cx-popover',\n  templateUrl: './popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PopoverComponent implements OnInit, OnDestroy, AfterViewChecked {\n  /**\n   * String or template to be rendered inside popover wrapper component.\n   */\n  content: string | TemplateRef<any>;\n\n  /**\n   * Element which triggers displaying popover component.\n   * This property is needed to calculate valid position for popover.\n   */\n  triggerElement: ElementRef;\n\n  /**\n   * Current initiated popover instance.\n   */\n  popoverInstance: ComponentRef<PopoverComponent>;\n\n  /**\n   * Flag which informs positioning service if popover component\n   * should be appended to body. Otherwise popover is displayed right after\n   * trigger element in DOM.\n   */\n  appendToBody?: boolean;\n\n  /**\n   * The preferred placement of the popover. Default popover position is 'top'.\n   *\n   * Allowed popover positions: 'auto', 'top', 'bottom', 'left', 'right',\n   * 'top-left', 'top-right', 'bottom-left', 'bottom-right',\n   * 'left-top', 'left-bottom', 'right-top', 'right-bottom'.\n   */\n  position?: PopoverPosition;\n\n  /**\n   * Flag used to define if popover should look for the best placement\n   * in case if there is not enough space in viewport for preferred position.\n   *\n   * By default this property is set to `true`.\n   *\n   * Value of this flag is omitted if preferred position is set to `auto`.\n   */\n  autoPositioning?: boolean;\n\n  /**\n   * Custom class name passed to popover component.\n   *\n   * If this property is not set the default popover class is `cx-popover`.\n   */\n  customClass?: string;\n\n  /**\n   * Flag used to show/hide close button in popover component.\n   */\n  displayCloseButton?: boolean;\n\n  /**\n   * After popover component is initialized position needs to be changing dynamically\n   * in case if any viewport changes happened.\n   */\n  resizeSub: Subscription;\n\n  /**\n   * After popover component is initialized popover should be closed in case\n   * if current route has been changed.\n   */\n  routeChangeSub: Subscription;\n\n  /**\n   * Class name generated by positioning service indicating position of popover.\n   */\n  popoverClass: PopoverPosition;\n\n  /**\n   * Configuration for a11y improvements.\n   */\n  focusConfig: FocusConfig;\n\n  /**\n   * Flag indicates if popover should be re-positioned on scroll event.\n   */\n  positionOnScroll?: boolean;\n\n  /**\n   * Icon types for close button icon.\n   */\n  iconTypes = ICON_TYPE;\n\n  /**\n   * Subject which emits specific type of `PopoverEvent`.\n   */\n  eventSubject: Subject<PopoverEvent>;\n\n  /**\n   * Scroll event unlistener.\n   */\n  scrollEventUnlistener: () => void;\n\n  /**\n   * Binding class name property.\n   */\n  @HostBinding('className') baseClass: string;\n\n  /**\n   * Listens for click inside popover component wrapper.\n   */\n  @HostListener('click')\n  insideClick() {\n    this.eventSubject.next(PopoverEvent.INSIDE_CLICK);\n  }\n\n  /**\n   * Listens for every document click and ignores clicks\n   * inside component.\n   */\n  @HostListener('document:click', ['$event'])\n  outsideClick(event: MouseEvent) {\n    if (!this.isClickedOnPopover(event) && !this.isClickedOnDirective(event)) {\n      this.eventSubject.next(PopoverEvent.OUTSIDE_CLICK);\n    }\n  }\n\n  /**\n   * Listens for `escape` keydown event.\n   */\n  @HostListener('keydown.escape')\n  escapeKeydown() {\n    this.eventSubject.next(PopoverEvent.ESCAPE_KEYDOWN);\n  }\n\n  protected isClickedOnPopover(event: MouseEvent) {\n    return this.popoverInstance.location.nativeElement.contains(event.target);\n  }\n\n  protected isClickedOnDirective(event: MouseEvent) {\n    return this.triggerElement.nativeElement.contains(event.target);\n  }\n\n  /**\n   * Emits close event trigger.\n   */\n  close(event: MouseEvent | KeyboardEvent | Event) {\n    event.preventDefault();\n    if (event instanceof MouseEvent) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_CLICK);\n    } else {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_KEYDOWN);\n    }\n  }\n\n  /**\n   * Method uses `Renderer2` service to listen window scroll event.\n   *\n   * Registered only if property `positionOnScroll` is set to `true`.\n   */\n  triggerScrollEvent() {\n    this.scrollEventUnlistener = this.renderer.listen(\n      this.winRef.nativeWindow,\n      'scroll',\n      () => this.positionPopover()\n    );\n  }\n\n  /**\n   * Method uses positioning service calculation and based on that\n   * updates class name for popover component instance.\n   */\n  positionPopover() {\n    this.popoverClass = this.positioningService.positionElements(\n      this.triggerElement.nativeElement,\n      this.popoverInstance.location.nativeElement,\n      this.positioningService.getPositioningClass(\n        this.position,\n        this.autoPositioning\n      ),\n      this.appendToBody\n    );\n\n    this.changeDetectionRef.markForCheck();\n    this.baseClass = `${this.customClass} ${this.popoverClass} opened`;\n  }\n\n  ngOnInit(): void {\n    if (!this.customClass) {\n      this.customClass = 'cx-popover';\n    }\n    if (!this.position) {\n      this.position = 'top';\n    }\n    if (this.autoPositioning === undefined) {\n      this.autoPositioning = true;\n    }\n\n    this.baseClass = `${this.customClass}`;\n\n    this.resizeSub = this.winRef.resize$.subscribe(() => {\n      this.positionPopover();\n    });\n\n    this.routeChangeSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.eventSubject.next(PopoverEvent.ROUTE_CHANGE);\n      });\n\n    if (this.positionOnScroll) {\n      this.triggerScrollEvent();\n    }\n  }\n\n  /**\n   * indicates if passed content is a TemplateRef or string.\n   */\n  isTemplate(content: string | TemplateRef<any>): content is TemplateRef<any> {\n    return content instanceof TemplateRef;\n  }\n\n  isString(content: string | TemplateRef<any>): content is string {\n    return !(content instanceof TemplateRef);\n  }\n\n  ngAfterViewChecked(): void {\n    this.positionPopover();\n  }\n\n  ngOnDestroy(): void {\n    if (this.resizeSub) {\n      this.resizeSub.unsubscribe();\n    }\n\n    if (this.routeChangeSub) {\n      this.routeChangeSub.unsubscribe();\n    }\n\n    if (this.scrollEventUnlistener) {\n      this.scrollEventUnlistener();\n    }\n  }\n\n  constructor(\n    protected positioningService: PositioningService,\n    protected winRef: WindowRef,\n    protected changeDetectionRef: ChangeDetectorRef,\n    protected renderer: Renderer2,\n    protected router: Router\n  ) {}\n}\n","<div class=\"arrow\"></div>\n<div class=\"popover-body\" [cxFocus]=\"focusConfig\">\n  <div class=\"cx-close-row\">\n    <button\n      *ngIf=\"displayCloseButton\"\n      type=\"button\"\n      class=\"close\"\n      (keydown.enter)=\"close($event)\"\n      (keydown.space)=\"close($event)\"\n      (click)=\"close($event)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <ng-container *ngIf=\"isTemplate(content)\">\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n  </ng-container>\n  <span *ngIf=\"isString(content)\">{{ content }}</span>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ElementRef, Injectable } from '@angular/core';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { PopoverEvent } from './popover.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PopoverService {\n  /**\n   * For a11y improvements method returns different `FocusConfig`\n   * based on which event popover was triggered.\n   */\n  getFocusConfig(event: PopoverEvent, appendToBody: boolean): FocusConfig {\n    let config = {};\n\n    if (event === PopoverEvent.OPEN_BY_KEYBOARD && appendToBody) {\n      config = {\n        trap: true,\n        block: true,\n        focusOnEscape: false,\n        autofocus: true,\n      };\n    }\n\n    return config;\n  }\n\n  setFocusOnElement(\n    element: ElementRef,\n    focusConfig: FocusConfig,\n    appendToBody?: boolean\n  ) {\n    if (focusConfig && appendToBody) {\n      element.nativeElement.focus();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Renderer2,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Subject } from 'rxjs';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { PopoverComponent } from './popover.component';\nimport { PopoverEvent, PopoverOptions } from './popover.model';\nimport { PopoverService } from './popover.service';\n\n/**\n * Directive to bind popover with any DOM element.\n */\n@Directive({\n  selector: '[cxPopover]',\n})\nexport class PopoverDirective implements OnInit {\n  /**\n   * Template or string to be rendered inside popover wrapper component.\n   */\n  @Input() cxPopover: string | TemplateRef<any>;\n\n  /**\n   * Options set for popover component.\n   */\n  @Input() cxPopoverOptions?: PopoverOptions;\n\n  /**\n   * An event emitted when the popover is opened.\n   */\n  @Output() openPopover: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * An event emitted when the popover is closed.\n   */\n  @Output() closePopover: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Flag used to inform about current state of popover component.\n   * Popover is closed by default, so value is set to false.\n   */\n  isOpen: boolean;\n\n  /**\n   * Popover component instance.\n   */\n  popoverContainer: ComponentRef<PopoverComponent>;\n\n  /**\n   * Configuration for a11y improvements.\n   */\n  focusConfig: FocusConfig;\n\n  /**\n   * Subject which emits specific type of `PopoverEvent`.\n   */\n  eventSubject: Subject<PopoverEvent> = new Subject<PopoverEvent>();\n\n  /**\n   * Listen events fired on element binded to popover directive.\n   *\n   * Based on event type some a11y improvements can be made.\n   * For example if popover was opened by `space` or `enter` key\n   * dedicated `FocusConfig` can be set to autofocus first\n   * focusable element in popover container.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handlePress(event: KeyboardEvent): void {\n    event?.preventDefault();\n    if (event?.target === this.element.nativeElement && !this.isOpen) {\n      this.eventSubject.next(PopoverEvent.OPEN_BY_KEYBOARD);\n    } else if (this.isOpen) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_KEYDOWN);\n    }\n  }\n\n  @HostListener('keydown.tab')\n  @HostListener('keydown.shift.tab')\n  handleTab(): void {\n    if (!this.focusConfig?.trap && this.isOpen) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_KEYDOWN);\n    }\n  }\n\n  @HostListener('keydown.escape')\n  handleEscape(): void {\n    this.eventSubject.next(PopoverEvent.ESCAPE_KEYDOWN);\n  }\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent): void {\n    event?.preventDefault();\n    if (event?.target === this.element.nativeElement && !this.isOpen) {\n      this.eventSubject.next(PopoverEvent.OPEN);\n    } else if (this.isOpen) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_CLICK);\n    }\n  }\n\n  protected openTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.OPEN,\n    PopoverEvent.OPEN_BY_KEYBOARD,\n  ];\n\n  protected focusPopoverTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.OPEN_BY_KEYBOARD,\n  ];\n\n  protected closeTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.ROUTE_CHANGE,\n    PopoverEvent.ESCAPE_KEYDOWN,\n    PopoverEvent.OUTSIDE_CLICK,\n    PopoverEvent.CLOSE_BUTTON_KEYDOWN,\n    PopoverEvent.CLOSE_BUTTON_CLICK,\n  ];\n\n  protected focusDirectiveTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.ESCAPE_KEYDOWN,\n    PopoverEvent.CLOSE_BUTTON_KEYDOWN,\n  ];\n\n  /**\n   * Method performs open action for popover component.\n   */\n  open(event: PopoverEvent) {\n    if (!this.cxPopoverOptions?.disable) {\n      this.isOpen = true;\n      this.focusConfig = this.popoverService.getFocusConfig(\n        event,\n        this.cxPopoverOptions?.appendToBody || false\n      );\n      this.renderPopover();\n      this.openPopover.emit();\n    }\n  }\n\n  /**\n   * Method performs close action for popover component.\n   */\n  close() {\n    this.isOpen = false;\n    this.viewContainer.clear();\n    this.closePopover.emit();\n  }\n\n  /**\n   * Method subscribes for events emitted by popover component\n   * and based on event performs specific action.\n   */\n  handlePopoverEvents() {\n    this.eventSubject.subscribe((event: PopoverEvent) => {\n      if (this.openTriggerEvents.includes(event)) {\n        this.open(event);\n      }\n      if (this.focusPopoverTriggerEvents.includes(event)) {\n        this.popoverContainer.location.nativeElement.focus();\n      }\n      if (this.closeTriggerEvents.includes(event)) {\n        this.close();\n      }\n      if (this.focusDirectiveTriggerEvents.includes(event)) {\n        this.popoverService.setFocusOnElement(\n          this.element,\n          this.focusConfig,\n          this.cxPopoverOptions?.appendToBody\n        );\n      }\n    });\n  }\n\n  /**\n   * Method creates instance and pass parameters to popover component.\n   */\n  renderPopover() {\n    const containerFactory =\n      this.componentFactoryResolver.resolveComponentFactory(PopoverComponent);\n    this.popoverContainer =\n      this.viewContainer.createComponent(containerFactory);\n\n    const componentInstance = this.popoverContainer.instance;\n    if (componentInstance) {\n      componentInstance.content = this.cxPopover;\n      componentInstance.triggerElement = this.element;\n      componentInstance.popoverInstance = this.popoverContainer;\n      componentInstance.focusConfig = this.focusConfig;\n      componentInstance.eventSubject = this.eventSubject;\n      componentInstance.position = this.cxPopoverOptions?.placement;\n      componentInstance.customClass = this.cxPopoverOptions?.class;\n      componentInstance.appendToBody = this.cxPopoverOptions?.appendToBody;\n      componentInstance.positionOnScroll =\n        this.cxPopoverOptions?.positionOnScroll;\n      componentInstance.displayCloseButton =\n        this.cxPopoverOptions?.displayCloseButton;\n      componentInstance.autoPositioning =\n        this.cxPopoverOptions?.autoPositioning;\n\n      if (this.cxPopoverOptions?.appendToBody) {\n        this.renderer.appendChild(\n          this.winRef.document.body,\n          this.popoverContainer.location.nativeElement\n        );\n      }\n\n      this.popoverContainer.changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngOnInit() {\n    this.handlePopoverEvents();\n  }\n\n  constructor(\n    protected element: ElementRef,\n    protected viewContainer: ViewContainerRef,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected renderer: Renderer2,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected popoverService: PopoverService,\n    protected winRef: WindowRef\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nconst defaultLimit = 20;\n\n@Pipe({\n  name: 'cxTruncate',\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * example usage {{ exampleString | cxTruncate: [1, ''] }}\n   */\n  transform(value: string, args?: [number, string?]): string {\n    if (!args) {\n      return value;\n    }\n\n    let trail = '...';\n\n    const limit =\n      args.length > 0 && args[0] && Number.isInteger(+args[0])\n        ? args[0]\n        : defaultLimit;\n\n    if (args.length > 1 && args[1] !== undefined) {\n      trail = args[1];\n    }\n\n    return value.length > limit ? value.substring(0, limit) + trail : value;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-truncate-text-popover',\n  templateUrl: './truncate-text-popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TruncateTextPopoverComponent {\n  /**\n   * String to be rendered inside popover wrapper component.\n   */\n  @Input() content: string;\n\n  /**\n   * The maximum length of the characters after which the text will be truncated\n   */\n  @Input() charactersLimit: number = 100;\n\n  @Input() customClass?: string;\n\n  get isTruncated(): boolean {\n    return this.content.length > +this.charactersLimit;\n  }\n}\n","<ng-container>\n  <ng-container>\n    <span class=\"truncated-text\" [ngClass]=\"customClass\">\n      {{ content | cxTruncate: [charactersLimit] }}\n    </span>\n  </ng-container>\n\n  <ng-template #fullText>\n    {{ content }}\n  </ng-template>\n\n  <button\n    *ngIf=\"isTruncated\"\n    [cxPopover]=\"fullText\"\n    [cxPopoverOptions]=\"{\n      placement: 'auto',\n      appendToBody: true,\n      displayCloseButton: true\n    }\"\n    class=\"ml-1 link cx-action-link\"\n  >\n    {{ 'common.more' | cxTranslate }}\n  </button>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  paragraphs?: Array<{ title?: string; text?: Array<string> }>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n  label?: string;\n  role?: string;\n  customClass?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card | null;\n\n  @Input()\n  fitToContainer = false;\n\n  @Input()\n  truncateText = false;\n\n  @Input()\n  charactersLimit = 100;\n\n  @Input()\n  index: number;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  isCardAction(action: CardAction | CardLinkAction): action is CardAction {\n    return (action as CardAction).event !== undefined;\n  }\n\n  isCardLinkAction(\n    action: CardAction | CardLinkAction\n  ): action is CardLinkAction {\n    return (action as CardLinkAction).link !== undefined;\n  }\n\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  ngOnInit() {\n    // Intentional empty method\n  }\n}\n","<div\n  *ngIf=\"content\"\n  class=\"cx-card\"\n  [tabindex]=\"border ? 0 : -1\"\n  [attr.role]=\"content.role ?? null\"\n  [attr.aria-label]=\"\n    content.label ? (content.label | cxTranslate: { number: this.index }) : null\n  \"\n  [class.cx-card-border]=\"border\"\n  [class.cx-card-fit-to-container]=\"fitToContainer\"\n>\n  <!-- Card Header -->\n  <div\n    *ngIf=\"content.header && !editMode\"\n    class=\"card-header\"\n    [id]=\"'content-header' + (index >= 0 ? '-' + index : '')\"\n  >\n    {{ content.header }}\n  </div>\n  <!-- Card Body -->\n  <div class=\"card-body cx-card-body\" [class.cx-card-delete]=\"editMode\">\n    <!-- Edit message -->\n    <div *ngIf=\"editMode\" role=\"alert\" class=\"cx-card-delete-msg\">\n      {{ content.deleteMsg }}\n    </div>\n    <!-- Card title -->\n    <span *ngIf=\"content.title\" class=\"cx-card-title\">\n      {{ content.title }}\n    </span>\n    <!-- Card Content -->\n    <div class=\"cx-card-container\">\n      <!-- Card Label -->\n      <div class=\"cx-card-label-container\">\n        <div *ngIf=\"content.textBold\" class=\"cx-card-label-bold\">\n          {{ content.textBold }}\n        </div>\n        <div *ngFor=\"let line of content.text\">\n          <div\n            *ngIf=\"!truncateText; else truncate\"\n            class=\"cx-card-label\"\n            [ngClass]=\"content.customClass\"\n          >\n            {{ line }}\n          </div>\n\n          <ng-template #truncate>\n            <cx-truncate-text-popover\n              [charactersLimit]=\"charactersLimit\"\n              [content]=\"line\"\n              [customClass]=\"content.customClass\"\n            ></cx-truncate-text-popover>\n          </ng-template>\n        </div>\n        <div class=\"cx-card-paragraph\" *ngFor=\"let item of content.paragraphs\">\n          <div class=\"cx-card-paragraph-title\">{{ item.title }}</div>\n          <div *ngFor=\"let text of item.text\">\n            <div class=\"cx-card-paragraph-text\">\n              {{ text }}\n            </div>\n          </div>\n        </div>\n        <ng-content select=\"[label_container_bottom]\"></ng-content>\n      </div>\n      <!-- Image -->\n      <div *ngIf=\"content.img\" class=\"cx-card-img-container\">\n        <cx-icon [type]=\"content.img\"></cx-icon>\n      </div>\n    </div>\n    <!-- Edit Mode Actions -->\n    <div *ngIf=\"editMode\" class=\"row cx-card-body-delete\">\n      <div class=\"col-md-6\">\n        <button\n          [cxAtMessage]=\"'assistiveMessage.actionCancelled' | cxTranslate\"\n          class=\"btn btn-block btn-secondary\"\n          (click)=\"cancelEdit()\"\n        >\n          {{ 'common.cancel' | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-6\" [cxFocus]=\"{ autofocus: true }\">\n        <button class=\"btn btn-block btn-primary\" (click)=\"delete()\">\n          {{ 'common.delete' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <!-- Actions -->\n    <div *ngIf=\"content.actions && !editMode\" class=\"cx-card-actions\">\n      <div *ngFor=\"let action of content.actions\">\n        <div>\n          <ng-container *ngIf=\"isCardAction(action)\" [ngSwitch]=\"action.event\">\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'delete'\"\n              class=\"link cx-action-link\"\n              (click)=\"delete()\"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'default'\"\n              class=\"link cx-action-link\"\n              (click)=\"setDefault()\"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'send'\"\n              class=\"link cx-action-link\"\n              (click)=\"send()\"\n              [attr.aria-describedby]=\"\n                index >= 0 && content.header && !editMode\n                  ? 'content-header-' + index\n                  : null\n              \"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'edit'\"\n              class=\"link cx-action-link\"\n              (click)=\"edit()\"\n            >\n              {{ action.name }}\n            </button>\n          </ng-container>\n          <a\n            *ngIf=\"isCardLinkAction(action)\"\n            href=\"{{ action.link }}\"\n            class=\"link cx-action-link\"\n          >\n            {{ action.name }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { PopoverComponent } from './popover.component';\nimport { PopoverDirective } from './popover.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, KeyboardFocusModule, IconModule],\n  declarations: [PopoverDirective, PopoverComponent],\n  exports: [PopoverDirective, PopoverComponent],\n})\nexport class PopoverModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { PopoverModule } from '../popover/popover.module';\nimport { TruncateTextPopoverComponent } from './truncate-text-popover.component';\nimport { TruncatePipe } from './truncate.pipe';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, PopoverModule],\n  declarations: [TruncateTextPopoverComponent, TruncatePipe],\n  exports: [TruncateTextPopoverComponent, TruncatePipe],\n})\nexport class TruncateTextPopoverModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { AtMessageDirective } from './assistive-technology-message.directive';\n\n@NgModule({\n  declarations: [AtMessageDirective],\n  exports: [AtMessageDirective],\n})\nexport class AtMessageModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { TruncateTextPopoverModule } from '../truncate-text-popover/truncate-text-popover.module';\nimport { CardComponent } from './card.component';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { AtMessageModule } from '../assistive-technology-message/assistive-technology-message.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtMessageModule,\n    I18nModule,\n    IconModule,\n    TruncateTextPopoverModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './card.component';\nexport * from './card.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Image } from '@spartacus/core';\n\nexport interface Media {\n  /**\n   * Identify the “default” image URL which is used in case the srcset is not specified.\n   * Browsers without srcset support will also fallback to this URl.\n   */\n  src: string;\n\n  /**\n   * The srcset attribute holds a list of image file URLs, along with size descriptions.\n   */\n  srcset?: string;\n\n  /**\n   * Provides alternative information for a media if a user cannot view the visual. It is\n   * also used by web crawlers and screen readers.\n   */\n  alt?: string;\n\n  /**\n   * Describes the role of an element in programs that can make use of it, such as screen\n   * readers or magnifiers\n   */\n  role?: string;\n}\n\n/**\n * Contains multiple media for different formats\n */\nexport interface MediaContainer {\n  [format: string]: Image;\n}\n\n/**\n * Specifies media size information that can be used to generate information for the\n * browser to resolve the right media for the right layout or device.\n */\nexport interface MediaFormatSize {\n  /**\n   * Specifies the width for a given media format. The media format width is used\n   * to align the width of the media with the available size in the layout, so that\n   * different media's can be used in a responsive layout.\n   */\n  width?: number;\n}\n\n/**\n * Indicates how the browser should load the image.\n *\n * While this might not add too much value in some scenarios, as we have other\n * optimizations to defer loading of larger pieces of the DOM, there might be\n * components who haven't implemented other lazy loading techniques. Moreover,\n * a server sides rendered page that lands directly in the browser could benefit\n * enormously from the lazy loading of images.\n */\nexport enum ImageLoadingStrategy {\n  /**\n   * Loads the image immediately, regardless of whether or not the image\n   * is currently within the visible viewport (this is the default value).\n   */\n  EAGER = 'eager',\n  /**\n   * Defers loading the image until it reaches a calculated distance from the viewport,\n   * as defined by the browser. The intent is to avoid the network and storage bandwidth\n   * needed to handle the image until it's reasonably certain that it will be needed.\n   * This generally improves the performance of the content in most typical use cases.\n   */\n  LAZY = 'lazy',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config, Image } from '@spartacus/core';\nimport { MediaConfig } from './media.config';\nimport {\n  ImageLoadingStrategy,\n  Media,\n  MediaContainer,\n  MediaFormatSize,\n} from './media.model';\n\n/**\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\n * that URLs and sizes are generated for the same media. This helps to improve performance\n * across difference devices and layouts.\n *\n * Media formats are optional, but highly recommended. The format will help the browser to\n * identify the right media for the right experience.\n *\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\n * `occConfig.backend.occ.baseUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  /**\n   * The media formats sorted by size. The media format representing the smallest\n   * size is sorted on top.\n   */\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\n\n  constructor(protected config: Config) {}\n\n  /**\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\n   * for specific formats.\n   */\n  getMedia(\n    mediaContainer?: MediaContainer | Image,\n    format?: string,\n    alt?: string,\n    role?: string\n  ): Media | undefined {\n    if (!mediaContainer) {\n      return;\n    }\n\n    const mainMedia: Image = mediaContainer.url\n      ? mediaContainer\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\n\n    return {\n      src: this.resolveAbsoluteUrl(mainMedia?.url ?? ''),\n      alt: alt ?? mainMedia?.altText,\n      role: role ?? mainMedia?.role,\n      srcset: this.resolveSrcSet(mediaContainer, format),\n    };\n  }\n\n  /**\n   * Reads the loading strategy from the `MediaConfig`.\n   *\n   * Defaults to `ImageLoadingStrategy.EAGER`.\n   */\n  get loadingStrategy(): ImageLoadingStrategy {\n    return (\n      (this.config as MediaConfig)?.imageLoadingStrategy ??\n      ImageLoadingStrategy.EAGER\n    );\n  }\n\n  /**\n   * Creates the media formats in a logical sorted order. The map contains the\n   * format key and the format size information. We do this only once for performance\n   * benefits.\n   */\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\n    const mediaFormats = this.config?.mediaFormats;\n    if (!this._sortedFormats && mediaFormats) {\n      this._sortedFormats = Object.keys(mediaFormats)\n        .map((key) => ({\n          code: key,\n          size: mediaFormats[key],\n        }))\n        .sort((a, b) =>\n          a.size.width && b.size.width && a.size.width > b.size.width ? 1 : -1\n        );\n    }\n    return this._sortedFormats ?? [];\n  }\n\n  /**\n   * Creates the media formats in a reversed sorted order.\n   */\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._reversedFormats) {\n      this._reversedFormats = this.sortedFormats.slice().reverse();\n    }\n    return this._reversedFormats;\n  }\n\n  /**\n   * Resolves the right media for the given format. The fo\n   */\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\n    return media[this.resolveFormat(media, format)];\n  }\n\n  /**\n   * Validates the format against the given mediaContainer. If there is no format available,\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\n   * format is resolved. If even that is not possible, the first format is returned.\n   */\n  protected resolveFormat(\n    mediaContainer: MediaContainer,\n    format?: string\n  ): string {\n    if (format && mediaContainer[format]) {\n      return format;\n    }\n    return (\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\n    );\n  }\n\n  /**\n   * Returns the media format code with the best size.\n   */\n  protected resolveBestFormat(\n    media: MediaContainer | Image\n  ): string | undefined {\n    return this.reversedFormats.find((format) =>\n      media.hasOwnProperty(format.code)\n    )?.code;\n  }\n\n  /**\n   * Returns a set of media for the available media formats. Additionally, the configured media\n   * format width is added to the srcset, so that browsers can select the appropriate media.\n   *\n   * The optional maxFormat indicates that only sources till a certain format should be added\n   * to the srcset.\n   */\n  protected resolveSrcSet(\n    media: MediaContainer | Image,\n    maxFormat?: string\n  ): string | undefined {\n    if (!media) {\n      return undefined;\n    }\n\n    // Only create srcset images that are smaller than the given `maxFormat` (if any)\n    let formats = this.sortedFormats;\n    const max: number = formats.findIndex((f) => f.code === maxFormat);\n    if (max > -1) {\n      formats = formats.slice(0, max + 1);\n    }\n\n    const srcset = formats.reduce((set, format) => {\n      const image = (media as MediaContainer)[format.code];\n      if (!!image) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.resolveAbsoluteUrl(image.url ?? '')} ${\n          format.size.width\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  /**\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\n   *\n   * When we have receive an absolute URL, we return the URL as-is. An absolute URL might also\n   * start with double slash, which is used to resolve media cross from http and https.\n   */\n  protected resolveAbsoluteUrl(url: string): string {\n    return !url || url.startsWith('http') || url.startsWith('//')\n      ? url\n      : this.getBaseUrl() + url;\n  }\n\n  /**\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\n   * `backend.occ.baseUrl`.\n   *\n   * The `backend.media.baseUrl` can be used to load media from a different location.\n   *\n   * In Commerce Cloud, a different location could mean a different \"aspect\".\n   *\n   * Defaults to empty string in case no config is provided.\n   */\n  protected getBaseUrl(): string {\n    return (\n      this.config.backend?.media?.baseUrl ??\n      this.config.backend?.occ?.baseUrl ??\n      ''\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Image, ImageGroup } from '@spartacus/core';\nimport { ImageLoadingStrategy, Media, MediaContainer } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container:\n    | MediaContainer\n    | Image\n    | ImageGroup\n    | ImageGroup[]\n    | undefined;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * set role of the image if different than what is intended (eg, role=\"presentation\")\n   */\n  @Input() role: string;\n\n  /**\n   * Set the loading strategy of the media. Defaults to global loading strategy.\n   * Use 'lazy' or 'eager' strategies.\n   */\n  @Input() loading: ImageLoadingStrategy | null = this.loadingStrategy;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media | undefined;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  protected create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container instanceof Array ? this.container[0] : this.container,\n      this.format,\n      this.alt,\n      this.role\n    );\n    if (!this.media?.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Indicates whether the browser should lazy load the image.\n   */\n  get loadingStrategy(): ImageLoadingStrategy | null {\n    return this.mediaService.loadingStrategy === ImageLoadingStrategy.LAZY\n      ? ImageLoadingStrategy.LAZY\n      : null;\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  protected handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","<img\n  *ngIf=\"media && media.src\"\n  [attr.src]=\"media.src\"\n  [attr.srcset]=\"media.srcset\"\n  [attr.alt]=\"media.alt\"\n  [attr.role]=\"media.role\"\n  [attr.loading]=\"loading\"\n  (load)=\"loadHandler()\"\n  (error)=\"errorHandler()\"\n/>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {\n  static forRoot(): ModuleWithProviders<MediaModule> {\n    return {\n      ngModule: MediaModule,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    MediaModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './carousel.component';\nexport * from './carousel.module';\nexport * from './carousel.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n * Service that provides the placeholder and input pattern for date pickers. This is\n * used in Spartacus to support browser that won't support the native html5 date picker\n * using `<input type=\"date\">`.\n *\n * While the placeholder is configurable, you should be aware that the placeholder format\n * defaults to `yyyy-mm-dd` to align with Safaris limited support of ISO 8601.\n * Another consideration is the support of date formats in the backend. In case you change\n * this format, you might need to serialize the date to the supported date format in the\n * backend.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatePickerService {\n  get placeholder(): string {\n    return 'yyyy-mm-dd';\n  }\n\n  /**\n   * The default date pattern is based on the placeholder string;\n   */\n  get pattern(): string {\n    return this.placeholder\n      .replace('yyyy', '\\\\d{4}')\n      .replace('mm', '\\\\d{1,2}')\n      .replace('dd', '\\\\d{1,2}');\n  }\n\n  /**\n   * Validates if the string based date value is a valid date.\n   */\n  isValidFormat(date: string, pattern?: string): boolean {\n    const patternRegex = new RegExp(`^${pattern ?? this.pattern}$`);\n    return patternRegex.test(date);\n  }\n\n  /**\n   * Since Safari doesn't support proper date formats (ISO 8601), we need to do this\n   * ourselves. We cannot rely on `new Date('2020-1-1')`. This will fail, only\n   * `new Date('2020-01-01')` works.\n   */\n  getDate(value: string): Date | undefined {\n    if (!value) {\n      return;\n    }\n\n    const delimiter = this.placeholder\n      .replace('yyyy', '')\n      .replace('mm', '')\n      .replace('dd', '')\n      .substr(0, 1);\n\n    const dateParts = value.split(delimiter);\n\n    const placeholderParts = this.placeholder.split(delimiter);\n\n    const y = placeholderParts.indexOf('yyyy');\n    const m = placeholderParts.indexOf('mm');\n    const d = placeholderParts.indexOf('dd');\n\n    return new Date(\n      Number(dateParts[y]),\n      Number(dateParts[m]) - 1,\n      Number(dateParts[d])\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  HostBinding,\n  Input,\n  KeyValueDiffer,\n  KeyValueDiffers,\n} from '@angular/core';\nimport { AbstractControl, UntypedFormControl } from '@angular/forms';\nimport { isObject } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n/**\n * Renders translated form errors for a given form control, based on its `errors` property.\n *\n * The translation key consists of the optional input `prefix`\n * concatenated with the error key.\n *\n * And the translation params object consist of the error details\n * (if only it's an object) merged with the optional input object `translationParams`.\n */\n@Component({\n  selector: 'cx-form-errors',\n  templateUrl: './form-errors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormErrorsComponent implements DoCheck {\n  constructor(\n    protected ChangeDetectionRef: ChangeDetectorRef,\n    protected keyValueDiffers: KeyValueDiffers\n  ) {}\n\n  _control: UntypedFormControl | AbstractControl;\n\n  /**\n   * Emits an array of errors, each represented by a tuple:\n   * the error key and error details.\n   */\n  errorsDetails$: Observable<Array<[string, string | boolean]>>;\n\n  protected differ: KeyValueDiffer<any, any>;\n\n  /**\n   * Prefix prepended to the translation key.\n   */\n  @Input() prefix = 'formErrors';\n\n  /**\n   * Translation params to enrich the error details object.\n   */\n  @Input()\n  translationParams: { [key: string]: string | null };\n\n  @Input()\n  set control(control: AbstractControl | UntypedFormControl | null) {\n    if (!control) {\n      return;\n    }\n\n    this._control = control;\n\n    this.differ = this.keyValueDiffers.find(this.control).create();\n\n    this.errorsDetails$ = control?.statusChanges.pipe(\n      startWith({}),\n      map(() => control.errors || {}),\n      map((errors) =>\n        Object.entries(errors).filter(([_key, details]) => details)\n      )\n    );\n  }\n\n  get control(): UntypedFormControl | AbstractControl {\n    return this._control;\n  }\n\n  ngDoCheck(): void {\n    const changes = this.differ?.diff(this.control);\n    if (changes) {\n      changes.forEachChangedItem((r) => {\n        if (r?.key === 'touched') {\n          this.ChangeDetectionRef.markForCheck();\n        }\n      });\n    }\n  }\n  /**\n   * Returns translation params composed of\n   * the argument `errorDetails` (if only is an object) merged with\n   * the component input object `translationParams`.\n   *\n   * In case of a conflicting object key, the value from\n   * `translationParams` takes precedence.\n   */\n  getTranslationParams(errorDetails?: any): object {\n    errorDetails = isObject(errorDetails) ? errorDetails : {};\n    return { ...errorDetails, ...this.translationParams };\n  }\n\n  @HostBinding('class.control-invalid') get invalid() {\n    return this.control?.invalid;\n  }\n  @HostBinding('class.control-dirty') get dirty() {\n    return this.control?.dirty;\n  }\n  @HostBinding('class.control-touched') get touched() {\n    return this.control?.touched;\n  }\n  @HostBinding('class.cx-visually-hidden') get hidden() {\n    return !(this.invalid && (this.touched || this.dirty));\n  }\n  @HostBinding('attr.role') role = 'alert';\n}\n","<ng-container *ngIf=\"errorsDetails$ | async as errorDetails\">\n  <ng-container *ngIf=\"!hidden\">\n    <p *ngFor=\"let error of errorDetails\">\n      {{\n        prefix + '.' + error[0] | cxTranslate: getTranslationParams(error[1])\n      }}\n    </p>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { DatePickerService } from './date-picker.service';\n\n/**\n * Component that adds a date control. While the native date picker works in most\n * modern browsers, some browsers need more guidance (placeholder), validation and\n * date conversion.\n *\n * The data picker supports (optional) min and max form controls, so that you can\n * limit the start and/or end date.\n *\n * Most of the implementation is done in the `DatePickerFallbackDirective`.\n */\n@Component({\n  selector: 'cx-date-picker',\n  templateUrl: './date-picker.component.html',\n  // we cannot use onPush change detection as the form state isn't updated without explicit\n  // change detection, see https://github.com/angular/angular/issues/10816\n})\nexport class DatePickerComponent {\n  constructor(protected service: DatePickerService) {}\n  @Input() control: UntypedFormControl;\n  @Input() min?: string;\n  @Input() max?: string;\n  @Input() required?: boolean;\n\n  @Output() update: EventEmitter<void> = new EventEmitter();\n\n  change() {\n    this.update.emit();\n  }\n\n  get placeholder() {\n    return this.service.placeholder;\n  }\n\n  get pattern() {\n    return this.service.pattern;\n  }\n\n  /**\n   * Only returns the date if we have a valid format. We do this to avoid\n   * loads of console errors coming from the datePipe while the user is typing\n   * (in those browsers where the date picker isn't supported).\n   */\n\n  getDate(date?: string): string | undefined {\n    return date && this.service.isValidFormat(date) ? date : undefined;\n  }\n}\n","<input\n  class=\"form-control\"\n  type=\"date\"\n  [formControl]=\"control\"\n  [attr.min]=\"min\"\n  [attr.max]=\"max\"\n  [attr.required]=\"required === false ? undefined : required\"\n  (change)=\"change()\"\n  [placeholder]=\"placeholder\"\n  [pattern]=\"pattern\"\n/>\n<cx-form-errors\n  [control]=\"control\"\n  prefix=\"formErrors.date\"\n  [translationParams]=\"{\n    max: getDate(max) | cxDate,\n    min: getDate(min) | cxDate\n  }\"\n></cx-form-errors>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormErrorsComponent } from './form-errors.component';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [FormErrorsComponent],\n  exports: [FormErrorsComponent],\n})\nexport class FormErrorsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { FormErrorsModule } from '../form-errors/form-errors.module';\nimport { DatePickerComponent } from './date-picker.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormErrorsModule, I18nModule],\n  declarations: [DatePickerComponent],\n  exports: [DatePickerComponent],\n})\nexport class DatePickerModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './date-picker.component';\nexport * from './date-picker.module';\nexport * from './date-picker.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './form-errors.module';\nexport * from './form-errors.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Component that adds a file upload control.\n */\n@Component({\n  selector: 'cx-file-upload',\n  templateUrl: './file-upload.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FileUploadComponent),\n      multi: true,\n    },\n  ],\n  // we cannot use onPush change detection as the form state isn't updated without explicit\n  // change detection, see https://github.com/angular/angular/issues/10816\n})\nexport class FileUploadComponent implements ControlValueAccessor {\n  /**\n   * Allowed file types. It's setting attribute used for OS window for choosing files.\n   */\n  @Input() accept?: string | string[] = '*';\n  /**\n   * Allows selecting multiple files.\n   */\n  @Input() multiple?: boolean = false;\n  /**\n   * Use custom button html passed from parent.\n   */\n  @ContentChild(TemplateRef) customButton: any;\n\n  // TODO: remove this event. Now it's used only to trigger some logic in the parent component.\n  // Prerequisites (changes in the parent component):\n  // - use an async validator that \"opens file\" using the value of the form control\n  // - \"open file\" on form submit, but not on the form control change\n  @Output()\n  update = new EventEmitter<FileList | null>();\n\n  @ViewChild('fileInput', { static: true })\n  protected fileInput: ElementRef<HTMLInputElement>;\n\n  selectFile($event: Event) {\n    const files = ($event.target as HTMLInputElement)?.files;\n    this.onChangeCallback(files);\n    this.update.emit(files);\n  }\n\n  removeFile(): void {\n    this.fileInput.nativeElement.value = '';\n  }\n\n  get selectedFiles(): File[] | undefined {\n    if (this.fileInput.nativeElement.files) {\n      return Array.from(this.fileInput.nativeElement.files);\n    }\n    return undefined;\n  }\n\n  // ControlValueAccessor START\n  protected onChangeCallback: Function = () => {\n    // Intentional empty arrow function\n  };\n  protected onTouchedCallback: Function = () => {\n    // Intentional empty arrow function\n  };\n  registerOnChange(callback: Function): void {\n    this.onChangeCallback = callback;\n  }\n  registerOnTouched(callback: Function): void {\n    this.onTouchedCallback = callback;\n  }\n  setDisabledState(disabled: boolean): void {\n    this.fileInput.nativeElement.disabled = disabled;\n  }\n  writeValue(value: any): void {\n    if (value instanceof FileList) {\n      this.fileInput.nativeElement.files = value;\n    }\n  }\n  // ControlValueAccessor END\n}\n","<input\n  type=\"file\"\n  aria-hidden=\"true\"\n  [accept]=\"accept\"\n  [multiple]=\"multiple\"\n  (change)=\"selectFile($event)\"\n  #fileInput\n/>\n<button\n  *ngIf=\"!customButton\"\n  [attr.aria-label]=\"'common.selectFile' | cxTranslate\"\n  class=\"btn btn-secondary\"\n  type=\"button\"\n  (click)=\"fileInput.click()\"\n>\n  <ng-content></ng-content>\n</button>\n<!-- TODO(Brian-Parth): CXEC-17196 -->\n<button\n  class=\"link cx-action-link\"\n  *ngIf=\"customButton\"\n  (click)=\"fileInput.click()\"\n>\n  <ng-container *ngTemplateOutlet=\"customButton\"> </ng-container>\n</button>\n<p *ngFor=\"let file of selectedFiles\">\n  {{ file?.name }}\n</p>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { FormErrorsModule } from '../form-errors/form-errors.module';\nimport { FileUploadComponent } from './file-upload.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormErrorsModule, I18nModule],\n  declarations: [FileUploadComponent],\n  exports: [FileUploadComponent],\n})\nexport class FileUploadModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './file-upload.component';\nexport * from './file-upload.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { PasswordInputState } from './password-input-visibility.model';\n\n@Component({\n  selector: 'cx-password-visibility-toggle',\n  templateUrl: './password-visibility-toggle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordVisibilityToggleComponent {\n  protected showState: PasswordInputState = {\n    icon: ICON_TYPE.EYE_SLASH,\n    inputType: 'text',\n    ariaLabel: 'passwordVisibility.hidePassword',\n  };\n  protected hideState: PasswordInputState = {\n    icon: ICON_TYPE.EYE,\n    inputType: 'password',\n    ariaLabel: 'passwordVisibility.showPassword',\n  };\n\n  @Input()\n  inputElement: HTMLInputElement;\n\n  state = this.hideState;\n\n  /**\n   * Toggle the visibility of the text of the input field.\n   */\n  toggle(): void {\n    this.state =\n      this.state === this.hideState ? this.showState : this.hideState;\n    this.inputElement.setAttribute('type', this.state.inputType);\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"toggle()\"\n  [attr.aria-label]=\"state.ariaLabel | cxTranslate\"\n>\n  <span aria-hidden=\"true\">\n    <cx-icon [type]=\"state.icon\"></cx-icon>\n  </span>\n</button>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class FormConfig {\n  form?: {\n    passwordVisibilityToggle: boolean;\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends FormConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Directive,\n  ElementRef,\n  AfterViewInit,\n  ViewContainerRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { FormConfig } from '../../../config/form-config';\nimport { PasswordVisibilityToggleComponent } from './password-visibility-toggle.component';\n\n/**\n * Directive to bind a PasswordVisibilityToggleDirective to a password input field. This\n * toggle while alternate the appearance of the input between dots and plain text.\n */\n@Directive({\n  selector: '[cxPasswordVisibilitySwitch][type=\"password\"]',\n})\nexport class PasswordVisibilityToggleDirective implements AfterViewInit {\n  protected inputWrapper: HTMLElement | null;\n\n  constructor(\n    protected winRef: WindowRef,\n    protected config: FormConfig,\n    protected elementRef: ElementRef,\n    protected viewContainerRef: ViewContainerRef,\n    protected changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    if (this.config.form?.passwordVisibilityToggle) {\n      this.wrapInput();\n      this.insertComponent();\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n\n  protected insertComponent(): void {\n    const component = this.viewContainerRef.createComponent(\n      PasswordVisibilityToggleComponent\n    );\n    component.instance.inputElement = this.elementRef.nativeElement;\n    this.inputWrapper?.appendChild(component.location.nativeElement);\n  }\n\n  /**\n   * We need to wrap the input element in a div to be able to position the toggle button in the right place.\n   */\n  protected wrapInput(): void {\n    const input = this.elementRef.nativeElement;\n    const parent = input.parentNode;\n\n    this.inputWrapper = this.winRef.document.createElement('div');\n    this.inputWrapper.setAttribute('class', 'cx-password-input-wrapper');\n\n    // set the wrapper as child (instead of the element)\n    parent.replaceChild(this.inputWrapper, input);\n    this.inputWrapper.appendChild(input);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { FormConfig } from './form-config';\n\nexport const defaultFormConfig: FormConfig = {\n  form: {\n    passwordVisibilityToggle: true,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '../../../../cms-components/misc/icon/icon.module';\nimport { FormConfig } from '../../../../shared/config/form-config';\nimport { defaultFormConfig } from '../../../../shared/config/default-form-config';\nimport { PasswordVisibilityToggleDirective } from './password-visibility-toggle.directive';\nimport { PasswordVisibilityToggleComponent } from './password-visibility-toggle.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  providers: [provideDefaultConfig(<FormConfig>defaultFormConfig)],\n  declarations: [\n    PasswordVisibilityToggleDirective,\n    PasswordVisibilityToggleComponent,\n  ],\n  exports: [\n    PasswordVisibilityToggleDirective,\n    PasswordVisibilityToggleComponent,\n  ],\n})\nexport class PasswordVisibilityToggleModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './password-visibility-toggle.directive';\nexport * from './password-visibility-toggle.component';\nexport * from './password-visibility-toggle.module';\nexport * from './password-input-visibility.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './date-picker/index';\nexport * from './form-errors/index';\nexport * from './file-upload/index';\nexport * from './password-visibility-toggle/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenericLinkComponentService {\n  /**\n   * Pattern matching string starting with `http://` or `https://`.\n   */\n  protected HTTP_PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\n\n  /**\n   * Pattern matching string starting with `mailto:`.\n   */\n  protected MAILTO_PROTOCOL_REGEX: RegExp = /^mailto:/i;\n\n  /**\n   * Pattern matching string starting with `tel:`.\n   */\n  protected TEL_PROTOCOL_REGEX: RegExp = /^tel:/i;\n\n  /**\n   * Returns true when the @Input `url` is a string starting with `http://`, `https://`, `mailto:`, `tel:`.\n   */\n  isExternalUrl(url: string | any[]): boolean {\n    return (\n      typeof url === 'string' &&\n      (this.HTTP_PROTOCOL_REGEX.test(url) ||\n        this.MAILTO_PROTOCOL_REGEX.test(url) ||\n        this.TEL_PROTOCOL_REGEX.test(url))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Params, Router } from '@angular/router';\nimport { GenericLinkComponentService } from './generic-link-component.service';\n\n// private\ninterface RouteParts {\n  /** Path in the Angular-like array format */\n  path?: string[];\n\n  /** Query params */\n  queryParams?: Params;\n\n  /** Hash fragment */\n  fragment?: string | null;\n}\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent implements OnChanges {\n  constructor(\n    protected router: Router,\n    protected service: GenericLinkComponentService\n  ) {}\n\n  /**\n   * Used to split url into 2 parts:\n   * 1. the path\n   * 2. query params + hash fragment\n   */\n  protected readonly URL_SPLIT = /(^[^#?]*)(.*)/;\n\n  /**\n   * Parsed parts of the @Input `url`, when it's a local URL.\n   * It should not be used when the `url` is external.\n   * @see `url`\n   */\n  protected routeParts: RouteParts = {};\n\n  @Input() url: string | any[];\n  @Input() target: string | null;\n  @Input() id: string;\n  @Input() class: string;\n  @Input() style: string | undefined;\n  @Input() title: string;\n\n  isExternalUrl(): boolean {\n    return this.service.isExternalUrl(this.url);\n  }\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['url']) {\n      this.setUrlParts(changes['url'].currentValue);\n    }\n  }\n\n  /**\n   * The part with the path of the local url.\n   */\n  get routerUrl(): string[] | undefined {\n    return this.routeParts.path;\n  }\n\n  /**\n   * The part with the query params of the local url.\n   */\n  get queryParams(): Params | undefined {\n    return this.routeParts.queryParams;\n  }\n\n  /**\n   * The part with the hash fragment of the local url.\n   */\n  get fragment(): string | undefined {\n    return this.routeParts.fragment ?? undefined;\n  }\n\n  /**\n   * Parses the given url and sets the property `urlParts` accordingly.\n   */\n  protected setUrlParts(url: string | any[]) {\n    if (typeof url === 'string') {\n      url = this.getAbsoluteUrl(url); // string links in CMS sometimes don't have the leading slash, so fix it here\n      this.routeParts = this.splitUrl(url as string);\n    } else {\n      this.routeParts = { path: url };\n    }\n  }\n\n  /**\n   * Parses the given string into 3 parts:\n   * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\n   * - query params (as an object)\n   * - hash fragment (string)\n   */\n  protected splitUrl(url: string = ''): RouteParts {\n    const { queryParams, fragment } = this.router.parseUrl(url);\n    const [, path] = url.match(this.URL_SPLIT) ?? [, ''];\n\n    // wrap path in an array, to have the Angular-like path format\n    return { path: [path ?? ''], queryParams, fragment };\n  }\n\n  /**\n   * Prepends a leading slash to the given URL string, in case it doesn't have it.\n   */\n  protected getAbsoluteUrl(url: string): string {\n    return url.startsWith('/') ? url : '/' + url;\n  }\n}\n","<!-- https://github.com/angular/angular/issues/24567 -->\n\n<ng-container *ngIf=\"isExternalUrl(); else isLocalUrl\">\n  <a\n    [href]=\"url\"\n    [attr.target]=\"target\"\n    [attr.rel]=\"rel\"\n    [attr.id]=\"id\"\n    [attr.class]=\"class\"\n    [attr.style]=\"style\"\n    [attr.title]=\"title\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n  </a>\n</ng-container>\n\n<ng-template #isLocalUrl>\n  <a\n    [routerLink]=\"routerUrl\"\n    [queryParams]=\"queryParams\"\n    [fragment]=\"fragment\"\n    [attr.target]=\"target\"\n    [attr.id]=\"id\"\n    [attr.class]=\"class\"\n    [attr.style]=\"style\"\n    [attr.title]=\"title\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n  </a>\n</ng-template>\n\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './generic-link-component.service';\nexport * from './generic-link.component';\nexport * from './generic-link.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n/**\n * Provides a UI to manage the count of the quantity, typically by using\n * increase and decrease functionality. The item counter expects an input `FormControl`\n * so that the state of the control can be managed outside of this component.\n */\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  // do not use OnPush change detection strategy as we would not\n  // get updates of other form control state (disabled). We want to have a\n  // disabled state in order to ensure that the control cannot be used while\n  // the cart is updated.\n})\nexport class ItemCounterComponent implements OnInit, OnDestroy {\n  /**\n   * Holds the value of the counter, the state of the `FormControl`\n   * can be managed outside of the item counter.\n   */\n  @Input() control: UntypedFormControl;\n\n  /**\n   * This can be used in case an item has a minmum order quantity.\n   * @default 1\n   */\n  @Input() min = 1;\n\n  /**\n   * This can be used in case an item has a maximum order quantity.\n   */\n  @Input() max: number;\n\n  /**\n   * The step is used to increment the count. It is supposed to be a\n   * positive integer or float.\n   * @default 1\n   */\n  @Input() step = 1;\n\n  /**\n   * Indicates that the input can be manually set to zero,\n   * despite the fact that the input controls will be limited to\n   * the minimum. The zero value can be used to remove an item.\n   */\n  @Input() allowZero = false;\n\n  /**\n   * In readonly mode the item counter will only be shown as a label,\n   * the form controls are not rendered.\n   * Please not that readonly is different from the `disabled` form state.\n   * @default false\n   */\n  @HostBinding('class.readonly') @Input() readonly = false;\n\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\n\n  /**\n   * Subscription responsible for auto-correcting control's value when it's invalid.\n   */\n  private sub: Subscription;\n\n  @HostListener('click') handleClick() {\n    this.input.nativeElement.focus();\n  }\n\n  ngOnInit() {\n    this.sub = this.control.valueChanges\n      .pipe(startWith(this.control.value))\n      .subscribe((value) =>\n        this.control.setValue(this.getValidCount(value), { emitEvent: false })\n      );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  increment() {\n    // it's too early to use the `stepUp` and `stepDown` API...\n    // let's wait for FF: https://caniuse.com/#search=stepUp\n    this.control.setValue(this.control.value + this.step);\n    this.control.markAsDirty();\n  }\n\n  decrement() {\n    this.control.setValue(this.control.value - this.step);\n    this.control.markAsDirty();\n  }\n\n  /**\n   * Validate that the given value is in between\n   * the `min` and `max` value. If the value is out\n   * of  the min/max range, it will be altered.\n   * If `allowZero` is set to true, the 0 value is ignored.\n   *\n   */\n  private getValidCount(value: number) {\n    if (value < this.min && !(value === 0 && this.allowZero)) {\n      value = this.min;\n    }\n    if (this.max && value > this.max) {\n      value = this.max;\n    }\n    return value;\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"decrement()\"\n  [disabled]=\"control.disabled || control.value <= min\"\n  [tabindex]=\"control.disabled || control.value <= min ? -1 : 0\"\n  attr.aria-label=\"{{ 'itemCounter.removeOne' | cxTranslate }}\"\n>\n  -\n</button>\n<input\n  #qty\n  type=\"number\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [step]=\"step\"\n  [readonly]=\"readonly\"\n  [tabindex]=\"readonly ? -1 : 0\"\n  [formControl]=\"control\"\n  attr.aria-label=\"{{ 'itemCounter.quantity' | cxTranslate }}\"\n/>\n<button\n  type=\"button\"\n  (click)=\"increment()\"\n  [disabled]=\"control.disabled || control.value >= max\"\n  tabindex=\"0\"\n  attr.aria-label=\"{{ 'itemCounter.addOneMore' | cxTranslate }}\"\n>\n  +\n</button>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { ItemCounterComponent } from './item-counter.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './item-counter.module';\nexport * from './item-counter.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\n\n@Directive({\n  selector: '[cxNgSelectA11y]',\n})\nexport class NgSelectA11yDirective implements AfterViewInit {\n  /**\n   * Use directive to bind aria attribute to inner element of ng-select\n   * Angular component for accessibility compliance. If ng-select controls itself\n   * ariaControls is not needed, instead bind a specific id to the <ng-select> element.\n   */\n  @Input() cxNgSelectA11y: { ariaLabel?: string; ariaControls?: string };\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    const divCombobox =\n      this.elementRef.nativeElement.querySelector('[role=\"combobox\"]');\n\n    const ariaLabel = this.cxNgSelectA11y.ariaLabel;\n    const elementId = this.elementRef.nativeElement.id;\n    const ariaControls = this.cxNgSelectA11y.ariaControls ?? elementId;\n\n    if (ariaLabel) {\n      this.renderer.setAttribute(divCombobox, 'aria-label', ariaLabel);\n    }\n\n    if (ariaControls) {\n      this.renderer.setAttribute(divCombobox, 'aria-controls', ariaControls);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[] | undefined;\n  @Input()\n  ariaControls: string;\n  @Input()\n  ariaLabel: string | undefined;\n  @Input()\n  selectedOption: string | undefined;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string } | null;\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n\n  get selectedLabel() {\n    if (this.selectedOption) {\n      return (\n        this.sortOptions?.find((sort) => sort.code === this.selectedOption)\n          ?.name ?? this.sortLabels?.[this.selectedOption]\n      );\n    }\n  }\n}\n","<ng-select\n  [searchable]=\"false\"\n  [clearable]=\"false\"\n  placeholder=\"{{ placeholder }}\"\n  (change)=\"sortList($event)\"\n  [ngModel]=\"selectedOption\"\n  [cxNgSelectA11y]=\"{\n    ariaLabel: ariaLabel || ('productList.sortResults' | cxTranslate),\n    ariaControls: ariaControls\n  }\"\n>\n  <ng-option *ngFor=\"let sort of sortOptions\" [value]=\"sort.code\">{{\n    sort.name ? sort.name : sortLabels && sort.code ? sortLabels[sort.code] : ''\n  }}</ng-option>\n</ng-select>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { NgSelectA11yDirective } from './ng-select-a11y.directive';\n\n@NgModule({\n  declarations: [NgSelectA11yDirective],\n  exports: [NgSelectA11yDirective],\n})\nexport class NgSelectA11yModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SortingComponent } from './sorting.component';\nimport { NgSelectA11yModule } from '../../ng-select-a11y/ng-select-a11y.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    NgSelectA11yModule,\n    I18nModule,\n  ],\n  declarations: [SortingComponent],\n  exports: [SortingComponent],\n})\nexport class SortingModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './sorting.component';\nexport * from './sorting.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PaginationConfig } from './pagination.config';\n\nexport const defaultPaginationConfig: PaginationConfig = {\n  pagination: {\n    addStart: true,\n    addEnd: true,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { PaginationOptions } from '../pagination.model';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PaginationConfig {\n  pagination?: PaginationOptions;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends PaginationConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-pagination.config';\nexport * from './pagination.config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents a page item for a pagination system. This is used\n * to store the model of each page.\n */\nexport interface PaginationItem {\n  label?: string;\n  type?: PaginationItemType;\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\n  number?: number;\n}\n\n/**\n * The item type is used to add semantic structure to the\n * PaginationItem, so that the UI understands the usage.\n */\nexport enum PaginationItemType {\n  GAP = 'gap',\n  FIRST = 'first',\n  LAST = 'last',\n  PREVIOUS = 'previous',\n  NEXT = 'next',\n  START = 'start',\n  END = 'end',\n  PAGE = 'page',\n}\n\nexport interface PaginationOptions {\n  /**\n   * The range of direct accessible pages in the pagination.\n   *\n   * `« 4 (5) 6 »`\n   *\n   * Defaults to 3.\n   */\n  rangeCount?: number;\n\n  /** Adds a link to skip to the start of the pages, defaults to false. */\n  addStart?: boolean;\n  /** A link to skip to the end of the pages, defaults to false. */\n  addEnd?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addPrevious?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addNext?: boolean;\n\n  navigationPosition?: PaginationNavigationPosition;\n\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\n  addFirst?: boolean;\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\n  addLast?: boolean;\n\n  /**\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\n   *\n   * `1 ...  4 (5) 6 ... 18`\n   *\n   * Defaults to false.\n   */\n  addDots?: boolean;\n\n  /**\n   * If the page dots only represents a single page, we rather add the page\n   * as this would take the same amount of space. Some UX might want to use\n   * the dots for consistency reasons, which why this option is configurable.\n   *\n   * This typically happens on the 4th page (in case the range is 3):\n   * Instead of having:\n   *\n   *  `1 ...  3 (4) 5`\n   *\n   * we'd have\n   *\n   * `1 2 3 (4) 5`.\n   *\n   * Defaults to false.\n   */\n  substituteDotsForSingularPage?: boolean;\n\n  /** Custom label for the start link, defaults to `«`. */\n  startLabel?: string;\n  /** Custom label for the previous link, defaults to `‹`. */\n  previousLabel?: string;\n  /** Custom label for the next link, defaults to `›`. */\n  nextLabel?: string;\n  /** Custom label for the end link, defaults to `»`. */\n  endLabel?: string;\n  /** Custom label for the dots, defaults to `...`. */\n  dotsLabel?: string;\n}\n\nexport enum PaginationNavigationPosition {\n  ASIDE = 'aside',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PaginationConfig } from './config/pagination.config';\nimport {\n  PaginationItem,\n  PaginationItemType,\n  PaginationNavigationPosition,\n  PaginationOptions,\n} from './pagination.model';\n\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\n  rangeCount: 3,\n  dotsLabel: '...',\n  startLabel: '«',\n  previousLabel: '‹',\n  nextLabel: '›',\n  endLabel: '»',\n};\n\n/**\n * Builds a pagination structures based on a pageCount and current page number.\n * There are various {@link PaginationConfig} options which can be used to configure\n * the behavior of the build. Alternatively, CSS can be used to further customize\n * the pagination.\n *\n * Examples:\n * The full blown pagination items contain the follow elements:\n *\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\n *\n * This includes pagination items to the following pages:\n * - start page\n * - previous page\n * - first page\n * - page range\n * - last page\n * - next page\n * - end page\n *\n * All of those links are configurable, including the size of the page range.\n * The current page will always be centered in the page range to provide direct access\n * to the previous and next page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaginationBuilder {\n  constructor(protected paginationConfig: PaginationConfig) {}\n\n  /**\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\n   * to build out the full pagination. There are various {@link PaginationConfig} options\n   * which can be used to configure the behavior of the build. Alternatively, CSS\n   * can be used to further specialize visibility of the pagination.\n   *\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   * @returns An array of `PaginationItem`\n   */\n  paginate(pageCount: number, current: number): PaginationItem[] {\n    const pages: PaginationItem[] = [];\n    if (!pageCount || pageCount < 2) {\n      return pages;\n    }\n    this.addPages(pages, pageCount, current);\n    this.addDots(pages, pageCount);\n    this.addFirstLast(pages, pageCount);\n    this.addNavigation(pages, pageCount, current);\n\n    return pages;\n  }\n\n  /**\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\n   * The current page is always centered to provide direct access to the previous and next page.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   */\n  protected addPages(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const start = this.getStartOfRange(pageCount, current);\n    if (this.config.rangeCount !== undefined && start !== null) {\n      const max = Math.min(this.config.rangeCount, pageCount);\n      Array.from(Array(max)).forEach((_, i) => {\n        pages.push({\n          number: i + start,\n          label: String(i + start + 1),\n          type: PaginationItemType.PAGE,\n        });\n      });\n    }\n  }\n\n  /**\n   * Adds dots before and after the given pages, if configured (defaults to true).\n   * If the dots only represent a single page, the page number is added instead of\n   * the dots, unless the configuration requires dots always.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   */\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\n    if (!this.config.addDots) {\n      return;\n    }\n\n    pages.unshift(...this.addFirstGapToDots(pages));\n    pages.push(...this.addLastGapToDots(pages, pageCount));\n  }\n\n  /**\n   * Helper method for addDots() whether to add the first gap.\n   */\n  protected addFirstGapToDots(pages: PaginationItem[]) {\n    const firstItemNumber = pages[0].number;\n    const gapNumber = Number(this.config.addFirst);\n    if (firstItemNumber !== undefined && firstItemNumber > gapNumber) {\n      const isGap =\n        !this.config.substituteDotsForSingularPage ||\n        firstItemNumber !== gapNumber + 1;\n      const isSubstituted =\n        this.config.addFirst &&\n        this.config.substituteDotsForSingularPage &&\n        gapNumber === 0;\n      const type = isGap\n        ? PaginationItemType.GAP\n        : isSubstituted\n        ? PaginationItemType.FIRST\n        : PaginationItemType.PAGE;\n      return [\n        Object.assign(\n          {\n            label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\n            type,\n          },\n          isGap ? null : { number: gapNumber }\n        ),\n      ];\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Helper method for addDots() whether to add the last gap.\n   */\n  protected addLastGapToDots(pages: PaginationItem[], pageCount: number) {\n    const pageNumber = pages[pages.length - 1].number;\n    const nextPageNumber = pageNumber ? pageNumber + 1 : undefined;\n    const last = pageCount - (Number(this.config.addLast) + 1);\n    if (nextPageNumber && nextPageNumber <= last) {\n      const isSubstituted =\n        this.config.addLast &&\n        this.config.substituteDotsForSingularPage &&\n        nextPageNumber === last;\n      const isGap =\n        nextPageNumber <\n        pageCount -\n          Number(this.config.substituteDotsForSingularPage) -\n          Number(this.config.addLast);\n\n      const type = isGap\n        ? PaginationItemType.GAP\n        : isSubstituted\n        ? PaginationItemType.LAST\n        : PaginationItemType.PAGE;\n      return [\n        Object.assign(\n          {\n            label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\n            type,\n          },\n          isGap ? null : { number: nextPageNumber }\n        ),\n      ];\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Add links to the first and last page, if configured to do so.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   *\n   */\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\n    if (this.config.addFirst && pages[0].number !== 0) {\n      pages.unshift({\n        number: 0,\n        label: '1',\n        type: PaginationItemType.FIRST,\n      });\n    }\n    if (\n      this.config.addLast &&\n      pages[pages.length - 1].number !== pageCount - 1\n    ) {\n      pages.push({\n        number: pageCount - 1,\n        label: String(pageCount),\n        type: PaginationItemType.LAST,\n      });\n    }\n  }\n\n  /**\n   * Add links to the start, previous, next and last page, if configured to do so.\n   * The order of the links can be configured by using the {@link PaginationConfig},\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\n   * The `PaginationNavigationPosition` allows for 3 flavours:\n   *\n   * - by default the pagination starts with start and previous and ends with the next and end links\n   * - BEFORE – all navigation links are added in the front of the pagination list\n   * - AFTER – all navigation links are pushed to the end of the pagination list\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   *\n   */\n  protected addNavigation(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const before = this.getBeforeLinks(current);\n    const after = this.getAfterLinks(pageCount, current);\n    const pos = this.config.navigationPosition;\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\n      pages.unshift(...before);\n      pages.push(...after);\n    } else {\n      if (pos === PaginationNavigationPosition.BEFORE) {\n        pages.unshift(...before, ...after);\n      }\n      if (pos === PaginationNavigationPosition.AFTER) {\n        pages.push(...before, ...after);\n      }\n    }\n  }\n\n  /**\n   * Returns the start and previous links, if applicable.\n   */\n  protected getBeforeLinks(current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addStart) {\n      const start = () => {\n        return Object.assign(\n          {\n            label: this.config.startLabel,\n            type: PaginationItemType.START,\n          },\n          current > 0 ? { number: 0 } : null\n        );\n      };\n      list.push(start());\n    }\n    if (this.config.addPrevious) {\n      const previous = () => {\n        return Object.assign(\n          {\n            label: this.config.previousLabel,\n            type: PaginationItemType.PREVIOUS,\n          },\n          current > 0 ? { number: current - 1 } : null\n        );\n      };\n      list.push(previous());\n    }\n    return list;\n  }\n\n  /**\n   * Returns the next and end links, if applicable.\n   */\n  protected getAfterLinks(\n    pageCount: number,\n    current: number\n  ): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addNext) {\n      const next = () => {\n        return Object.assign(\n          {\n            label: this.config.nextLabel,\n            type: PaginationItemType.NEXT,\n          },\n          current < pageCount - 1 ? { number: current + 1 } : null\n        );\n      };\n      list.push(next());\n    }\n    if (this.config.addEnd) {\n      const end = () => {\n        return Object.assign(\n          {\n            label: this.config.endLabel,\n            type: PaginationItemType.END,\n          },\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\n        );\n      };\n      list.push(end());\n    }\n\n    return list;\n  }\n  /**\n   * Resolves the first page of the range we need to build.\n   * This is the page that is leading up to the range of the\n   * current page.\n   *\n   * @param pageCount The total number of pages.\n   * @param current The current page number, 0-index based.\n   */\n  protected getStartOfRange(pageCount: number, current: number): number | null {\n    if (this.config.rangeCount !== undefined) {\n      const count = this.config.rangeCount - 1;\n      // the least number of pages before and after the current\n      const delta = Math.round(count / 2);\n\n      // ensure that we start with at least the first page\n      const minStart = Math.max(0, current - delta);\n      // ensures that we start with at least 1 and do not pass the last range\n      const maxStart = Math.max(0, pageCount - count - 1);\n\n      // ensure that we get at least a full range at the end\n      return Math.min(maxStart, minStart);\n    }\n    return null;\n  }\n\n  /**\n   * Returns the pagination configuration. The configuration is driven by the\n   * (default) application configuration.\n   *\n   * The default application is limited to adding the start and end link:\n   * ```ts\n   *   addStart: true,\n   *   addEnd: true\n   * ```\n   *\n   * The application configuration is however merged into the following static configuration:\n   * ```ts\n   * {\n   *   rangeCount: 3,\n   *   dotsLabel: '...',\n   *   startLabel: '«',\n   *   previousLabel: '‹',\n   *   nextLabel: '›',\n   *   endLabel: '»'\n   * }\n   * ```\n   */\n  protected get config(): PaginationOptions {\n    return Object.assign(\n      FALLBACK_PAGINATION_OPTIONS,\n      this.paginationConfig.pagination\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PaginationModel } from '@spartacus/core';\nimport { PaginationBuilder } from './pagination.builder';\nimport { PaginationItem, PaginationItemType } from './pagination.model';\n\n/**\n * The `PaginationComponent` is a generic component that is used for\n * all lists in Spartacus that require pagination. The component supports\n * all common features, which can be configured or hidden by CSS.\n */\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\n  @Input() pageRoute: string = '.';\n\n  /** The (optional) query parameter which is added to the page route.  */\n  @Input() queryParam: string;\n\n  /**\n   * Whenever there's a default page specified, the routing logic\n   * will omit the page number in routeLink or parameters.\n   */\n  @Input() defaultPage: number | undefined;\n\n  private _pagination: PaginationModel;\n  get pagination(): PaginationModel {\n    return this._pagination;\n  }\n  @Input() set pagination(value: PaginationModel | undefined) {\n    if (value) {\n      this._pagination = value;\n      this.render(value);\n    }\n  }\n\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  pages: PaginationItem[] = [];\n\n  constructor(\n    private paginationBuilder: PaginationBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  protected render(pagination: PaginationModel): void {\n    if (!pagination) {\n      return;\n    }\n    this.pages = this.paginationBuilder.paginate(\n      pagination.totalPages ?? 0,\n      pagination.currentPage ?? 0\n    );\n  }\n\n  /**\n   * Format aria-label based on pagination item type.\n   *\n   * @param label string\n   * @param type PaginationItemType\n   * @returns string\n   */\n  getAriaLabel(label?: string, type?: PaginationItemType): string {\n    // Convert 'Start' to First, and 'End' to Last for a more natural screen read.\n    type = type === PaginationItemType.START ? PaginationItemType.FIRST : type;\n    type = type === PaginationItemType.END ? PaginationItemType.LAST : type;\n    return type === PaginationItemType.PAGE\n      ? `${type} ${label}`\n      : `${type} ${PaginationItemType.PAGE}`;\n  }\n\n  /**\n   * Indicates whether the given item is the current item.\n   *\n   * @param item PaginationItem\n   * @returns boolean\n   */\n  isCurrent(item: PaginationItem): boolean {\n    return (\n      item.type === PaginationItemType.PAGE &&\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  /**\n   * Indicates whether the pagination item is inactive. This is used\n   * to disabled a link or set the tabindex to `-1`.\n   *\n   * Defaults to true\n   *\n   * @param item PaginationItem\n   * @returns returns -1 in case of a disabled\n   */\n  isInactive(item: PaginationItem): boolean {\n    return (\n      !item.hasOwnProperty('number') ||\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  getQueryParams(item: PaginationItem): Params {\n    const queryParams = Object.assign(\n      {},\n      this.activatedRoute.snapshot.queryParams\n    );\n    if (\n      this.queryParam &&\n      item.number !== undefined &&\n      this.pagination.totalPages !== undefined &&\n      item.number < this.pagination.totalPages &&\n      !this.isCurrent(item)\n    ) {\n      queryParams[this.queryParam] = item.number;\n    }\n    // omit the page number from the query parameters in case it's the default\n    // to clean up the experience and avoid unnecessary polluting of the URL\n    if (queryParams[this.queryParam] === this.defaultPage) {\n      delete queryParams[this.queryParam];\n    }\n    return queryParams;\n  }\n\n  pageChange(page: PaginationItem): void {\n    this.viewPageEvent.emit(page.number);\n  }\n}\n","<a\n  *ngFor=\"let item of pages\"\n  [class]=\"item.type\"\n  [class.disabled]=\"isInactive(item)\"\n  [class.current]=\"isCurrent(item)\"\n  [routerLink]=\"pageRoute\"\n  [queryParams]=\"getQueryParams(item)\"\n  [tabIndex]=\"isInactive(item) ? -1 : 0\"\n  (click)=\"pageChange(item)\"\n  [attr.aria-label]=\"getAriaLabel(item.label, item.type)\"\n>\n  {{ item.label }}\n</a>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultPaginationConfig } from './config/index';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class PaginationModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/index';\nexport * from './pagination.builder';\nexport * from './pagination.component';\nexport * from './pagination.model';\nexport * from './pagination.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-total',\n  templateUrl: './total.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TotalComponent {\n  private _pagination: PaginationModel;\n\n  get pagination(): PaginationModel {\n    return this._pagination;\n  }\n  @Input() set pagination(paginationModel: PaginationModel | undefined) {\n    this._pagination = paginationModel ?? { totalResults: 0 };\n  }\n\n  /**\n   * Current page, starting form page 0\n   * */\n  get currentPage(): number {\n    return this.pagination?.currentPage ?? 0;\n  }\n\n  get pageSize(): number {\n    return this.pagination?.pageSize ?? 0;\n  }\n\n  get totalResults(): number {\n    return this.pagination?.totalResults ?? 0;\n  }\n\n  get fromItem() {\n    return this.currentPage * this.pageSize + 1;\n  }\n\n  get toItem() {\n    const lastItem = (this.currentPage + 1) * this.pageSize;\n    return lastItem > this.totalResults ? this.totalResults : lastItem;\n  }\n}\n","<ng-container *ngIf=\"totalResults > 0\">\n  <div>{{ totalResults }} {{ 'common.results' | cxTranslate }}</div>\n  <div class=\"cx-vertical-line-separator\"></div>\n  <div>\n    {{ fromItem }}-{{ toItem }} {{ 'common.of' | cxTranslate }}\n    {{ totalResults }}\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { TotalComponent } from './total.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, I18nModule],\n  declarations: [TotalComponent],\n  exports: [TotalComponent],\n})\nexport class TotalModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './total.component';\nexport * from './total.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { PaginationComponent, PaginationModule } from './pagination/index';\nimport { SortingComponent } from './sorting/sorting.component';\nimport { SortingModule } from './sorting/sorting.module';\nimport { TotalModule } from './total';\nimport { TotalComponent } from './total/total.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IconModule,\n    PaginationModule,\n    SortingModule,\n    TotalModule,\n  ],\n  exports: [SortingComponent, PaginationComponent, TotalComponent],\n})\nexport class ListNavigationModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './sorting/index';\nexport * from './list-navigation.module';\nexport * from './pagination/index';\nexport * from './total/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { ImageLoadingStrategy, MediaFormatSize } from './media.model';\n\n/**\n * Provides configuration specific to Media, such as images. This is used to optimize\n * rendering of the media, SEO and performance.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class MediaConfig {\n  /**\n   * Media _format_ configuration holds the size of the media's assigned to\n   * a format.\n   */\n  mediaFormats?: {\n    /**\n     * Represents the media format code, that is the key to distinguish different\n     * media in a container.\n     */\n    [format: string]: MediaFormatSize;\n  };\n\n  /**\n   * Indicates how the browser should load the image. There's only one\n   * global strategy for all media cross media in Spartacus.\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img for more\n   * information.\n   *\n   * If the `lazy` strategy is in place, the `loading=\"lazy\"` attribute is added to the\n   * img element.\n   */\n  imageLoadingStrategy?: ImageLoadingStrategy;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends MediaConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './media.component';\nexport * from './media.config';\nexport * from './media.model';\nexport * from './media.module';\nexport * from './media.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './popover.model';\nexport * from './popover.component';\nexport * from './popover.directive';\nexport * from './popover.module';\nexport * from './popover.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n@Component({\n  selector: 'cx-progress-button',\n  templateUrl: './progress-button.component.html',\n})\nexport class ProgressButtonComponent {\n  @Input()\n  ariaLabel: string = '';\n\n  @Input()\n  class: string = '';\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  loading: boolean = false;\n\n  @Output()\n  clickEvent = new EventEmitter<void>();\n\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n","<button\n  (click)=\"clickEvent.emit()\"\n  [attr.aria-label]=\"ariaLabel\"\n  [disabled]=\"disabled || loading\"\n  [ngClass]=\"class\"\n  class=\"btn btn-primary\"\n>\n  <div class=\"cx-progress-button-container\">\n    <div *ngIf=\"loading\" class=\"loader-container\">\n      <div class=\"loader\">{{ 'spinner.loading' | cxTranslate }}</div>\n    </div>\n    <ng-content></ng-content>\n  </div>\n</button>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { ProgressButtonComponent } from './progress-button.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [ProgressButtonComponent],\n  exports: [ProgressButtonComponent],\n})\nexport class ProgressButtonModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './progress-button.component';\nexport * from './progress-button.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './spinner.component';\nexport * from './spinner.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { SplitViewState } from './split/split-view.model';\n\n/**\n * Supposed to be injected in the split view component, so that the split view state\n * is maintained for a single split view.\n */\n@Injectable()\nexport class SplitViewService {\n  /**\n   * Newly added views are hidden by default, unless it is the first view of the split view.\n   * The default hide mode can be overridden.\n   */\n  defaultHideMode = true;\n\n  protected splitViewCount = 1;\n\n  protected _views$ = new BehaviorSubject<SplitViewState[]>([]);\n\n  /**\n   * Adds a view to the list of views. The view is initialized with the `SplitViewState`\n   * state. If no state is provided, the state is created with the hidden property. The hidden\n   * property is provided by the `defaultHideMode`, unless it's the first view (position: 0).\n   */\n  add(position: number, initialState?: SplitViewState) {\n    const state: SplitViewState = {\n      ...{ hidden: position === 0 ? false : this.defaultHideMode },\n      ...initialState,\n    };\n    if (!this.views[position]) {\n      this.views[position] = state;\n      this.updateState(position, state.hidden);\n      this._views$.next(this.views);\n    }\n  }\n\n  /**\n   * The split view is based on a number of views that can be used next to each other.\n   * When the number changes (i.e. if the screen goes from wide to small), the visibility state\n   * of the views should be updated.\n   */\n  updateSplitView(splitViewCount: number) {\n    if (splitViewCount !== this.splitViewCount) {\n      this.splitViewCount = splitViewCount;\n      this.updateState();\n    }\n  }\n\n  /**\n   * Returns an observable with the active view number. The active view number\n   * represents the last visible view.\n   */\n  getActiveView(): Observable<number> {\n    return this._views$.pipe(\n      map((views) => this.getActive(views)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns an observable with the SplitViewState for the given view position.\n   */\n  getViewState(position: number): Observable<SplitViewState> {\n    return this._views$.pipe(\n      map((views) => views[position]),\n      // we must filter here, since outlet driven views will destroyed the view\n      filter((view) => Boolean(view))\n    );\n  }\n\n  /**\n   * Removes a view from the list of views.\n   *\n   * Removing a view is different from hiding a view. Removing a view is typically done\n   * when a component is destroyed.\n   *\n   * When the view is removed, the SplitViewState is updated to reflect that new organization\n   * of views.\n   */\n  remove(position: number) {\n    const activePosition = this.getActive(this.views);\n    this._views$.next(this.views.splice(0, position));\n    if (activePosition >= position) {\n      this.updateState(position);\n    }\n  }\n\n  /**\n   * Returns the next view position. This is useful for views that do not want to be bothered\n   * with controlling view numbers.\n   */\n  get nextPosition(): number {\n    return this.views.length || 0;\n  }\n\n  /**\n   * Toggles the visibility of the views based on the given view position. If the view\n   * is already visible, we close the view and active the former view. Unless the hide flag\n   * is used, to force the view.\n   *\n   * The view state of other views in the split view are updated as well.\n   *\n   * @param position The zero-based position number of the view.\n   * @param forceHide The (optional) hide state for the view position.\n   */\n  toggle(position: number, forceHide?: boolean) {\n    // add the view if it hasn't been added before.\n    if (!this.views[position]) {\n      this.add(position, { hidden: forceHide ?? false });\n    }\n\n    // If the position is already visible, we move to a previous position. Only if the hide\n    // state is forced, we keep the current position.\n    if (\n      this.views[position] &&\n      forceHide === undefined &&\n      !this.views[position].hidden\n    ) {\n      position--;\n    }\n\n    this.updateState(position, forceHide === true);\n  }\n\n  /**\n   * Updates the hidden state of all the views.\n   */\n  protected updateState(position?: number, hide?: boolean) {\n    const views = [...this.views];\n    if (hide !== undefined && position && views[position]) {\n      views[position].hidden = hide;\n    }\n    let lastVisible =\n      views.length - [...views].reverse().findIndex((view) => !view.hidden) - 1;\n\n    if (lastVisible === views.length) {\n      if (position) {\n        // When there's only 1 view (mobile), we might not find any active\n        // if the user navigates back.\n        lastVisible = position - 1;\n      } else {\n        lastVisible = views.length - 1;\n      }\n    }\n\n    views.forEach((view, pos) => {\n      if (view && pos !== position) {\n        // hide other views that are outside the split view\n        view.hidden =\n          pos > lastVisible || pos < lastVisible - (this.splitViewCount - 1);\n      }\n    });\n\n    this._views$.next(views);\n  }\n\n  /**\n   * Returns the active view count for the list of views.\n   */\n  protected getActive(views: SplitViewState[]): number {\n    // we reverse the list to find the last visible view\n    const l = [...views]\n      .reverse()\n      .findIndex((view: SplitViewState) => !view.hidden);\n    const last = l === -1 ? 0 : views.length - l - 1;\n    return last;\n  }\n\n  /**\n   * Utility method that resolves all views from the subject.\n   */\n  protected get views(): SplitViewState[] {\n    return this._views$.value;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The split-view component supports an unlimited number of nested views. The component\n * is a host to those view components and doesn't add any restrictions to it's content;\n * content is projected as-is.\n *\n * ```html\n * <cx-split-view>\n *   <cx-view></cx-view>\n *   <cx-view></cx-view>\n *   <any-wrapper>\n *     <cx-view></cx-view>\n *   </any-wrapper>\n * </cx-split-view>\n * ```\n *\n * The split view component is only concerned with tracking the underlying _visible_\n * view components, so that the `lastVisibleView` can be updated accordingly. The actual\n * visibility of views is controlled by CSS. To allow for maximum flexibility, the CSS\n * implementation is using CSS variables. The `lastVisibleView` is bind to the\n * `--cx-active-view` on the host, so that all descendants views will inherit the\n * property conveniently.\n */\n@Component({\n  selector: 'cx-split-view',\n  templateUrl: './split-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [SplitViewService],\n})\nexport class SplitViewComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  /**\n   * Sets the default hide mode for views. This mode is useful in case views are dynamically being created,\n   * for example when they are created by router components.\n   *\n   * The mode defaults to true, unless this is the first view; the first view is never hidden.\n   */\n  @Input()\n  set hideMode(mode: boolean) {\n    this.splitService.defaultHideMode = mode;\n  }\n\n  /**\n   * Indicates the last visible view in the range of views that is visible. This\n   * is bind to a css variable `--cx-active-view` so that the experience\n   * can be fully controlled by css.\n   */\n  @HostBinding('style.--cx-active-view')\n  @HostBinding('attr.active-view')\n  lastVisibleView = 1;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected breakpointService: BreakpointService,\n    protected elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.splitService\n        .getActiveView()\n        .subscribe(\n          (lastVisible: number) => (this.lastVisibleView = lastVisible + 1)\n        )\n    );\n    this.subscription.add(\n      this.breakpointService.breakpoint$.subscribe(() => {\n        this.splitService.updateSplitView(this.splitViewCount);\n      })\n    );\n  }\n\n  /**\n   * Returns the maximum number of views per split-view. The number is based on the\n   * CSS custom property `--cx-max-views`.\n   */\n  protected get splitViewCount(): number {\n    return Number(\n      getComputedStyle(this.elementRef.nativeElement).getPropertyValue(\n        '--cx-max-views'\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-content></ng-content>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { delayWhen } from 'rxjs/operators';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The view component is part of the `SplitViewComponent`. The view\n * contains the navigable content that should be split up. It maintains\n * a view position and allows to show or hide the view.\n *\n * The ViewComponent interacts with the `SplitViewService` for handing over the\n * view state, so that the overarching `SplitViewComponent` can manage the\n * overall experience.\n */\n@Component({\n  selector: 'cx-view',\n  templateUrl: './view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewComponent implements OnInit, OnDestroy {\n  protected _hidden: boolean | undefined;\n\n  @Input()\n  @HostBinding('attr.position')\n  @HostBinding('style.--cx-view-position')\n  position: string;\n\n  /**\n   * The disappeared flag is added to the\n   */\n  @HostBinding('attr.disappeared') disappeared: boolean | undefined = true;\n\n  /**\n   * The hidden input is used to set the initial visible state of the view.\n   * The hidden state defaults to false.\n   *\n   * The hidden input supports 2-way binding, see `hiddenChange` property.\n   */\n  @Input()\n  set hidden(hidden: boolean) {\n    this._hidden = hidden;\n    this.splitService.toggle(this.viewPosition, hidden);\n  }\n\n  /**\n   * An update of the view visibility is emitted to the hiddenChange output.\n   */\n  @Output()\n  hiddenChange = new EventEmitter();\n\n  protected subscription: Subscription;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected elementRef: ElementRef,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    const hidden = this._hidden ? { hidden: this._hidden } : {};\n    this.splitService.add(this.viewPosition, hidden);\n\n    this.subscription = this.splitService\n      .getViewState(this.viewPosition)\n      // delay the disappeared state, so that the (CSS driven) animation has time to finish\n      .pipe(delayWhen((view) => timer(view.hidden ? this.duration * 1.25 : 0)))\n      .subscribe((view) => {\n        this.hiddenChange.emit(view.hidden);\n        this._hidden = view.hidden;\n\n        this.disappeared = view.hidden;\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Toggles the visibility of the view.\n   *\n   * An optional force flag can be used to explicitly show or hide view component.\n   */\n  toggle(force?: boolean) {\n    this.splitService.toggle(this.viewPosition, force);\n  }\n\n  /**\n   * Returns the position for the view.\n   *\n   * The position is either taken from the input `position` or generated by the `SplitService`.\n   */\n  protected get viewPosition(): number {\n    if (!(Number(this.position) >= 0)) {\n      this.position = this.splitService.nextPosition.toString();\n    }\n    return Number(this.position);\n  }\n\n  /**\n   * Returns the duration in milliseconds. The duration is based on the CSS custom property\n   * `--cx-transition-duration`. Defaults to 300 milliseconds.\n   */\n  protected get duration(): number {\n    const duration: string = getComputedStyle(this.elementRef.nativeElement)\n      .getPropertyValue('--cx-transition-duration')\n      .trim();\n\n    if (duration.indexOf('ms') > -1) {\n      return Number(duration.split('ms')[0]);\n    } else if (duration.indexOf('s') > -1) {\n      return Number(duration.split('s')[0]) * 1000;\n    } else {\n      return 300;\n    }\n  }\n\n  /**\n   * The view is removed from the `SplitService` so that the view no longer\n   * plays a role in the overall split view.\n   */\n  ngOnDestroy() {\n    this.splitService.remove(this.viewPosition);\n    this.subscription?.unsubscribe();\n  }\n}\n","<ng-content></ng-content>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SplitViewComponent } from './split/split-view.component';\nimport { ViewComponent } from './view/view.component';\n\n/**\n * The split-view component supports an unlimited number of nested views. Nested views are rendered\n * next to each other. The views can be rendered next to each other, but the max number of visible\n * views can be limisted as well. This is configurable in the CSS layer, so that the max number of views\n * per split-view can be different for each component.\n *\n * The basic structure of the split-view component is shown below:\n *\n *\n * ```\n * <cx-split-view>\n * </cx-split-view>\n * ```\n *\n * The UX pattern used for the split-view is driven by an initial view, which gets splitted into\n * more views as soon as the user starts interacting with the initial and subsequantial views.\n * The views can be driven by routes, which means that you can navigate through the splitted views\n * by using the browser history as well as share or bookmark splitted views.\n *\n * The UI is implemented in the style layer, with only a few generic style rules. Most of the split\n * view style is driven by CSS properties, so that alternative split-view styles can be introduced\n * per page or component.\n *\n * The max number of views per split-view on mobile is limited to 1 by default, where as on tablet\n * (and higher) it is set to 2. Spartacus has a pretty narrow layout, which is why 2 is maximum,\n * but customers could alter the layout to bring in more views in the same split-view at the time.\n *\n */\n\n@NgModule({\n  declarations: [SplitViewComponent, ViewComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [SplitViewComponent, ViewComponent],\n})\nexport class SplitViewModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './split-view.component';\nexport * from './split-view.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './view.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './split-view.module';\nexport * from './split-view.service';\nexport * from './split/index';\nexport * from './view/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","<div *ngIf=\"messages$ | async as messages\">\n  <div\n    class=\"cx-visually-hidden\"\n    *ngFor=\"let assistiveMsg of messages[messageType.MSG_TYPE_ASSISTIVE]\"\n  >\n    <span>{{ assistiveMsg | cxTranslate }}</span>\n  </div>\n  <div\n    class=\"alert alert-success\"\n    *ngFor=\"\n      let confMsg of messages[messageType.MSG_TYPE_CONFIRMATION];\n      let i = index\n    \"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.SUCCESS\"></cx-icon>\n    </span>\n    <span>{{ confMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_CONFIRMATION, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <div\n    class=\"alert alert-info\"\n    *ngFor=\"let infoMsg of messages[messageType.MSG_TYPE_INFO]; let i = index\"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n    </span>\n    <span>{{ infoMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_INFO, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <div\n    class=\"alert alert-warning\"\n    *ngFor=\"\n      let infoMsg of messages[messageType.MSG_TYPE_WARNING];\n      let i = index\n    \"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.WARNING\"></cx-icon>\n    </span>\n    <span>{{ infoMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_WARNING, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <div\n    class=\"alert alert-danger\"\n    *ngFor=\"let errorMsg of messages[messageType.MSG_TYPE_ERROR]; let i = index\"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n    </span>\n    <span>{{ errorMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_ERROR, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './global-message.module';\nexport * from './global-message.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n@Component({\n  selector: 'cx-message',\n  templateUrl: './message.component.html',\n})\nexport class MessageComponent {\n  @Input()\n  text: string;\n\n  @Input()\n  actionButtonText: string;\n\n  @Input()\n  actionButtonMessage: string;\n\n  @Input()\n  accordionText: string;\n\n  @Input()\n  showBody = false;\n\n  @Input()\n  isVisibleCloseButton = true;\n\n  @Input()\n  type: GlobalMessageType;\n\n  @Output()\n  closeMessage: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  buttonAction: EventEmitter<void> = new EventEmitter();\n\n  iconTypes = ICON_TYPE;\n\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  get getCssClassesForMessage(): Record<string, boolean> {\n    return {\n      'cx-message-success':\n        this.type === GlobalMessageType.MSG_TYPE_CONFIRMATION,\n      'cx-message-info': this.type === GlobalMessageType.MSG_TYPE_INFO,\n      'cx-message-warning': this.type === GlobalMessageType.MSG_TYPE_WARNING,\n      'cx-message-danger': this.type === GlobalMessageType.MSG_TYPE_ERROR,\n    };\n  }\n\n  get getIconType(): ICON_TYPE {\n    switch (this.type) {\n      case GlobalMessageType.MSG_TYPE_WARNING:\n        return ICON_TYPE.WARNING;\n      case GlobalMessageType.MSG_TYPE_ERROR:\n        return ICON_TYPE.ERROR;\n      case GlobalMessageType.MSG_TYPE_INFO:\n        return ICON_TYPE.INFO;\n      default:\n        return ICON_TYPE.SUCCESS;\n    }\n  }\n}\n","<div [ngClass]=\"getCssClassesForMessage\" class=\"cx-message\">\n  <div class=\"cx-message-content\">\n    <div class=\"cx-message-header\">\n      <span class=\"cx-message-icon\">\n        <cx-icon [type]=\"getIconType\"></cx-icon>\n      </span>\n\n      <span class=\"cx-message-text\">\n        {{ text }}\n        <button\n          *ngIf=\"accordionText\"\n          (click)=\"showBody = !showBody\"\n          [attr.aria-expanded]=\"showBody\"\n          [attr.aria-label]=\"accordionText\"\n          aria-hidden=\"true\"\n          class=\"cx-message-accordion-button link cx-action-link\"\n          type=\"button\"\n        >\n          {{ accordionText }}\n          <cx-icon\n            [type]=\"showBody ? 'CARET_UP' : 'CARET_DOWN'\"\n            class=\"cx-message-accordion-icon\"\n          ></cx-icon>\n        </button>\n\n        <button\n          *ngIf=\"actionButtonText\"\n          (click)=\"buttonAction.emit()\"\n          [cxAtMessage]=\"actionButtonMessage\"\n          aria-hidden=\"true\"\n          class=\"btn btn-link cx-action-link\"\n          type=\"button\"\n        >\n          {{ actionButtonText }}\n        </button>\n      </span>\n\n      <button\n        *ngIf=\"isVisibleCloseButton\"\n        (click)=\"closeMessage.emit()\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        [cxAtMessage]=\"'common.close' | cxTranslate\"\n        aria-hidden=\"true\"\n        class=\"close\"\n        type=\"button\"\n      >\n        <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n      </button>\n    </div>\n\n    <div *ngIf=\"showBody || !accordionText\" class=\"cx-message-body\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { AtMessageModule } from '../../../shared/components/assistive-technology-message/assistive-technology-message.module';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { MessageComponent } from './message.component';\n\n@NgModule({\n  imports: [AtMessageModule, CommonModule, I18nModule, IconModule],\n  declarations: [MessageComponent],\n  exports: [MessageComponent],\n})\nexport class MessageComponentModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './message.module';\nexport * from './message.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n","<div class=\"cx-promotions\" *ngIf=\"promotions\">\n  <ng-container *ngIf=\"promotions.length === 1\">\n    <p>{{ promotions[0].description }}</p>\n  </ng-container>\n  <ng-container *ngIf=\"promotions.length > 1\">\n    <ul>\n      <li *ngFor=\"let promotion of promotions\">\n        {{ promotion.description }}\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './promotions.component';\nexport * from './promotions.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  isNotUndefined,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS: { [key: string]: string } = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap((items) =>\n        this.getContext(context).pipe(\n          switchMap((ctx) => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map((ctx) => {\n        if (ctx) {\n          return LABELS[ctx];\n        }\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe((service) => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map((ctx: string | undefined) =>\n        ctx ? this.getInjectedService(ctx) : undefined\n      ),\n      filter(isNotUndefined)\n    );\n  }\n\n  protected getContext(\n    context?: SiteContextType\n  ): Observable<string | undefined> {\n    if (context) {\n      if (context === SiteContextType.CURRENCY) {\n        return of(CURRENCY_CONTEXT_ID);\n      } else if (context === SiteContextType.LANGUAGE) {\n        return of(LANGUAGE_CONTEXT_ID);\n      } else {\n        return of(context);\n      }\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map((data) => data.context),\n        map((ctx) => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n    return of(undefined);\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      undefined\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","<label *ngIf=\"(items$ | async)?.length > 1 && (items$ | async) as items\">\n  <span>{{ label$ | async }}:</span>\n  <select (change)=\"active = $any($event).target.value\">\n    <option\n      *ngFor=\"let item of items\"\n      value=\"{{ item.isocode }}\"\n      [selected]=\"(activeItem$ | async) === item.isocode\"\n    >\n      {{ item.label }}\n    </option>\n  </select>\n  <cx-icon [type]=\"iconTypes.CARET_DOWN\" class=\"small\"></cx-icon>\n</label>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector\n      [context]=\"siteContextType.LANGUAGE\"\n    ></cx-site-context-selector>\n    <cx-site-context-selector\n      [context]=\"siteContextType.CURRENCY\"\n    ></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {\n  readonly siteContextType = SiteContextType;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ContextServiceMap,\n  provideDefaultConfig,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextComponentService,\n  ],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './language-currency.component';\nexport * from './site-context-component.service';\nexport * from './site-context-selector.component';\nexport * from './site-context-selector.module';\nexport * from './site-context.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './global-message/index';\nexport * from './icon/index';\nexport * from './message/index';\nexport * from './promotions/index';\nexport * from './site-context-selector/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n/**\n * Star rating component can be used to view existing ratings as well\n * as create new ratings. The component can be used for any ratings.\n */\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent {\n  protected initialRate = 0;\n\n  icon = ICON_TYPE.STAR;\n\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interaction is not provided.\n   *\n   * Defaults to true.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = true;\n\n  /**\n   * The rating is used to color the rating stars. It can have a\n   * precise number. The rating number is used for a CSS custom property\n   * (AKA css variable) value. The actually coloring is done in CSS.\n   */\n  @Input()\n  @HostBinding('style.--star-fill')\n  rating: number = this.initialRate;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() change = new EventEmitter<number>();\n\n  setRate(value: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.rating = value;\n  }\n\n  @HostListener('mouseout')\n  reset() {\n    if (this.disabled) {\n      return;\n    }\n    this.rating = this.initialRate ?? 0;\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n}\n","<cx-icon\n  *ngFor=\"let i of [1, 2, 3, 4, 5]\"\n  [type]=\"icon\"\n  class=\"star\"\n  (mouseover)=\"setRate(i)\"\n  (click)=\"saveRate(i)\"\n  (keydown.space)=\"saveRate(i)\"\n  [attr.tabindex]=\"disabled ? null : 0\"\n  role=\"button\"\n  attr.aria-label=\"{{ 'productReview.addRate' | cxTranslate: { count: i } }}\"\n></cx-icon>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './star-rating.component';\nexport * from './star-rating.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport { TableHeaderOutletContext } from '../table.model';\n\n@Component({\n  selector: 'cx-table-data-cell',\n  template: `{{ value }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableDataCellComponent {\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  @HostBinding('attr.title')\n  get value(): string {\n    return this.model[this.field];\n  }\n\n  protected get model(): any {\n    return this.outlet?.context;\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport {\n  TableFieldOptions,\n  TableHeader,\n  TableHeaderOutletContext,\n} from '../table.model';\n\n@Component({\n  selector: 'cx-table-header-cell',\n  template: `{{ header || (localizedHeader | cxTranslate) }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableHeaderCellComponent {\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  /**\n   * Returns the static label for the given field, if available.\n   */\n  get header(): string | undefined {\n    if (typeof this.fieldOptions?.label === 'string') {\n      return <string>this.fieldOptions.label;\n    }\n  }\n\n  /**\n   * Returns the localized label for the given field.\n   *\n   * The localized label is either driven by the configured `label.i18nKey`\n   * or concatenated by the table `type` and field `key`:\n   *\n   * `[tableType].[fieldKey]`\n   *\n   * The localized header can be translated with the `cxTranslate` pipe or `TranslationService`.\n   */\n  get localizedHeader(): string {\n    return (\n      (this.fieldOptions?.label as TableHeader)?.i18nKey ||\n      `${this.i18nRoot}.${this.field}`\n    );\n  }\n\n  protected get fieldOptions(): TableFieldOptions | undefined {\n    return this.outlet?.context._options?.cells?.[this.field];\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n\n  protected get type(): string {\n    return this.outlet?.context?._type;\n  }\n\n  protected get i18nRoot(): string | undefined {\n    return this.outlet?.context?._i18nRoot;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TableDataCellComponent } from '../table-data-cell/table-data-cell.component';\nimport { TableHeaderCellComponent } from '../table-header-cell/table-header-cell.component';\nimport { TableConfig } from './table.config';\n\nexport const defaultTableConfig: TableConfig = {\n  tableOptions: {\n    headerComponent: TableHeaderCellComponent,\n    dataComponent: TableDataCellComponent,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { BREAKPOINT } from '../../../../layout/config/layout-config';\nimport { TableStructureConfiguration } from '../table.model';\n\n/**\n * The `TableConfig` provides a table configurations for specific table types. You can define\n * an all-screen table structure as well as a breakpoint specific table structure. The various\n * table structures are merged from small to large screen configurations, depending on the users\n * screen size.\n *\n * The `table.type` is used as a key to distinguish the various table configurations in the application.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class TableConfig {\n  table?: {\n    [tableType: string]: ResponsiveTableConfiguration;\n  };\n  tableOptions?: {\n    /**\n     * Global component to render table header _content_ (`<th>...</th>`). A specific component\n     * can be configured alternatively per table or table field.\n     */\n    headerComponent?: Type<any>;\n\n    /**\n     * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n     * field can be configured alternatively.\n     *\n     * If no component is available, the table content will render as-is.\n     */\n    dataComponent?: Type<any>;\n  };\n}\n\n/**\n * Helper configuration to introduce breakpoint specific table configuration.\n */\nexport interface ResponsiveTableConfiguration\n  extends TableStructureConfiguration {\n  /** The table configurations for all screens */\n  [BREAKPOINT.xl]?: TableStructureConfiguration;\n  /** The table configurations for large screens and smaller */\n  [BREAKPOINT.lg]?: TableStructureConfiguration;\n  /** The table configurations for medium screens and smaller */\n  [BREAKPOINT.md]?: TableStructureConfiguration;\n  /** The table configurations for small screens and smaller */\n  [BREAKPOINT.sm]?: TableStructureConfiguration;\n  /** The table configurations for extra small screens */\n  [BREAKPOINT.xs]?: TableStructureConfiguration;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends TableConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TableDataCellComponent } from './table-data-cell.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableDataCellComponent],\n})\nexport class TableDataCellModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { TableHeaderCellComponent } from './table-header-cell.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [TableHeaderCellComponent],\n})\nexport class TableHeaderCellModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ComponentFactoryResolver, Injectable, Type } from '@angular/core';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { TableConfig } from './config/table.config';\nimport {\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableOptions,\n  TableStructure,\n} from './table.model';\n\n/**\n * The table renderer service adds a component for each table cells (th and td)\n * based on a fine grained configuration. Each table type can configure both global\n * components for headers and cells as well as individual components for field\n * specific cells.\n *\n * The components are added to the outlet slots for the corresponding cells. The table\n * structure and data is added to the outlet context.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableRendererService {\n  // keep a list of outletRefs to avoid recreation\n  protected outletRefs = new Map();\n\n  constructor(\n    protected outletService: OutletService,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Adds the configured table component for the header and data.\n   */\n  add(structure: TableStructure): void {\n    structure?.cells?.forEach((field) => {\n      const thRenderer = this.getHeaderRenderer(structure, field);\n      if (thRenderer) {\n        const ref = this.getHeaderOutletRef(structure.type, field);\n        this.render(ref, thRenderer);\n      }\n      const tdRenderer = this.getDataRenderer(structure, field);\n      if (tdRenderer) {\n        const ref = this.getDataOutletRef(structure.type, field);\n        this.render(ref, tdRenderer);\n      }\n    });\n  }\n\n  protected render(outletRef: string, renderer: Type<any>) {\n    if (this.outletRefs.has(outletRef)) {\n      return;\n    }\n    this.outletRefs.set(outletRef, true);\n    const template =\n      this.componentFactoryResolver.resolveComponentFactory(renderer);\n    this.outletService.add(outletRef, <any>template);\n  }\n\n  /**\n   * Returns the header render component for the given field.\n   */\n  protected getHeaderRenderer(\n    structure: TableStructure,\n    field: string\n  ): Type<any> | undefined {\n    return (\n      structure.options?.cells?.[field]?.headerComponent ||\n      structure.options?.headerComponent ||\n      this.config.tableOptions?.headerComponent\n    );\n  }\n\n  /**\n   * Returns the data render component for the given field.\n   */\n  protected getDataRenderer(\n    structure: TableStructure,\n    field: string\n  ): Type<any> | undefined {\n    return (\n      structure.options?.cells?.[field]?.dataComponent ||\n      structure.options?.dataComponent ||\n      this.config.tableOptions?.dataComponent\n    );\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   *\n   * The outlet reference is generated as:\n   * `table.[tableType].header.[field]`\n   */\n  getHeaderOutletRef(type: string, field: string): string {\n    return `table.${type}.header.${field}`;\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(\n    type: string,\n    options: TableOptions | undefined,\n    i18nRoot: string,\n    field: string\n  ): TableHeaderOutletContext {\n    return {\n      _type: type,\n      _options: options,\n      _field: field,\n      _i18nRoot: i18nRoot,\n    };\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   *\n   * The field is generated as:\n   * `table.[tableType].data.[tableField]`\n   */\n  getDataOutletRef(type: string, field: string): string {\n    return `table.${type}.data.${field}`;\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(\n    type: string,\n    options: TableOptions | undefined,\n    i18nRoot: string,\n    field: string,\n    data: any\n  ): TableDataOutletContext {\n    return {\n      ...data,\n      _type: type,\n      _options: options,\n      _field: field,\n      _i18nRoot: i18nRoot,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Type } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n/**\n * Contains the table data and structure for the `TableComponent`.\n */\nexport interface Table<T = any> {\n  /**\n   * The table structure provides details about the headers of the table.\n   */\n  structure: TableStructure;\n\n  /**\n   * The data that is listed in the table component.\n   */\n  data: T[];\n\n  /**\n   * The pagination component is used to paginate through the data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The sort options for the table.\n   */\n  sorts?: any[];\n}\n\nexport interface TableStructureConfiguration {\n  /**\n   * Provide the bare structure of the table.\n   */\n  cells?: string[];\n\n  /**\n   * Global table structure options.\n   */\n  options?: TableOptions;\n}\n\nexport interface TableOptions {\n  /**\n   * Default pagination for the table that is used for the initial load of the table data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The layout for the table component can be used for horizontal, vertical and vertical stacked\n   * table layouts.\n   */\n  layout?: TableLayout;\n\n  /**\n   * Global component to render table header _content_ (`<th>...</th>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table component will render a static label or use the\n   * configured i18n label.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table content will render as-is.\n   */\n  dataComponent?: Type<any>;\n\n  // field specific options\n  cells?: {\n    [fieldKey: string]: TableFieldOptions;\n  };\n}\n\n/**\n * Layout orientation for the table configuration.\n */\nexport enum TableLayout {\n  /**\n   * Renders the table vertically, with a heading on top of the table.\n   *\n   * Vertical layout is most common and the default layout.\n   */\n  VERTICAL = 1,\n\n  /**\n   * Stacks items in a tables by generating a `tbody` for each item.\n   */\n  VERTICAL_STACKED,\n\n  /**\n   * Horizontal oriented table layout renders the table headers in the first column of the table.\n   */\n  HORIZONTAL,\n}\n\nexport interface TableFieldOptions {\n  /**\n   * Optional label to add static or localized headers. If the label is not present, the\n   * field key is mapped to a i18n property.\n   */\n  label?: string | TableHeader;\n\n  /**\n   * Indicates wether the cell is linkable.\n   *\n   * If the cells is linkable, an anchor link can be generated in the table data element.\n   */\n  linkable?: boolean;\n\n  /**\n   * Component to render table header _content_ (`<th>...</th>`) for the table field.\n   *\n   * If no component is configured, the global table component for the header will be used\n   * instead.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Component to render table data _content_ (`<td>...</td>`) for the table field.\n   *\n   * If no component is configured, the global table component for the cell data will be used\n   * instead.\n   */\n  dataComponent?: Type<any>;\n}\n\n/**\n * The TableStructure holds the header structure of the table.\n */\nexport interface TableStructure extends TableStructureConfiguration {\n  /**\n   * The table type is a mandatory property. The type is used to identify the table\n   * configuration and is used to generate a unique outlet reference.\n   */\n  type: string;\n}\n\n/**\n * Provides the core table structure, typically being used to render table columns.\n */\nexport interface TableHeader {\n  /**\n   * The header key is used to:\n   * - generate a unique class on each table row\n   * - generate a template for each table header cell and data cell\n   * - translate the key using the translate module\n   *   (fallback in case there is no label available)\n   */\n  i18nKey?: string;\n}\n\nexport interface TableHeaderOutletContext {\n  _type: string;\n  _field: string;\n  _options?: TableOptions;\n  /**\n   * The i18nRoot is used to build localized table headers. The i18nRoot\n   * is used as a prefix for the `_field`. Table header labels wil use the\n   * following locales:\n   *\n   * `[i18nRoot].[_field]`\n   */\n  _i18nRoot?: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface TableDataOutletContext extends TableHeaderOutletContext {\n  [property: string]: any;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  isDevMode,\n  Output,\n} from '@angular/core';\nimport { TableRendererService } from './table-renderer.service';\nimport {\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableLayout,\n  TableOptions,\n  TableStructure,\n} from './table.model';\n\n/**\n * The table component provides a generic table DOM structure, with 3 layout types:\n * horizontal, vertical and _stacked vertical_ layout. The layout is driven by the\n * table structure.\n *\n * The implementation is fairly \"dumb\" and only renders string based content for TH\n * and TD elements. The actual cell rendering is delegated to a (configurable) cell\n * component. Additionally, each cell is registered as an outlet, so that customizations\n * can be done by both outlet templates and components.\n *\n * The outlet references are concatenated from the table `type` and header `key`. The\n * following snippet shows an outlet generated for a table header, for the table type\n * \"cost-center\" with a header key \"name\":\n *\n * ```\n * <th>\n *   <template cxOutlet=\"table.cost-center.header.name\">\n *   </template>\n * </th>\n * ```\n *\n * Similarly, the data cells (`<td>`) are generated with the outlet template reference\n * `table.cost-center.data.name`.\n */\n@Component({\n  selector: 'cx-table',\n  templateUrl: './table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent<T> {\n  @HostBinding('attr.__cx-table-type') tableType: string;\n  @HostBinding('class.horizontal') horizontalLayout: boolean;\n  @HostBinding('class.vertical') verticalLayout: boolean;\n  @HostBinding('class.vertical-stacked') verticalStackedLayout: boolean;\n\n  private _structure: TableStructure;\n  @Input() set structure(structure: TableStructure) {\n    this._structure = structure;\n    this.init();\n  }\n  get structure(): TableStructure {\n    return this._structure;\n  }\n\n  @Input() data: T[];\n\n  /**\n   * The i18nRoot is passed into the table cell context, so that\n   * cell components can concatenate the i18n root and label.\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * Provides a mechanism to compare a matching value for each item.\n   *\n   * The `property` refers to the dataset.value property, and the value tot the\n   * matching property value.\n   */\n  @Input() currentItem: { value: any; property: string };\n\n  @Output() launch = new EventEmitter();\n\n  constructor(protected rendererService: TableRendererService) {}\n\n  init() {\n    this.verticalLayout = !this.layout || this.layout === TableLayout.VERTICAL;\n    this.verticalStackedLayout = this.layout === TableLayout.VERTICAL_STACKED;\n    this.horizontalLayout = this.layout === TableLayout.HORIZONTAL;\n\n    this.rendererService.add(this.structure);\n\n    this.addTableDebugInfo();\n  }\n\n  launchItem(item: any): void {\n    this.launch.emit(item);\n  }\n\n  /**\n   * Indicates whether the given item is the current item.\n   *\n   * The current item is driven by the `currentItem`, that holds a\n   * property and value to compare.\n   */\n  isCurrentItem(item: any): boolean {\n    if (!this.currentItem || !this.currentItem.value) {\n      return false;\n    }\n    return this.currentItem?.value === item?.[this.currentItem?.property];\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   */\n  getHeaderOutletRef(field: string): string {\n    return this.rendererService.getHeaderOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(field: string): TableHeaderOutletContext {\n    return this.rendererService.getHeaderOutletContext(\n      this.type,\n      this.options,\n      this.i18nRoot,\n      field\n    );\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   */\n  getDataOutletRef(field: string): string {\n    return this.rendererService.getDataOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(field: string, data: any): TableDataOutletContext {\n    return this.rendererService.getDataOutletContext(\n      this.type,\n      this.options,\n      this.i18nRoot,\n      field,\n      data\n    );\n  }\n\n  trackData(_i: number, item: any): any {\n    return JSON.stringify(item);\n  }\n\n  /**\n   * Generates the table type into the UI in devMode, so that developers\n   * can easily get the notion of the table type.\n   */\n  protected addTableDebugInfo() {\n    if (isDevMode() && this.type) {\n      this.tableType = this.type;\n    }\n  }\n\n  /**\n   * Helper method to return the deeply nested orientation configuration.\n   */\n  private get layout(): TableLayout | undefined {\n    return this.structure?.options?.layout;\n  }\n\n  /**\n   * Helper method to return the deeply nested type.\n   */\n  private get type(): string {\n    return this.structure?.type;\n  }\n\n  private get options(): TableOptions | undefined {\n    return this.structure?.options;\n  }\n}\n","<table *ngIf=\"structure\">\n  <ng-container *ngIf=\"verticalStackedLayout\">\n    <tbody\n      *ngFor=\"let item of data; trackBy: trackData\"\n      (click)=\"launchItem(item)\"\n      [class.is-current]=\"isCurrentItem(item)\"\n    >\n      <tr *ngFor=\"let cell of structure.cells\" [class]=\"cell\">\n        <th>\n          <ng-template\n            [cxOutlet]=\"getHeaderOutletRef(cell)\"\n            [cxOutletContext]=\"getHeaderOutletContext(cell)\"\n          >\n            {{ cell }}\n          </ng-template>\n        </th>\n        <td>\n          <ng-template\n            [cxOutlet]=\"getDataOutletRef(cell)\"\n            [cxOutletContext]=\"getDataOutletContext(cell, item)\"\n          >\n            {{ $any(item)[cell] }}\n          </ng-template>\n        </td>\n      </tr>\n    </tbody>\n  </ng-container>\n\n  <!-- vertical tables render the item  -->\n  <ng-container *ngIf=\"verticalLayout\">\n    <thead>\n      <tr>\n        <th scope=\"col\" *ngFor=\"let cell of structure.cells\" [class]=\"cell\">\n          <ng-template\n            [cxOutlet]=\"getHeaderOutletRef(cell)\"\n            [cxOutletContext]=\"getHeaderOutletContext(cell)\"\n          >\n            {{ cell }}\n          </ng-template>\n        </th>\n      </tr>\n    </thead>\n\n    <tr\n      *ngFor=\"let item of data; trackBy: trackData\"\n      [class.is-current]=\"isCurrentItem(item)\"\n      (click)=\"launchItem(item)\"\n    >\n      <td *ngFor=\"let cell of structure.cells; let i = index\" [class]=\"cell\">\n        <ng-template\n          [cxOutlet]=\"getDataOutletRef(cell)\"\n          [cxOutletContext]=\"getDataOutletContext(cell, item)\"\n        >\n          {{ $any(item)[cell] }}\n        </ng-template>\n      </td>\n    </tr>\n  </ng-container>\n\n  <ng-container *ngIf=\"horizontalLayout\">\n    <tr *ngFor=\"let cell of structure.cells\" [class]=\"cell\">\n      <th scope=\"col\">\n        <ng-template\n          [cxOutlet]=\"getHeaderOutletRef(cell)\"\n          [cxOutletContext]=\"getHeaderOutletContext(cell)\"\n        >\n          {{ cell }}\n        </ng-template>\n      </th>\n      <td\n        *ngFor=\"let item of data; trackBy: trackData\"\n        [class.is-current]=\"isCurrentItem(item)\"\n        (click)=\"launchItem(item)\"\n      >\n        <ng-template\n          [cxOutlet]=\"getDataOutletRef(cell)\"\n          [cxOutletContext]=\"getDataOutletContext(cell, item)\"\n        >\n          {{ $any(item)[cell] }}\n        </ng-template>\n      </td>\n    </tr>\n  </ng-container>\n</table>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { defaultTableConfig } from './config/default-table.config';\nimport { TableDataCellModule } from './table-data-cell/table-data-cell.module';\nimport { TableHeaderCellModule } from './table-header-cell/table-header-cell.module';\nimport { TableComponent } from './table.component';\n\n/**\n * The TableModule provides a table component that is driven by (responsible) configuration.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    OutletModule,\n    TableHeaderCellModule,\n    TableDataCellModule,\n  ],\n  declarations: [TableComponent],\n  exports: [TableComponent],\n  providers: [provideDefaultConfig(defaultTableConfig)],\n})\nexport class TableModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport {\n  ResponsiveTableConfiguration,\n  TableConfig,\n} from './config/table.config';\nimport { TableStructure, TableStructureConfiguration } from './table.model';\n\n/**\n * Responsive table service.\n *\n * The `TableService` is used to build a `TableStructure` by configuration. The configuration\n * allows for breakpoint specific configuration, so that the table can differentiate for\n * various screen sizes.\n *\n * While there are some global options, the configuration is mainly driven by the table _type_.\n *\n * If there is no table configuration for the given type found, a table header structure\n * is generated based on the actual data (if available) or randomly by generating 5 random headers.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableService {\n  constructor(\n    protected breakpointService: BreakpointService,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Builds the table structure.\n   *\n   * @param tableType The table type is used  to find the specific table configuration.\n   * @param defaultStructure (optional) Default table structure that contains fallback options. More specific options are merged with the default structure.\n   * @param data$ (optional) The actual data can be passed in to generate the table structure based on actual data.\n   */\n  buildStructure(\n    tableType: string,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): Observable<TableStructure> {\n    if (this.hasTableConfig(tableType)) {\n      return this.buildStructureFromConfig(tableType, defaultStructure);\n    } else {\n      return this.buildRandomStructure(tableType);\n    }\n  }\n\n  /**\n   * Returns the table structure by configuration. The configuration can be\n   * breakpoint-driven, which means that an alternative header structure can\n   * be created per screen size.\n   *\n   * The breakpoint is resolved by teh `BreakpointService`.\n   */\n  protected buildStructureFromConfig(\n    type: string,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): Observable<TableStructure> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => ({\n        ...this.getTableConfig(type, breakpoint, defaultStructure),\n        type,\n      }))\n    );\n  }\n\n  /**\n   * Finds all applicable table configuration for the given type and breakpoint.\n   * The default table configuration is merged with all relevant breakpoint\n   * configurations.\n   *\n   * This allows to have some default configurations that apply to all screens, and\n   * add configuration options for some screens.\n   */\n  protected getTableConfig(\n    type: string,\n    breakpoint: BREAKPOINT,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): TableStructureConfiguration | null {\n    if (!this.config.table?.[type]) {\n      return null;\n    }\n\n    const relevant = this.findRelevantBreakpoints(breakpoint);\n\n    const closestBreakpoint = [...relevant]\n      .reverse()\n      .find((br) => !!this.config.table?.[type][br]?.cells);\n    const cells =\n      (closestBreakpoint &&\n        this.config.table[type][closestBreakpoint]?.cells) ||\n      this.config.table[type].cells ||\n      defaultStructure?.cells;\n\n    // add all default table configurations\n    let options = {\n      ...defaultStructure?.options,\n      ...this.config.table[type].options,\n    };\n\n    // We merge all table options for smaller breakpoints into the global\n    // options, so we inherit options.\n    relevant.forEach((br) => {\n      options = {\n        ...options,\n        ...defaultStructure?.[br]?.options,\n        ...this.config.table?.[type]?.[br]?.options,\n      };\n    });\n\n    return { cells, options };\n  }\n\n  /**\n   * Generates the table structure by the help of the first data row.\n   */\n  protected buildStructureFromData(\n    type: string,\n    data$: Observable<any>\n  ): Observable<TableStructure> {\n    this.logWarning(\n      `No table configuration found to render table with type \"${type}\". The table header for \"${type}\" is generated by the help of the first data item`\n    );\n    return data$.pipe(\n      map((data: any[]) => {\n        const cells = Object.keys(data?.[0]).map((key) => key);\n        return { type, cells } as TableStructure;\n      })\n    );\n  }\n\n  /**\n   * As a last resort, the table structure is randomly created. The random structure\n   * contains 5 headers, so that some of the unknown data is visualized.\n   */\n  protected buildRandomStructure(type: string): Observable<TableStructure> {\n    this.logWarning(\n      `No data available for \"${type}\", a random structure is generated (with hidden table headers).`\n    );\n    return of({\n      type,\n      cells: ['unknown', 'unknown', 'unknown', 'unknown', 'unknown'],\n    });\n  }\n\n  /**\n   * Finds all the breakpoints can contribute to the table configuration, from small\n   * to current.\n   *\n   * For example, if the current breakpoint is `MD`, this returns `[XS, SM, MD]`.\n   */\n  protected findRelevantBreakpoints(breakpoint: BREAKPOINT): BREAKPOINT[] {\n    const current = this.breakpointService.breakpoints.indexOf(breakpoint);\n    return this.breakpointService.breakpoints.slice(0, current + 1);\n  }\n\n  /**\n   * Indicates if the there is a configuration for the table available.\n   */\n  protected hasTableConfig(tableType: string): boolean {\n    return !!this.config.table?.[tableType];\n  }\n\n  /**\n   * Logs a message in the console to increase developer experience.\n   *\n   * The message is only logged in dev mode.\n   */\n  private logWarning(message: string) {\n    if (isDevMode()) {\n      console.warn(message);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/default-table.config';\nexport * from './config/table.config';\nexport * from './table-data-cell/table-data-cell.component';\nexport * from './table-data-cell/table-data-cell.module';\nexport * from './table-header-cell/table-header-cell.component';\nexport * from './table-header-cell/table-header-cell.module';\nexport * from './table-renderer.service';\nexport * from './table.component';\nexport * from './table.model';\nexport * from './table.module';\nexport * from './table.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './truncate-text-popover.component';\nexport * from './truncate-text-popover.module';\nexport * from './truncate.pipe';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './ng-select-a11y.directive';\nexport * from './ng-select-a11y.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './assistive-technology-message.directive';\nexport * from './assistive-technology-message.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilesFormValidators {\n  CONVERT_TO_MB = 1000000;\n  extenstionRegEx: RegExp = /\\.([0-9a-z]+)(?:[\\?#]|$)/i;\n\n  /**\n   * Checks max size of file\n   *\n   * @param {number} maxSize Max size [MB]\n   * @returns Uses 'tooLarge' validator error with maxSize property\n   * @memberOf FilesFormValidators\n   */\n  maxSize(maxSize?: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const errors: ValidationErrors = {};\n      if (maxSize && control.value) {\n        const files: File[] = Array.from(control.value);\n        files.forEach(({ size, name }) => {\n          if (size > maxSize * this.CONVERT_TO_MB) {\n            const invalidFiles = errors.tooLarge?.invalidFiles ?? [];\n            errors.tooLarge = {\n              maxSize,\n              invalidFiles: [...invalidFiles, name],\n            };\n          }\n        });\n      }\n      return Object.keys(errors).length === 0 ? null : errors;\n    };\n  }\n\n  /**\n   * Checks maximum entries\n   *\n   * @param {number} maxEntries Max number of entries\n   * @returns Uses 'tooManyEntries' validator error with maxEntries property\n   * @memberOf FilesFormValidators\n   */\n  maxEntries(maxEntries?: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const errors: ValidationErrors = {};\n      if (maxEntries && control.value) {\n        const files: File[] = Array.from(control.value);\n        if (files.length > maxEntries) {\n          errors.tooManyEntries = { maxEntries };\n        }\n      }\n      return Object.keys(errors).length === 0 ? null : errors;\n    };\n  }\n\n  /**\n   * Checks allowed types\n   *\n   * @param {Array<string>} allowedTypes Allowed types of files\n   * @returns Uses 'notParsable' validator error with allowedTypes property\n   * @memberOf FilesFormValidators\n   */\n  allowedTypes(allowedTypes?: Array<string>): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const errors: ValidationErrors = {};\n      if (allowedTypes && control.value) {\n        const files: File[] = Array.from(control.value);\n        errors.fileNotAllowed = files.some(\n          ({ name }) => !allowedTypes.includes(this.getExtension(name))\n        );\n      }\n      return errors[Object.keys(errors)?.[0]] ? errors : null;\n    };\n  }\n\n  protected getExtension(filename?: string): string {\n    return (filename?.match(this.extenstionRegEx) || [])[0] || '';\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, Input } from '@angular/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { MessageEvent } from '../messaging/messaging.model';\n\n@Component({\n  selector: 'cx-avatar',\n  templateUrl: './avatar.component.html',\n})\nexport class AvatarComponent {\n  @Input() message: MessageEvent;\n  iconTypes = ICON_TYPE;\n\n  getInitials(author: string): string {\n    return author\n      .split(' ')\n      .map((string) => string[0])\n      .join('');\n  }\n}\n","<div\n  *ngIf=\"message\"\n  class=\"cx-avatar\"\n  [ngClass]=\"{ 'right-align': message.rightAlign }\"\n>\n  <span *ngIf=\"!message.rightAlign && message?.author\">\n    {{ getInitials(message?.author || '') }}\n  </span>\n\n  <cx-icon\n    *ngIf=\"!message.rightAlign && !message?.author\"\n    [type]=\"iconTypes.USER\"\n  ></cx-icon>\n\n  <cx-icon *ngIf=\"message.rightAlign\" [type]=\"iconTypes.HEADSET\"></cx-icon>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewChecked,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { FilesFormValidators } from '../../../services/file/files-form-validators';\nimport { FileUploadComponent } from '../../form';\nimport { MessageEvent, MessagingConfigs } from './messaging.model';\n\n@Component({\n  selector: 'cx-messaging',\n  templateUrl: './messaging.component.html',\n})\nexport class MessagingComponent implements OnInit, AfterViewChecked {\n  @ViewChild(FileUploadComponent) fileUploadComponent: FileUploadComponent;\n\n  @Input() messageEvents$: Observable<Array<MessageEvent>>;\n  @Input() scrollToInput?: boolean = true;\n  @Input() messagingConfigs?: MessagingConfigs;\n\n  @Output() send = new EventEmitter<{\n    files: File | undefined;\n    message: string;\n  }>();\n\n  @Output() downloadAttachment = new EventEmitter<{\n    messageCode: string | undefined;\n    attachmentId: string | undefined;\n    fileName: string | undefined;\n  }>();\n\n  iconTypes = ICON_TYPE;\n  form: UntypedFormGroup;\n\n  MAX_INPUT_CHARACTERS: number = 2000;\n  MAX_SIZE: number = 10;\n  MAX_ENTRIES: number = 1;\n  dateFormat: string = 'MMMM d, YYYY h:mm aa';\n  updatedScrollHeight: number;\n  scrollOnceOnLoad: boolean = true;\n\n  get inputCharacterLeft(): number {\n    return (\n      (this.messagingConfigs?.charactersLimit || this.MAX_INPUT_CHARACTERS) -\n      (this.form.get('message')?.value?.length || 0)\n    );\n  }\n\n  get maxSize(): number {\n    return (\n      this.messagingConfigs?.attachmentRestrictions?.maxSize || this.MAX_SIZE\n    );\n  }\n\n  get maxEntries(): number {\n    return (\n      this.messagingConfigs?.attachmentRestrictions?.maxEntries ||\n      this.MAX_ENTRIES\n    );\n  }\n\n  get allowedTypes(): Array<string> {\n    return this.messagingConfigs?.attachmentRestrictions?.allowedTypes || [];\n  }\n\n  constructor(\n    protected windowRef: WindowRef,\n    protected filesFormValidators: FilesFormValidators\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.scrollToInput) {\n      this.observeScroll();\n      if (this.scrollOnceOnLoad) {\n        this.scrollOnLoad();\n      }\n    }\n  }\n\n  onSend(): void {\n    if (this.form.valid) {\n      this.send.emit({\n        files: this.form.get('file')?.value,\n        message: this.form.get('message')?.value,\n      });\n    }\n  }\n\n  resetForm(): void {\n    this.form.reset();\n    this.fileUploadComponent.removeFile();\n  }\n\n  triggerDownload(\n    messageCode: string | undefined,\n    attachmentId: string | undefined,\n    fileName: string | undefined\n  ): void {\n    this.downloadAttachment.emit({\n      messageCode: messageCode,\n      attachmentId: attachmentId,\n      fileName: fileName,\n    });\n  }\n\n  protected buildForm(): void {\n    const form = new UntypedFormGroup({});\n    form.setControl(\n      'message',\n      new UntypedFormControl('', [\n        Validators.required,\n        Validators.maxLength(\n          this.messagingConfigs?.charactersLimit || this.MAX_INPUT_CHARACTERS\n        ),\n      ])\n    );\n    form.setControl(\n      'file',\n      new UntypedFormControl('', [\n        this.filesFormValidators.maxSize(this.maxSize),\n        this.filesFormValidators.maxEntries(this.maxEntries),\n        this.filesFormValidators.allowedTypes(this.allowedTypes),\n      ])\n    );\n    this.form = form;\n  }\n\n  focusNextChild(event: UIEvent): void {\n    event.preventDefault();\n\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  focusPreviousChild(event: UIEvent): void {\n    if (!this.windowRef.isBrowser()) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  protected observeScroll(): void {\n    const element = this.windowRef.document.querySelector('.cx-messages');\n    if (element) {\n      const resizeObserver = new ResizeObserver((entries) => {\n        this.scrollToBottom(element, entries[0].target.scrollHeight);\n        this.updatedScrollHeight = entries[0].target.scrollHeight;\n      });\n      resizeObserver.observe(element);\n    }\n  }\n\n  protected scrollToBottom(element: Element, previousScrollHeight: number) {\n    if (this.heightChanged(previousScrollHeight)) {\n      element?.scroll({\n        top: element?.scrollHeight,\n        behavior: 'auto',\n      });\n    }\n  }\n\n  protected heightChanged(previousScrollHeight: number): boolean {\n    return this.updatedScrollHeight !== previousScrollHeight;\n  }\n\n  protected scrollOnLoad() {\n    const element = this.windowRef.document.getElementById('cx-message-footer');\n    const resizeObserver = new ResizeObserver(() => {\n      element?.scrollIntoView({ behavior: 'auto', block: 'end' });\n      this.scrollOnceOnLoad = false;\n    });\n    if (element) {\n      resizeObserver.observe(element);\n    }\n  }\n\n  private getResultElements(): HTMLElement[] {\n    return Array.from(\n      this.windowRef.document.querySelectorAll('[role=\"listitem\"]')\n    );\n  }\n\n  private getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  private getFocusedElement(): HTMLElement {\n    return <HTMLElement>this.windowRef.document.activeElement;\n  }\n}\n","<ng-container *ngIf=\"messageEvents$ | async as messageEvents\">\n  <div class=\"container\">\n    <div class=\"cx-avatar-line\"></div>\n    <div\n      class=\"cx-messages\"\n      id=\"cx-messages\"\n      (keydown.arrowdown)=\"focusNextChild($any($event))\"\n      (keydown.arrowup)=\"focusPreviousChild($any($event))\"\n      [attr.aria-label]=\"'chatMessaging.messages' | cxTranslate\"\n    >\n      <ng-container *ngFor=\"let message of messageEvents; let i = index\">\n        <div\n          class=\"cx-message-card\"\n          [ngClass]=\"{ 'cx-message-display': message?.rightAlign ?? false }\"\n        >\n          <cx-avatar [message]=\"message!\"> </cx-avatar>\n\n          <div>\n            <label>{{\n              (message?.createdAt | cxDate: messagingConfigs?.dateFormat) ??\n                dateFormat\n            }}</label>\n            <div\n              [ngClass]=\"\n                message?.rightAlign ?? false\n                  ? 'cx-message-right-align-text'\n                  : 'cx-message-left-align-text'\n              \"\n              [tabindex]=\"i ? -1 : 0\"\n              role=\"listitem\"\n              [attr.aria-label]=\"\n                'chatMessaging.informationLabel'\n                  | cxTranslate\n                    : {\n                        author: message?.author!,\n                        text: message?.text!,\n                        date:\n                          (message?.createdAt\n                            | cxDate: messagingConfigs?.dateFormat) ??\n                          dateFormat\n                      }\n              \"\n            >\n              {{ message?.text! }}\n            </div>\n            <a\n              *ngFor=\"let attachment of message?.attachments ?? []\"\n              class=\"cx-attachment\"\n              (click)=\"\n                triggerDownload(\n                  message?.code,\n                  attachment?.id,\n                  attachment?.filename\n                )\n              \"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <cx-icon [type]=\"iconTypes.ATTACHMENT\"></cx-icon>\n              {{ attachment.filename }}\n            </a>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n  <div\n    [formGroup]=\"form\"\n    class=\"cx-message-footer\"\n    *ngIf=\"messagingConfigs?.displayAddMessageSection | async\"\n  >\n    <div class=\"cx-message-box\">\n      <label class=\"cx-footer-label\">\n        <span>\n          {{ 'chatMessaging.addNewMessage' | cxTranslate }}\n        </span>\n        <div class=\"cx-message-input\">\n          <input\n            formControlName=\"message\"\n            type=\"text\"\n            class=\"form-control\"\n            (keydown.enter)=\"onSend()\"\n            [maxLength]=\"\n              messagingConfigs?.charactersLimit || MAX_INPUT_CHARACTERS\n            \"\n            placeholder=\"{{\n              messagingConfigs?.newMessagePlaceHolder ||\n                ('chatMessaging.addMessagePlaceHolder' | cxTranslate)\n            }}\"\n          />\n          <span\n            class=\"cx-visually-hidden\"\n            *ngIf=\"inputCharacterLeft === 0\"\n            role=\"alert\"\n          >\n            {{ 'chatMessaging.characterLimitAlert' | cxTranslate }}\n          </span>\n          <button class=\"btn btn-block btn-primary cx-send\" (click)=\"onSend()\">\n            {{ 'chatMessaging.send' | cxTranslate }}\n          </button>\n        </div>\n      </label>\n      <div class=\"cx-message-footer-info\" id=\"cx-message-footer\">\n        <cx-file-upload\n          [formControl]=\"$any(form.get('file'))\"\n          [accept]=\"allowedTypes\"\n          *ngIf=\"messagingConfigs?.enableFileUploadOption\"\n        >\n          <ng-template>\n            <cx-icon [type]=\"iconTypes.UPLOAD\"></cx-icon>\n            <span class=\"cx-message-footer-text\"\n              >{{ 'chatMessaging.uploadFile' | cxTranslate }}\n            </span>\n          </ng-template>\n        </cx-file-upload>\n\n        <p class=\"cx-message-footer-info-text\">\n          {{\n            'chatMessaging.charactersLeft'\n              | cxTranslate: { count: inputCharacterLeft }\n          }}\n        </p>\n      </div>\n      <cx-form-errors\n        [control]=\"form.get('file')\"\n        prefix=\"formErrors.file\"\n      ></cx-form-errors>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './messaging.component';\nexport * from './messaging.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './avatar.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { AvatarComponent } from './avatar';\nimport { MessagingComponent } from './messaging';\nimport { FileUploadModule, FormErrorsModule } from '../form';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    FormErrorsModule,\n  ],\n  declarations: [AvatarComponent, MessagingComponent],\n  exports: [AvatarComponent, MessagingComponent],\n})\nexport class ChatMessagingModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './messaging/index';\nexport * from './avatar/index';\nexport * from './chat-messaging.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consents-dialog/index';\nexport * from './card/index';\nexport * from './carousel/index';\nexport * from './form/index';\nexport * from './generic-link/index';\nexport * from './item-counter/index';\nexport * from './list-navigation/index';\nexport * from './media/index';\nexport * from './popover/index';\nexport * from './progress-button/index';\nexport * from './spinner/index';\nexport * from './split-view/index';\nexport * from './star-rating/index';\nexport * from './table/index';\nexport * from './truncate-text-popover/index';\nexport * from './ng-select-a11y/index';\nexport * from './assistive-technology-message/index';\nexport * from './chat-messaging/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\n  providers: [\n    provideDefaultConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n  ],\n  declarations: [BannerCarouselComponent],\n  exports: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerComponent,\n  CmsService,\n  Image,\n  ImageGroup,\n  PageType,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { take, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  routerLink: string | any[] | undefined;\n\n  @HostBinding('class') styleClasses: string | undefined;\n\n  data$: Observable<CmsBannerComponent> = this.component.data$.pipe(\n    tap((data) => {\n      this.setRouterLink(data);\n      this.styleClasses = data.styleClasses;\n    })\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsBannerComponent>,\n    protected urlService: SemanticPathService,\n    protected cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns `_blank` to force opening the link in a new window whenever the\n   * `data.external` flag is set to true.\n   */\n  getTarget(data: CmsBannerComponent): string | null {\n    return data.external === 'true' || data.external === true ? '_blank' : null;\n  }\n\n  protected setRouterLink(data: CmsBannerComponent): void {\n    if (data.urlLink) {\n      this.routerLink = data.urlLink;\n    } else if (data.contentPage) {\n      this.cmsService\n        .getPage({\n          id: data.contentPage,\n          type: PageType.CONTENT_PAGE,\n        })\n        .pipe(take(1))\n        .subscribe((page) => {\n          this.routerLink = page?.label;\n        });\n    } else if (data.product) {\n      this.routerLink = this.urlService.transform({\n        cxRoute: 'product',\n        params: { code: data.product },\n      });\n    } else if (data.category) {\n      this.routerLink = this.urlService.transform({\n        cxRoute: 'category',\n        params: { code: data.category },\n      });\n    }\n  }\n\n  getImage(data: CmsBannerComponent): Image | ImageGroup | undefined {\n    if (data.media) {\n      if ('url' in data.media) {\n        return data.media as Image;\n      } else {\n        return data.media as ImageGroup;\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n  <cx-generic-link\n    *ngIf=\"routerLink\"\n    [url]=\"routerLink\"\n    [target]=\"getTarget(data)\"\n  >\n    <p class=\"headline\" *ngIf=\"data.headline\" [innerHTML]=\"data.headline\"></p>\n    <cx-media [container]=\"getImage(data)\"></cx-media>\n    <p class=\"content\" *ngIf=\"data.content\" [innerHTML]=\"data.content\"></p>\n  </cx-generic-link>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  exports: [BannerComponent],\n})\nexport class BannerModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  @HostBinding('class') styleClasses: string | undefined;\n\n  data$: Observable<CmsLinkComponent> = this.component.data$.pipe(\n    tap((data) => (this.styleClasses = data?.styleClasses))\n  );\n\n  constructor(protected component: CmsComponentData<CmsLinkComponent>) {}\n\n  /**\n   * Returns `_blank` to force opening the link in a new window whenever the\n   * `data.target` flag is set to `true`.\n   */\n  getTarget(data: CmsLinkComponent): string | null {\n    return data.target === 'true' || data.target === true ? '_blank' : null;\n  }\n}\n","<cx-generic-link\n  *ngIf=\"data$ | async as data\"\n  [url]=\"data.url ?? ''\"\n  [style]=\"data.styleAttributes\"\n  [target]=\"getTarget(data)\"\n  >{{ data.linkName }}</cx-generic-link\n>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n})\nexport class LinkModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Pipe, PipeTransform, Renderer2 } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\n\n/*\n * Supplements the anchor links that contain only the hash fragment in the `href` attribute,\n * (e.g. `<a href=\"#someId\">`), by prepending the current location (path and query params),\n * so it becomes a link to a full url\n * e.g. `<a href=\"https://domain.com/current/path?and=query-params#someId\">`.\n *\n * This helps to avoid the undesirable navigation to the homepage URL (`/#someId`)\n * when clicking the original link.\n *\n * It's useful for example for cms-provided content passed to the [innerHTML] directive.\n */\n@Pipe({ name: 'cxSupplementHashAnchors' })\nexport class SupplementHashAnchorsPipe implements PipeTransform {\n  constructor(protected renderer: Renderer2, protected winRef: WindowRef) {}\n\n  protected getPath(anchorId: string): string {\n    const currentUrlWithoutFragment = this.winRef.location.href?.replace(\n      /#.*$/,\n      ''\n    );\n    return `${currentUrlWithoutFragment}${anchorId}`;\n  }\n\n  public transform(html: string = ''): string {\n    const template = this.renderer.createElement('template');\n    template.innerHTML = html.trim();\n    const linkNodes: NodeListOf<HTMLAnchorElement> =\n      template.content.querySelectorAll('a');\n\n    Array.from(linkNodes).forEach((link: HTMLAnchorElement) => {\n      const href = link.getAttribute('href');\n      if (href?.indexOf('#') === 0) {\n        this.renderer.setProperty(link, 'href', this.getPath(href));\n      }\n    });\n    return template.innerHTML;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostListener,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  @HostListener('click', ['$event'])\n  public handleClick(event: Event): void {\n    if (event.target instanceof HTMLAnchorElement) {\n      const element = event.target as HTMLAnchorElement;\n      const href = element?.getAttribute('href');\n\n      const documentHost =\n        element.ownerDocument.URL.split('://')[1].split('/')[0];\n\n      // Use router for internal link navigation\n      if (href && documentHost === element.host) {\n        event.preventDefault();\n        this.router.navigateByUrl(href);\n      }\n    }\n  }\n\n  constructor(\n    public component: CmsComponentData<CmsParagraphComponent>,\n    protected router: Router\n  ) {}\n}\n","<div\n  *ngIf=\"component.data$ | async as data\"\n  [innerHTML]=\"data.content ?? '' | cxSupplementHashAnchors\"\n></div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { SupplementHashAnchorsPipe } from './supplement-hash-anchors.pipe';\n\n@NgModule({\n  declarations: [SupplementHashAnchorsPipe],\n  exports: [SupplementHashAnchorsPipe],\n})\nexport class SupplementHashAnchorsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { SupplementHashAnchorsModule } from '../../../shared/pipes/suplement-hash-anchors/supplement-hash-anchors.module';\nimport { ParagraphComponent } from './paragraph.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SupplementHashAnchorsModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsPDFDocumentComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { MediaService } from '../../../shared/components/media/media.service';\n\n@Component({\n  selector: 'cx-pdf',\n  templateUrl: './pdf.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PDFComponent {\n  url?: string;\n  data$: Observable<CmsPDFDocumentComponent> = this.component.data$.pipe(\n    tap((data) => {\n      if (data?.pdfFile?.url) {\n        this.url = this.mediaService.getMedia(data.pdfFile)?.src;\n      }\n    })\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsPDFDocumentComponent>,\n    protected mediaService: MediaService\n  ) {}\n\n  addPdfExtension(title?: string) {\n    if (!title) {\n      return '';\n    }\n    const trimTitle = title.trim();\n    return trimTitle.endsWith('.pdf') ? trimTitle : `${trimTitle}.pdf`;\n  }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n  <div class=\"pdf-container\">\n    <a [href]=\"url\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <span>{{\n        addPdfExtension(\n          data?.title ||\n            data?.pdfFile?.altText ||\n            ('pdf.defaultTitle' | cxTranslate)\n        )\n      }}</span>\n      <span aria-hidden=\"true\">\n        <cx-icon [type]=\"'PDF_FILE'\"></cx-icon>\n      </span>\n    </a>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { PDFComponent } from './pdf.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        PDFDocumentComponent: {\n          component: PDFComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [PDFComponent],\n  exports: [PDFComponent],\n})\nexport class PDFModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  CmsService,\n  CMSTabParagraphContainer,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent implements AfterViewInit, OnInit {\n  activeTabNum = 0;\n  ariaLabel: string;\n\n  @ViewChildren(ComponentWrapperDirective)\n  children!: QueryList<ComponentWrapperDirective>;\n\n  tabTitleParams: (Observable<any> | null)[] = [];\n\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    protected cmsService: CmsService,\n    protected winRef: WindowRef\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    distinctUntilChanged((x, y) => x?.components === y?.components),\n    tap((data: CMSTabParagraphContainer) => {\n      this.ariaLabel = `${data?.uid}.tabPanelContainerRegion`;\n    }),\n    switchMap((data) =>\n      combineLatest(\n        (data?.components ?? '').split(' ').map((component) =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map((tab) => {\n              if (!tab) {\n                return undefined;\n              }\n\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n\n              return {\n                ...tab,\n                title: `${data.uid}.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number, event?: MouseEvent): void {\n    this.activeTabNum = this.activeTabNum === tabNum ? -1 : tabNum;\n    if (event && event?.target) {\n      const target = event.target as HTMLElement;\n      const parentNode = target.parentNode as HTMLElement;\n      this.winRef?.nativeWindow?.scrollTo({\n        left: 0,\n        top: parentNode.offsetTop,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.activeTabNum =\n      this.winRef?.nativeWindow?.history?.state?.activeTab ?? this.activeTabNum;\n  }\n\n  ngAfterViewInit(): void {\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\n    // In this case, the title parameters are directly pulled from them.\n    if (this.children.length > 0) {\n      this.getTitleParams(this.children);\n    }\n  }\n\n  tabCompLoaded(componentRef: any): void {\n    this.tabTitleParams.push(componentRef.instance.tabTitleParam$);\n  }\n\n  protected getTitleParams(children: QueryList<ComponentWrapperDirective>) {\n    children.forEach((comp) => {\n      this.tabTitleParams.push(comp['cmpRef']?.instance.tabTitleParam$ ?? null);\n    });\n  }\n}\n","<ng-container *ngIf=\"components$ | async as components\">\n  <div\n    role=\"region\"\n    tabindex=\"-1\"\n    [attr.aria-label]=\"ariaLabel | cxTranslate\"\n    class=\"container\"\n  >\n    <ng-container *ngFor=\"let component of components; let i = index\">\n      <ng-container *ngIf=\"component\">\n        <button\n          [class.active]=\"i === activeTabNum\"\n          (click)=\"select(i, $event)\"\n          [attr.aria-expanded]=\"i === activeTabNum\"\n        >\n          {{\n            component.title | cxTranslate: { param: tabTitleParams[i] | async }\n          }}\n\n          <span class=\"accordion-icon\" aria-hidden=\"true\"></span>\n        </button>\n\n        <div\n          [class.active]=\"i === activeTabNum\"\n          class=\"cx-tab-paragraph-content\"\n          tabindex=\"0\"\n          role=\"presentation\"\n        >\n          <ng-template [cxOutlet]=\"component.flexType\" [cxOutletContext]=\"{}\">\n            <ng-container\n              [cxComponentWrapper]=\"component\"\n              (cxComponentRef)=\"tabCompLoaded($event)\"\n            ></ng-container>\n          </ng-template>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n} from '@angular/core';\nimport {\n  CmsService,\n  CmsVideoComponent,\n  ContainerBackgroundOptions,\n  PageType,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport {\n  Media,\n  MediaContainer,\n} from '../../../shared/components/media/media.model';\nimport { MediaService } from '../../../shared/components/media/media.service';\n\n@Component({\n  selector: 'cx-video',\n  templateUrl: './video.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VideoComponent {\n  @HostBinding('class') styleClasses: string | undefined;\n\n  source: string | undefined;\n  thumbnail: Media | undefined;\n  routerLink: string | any[] | undefined;\n  autoPlay: boolean;\n  loop: boolean;\n  mute: string | undefined;\n\n  data$: Observable<CmsVideoComponent> = this.component.data$.pipe(\n    distinctUntilChanged(),\n    tap((data) => {\n      this.styleClasses = data.styleClasses;\n      this.setMedia(data);\n      this.setControls(data);\n      this.setRouting(data);\n    })\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsVideoComponent>,\n    protected mediaService: MediaService,\n    protected urlService: SemanticPathService,\n    protected cmsService: CmsService,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  protected setMedia(data: CmsVideoComponent) {\n    if (data.video) {\n      this.source = this.mediaService.getMedia(data.video)?.src;\n    }\n\n    if (\n      data?.containerBackground ===\n        ContainerBackgroundOptions.UPLOAD_RESPONSIVE_IMAGE &&\n      data?.videoMedia\n    ) {\n      this.thumbnail = this.mediaService.getMedia(\n        data.videoMedia as MediaContainer\n      );\n    } else if (\n      data?.thumbnailSelector === ContainerBackgroundOptions.UPLOAD_THUMBNAIL &&\n      data?.thumbnail\n    ) {\n      this.thumbnail = this.mediaService.getMedia(\n        data.thumbnail as MediaContainer\n      );\n    } else {\n      this.thumbnail = undefined;\n    }\n  }\n\n  protected setControls(data: CmsVideoComponent) {\n    this.autoPlay = data.autoPlay === 'true';\n    this.loop = data.loop === 'true';\n    this.mute = data.mute === 'true' ? 'muted' : undefined;\n  }\n\n  protected setRouting(data: CmsVideoComponent) {\n    if (data.url) {\n      this.routerLink = data.url;\n    } else if (data.contentPage) {\n      this.cmsService\n        .getPage({\n          id: data.contentPage,\n          type: PageType.CONTENT_PAGE,\n        })\n        .pipe(take(1))\n        .subscribe((page) => {\n          this.routerLink = page?.label;\n          this.cd.markForCheck();\n        });\n    } else if (data.product) {\n      this.routerLink = this.urlService.transform({\n        cxRoute: 'product',\n        params: { code: data.product },\n      });\n    } else if (data.category) {\n      this.routerLink = this.urlService.transform({\n        cxRoute: 'category',\n        params: { code: data.category },\n      });\n    }\n  }\n}\n","<div\n  *ngIf=\"data$ | async as data; else loading\"\n  class=\"video-container\"\n  tabindex=\"-1\"\n>\n  <a *ngIf=\"data.overlayTitle\" [routerLink]=\"routerLink\">{{\n    data.overlayTitle\n  }}</a>\n  <video\n    *ngIf=\"source\"\n    [style.height.px]=\"data.videoContainerHeight\"\n    controls\n    [poster]=\"thumbnail?.src\"\n    [loop]=\"loop\"\n    [autoplay]=\"autoPlay\"\n    [muted]=\"mute\"\n    [attr.aria-label]=\"'player.label' | cxTranslate\"\n    [src]=\"source\"\n  ></video>\n</div>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { VideoComponent } from './video.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GenericLinkModule,\n    MediaModule,\n    I18nModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        VideoComponent: {\n          component: VideoComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [VideoComponent],\n  exports: [VideoComponent],\n})\nexport class VideoModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './banner-carousel/banner-carousel.component';\nexport * from './banner-carousel/banner-carousel.module';\nexport * from './banner/banner.component';\nexport * from './banner/banner.module';\nexport * from './link/link.component';\nexport * from './link/link.module';\nexport * from './paragraph/paragraph.component';\nexport * from './paragraph/paragraph.module';\nexport * from './pdf/pdf.component';\nexport * from './pdf/pdf.module';\nexport * from './tab-paragraph-container/tab-paragraph-container.component';\nexport * from './tab-paragraph-container/tab-paragraph-container.module';\nexport * from './video/video.component';\nexport * from './video/video.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Address } from '@spartacus/core';\n\n/**\n * Get strings for phone and mobile numbers\n */\nexport function getAddressNumbers(\n  address: Address,\n  textPhone: string,\n  textMobile: string\n): string | undefined {\n  if (address.cellphone && address.phone) {\n    if (address.cellphone === address.phone) {\n      return textMobile + ': ' + address.cellphone;\n    }\n    return `${textPhone}: ${address.phone}\\n${textMobile}: ${address.cellphone}`;\n  }\n\n  if (address.cellphone) {\n    return textMobile + ': ' + address.cellphone;\n  }\n\n  if (address.phone) {\n    return textPhone + ': ' + address.phone;\n  }\n\n  return undefined;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Address, UserAddressService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressBookComponentService {\n  constructor(protected userAddressService: UserAddressService) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n  }\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n  }\n\n  deleteUserAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Title } from '@spartacus/core';\n\nexport const titleScores: { [code: string]: number } = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title): number {\n  if (title1.code && title2.code) {\n    if (!titleScores[title1.code] || !titleScores[title2.code]) {\n      return 1;\n    } else {\n      return titleScores[title1.code] - titleScores[title2.code];\n    }\n  }\n  return 1;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SkipLinkConfig {\n  skipLinks?: SkipLink[];\n}\n\nexport abstract class SkipLink {\n  key: string;\n  i18nKey: string;\n  target?: HTMLElement;\n  position?: SkipLinkScrollPosition;\n}\n\nexport enum SkipLinkScrollPosition {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends SkipLinkConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkipLinkService {\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\n\n  constructor(\n    protected config: SkipLinkConfig,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  getSkipLinks(): Observable<SkipLink[]> {\n    return this.skipLinks$;\n  }\n\n  add(key: string, target: HTMLElement): void {\n    const found: SkipLink | undefined = this.config.skipLinks?.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      const existing: SkipLink[] = this.skipLinks$.value;\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\n        target,\n        i18nKey: found.i18nKey,\n        position: found.position,\n        key,\n      });\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  remove(key: string): void {\n    const found: SkipLink | undefined = this.config.skipLinks?.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      let existing: SkipLink[] = this.skipLinks$.value;\n      existing = existing.filter((skipLink) => skipLink.key !== key);\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  scrollToTarget(skipLink: SkipLink): void {\n    const target =\n      skipLink.target instanceof HTMLElement\n        ? skipLink.target\n        : (skipLink.target as Element | undefined)?.parentElement;\n\n    // focus first focusable element in the\n    const firstFocusable =\n      this.keyboardFocusService.findFirstFocusable(target) || target;\n\n    // we force a tabindex if not available, to ensure we can focus into the element\n    const hasTabindex = firstFocusable?.hasAttribute('tabindex');\n    if (!hasTabindex) {\n      firstFocusable?.setAttribute('tabindex', '-1');\n    }\n\n    firstFocusable?.focus();\n\n    // drop the tmp tabindex\n    if (!hasTabindex) {\n      firstFocusable?.removeAttribute('tabindex');\n    }\n  }\n\n  protected getSkipLinkIndexInArray(key: string): number {\n    let index: number =\n      this.config.skipLinks?.findIndex((skipLink) => skipLink.key === key) ?? 0;\n\n    while (index > 0) {\n      index--;\n      const previous: SkipLink | undefined = this.config.skipLinks?.[index];\n      if (previous) {\n        const existing: SkipLink[] = this.skipLinks$.value;\n        const found: number = existing.findIndex(\n          (skipLink) => skipLink.key === previous.key\n        );\n        if (found > -1) {\n          return found + 1;\n        }\n      }\n    }\n    return 0;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SkipLink } from '../config/skip-link.config';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Component({\n  selector: 'cx-skip-link',\n  templateUrl: './skip-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkipLinkComponent {\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\n\n  constructor(private skipLinkService: SkipLinkService) {}\n\n  scrollToTarget(skipLink: SkipLink): void {\n    this.skipLinkService.scrollToTarget(skipLink);\n  }\n}\n","<div [cxFocus]=\"{ tab: true }\" *ngIf=\"skipLinks$ | async as links\">\n  <button *ngFor=\"let link of links\" (click)=\"scrollToTarget(link)\">\n    {{ 'skipLink.skipTo' | cxTranslate }}\n    {{ link.i18nKey | cxTranslate }}\n  </button>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SkipLinkConfig } from './skip-link.config';\n\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\n  skipLinks: [\n    {\n      key: 'cx-header',\n      i18nKey: 'skipLink.labels.header',\n    },\n    {\n      key: 'cx-main',\n      i18nKey: 'skipLink.labels.main',\n    },\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\n  ],\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-skip-link.config';\nexport * from './skip-link.config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Directive({\n  selector: '[cxSkipLink]',\n})\nexport class SkipLinkDirective implements OnInit, OnDestroy {\n  @Input() cxSkipLink: string;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected skipLinkService: SkipLinkService\n  ) {}\n\n  ngOnInit(): void {\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.skipLinkService.remove(this.cxSkipLink);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\nimport {\n  ConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\nimport { SkipLinkComponent } from './component/skip-link.component';\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\nimport { SkipLinkDirective } from './directive/skip-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(defaultSkipLinkConfig),\n    KeyboardFocusModule,\n  ],\n  declarations: [SkipLinkComponent, SkipLinkDirective],\n  exports: [SkipLinkDirective],\n  providers: [\n    provideDefaultConfig(defaultSkipLinkConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: skipLinkFactory,\n      deps: [ComponentFactoryResolver, OutletService],\n      multi: true,\n    },\n  ],\n})\nexport class SkipLinkModule {}\n\n/**\n * Adds the skip link component before the cx-storefront.\n */\nexport function skipLinkFactory(\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService\n): () => void {\n  const isReady = () => {\n    const factory =\n      componentFactoryResolver.resolveComponentFactory(SkipLinkComponent);\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\n  };\n  return isReady;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './component/skip-link.component';\nexport * from './config/index';\nexport * from './directive/skip-link.directive';\nexport * from './service/skip-link.service';\nexport { SkipLinkModule } from './skip-link.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './keyboard-focus/index';\nexport * from './skip-link/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './breakpoint.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LayoutConfig } from './layout-config';\n\nexport const defaultLayoutConfig: LayoutConfig = {\n  breakpoints: {\n    xs: 576,\n    sm: 768,\n    md: 992,\n    lg: 1200,\n    xl: {\n      min: 1200,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-layout.config';\nexport * from './layout-config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { Direction } from './direction.model';\n\n/**\n * The direction config provides an easy way to configure \"ltr\" versus \"rtl\" direction\n * for the storefront. The direction can be configured to detect the direction by language.\n *\n * The following configuration detects rtl languages by isoCode for Arabic and Hebrew:\n *\n * ```typescript\n * direction: {\n *   detect: true,\n *   default: DirectionMode.LTR,\n *   rtlLanguages: ['ar', 'he']\n * }\n * ```\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class DirectionConfig {\n  direction?: Direction;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends DirectionConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DirectionConfig } from './direction.config';\nimport { DirectionMode } from './direction.model';\n\nexport const defaultDirectionConfig: DirectionConfig = {\n  direction: {\n    detect: true,\n    default: DirectionMode.LTR,\n    // we're not polluting the system with all defaults for ltr, but add 2 common used\n    // languages (hebrew and arabic) to easily demo directionality\n    // see https://meta.wikimedia.org/wiki/Template:List_of_language_names_ordered_by_code\n    rtlLanguages: ['he', 'ar'],\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport {\n  ConfigInitializerService,\n  LanguageService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DirectionConfig } from './config/direction.config';\nimport { Direction, DirectionMode } from './config/direction.model';\n\n/**\n * The `DirectionService` can be used to add the direction to the overall storefront or individual elements.\n * By default, the direction is added to the `html` element (i.e. `<html dir=\"ltr\">`). The API of this service\n * does however provide methods to add direction to individual elements if needed.\n *\n * The direction is configurable and allows for language driven direction configuration.\n *\n * To react to the active language, the service subscribes to the active language in the initialize method. This\n * is called from an APP_INITIALIZER method and should only happen once.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DirectionService implements OnDestroy {\n  protected config: Direction | undefined;\n  protected startsDetecting = false;\n\n  protected subscription = new Subscription();\n\n  constructor(\n    protected configInit: ConfigInitializerService,\n    protected languageService: LanguageService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Initializes the layout direction for the storefront.\n   */\n  initialize(): Promise<any> {\n    return this.configInit\n      .getStable('direction')\n      .pipe(\n        tap((config: DirectionConfig) => {\n          this.config = config?.direction;\n          if (this.config?.detect) {\n            this.detect();\n          } else {\n            this.setDirection(\n              this.winRef.document.documentElement,\n              this.config?.default\n            );\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  /**\n   * Observes the _active_ language and set the required direction for the given language.\n   * The method is guarded to ensure that the active language is observed only once.\n   */\n  protected detect() {\n    if (this.startsDetecting) {\n      return;\n    }\n    this.subscription.add(\n      this.languageService\n        .getActive()\n        .subscribe((isoCode: string) =>\n          this.setDirection(\n            this.winRef.document.documentElement,\n            this.getDirection(isoCode)\n          )\n        )\n    );\n    this.startsDetecting = true;\n  }\n\n  /**\n   * Sets the direction attribute for the given element. If the direction is undefined, the `dir`\n   * attribute is removed.\n   */\n  setDirection(el: HTMLElement, direction: DirectionMode | undefined): void {\n    if (direction) {\n      el.setAttribute('dir', direction);\n    } else {\n      el.removeAttribute('dir');\n    }\n  }\n\n  /**\n   * Gets the `DirectionMode` for the given language isoCode. The language isoCode is compared\n   * to the configured list of languages(`direction.rtlLanguages` vs `direction.ltrLanguages`).\n   *\n   * If no language is given, or no language mapping could be found, we fallback to the default\n   * `direction.mode`.\n   */\n  getDirection(language?: string): DirectionMode | undefined {\n    if (language && this.config?.rtlLanguages?.includes(language)) {\n      return DirectionMode.RTL;\n    }\n    if (language && this.config?.ltrLanguages?.includes(language)) {\n      return DirectionMode.LTR;\n    }\n    return this.config?.default;\n  }\n\n  ngOnDestroy(): void {\n    // Cleans up the subscription, to avoid memory leaks in SSR.\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FeatureConfigService, provideDefaultConfig } from '@spartacus/core';\nimport { defaultDirectionConfig } from './config/default-direction.config';\nimport { DirectionService } from './direction.service';\n\nexport function initHtmlDirAttribute(\n  directionService: DirectionService,\n  featureConfigService: FeatureConfigService\n): () => void {\n  const result = () => {\n    if (featureConfigService.isLevel('2.1')) {\n      return directionService.initialize();\n    }\n  };\n  return result;\n}\n\n/**\n * Provides a configuration and APP_INITIALIZER to add the correct (language drive) html direction.\n */\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: initHtmlDirAttribute,\n      deps: [DirectionService, FeatureConfigService],\n    },\n    provideDefaultConfig(defaultDirectionConfig),\n  ],\n})\nexport class DirectionModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/direction.config';\nexport * from './config/direction.model';\nexport { DirectionModule } from './direction.module'; // we don't export the factory to avoid a breaking change when we drop the initHtmlDirAttribute\nexport * from './direction.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter((event) => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","<button\n  class=\"cx-hamburger\"\n  type=\"button\"\n  (click)=\"toggle()\"\n  [class.is-active]=\"isExpanded | async\"\n  [attr.aria-expanded]=\"isExpanded | async\"\n  [attr.aria-label]=\"'common.menu' | cxTranslate\"\n  aria-controls=\"cx-header\"\n>\n  <span class=\"hamburger-box\">\n    <span class=\"hamburger-inner\"></span>\n  </span>\n</button>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  exports: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './hamburger-menu/hamburger-menu.component';\nexport * from './hamburger-menu/hamburger-menu.module';\nexport * from './hamburger-menu/hamburger-menu.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ComponentRef,\n  Injectable,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { SiteContextConfig, THEME_CONTEXT_ID } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  protected rootComponent: ComponentRef<any>;\n  protected renderer: Renderer2;\n  protected existingTheme: string;\n\n  constructor(\n    protected config: SiteContextConfig,\n    protected rendererFactory: RendererFactory2\n  ) {}\n\n  /**\n   * This function is to be called for the root component that is\n   * bootstrapped.\n   */\n  init(rootComponent: ComponentRef<any>): void {\n    this.renderer = this.rendererFactory.createRenderer(null, null);\n    this.rootComponent = rootComponent;\n    // Theme value is a string. It is put in the generic multi-value\n    // property of the SiteContextConfig. So the array's first item\n    // is the theme value.\n    this.setTheme(this.config.context?.[THEME_CONTEXT_ID]?.[0]);\n  }\n\n  setTheme(theme: string | undefined): void {\n    if (theme) {\n      const element = this.rootComponent.location.nativeElement;\n      // remove the old theme\n      this.renderer.removeClass(element, this.existingTheme);\n      // add the new theme\n      this.renderer.addClass(element, theme);\n      this.existingTheme = theme;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_BOOTSTRAP_LISTENER, ComponentRef, NgModule } from '@angular/core';\nimport { ThemeService } from './theme.service';\n\nexport function initTheme(themeService: ThemeService) {\n  const result = (component: ComponentRef<any>) => themeService.init(component);\n  return result;\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      multi: true,\n      useFactory: initTheme,\n      deps: [ThemeService],\n    },\n  ],\n})\nexport class ThemeModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { defaultLayoutConfig } from './config/default-layout.config';\nimport { DirectionModule } from './direction/direction.module';\nimport { LaunchDialogModule } from './launch-dialog/index';\nimport { ThemeModule } from './theme/theme.module';\n\n@NgModule({\n  imports: [\n    OutletRefModule,\n    LaunchDialogModule.forRoot(),\n    DirectionModule,\n    ThemeModule,\n  ],\n  providers: [provideDefaultConfig(defaultLayoutConfig)],\n  exports: [OutletRefModule],\n})\nexport class LayoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport { DeferLoaderService } from './defer-loader.service';\nexport { IntersectionOptions } from './intersection.model';\nexport { IntersectionService } from './intersection.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport enum StorefrontOutlets {\n  STOREFRONT = 'cx-storefront',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  FocusConfig,\n  KeyboardFocusService,\n} from '../a11y/keyboard-focus/index';\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\nimport { StorefrontOutlets } from './storefront-outlets.model';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  readonly StorefrontOutlets = StorefrontOutlets;\n\n  @HostBinding('class.start-navigating') startNavigating: boolean;\n  @HostBinding('class.stop-navigating') stopNavigating: boolean;\n  @HostBinding('attr.role') role = 'presentation';\n\n  // required by esc focus\n  @HostBinding('tabindex') tabindex = '0';\n\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\n\n  private keyboardFocusConfig: FocusConfig = {\n    focusOnEscape: true,\n    focusOnDoubleEscape: true,\n  };\n\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    this.keyboardFocusService.handleEscape(\n      this.elementRef.nativeElement,\n      this.keyboardFocusConfig,\n      event\n    );\n  }\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe((val) => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: any): void {\n    const element = event.target;\n    if (\n      element.nodeName.toLowerCase() === 'header' &&\n      element.className.includes('is-expanded')\n    ) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","<ng-template [cxOutlet]=\"StorefrontOutlets.STOREFRONT\" cxPageTemplateStyle>\n  <ng-template cxOutlet=\"cx-header\">\n    <header\n      id=\"cx-header\"\n      cxSkipLink=\"cx-header\"\n      [cxFocus]=\"{ disableMouseFocus: true }\"\n      [class.is-expanded]=\"isExpanded$ | async\"\n      (keydown.escape)=\"collapseMenu()\"\n      (click)=\"collapseMenuIfClickOutside($event)\"\n    >\n      <cx-page-layout section=\"header\"></cx-page-layout>\n      <cx-page-layout section=\"navigation\"></cx-page-layout>\n    </header>\n    <cx-page-slot position=\"BottomHeaderSlot\"></cx-page-slot>\n    <cx-global-message\n      aria-atomic=\"true\"\n      aria-live=\"assertive\"\n    ></cx-global-message>\n  </ng-template>\n\n  <main cxSkipLink=\"cx-main\" [cxFocus]=\"{ disableMouseFocus: true }\">\n    <router-outlet></router-outlet>\n  </main>\n\n  <ng-template cxOutlet=\"cx-footer\">\n    <footer cxSkipLink=\"cx-footer\" [cxFocus]=\"{ disableMouseFocus: true }\">\n      <cx-page-layout section=\"footer\"></cx-page-layout>\n    </footer>\n  </ng-template>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { StorefrontComponent } from './storefront.component';\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PageLayoutModule,\n    PageSlotModule,\n    KeyboardFocusModule,\n    SkipLinkModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class StorefrontComponentModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './storefront-outlets.model';\nexport * from './storefront.component';\nexport * from './storefront-component.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport { ThemeModule } from './theme.module';\nexport * from './theme.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './a11y/index';\nexport * from './breakpoint/index';\nexport * from './config/index';\nexport * from './direction/index';\nexport * from './header/index';\nexport * from './launch-dialog/index';\nexport * from './layout.module';\nexport * from './loading/index';\nexport * from './main/index';\nexport * from './theme/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  Country,\n  ErrorModel,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  TranslationService,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, switchMap, take, tap } from 'rxjs/operators';\nimport { LaunchDialogService, LAUNCH_CALLER } from '../../../../layout';\nimport { sortTitles } from '../../../../shared/utils/forms/title-utils';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  addresses$: Observable<Address[]>;\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField = true;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  @ViewChild('submit') element: ElementRef;\n\n  subscription: Subscription = new Subscription();\n\n  addressForm: UntypedFormGroup = this.fb.group({\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n    cellphone: '',\n    defaultAddress: [false],\n  });\n\n  constructor(\n    protected fb: UntypedFormBuilder,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    protected translation: TranslationService,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries: Country[]) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.getTitles();\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions: Region[]) => {\n        const regionControl = this.addressForm.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl?.enable();\n        } else {\n          regionControl?.disable();\n        }\n      })\n    );\n\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\n      this.addressForm.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n\n    this.addresses$ = this.userAddressService.getAddresses();\n  }\n\n  getTitles(): Observable<Title[]> {\n    return combineLatest([\n      this.translation.translate('addressForm.defaultTitle'),\n      this.userService.getTitles(),\n    ]).pipe(\n      map(([noneTitleText, titles]) => {\n        const noneTitle = { code: '', name: noneTitleText };\n        titles.sort(sortTitles);\n        return [noneTitle, ...titles];\n      })\n    );\n  }\n\n  protected handleAddressVerificationResults(results: AddressValidation) {\n    if (results.decision === 'ACCEPT') {\n      this.submitAddress.emit(this.addressForm.value);\n    } else if (results.decision === 'REJECT') {\n      // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n      if (\n        results.errors?.errors.some(\n          (error: ErrorModel) => error.subject === 'titleCode'\n        )\n      ) {\n        this.globalMessageService.add(\n          { key: 'addressForm.titleRequired' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      } else {\n        this.globalMessageService.add(\n          { key: 'addressForm.invalidAddress' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      }\n    } else if (results.decision === 'REVIEW') {\n      this.openSuggestedAddress(results);\n    }\n  }\n\n  countrySelected(country: Country | undefined): void {\n    this.addressForm.get('country')?.get('isocode')?.setValue(country?.isocode);\n    this.selectedCountry$.next(country?.isocode ?? '');\n  }\n\n  regionSelected(region: Region): void {\n    this.addressForm.get('region')?.get('isocode')?.setValue(region.isocode);\n  }\n\n  toggleDefaultAddress(): void {\n    this.addressForm['controls'].defaultAddress.setValue(\n      this.addressForm.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.addressForm.valid) {\n      if (this.addressForm.get('region')?.value.isocode) {\n        this.regions$.pipe(take(1)).subscribe((regions) => {\n          const obj = regions.find(\n            (region) =>\n              region.isocode ===\n              this.addressForm.controls['region'].value.isocode\n          );\n          Object.assign(this.addressForm.value.region, {\n            isocodeShort: obj?.isocodeShort,\n          });\n        });\n      }\n\n      if (this.addressForm.dirty) {\n        this.subscription.add(\n          this.userAddressService\n            .verifyAddress(this.addressForm.value)\n            .subscribe((value) => {\n              this.handleAddressVerificationResults(value);\n            })\n        );\n      } else {\n        // address form value not changed\n        // ignore duplicate address\n        this.submitAddress.emit(undefined);\n      }\n    } else {\n      this.addressForm.markAllAsTouched();\n    }\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    this.launchDialogService.openDialogAndSubscribe(\n      LAUNCH_CALLER.SUGGESTED_ADDRESSES,\n      this.element,\n      {\n        enteredAddress: this.addressForm.value,\n        suggestedAddresses: results.suggestedAddresses,\n      }\n    );\n    this.subscription.add(\n      this.launchDialogService.dialogClose\n        .pipe(filter((result) => Boolean(result)))\n        .subscribe((result) => {\n          if (typeof result === 'object') {\n            const address = {\n              ...result,\n              titleCode: this.addressForm.value.titleCode,\n              phone: this.addressForm.value.phone,\n              selected: true,\n            };\n            this.submitAddress.emit(address);\n          }\n        })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<form (ngSubmit)=\"verifyAddress()\" [formGroup]=\"addressForm\">\n  <div class=\"form-group\" formGroupName=\"country\">\n    <ng-container *ngIf=\"countries$ | async as countries\">\n      <div *ngIf=\"countries.length !== 0\">\n        <label>\n          <span class=\"label-content required\">{{\n            'addressForm.country' | cxTranslate\n          }}</span>\n          <ng-select\n            [inputAttrs]=\"{ required: 'true' }\"\n            class=\"country-select\"\n            id=\"country-select\"\n            formControlName=\"isocode\"\n            [searchable]=\"true\"\n            [clearable]=\"false\"\n            [items]=\"countries\"\n            bindLabel=\"name\"\n            bindValue=\"isocode\"\n            placeholder=\"{{ 'addressForm.selectOne' | cxTranslate }}\"\n            (change)=\"countrySelected($event)\"\n            [cxNgSelectA11y]=\"{\n              ariaLabel: 'addressForm.country' | cxTranslate\n            }\"\n          >\n          </ng-select>\n          <cx-form-errors\n            [control]=\"addressForm.get('country.isocode')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showTitleCode\">\n    <ng-container *ngIf=\"titles$ | async as titles\">\n      <div *ngIf=\"titles.length !== 0\">\n        <label>\n          <span class=\"label-content required\">{{\n            'addressForm.title' | cxTranslate\n          }}</span>\n          <ng-select\n            id=\"title-select\"\n            formControlName=\"titleCode\"\n            [searchable]=\"true\"\n            [clearable]=\"false\"\n            [items]=\"titles\"\n            bindLabel=\"name\"\n            bindValue=\"code\"\n            [placeholder]=\"'addressForm.title' | cxTranslate\"\n            [cxNgSelectA11y]=\"{\n              ariaLabel: 'addressForm.title' | cxTranslate\n            }\"\n          >\n          </ng-select>\n        </label>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content required\">{{\n        'addressForm.firstName.label' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"{{ 'addressForm.firstName.placeholder' | cxTranslate }}\"\n        formControlName=\"firstName\"\n      />\n      <cx-form-errors [control]=\"addressForm.get('firstName')\"></cx-form-errors>\n    </label>\n  </div>\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content required\">{{\n        'addressForm.lastName.label' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'addressForm.lastName.placeholder' | cxTranslate }}\"\n        formControlName=\"lastName\"\n      />\n      <cx-form-errors [control]=\"addressForm.get('lastName')\"></cx-form-errors>\n    </label>\n  </div>\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content required\">{{\n        'addressForm.address1' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'addressForm.streetAddress' | cxTranslate }}\"\n        formControlName=\"line1\"\n      />\n      <cx-form-errors [control]=\"addressForm.get('line1')\"></cx-form-errors>\n    </label>\n  </div>\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content\">{{\n        'addressForm.address2' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'addressForm.aptSuite' | cxTranslate }}\"\n        formControlName=\"line2\"\n      />\n    </label>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group col-sm-6\">\n      <label>\n        <span class=\"label-content required\">{{\n          'addressForm.city.label' | cxTranslate\n        }}</span>\n        <input\n          required=\"true\"\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"{{ 'addressForm.city.placeholder' | cxTranslate }}\"\n          formControlName=\"town\"\n        />\n        <cx-form-errors [control]=\"addressForm.get('town')\"></cx-form-errors>\n      </label>\n    </div>\n    <div class=\"form-group col-sm-6\">\n      <label>\n        <span class=\"label-content required\">{{\n          'addressForm.zipCode.label' | cxTranslate\n        }}</span>\n        <input\n          required=\"true\"\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"{{ 'addressForm.zipCode.placeholder' | cxTranslate }}\"\n          formControlName=\"postalCode\"\n        />\n        <cx-form-errors\n          [control]=\"addressForm.get('postalCode')\"\n        ></cx-form-errors>\n      </label>\n    </div>\n    <ng-container *ngIf=\"regions$ | async as regions\" formGroupName=\"region\">\n      <ng-container *ngIf=\"regions.length !== 0\">\n        <div class=\"form-group col-md-6\">\n          <label>\n            <span class=\"label-content required\">{{\n              'addressForm.state' | cxTranslate\n            }}</span>\n            <ng-select\n              [inputAttrs]=\"{ required: 'true' }\"\n              class=\"region-select\"\n              formControlName=\"isocode\"\n              [searchable]=\"true\"\n              [clearable]=\"false\"\n              [items]=\"regions\"\n              bindLabel=\"{{ regions[0].name ? 'name' : 'isocode' }}\"\n              bindValue=\"{{ regions[0].name ? 'isocode' : 'region' }}\"\n              placeholder=\"{{ 'addressForm.selectOne' | cxTranslate }}\"\n              id=\"region-select\"\n              [cxNgSelectA11y]=\"{\n                ariaLabel: 'addressForm.state' | cxTranslate\n              }\"\n            >\n            </ng-select>\n            <cx-form-errors\n              [control]=\"addressForm.get('region.isocode')\"\n            ></cx-form-errors>\n          </label>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"form-group col-md-6\">\n      <label>\n        <span class=\"label-content\">{{\n          'addressForm.phoneNumber.label' | cxTranslate\n        }}</span>\n        <input\n          type=\"tel\"\n          class=\"form-control\"\n          placeholder=\"{{\n            'addressForm.phoneNumber.placeholder' | cxTranslate\n          }}\"\n          formControlName=\"phone\"\n        />\n      </label>\n    </div>\n    <div class=\"form-group col-md-6\">\n      <label>\n        <span class=\"label-content\">{{\n          'addressForm.cellphone.label' | cxTranslate\n        }}</span>\n        <input\n          type=\"tel\"\n          class=\"form-control\"\n          placeholder=\"{{ 'addressForm.cellphone.placeholder' | cxTranslate }}\"\n          formControlName=\"cellphone\"\n        />\n      </label>\n    </div>\n  </div>\n\n  <div\n    class=\"form-group\"\n    *ngIf=\"(addresses$ | async)?.length && setAsDefaultField\"\n  >\n    <div class=\"form-check\">\n      <label>\n        <input\n          type=\"checkbox\"\n          class=\"form-check-input\"\n          formControlName=\"defaultAddress\"\n          (change)=\"toggleDefaultAddress()\"\n        />\n        <span class=\"form-check-label\">{{\n          'addressForm.setAsDefault' | cxTranslate\n        }}</span>\n      </label>\n    </div>\n  </div>\n  <div class=\"cx-address-form-btns\">\n    <div class=\"row\">\n      <div class=\"col-md-13 col-lg-6\" *ngIf=\"showCancelBtn\">\n        <button class=\"btn btn-block btn-secondary\" (click)=\"back()\">\n          {{ cancelBtnLabel || ('addressForm.chooseAddress' | cxTranslate) }}\n        </button>\n      </div>\n      <div class=\"col-md-13 col-lg-6\">\n        <button #submit class=\"btn btn-block btn-primary\" type=\"submit\">\n          {{ actionBtnLabel || ('common.continue' | cxTranslate) }}\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  GlobalMessageService,\n  GlobalMessageType,\n  TranslationService,\n} from '@spartacus/core';\nimport { getAddressNumbers } from '../../../utils/address-number-utils';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Card } from '../../../shared/components/card';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  cards$: Observable<Card[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n  editCard: string | null;\n\n  constructor(\n    public service: AddressBookComponentService,\n    protected translation: TranslationService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    if (address && this.currentAddress['id']) {\n      this.service.updateUserAddress(this.currentAddress['id'], address);\n    }\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n\n  getCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.default'),\n      this.translation.translate('addressCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('common.edit'),\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\n      this.translation.translate('addressCard.phoneNumber'),\n      this.translation.translate('addressCard.mobileNumber'),\n    ]).pipe(\n      map(\n        ([\n          defaultText,\n          setAsDefaultText,\n          textDelete,\n          textEdit,\n          textVerifyDeleteMsg,\n          textPhone,\n          textMobile,\n        ]) => {\n          let region = '';\n\n          if (address.region && address.region.isocode) {\n            region = address.region.isocode + ', ';\n          }\n\n          const actions: { name: string; event: string }[] = [];\n          if (!address.defaultAddress) {\n            actions.push({ name: setAsDefaultText, event: 'default' });\n          }\n          actions.push({ name: textEdit, event: 'edit' });\n          actions.push({ name: textDelete, event: 'delete' });\n\n          const numbers = getAddressNumbers(address, textPhone, textMobile);\n\n          return {\n            role: 'region',\n            textBold: address.firstName + ' ' + address.lastName,\n            text: [\n              address.line1,\n              address.line2,\n              address.town + ', ' + region + address.country?.isocode,\n              address.postalCode,\n              numbers,\n            ],\n            actions: actions,\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\n            deleteMsg: textVerifyDeleteMsg,\n            label: address.defaultAddress\n              ? 'addressBook.defaultDeliveryAddress'\n              : 'addressBook.additionalDeliveryAddress',\n          } as Card;\n        }\n      )\n    );\n  }\n\n  setAddressAsDefault(address: Address): void {\n    this.service.setAddressAsDefault(address.id ?? '');\n    this.globalMessageService.add(\n      {\n        key: 'addressMessages.setAsDefaultSuccessfully',\n        params: { streetAddress: address.line1 },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n  }\n\n  deleteAddress(addressId: string): void {\n    this.service.deleteUserAddress(addressId);\n  }\n\n  setEdit(addressId: string): void {\n    if (this.editCard !== addressId) {\n      this.editCard = addressId;\n    } else {\n      this.deleteAddress(addressId);\n    }\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n}\n","<div class=\"cx-section\">\n  <ng-container\n    *ngIf=\"\n      (addresses$ | async)?.length &&\n      !(showAddAddressForm || showEditAddressForm)\n    \"\n  >\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <button\n          class=\"btn btn-block btn-secondary\"\n          (click)=\"addAddressButtonHandle()\"\n        >\n          {{ 'addressBook.addNewAddress' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n\n    <div\n      class=\"row cx-address-deck\"\n      *ngIf=\"!(addressesStateLoading$ | async); else loading\"\n    >\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <div\n        *ngFor=\"let address of addresses$ | async; let i = index\"\n        class=\"col-md-6 cx-address-card\"\n      >\n        <cx-card\n          [index]=\"i\"\n          [border]=\"true\"\n          [fitToContainer]=\"true\"\n          [content]=\"getCardContent(address) | async\"\n          (editCard)=\"editAddressButtonHandle(address)\"\n          (setDefaultCard)=\"setAddressAsDefault(address)\"\n          (deleteCard)=\"setEdit(address.id ?? '')\"\n          [editMode]=\"address.id === editCard\"\n          (cancelCard)=\"cancelCard()\"\n        ></cx-card>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container\n    *ngIf=\"\n      (!(addresses$ | async)?.length || showAddAddressForm) &&\n      !showEditAddressForm\n    \"\n  >\n    <section>\n      <h2 class=\"cx-section-msg\">\n        {{ 'addressBook.addNewDeliveryAddress' | cxTranslate }}\n      </h2>\n      <cx-address-form\n        class=\"cx-form\"\n        [showTitleCode]=\"true\"\n        [showCancelBtn]=\"!((addresses$ | async)?.length === 0)\"\n        actionBtnLabel=\"{{ 'addressBook.addAddress' | cxTranslate }}\"\n        cancelBtnLabel=\"{{ 'addressBook.backToAddressList' | cxTranslate }}\"\n        [setAsDefaultField]=\"!((addresses$ | async)?.length === 0)\"\n        (submitAddress)=\"addAddressSubmit($event)\"\n        (backToAddress)=\"addAddressCancel()\"\n        (cancelCard)=\"cancelCard()\"\n      ></cx-address-form>\n    </section>\n  </ng-container>\n\n  <ng-container *ngIf=\"showEditAddressForm\">\n    <section>\n      <h2 class=\"cx-section-msg\">\n        {{ 'addressBook.editDeliveryAddress' | cxTranslate }}\n      </h2>\n      <cx-address-form\n        [showTitleCode]=\"true\"\n        actionBtnLabel=\"{{ 'addressBook.updateAddress' | cxTranslate }}\"\n        cancelBtnLabel=\"{{ 'addressBook.backToAddressList' | cxTranslate }}\"\n        [addressData]=\"currentAddress\"\n        (submitAddress)=\"editAddressSubmit($event)\"\n        (backToAddress)=\"editAddressCancel()\"\n      ></cx-address-form>\n    </section>\n  </ng-container>\n</div>\n\n<ng-template #loading>\n  <div class=\"col-md-12 cx-address-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ViewConfig {\n  view?: {\n    /**\n     * Configurations related to the view of the application\n     */\n    defaultPageSize?: number;\n    infiniteScroll?: {\n      active?: boolean;\n      productLimit?: number;\n      showMoreButton?: boolean;\n    };\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends ViewConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './view-config';\nexport * from './form-config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './suplement-hash-anchors/supplement-hash-anchors.module';\nexport * from './suplement-hash-anchors/supplement-hash-anchors.pipe';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileDownloadService {\n  /**\n   * Triggers the browser downloading of the file from the given URL.\n   *\n   * @param {string} url URL to file.\n   * @param {string} [fileName] The optional parameter for defining filename\n   * (including the extension) when saving the file.\n   */\n  download(url: string, fileName?: string): void {\n    const link = document.createElement('a');\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${fileName}`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ExportFileOptions } from '../export-file-options';\nimport { FileDownloadService } from '../file-download.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExportCsvFileService {\n  constructor(protected fileDownloadService: FileDownloadService) {}\n  /**\n   * Converts array of objects into CSV data structure.\n   *\n   * @param objectsArray Array of objects which should be converted to CSV.\n   * @param separator Separator for CSV data.\n   * @returns Processed string ready to be saved into file.\n   */\n  protected convert(objectsArray: string[][], separator: string): string {\n    return objectsArray.reduce((csvString: string, row: string[]) => {\n      const line = row.reduce((currentLine, column) => {\n        currentLine += currentLine !== '' ? separator : '';\n        const cell = column.includes(separator) ? `\"${column}\"` : column;\n        return `${currentLine}${cell}`;\n      }, '');\n      return `${csvString}${line}\\r\\n`;\n    }, '');\n  }\n\n  /**\n   * Creates and download CSV file.\n   *\n   * @param objectsArray Array of objects which should be converted to CSV.\n   * @param separator Separator for CSV data.\n   * @param fileOptions Exported file options.\n   */\n  download(\n    objectsArray: string[][],\n    separator: string,\n    fileOptions: ExportFileOptions\n  ): void {\n    const { fileName, type, extension } = fileOptions;\n    const fileContent = this.convert(objectsArray, separator);\n    const blob = new Blob([fileContent], { type });\n    const url = URL.createObjectURL(blob);\n\n    this.fileDownloadService.download(url, `${fileName}.${extension}`);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileReaderService {\n  /**\n   * Load text file\n   *\n   * @param file text file to extract the data\n   * @returns Observable from file reader\n   */\n  loadTextFile(file: File): Observable<string | ProgressEvent<FileReader>> {\n    return new Observable((observer: Observer<string>) => {\n      const fileReader: FileReader = new FileReader();\n      fileReader.readAsText(file);\n      fileReader.onload = () => {\n        observer.next(fileReader.result as string);\n        observer.complete();\n      };\n      fileReader.onerror = (error) => {\n        fileReader.abort();\n        observer.error(error);\n      };\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { FileReaderService } from '../file-reader.service';\nimport { CsvFileValidationErrors } from './csv-file-validation-errors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImportCsvFileService {\n  constructor(protected fileReaderService: FileReaderService) {}\n  /**\n   * Load CSV file.\n   *\n   * @param file File we want to load as CSV.\n   * @param separator Separator for CSV data.\n   * @return {Observable<string[][]>} Imported file\n   */\n  loadFile(file: File, separator: string): Observable<string[][]> {\n    return this.fileReaderService\n      .loadTextFile(file)\n      .pipe(map((res) => this.parse(res as string, separator)));\n  }\n\n  /**\n   * Combined csv validation\n   *\n   * @param file File we want to load as CSV.\n   * @param separator Separator for CSV data.\n   * @param isDataParsable (optional) Callback for verify that structure type is proper.\n   * @param maxEntries (optional) Limitation for maximum entries count.\n   * @return {Observable<CsvFileValidationErrors | null>} Result of validation\n   */\n  validateFile(\n    file: File,\n    {\n      separator,\n      isDataParsable,\n      maxEntries,\n    }: {\n      separator: string;\n      isDataParsable?: (data: string[][]) => boolean;\n      maxEntries?: number;\n    }\n  ): Observable<CsvFileValidationErrors | null> {\n    const validationErrors: CsvFileValidationErrors = {};\n    return (\n      this.fileReaderService.loadTextFile(file) as Observable<string>\n    ).pipe(\n      tap((data: string) => {\n        this.validateEmpty(data, validationErrors);\n      }),\n      map((res) => this.parse(res, separator)),\n      tap((data: string[][]) => {\n        this.validateNotParsable(data, validationErrors, isDataParsable);\n        this.validateTooManyEntries(data, validationErrors, maxEntries);\n      }),\n      catchError((errors) => of(errors)),\n      map(() =>\n        Object.keys(validationErrors).length === 0 ? null : validationErrors\n      )\n    );\n  }\n\n  /**\n   * Processes the CSV data\n   *\n   * @param csvString raw extracted data from CSV\n   * @param separator for csv data\n   * @param ignoreHeader (optional) flag allows for ignore headers row while reading\n   * @returns {string[][]} Parsed file\n   */\n  protected parse(\n    csvString: string,\n    separator: string,\n    ignoreHeader = true\n  ): string[][] {\n    return csvString\n      .split('\\n')\n      .map((row) => row.split(separator).map((cell) => cell.replace(/\"/g, '')))\n      .filter(\n        (value, index) => !(ignoreHeader && index === 0) && value[0] !== ''\n      );\n  }\n\n  protected validateEmpty(data: string, errors: ValidationErrors): void {\n    if (data.toString().length === 0) {\n      errors.empty = true;\n      throw errors;\n    }\n  }\n\n  protected validateTooManyEntries(\n    data: string[][],\n    errors: ValidationErrors,\n    maxEntries?: number\n  ): void {\n    if (maxEntries && data.length > maxEntries) {\n      errors.tooManyEntries = { maxEntries };\n      throw errors;\n    }\n  }\n\n  protected validateNotParsable(\n    data: string[][],\n    errors: ValidationErrors,\n    isDataParsable?: (data: string[][]) => boolean\n  ): void {\n    if (isDataParsable && !isDataParsable(data)) {\n      errors.notParsable = true;\n      throw errors;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './csv-file-validation-errors';\nexport * from './export-csv-file.service';\nexport * from './import-csv-file.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './csv/index';\nexport * from './export-file-options';\nexport * from './file-download.service';\nexport * from './file-reader.service';\nexport * from './files-form-validators';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './positioning/positioning.service';\nexport * from './file/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AbstractControl,\n  UntypedFormGroup,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\n\nexport class CustomFormValidators {\n  /**\n   * Checks control's value with predefined email regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email && (!email.length || email.match(EMAIL_PATTERN))\n      ? null\n      : { cxInvalidEmail: true };\n  }\n\n  /**\n   * Checks control's value with predefined password regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n\n    return password && (!password.length || password.match(PASSWORD_PATTERN))\n      ? null\n      : { cxInvalidPassword: true };\n  }\n\n  /**\n   * Checks if control's value is between 1 and 5\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\n   * @memberof CustomFormValidators\n   */\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\n    const rating = control.value as number;\n\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\n  }\n\n  /**\n   * Checks if two password controls match\n   *\n   * NOTE: Use it as a form validator and pass password control names as parameters\n   *\n   * @static\n   * @param {string} password First password control name\n   * @param {string} passwordConfirmation Second password control name\n   * @returns Uses 'cxPasswordsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordsMustMatch(\n    password: string,\n    passwordConfirmation: string\n  ): any {\n    const validator = (formGroup: UntypedFormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        password,\n        passwordConfirmation,\n        'cxPasswordsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if two email controls match\n   *\n   * NOTE: Use it as a form validator and pass email control names as parameters\n   *\n   * @static\n   * @param {string} email First email control name\n   * @param {string} emailConfirmation Second email control name\n   * @returns Uses 'cxEmailsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\n    const validator = (formGroup: UntypedFormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        email,\n        emailConfirmation,\n        'cxEmailsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if control's value is euqal or greater than 0\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxNegativeAmount' validator error\n   * @memberof CustomFormValidators\n   */\n  static mustBePositive(control: AbstractControl): ValidationErrors | null {\n    const amount = control.value as number;\n\n    return amount >= 0 ? null : { cxNegativeAmount: true };\n  }\n\n  /**\n   * Checks if control's value does not contain any special characters\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxContainsSpecialCharacters' validator error\n   * @memberof CustomFormValidators\n   */\n  static noSpecialCharacters(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const forbiddenChars = ['/'];\n    const str = String(control.value);\n    const containsSpecialChars = forbiddenChars.some((char) =>\n      str.includes(char)\n    );\n\n    return !containsSpecialChars ? null : { cxContainsSpecialCharacters: true };\n  }\n\n  /**\n   * Checks if control's value passes pattern\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {(date: string) => boolean} isValidFormat Pattern verification function\n   * @returns {(control: AbstractControl): ValidationErrors | null} Uses 'pattern' validator error\n   * @memberof CustomFormValidators\n   */\n  static patternValidation(\n    isValidFormat: (date: string) => boolean\n  ): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors | null => {\n      const errors: ValidationErrors = {};\n      if (\n        control.value &&\n        control.value !== '' &&\n        !isValidFormat(control.value)\n      ) {\n        errors.pattern = true;\n      }\n      return Object.keys(errors).length === 0 ? null : errors;\n    };\n    return validator;\n  }\n\n  /**\n   * Checks if two email controls match\n   *\n   * NOTE: Use it as a form validator and pass dates for range\n   *\n   * @static\n   * @param {string} startDateKey First date control name\n   * @param {string} endDateKey Second date control name\n   * @param {(value: string) => Date} getDate Converting function\n   * @returns Uses 'min' and 'max validator error\n   * @memberof CustomFormValidators\n   */\n  static dateRange(\n    startDateKey: string,\n    endDateKey: string,\n    getDate: (value: string) => Date | undefined\n  ): (_: UntypedFormGroup) => ValidationErrors | null {\n    return (formGroup: UntypedFormGroup): ValidationErrors | null => {\n      const startDateControl = formGroup.controls[startDateKey];\n      const endDateControl = formGroup.controls[endDateKey];\n      const startDate = getDate(startDateControl.value);\n      const endDate = getDate(endDateControl.value);\n      if (startDate && endDate) {\n        if (!startDateControl.errors?.pattern) {\n          if (startDate > endDate) {\n            startDateControl.setErrors({ max: true });\n          }\n        }\n        if (!endDateControl.errors?.pattern) {\n          if (endDate < startDate) {\n            endDateControl.setErrors({ min: true });\n          }\n        }\n      }\n      return null;\n    };\n  }\n}\n\n/**\n * Generic function for validators, which checks if two passed controls match.\n *\n * @param formGroup\n * @param firstControlName First control to check\n * @param secondControlName Second control to check\n * @param errorName Error which will be returned by validator\n */\nexport function controlsMustMatch(\n  formGroup: UntypedFormGroup,\n  firstControlName: string,\n  secondControlName: string,\n  errorName: string\n): void {\n  const firstControl = formGroup.controls[firstControlName];\n  const secondControl = formGroup.controls[secondControlName];\n\n  if (secondControl.errors && !secondControl.errors[errorName]) {\n    return;\n  }\n\n  secondControl.setErrors(\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './validators/custom-form-validators';\nexport * from './forms/title-utils';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './components/index';\nexport * from './config/index';\nexport * from './pipes/index';\nexport * from './services/index';\nexport * from './utils/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { take } from 'rxjs/operators';\nimport { FocusConfig, LaunchDialogService } from '../../../../../layout';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'button',\n    focusOnEscape: true,\n  };\n\n  selectedAddress: Address;\n\n  data$ = this.launchDialogService.data$;\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.closeModal('Cross click');\n    }\n  }\n\n  constructor(\n    protected launchDialogService: LaunchDialogService,\n    protected el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.data$.pipe(take(1)).subscribe((data) => this.setSelectedAddress(data));\n  }\n\n  closeModal(reason?: any): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  setSelectedAddress(data: {\n    suggestedAddresses: Address[];\n    enteredAddress: Address;\n  }): void {\n    this.selectedAddress = data.suggestedAddresses?.length\n      ? data.suggestedAddresses[0]\n      : data.enteredAddress;\n    console.log(this.selectedAddress);\n  }\n}\n","<div\n  class=\"cx-suggested-addresses-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"closeModal('Escape clicked')\"\n>\n  <div *ngIf=\"data$ | async as data\" class=\"cx-suggested-addresses-container\">\n    <div class=\"cx-suggested-addresses-header cx-modal-header\">\n      <div class=\"cx-suggested-addresses-title\">\n        {{ 'addressSuggestion.verifyYourAddress' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        (click)=\"closeModal('Cross click')\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n    <div class=\"cx-suggested-addresses-body\" ngForm>\n      <div class=\"cx-dialog-info\">\n        <p>\n          {{ 'addressSuggestion.ensureAccuracySuggestChange' | cxTranslate }}\n          {{ 'addressSuggestion.chooseAddressToUse' | cxTranslate }}\n        </p>\n      </div>\n\n      <div class=\"cx-dialog-options\">\n        <div\n          class=\"form-check\"\n          *ngFor=\"\n            let suggestedAddress of data.suggestedAddresses;\n            let i = index\n          \"\n        >\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"suggestedAddress\"\n            [id]=\"'suggested-addresses--suggested-' + i\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            [for]=\"'suggested-addresses--suggested-' + i\"\n          >\n            {{ 'addressSuggestion.suggestedAddress' | cxTranslate }}\n            {{ data.suggestedAddresses.length > 1 ? i + 1 : null }}\n          </label>\n          <div class=\"cx-dialog-suggested\">\n            <div class=\"cx-card-container\">\n              <div class=\"cx-card-label\">{{ suggestedAddress?.firstName }}</div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.lastName }}</div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.line1 }}</div>\n              <div class=\"cx-card-label\">\n                <span>{{ suggestedAddress?.line2 }}</span>\n              </div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.town }}</div>\n              <div class=\"cx-card-label\">\n                {{ suggestedAddress?.region?.isocode }}\n              </div>\n              <div class=\"cx-card-label\">\n                {{ suggestedAddress?.postalCode }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"data.enteredAddress\"\n            id=\"suggested-addresses--entered\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            for=\"suggested-addresses--entered\"\n          >\n            {{ 'addressSuggestion.enteredAddress' | cxTranslate }}\n          </label>\n          <div class=\"cx-dialog-entered\">\n            <div class=\"cx-card-container\">\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.firstName }}\n                {{ data.enteredAddress?.lastName }}\n              </div>\n              <div class=\"cx-card-label\">{{ data.enteredAddress?.line1 }}</div>\n              <div class=\"cx-card-label\">\n                <span>{{ data.enteredAddress?.line2 }}</span>\n              </div>\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.town }}\n                {{ data.enteredAddress?.region?.isocode }}\n              </div>\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.postalCode }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"cx-suggested-addresses-footer cx-modal-footer\">\n      <div class=\"row\">\n        <div class=\"cx-dialog-actions col-sm-12 col-md-12 col-lg-6 offset-lg-6\">\n          <button\n            class=\"btn btn-secondary cx-dialog-buttons\"\n            (click)=\"closeModal('Edit address')\"\n          >\n            {{ 'addressSuggestion.editAddress' | cxTranslate }}\n          </button>\n          <button\n            cxAutoFocus\n            class=\"btn btn-primary cx-dialog-buttons\"\n            (click)=\"closeModal(selectedAddress)\"\n          >\n            {{ 'addressSuggestion.saveAddress' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { NgSelectA11yModule } from '../../../../shared/components/ng-select-a11y';\nimport { FormErrorsModule } from '../../../../shared/index';\nimport { KeyboardFocusModule } from '../../../../layout/a11y/keyboard-focus/index';\nimport { IconModule } from '../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@NgModule({\n  imports: [\n    NgSelectA11yModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    FormErrorsModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\n})\nexport class AddressFormModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DIALOG_TYPE, LayoutConfig } from '../../../../../layout';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog.component';\n\nexport const defaultSuggestedAddressesDialogLayoutConfig: LayoutConfig = {\n  launch: {\n    SUGGESTED_ADDRESSES: {\n      inlineRoot: true,\n      component: SuggestedAddressDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { defaultSuggestedAddressesDialogLayoutConfig } from './address-form/suggested-addresses-dialog/default-suggested-addresses-dialog-layout.config';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent],\n  exports: [AddressBookComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    provideDefaultConfig(defaultSuggestedAddressesDialogLayoutConfig),\n    UserAddressService,\n  ],\n})\nexport class AddressBookModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './address-book.component';\nexport * from './address-book.component.service';\nexport * from './address-book.module';\nexport * from './address-form/address-form.component';\nexport * from './address-form/address-form.module';\nexport * from './address-form/suggested-addresses-dialog/suggested-addresses-dialog.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './components/consent-form/consent-management-form.component';\nexport * from './components/consent-management.component';\nexport * from './consent-management.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  CustomerCoupon,\n  RoutingService,\n  TranslationService,\n} from '@spartacus/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyCouponsComponentService {\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  protected readonly RELEVANCE = ':relevance';\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected translation: TranslationService\n  ) {}\n\n  launchSearchPage(coupon: CustomerCoupon): void {\n    this.routingService.go(\n      {\n        cxRoute: 'search',\n        params: { query: this.buildSearchParam(coupon) },\n      },\n      {\n        queryParams: {\n          couponcode: coupon.couponId,\n        },\n      }\n    );\n  }\n\n  private buildSearchParam(coupon: CustomerCoupon): string {\n    return coupon.allProductsApplicable\n      ? this.RELEVANCE\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\n  }\n\n  getSortLabels(): Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('myCoupons.startDateAsc'),\n      this.translation.translate('myCoupons.startDateDesc'),\n      this.translation.translate('myCoupons.endDateAsc'),\n      this.translation.translate('myCoupons.endDateDesc'),\n    ]).pipe(\n      map(\n        ([\n          textByStartDateAsc,\n          textByStartDateDesc,\n          textByEndDateAsc,\n          textByEndDateDesc,\n        ]) => {\n          return {\n            byStartDateAsc: textByStartDateAsc,\n            byStartDateDesc: textByStartDateDesc,\n            byEndDateAsc: textByEndDateAsc,\n            byEndDateDesc: textByEndDateDesc,\n          };\n        }\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { LaunchDialogService, LAUNCH_CALLER } from '../../../../layout/index';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  @ViewChild('element') element: ElementRef;\n\n  constructor(\n    protected myCouponsComponentService: MyCouponsComponentService,\n    protected launchDialogService: LaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId ?? '',\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.COUPON,\n      this.element,\n      this.vcr,\n      { coupon: this.coupon }\n    );\n\n    if (dialog) {\n      dialog.pipe(take(1)).subscribe();\n    }\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body cx-card-body\">\n    <div class=\"cx-coupon-data\">\n      <div class=\"cx-coupon-card-row top\">\n        <div class=\"cx-coupon-card-head\">\n          <span class=\"card-label-bold cx-coupon-card-id\">{{\n            coupon?.couponId\n          }}</span>\n          <span>: {{ coupon?.name }}</span>\n        </div>\n\n        <div class=\"cx-coupon-status {{ coupon?.status | lowercase }}\">\n          {{ 'myCoupons.' + coupon?.status | cxTranslate }}\n        </div>\n      </div>\n\n      <div class=\"cx-coupon-card-date\">\n        <p>{{ 'myCoupons.effectiveTitle' | cxTranslate }}</p>\n        <div class=\"cx-coupon-date\">\n          <div class=\"cx-coupon-date-start\">\n            {{ coupon?.startDate | cxDate: 'medium' }} -&nbsp;\n          </div>\n          <div class=\"cx-coupon-date-end\">\n            {{ coupon?.endDate | cxDate: 'medium' }}\n          </div>\n        </div>\n      </div>\n      <button\n        class=\"cx-card-read-more link cx-action-link\"\n        (click)=\"readMore()\"\n      >\n        {{ 'myCoupons.readMore' | cxTranslate }}\n      </button>\n      <div class=\"cx-coupon-card-row bottom\">\n        <div class=\"cx-coupon-notification form-check\">\n          <label>\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              [checked]=\"coupon?.notificationOn\"\n              [class.disabled]=\"couponSubscriptionLoading$ | async\"\n              [disabled]=\"couponSubscriptionLoading$ | async\"\n              (change)=\"onSubscriptionChange()\"\n            />\n            <span class=\"form-check-label\">\n              {{ 'myCoupons.notification' | cxTranslate }}\n            </span>\n          </label>\n        </div>\n\n        <div class=\"cx-coupon-find-product col-lg-6 col-md-12 col-sm-6\">\n          <button class=\"btn btn-block btn-secondary\" (click)=\"findProducts()\">\n            {{ 'myCoupons.findProducts' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n  PaginationModel,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { MyCouponsComponentService } from './my-coupons.component.service';\n\n@Component({\n  selector: 'cx-my-coupons',\n  templateUrl: './my-coupons.component.html',\n})\nexport class MyCouponsComponent implements OnInit, OnDestroy {\n  couponResult$: Observable<CustomerCouponSearchResult>;\n  couponsLoading$: Observable<boolean>;\n  couponSubscriptionLoading$: Observable<boolean>;\n\n  iconTypes = ICON_TYPE;\n\n  private subscriptions = new Subscription();\n\n  private PAGE_SIZE = 10;\n  private sortMapping: { [key: string]: string } = {\n    byStartDateAsc: 'startDate:asc',\n    byStartDateDesc: 'startDate:desc',\n    byEndDateAsc: 'endDate:asc',\n    byEndDateDesc: 'endDate:desc',\n  };\n  sort = 'byStartDateAsc';\n\n  sortOptions = [\n    {\n      code: 'byStartDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byStartDateDesc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateDesc',\n      selected: false,\n    },\n  ];\n\n  pagination: PaginationModel;\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.couponResult$ = this.couponService\n      .getCustomerCoupons(this.PAGE_SIZE)\n      .pipe(\n        tap(\n          (coupons) =>\n            (this.pagination = {\n              currentPage: coupons.pagination?.page,\n              pageSize: coupons.pagination?.count,\n              totalPages: coupons.pagination?.totalPages,\n              totalResults: coupons.pagination?.totalCount,\n              sort: this.sort,\n            })\n        )\n      );\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\n    this.couponSubscriptionLoading$ = combineLatest([\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\n    ]).pipe(\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\n    );\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\n\n    this.subscriptions\n      .add(\n        this.couponService\n          .getSubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      )\n      .add(\n        this.couponService\n          .getUnsubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      );\n  }\n\n  private subscriptionFail(error: boolean) {\n    if (error) {\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    }\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      this.pagination.currentPage,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  notificationChange({\n    couponId,\n    notification,\n  }: {\n    couponId: string;\n    notification: boolean;\n  }): void {\n    if (notification) {\n      this.couponService.subscribeCustomerCoupon(couponId);\n    } else {\n      this.couponService.unsubscribeCustomerCoupon(couponId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div class=\"cx-section\">\n  <ng-container *ngIf=\"!(couponsLoading$ | async); else loading\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container *ngIf=\"couponResult$ | async as couponResult\">\n      <div class=\"cx-my-coupons-header\">\n        <h2>\n          {{ 'myCoupons.myCoupons' | cxTranslate }}\n        </h2>\n      </div>\n      <ng-container\n        *ngIf=\"\n          couponResult.pagination &&\n            couponResult.pagination.totalCount &&\n            couponResult.pagination.totalCount > 0;\n          else noCoupons\n        \"\n      >\n        <div class=\"cx-my-coupons-sort top row\">\n          <label\n            class=\"\n              cx-my-coupons-form-group\n              form-group\n              col-sm-12 col-md-4 col-lg-4\n            \"\n          >\n            <span>{{ 'myCoupons.sortBy' | cxTranslate }}</span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              [sortLabels]=\"sortLabels | async\"\n              (sortListEvent)=\"sortChange($event)\"\n              [selectedOption]=\"sort\"\n              [ariaLabel]=\"'myCoupons.sortCoupons' | cxTranslate\"\n              ariaControls=\"coupon-deck\"\n            >\n            </cx-sorting>\n          </label>\n          <div class=\"cx-my-coupons-pagination cx-mycoupon-thead-mobile\">\n            <cx-pagination\n              [pagination]=\"pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n\n        <div id=\"coupon-deck\" class=\"row cx-coupon-deck\">\n          <div\n            *ngFor=\"let coupon of couponResult.coupons\"\n            class=\"col-md-6 cx-coupon-card\"\n          >\n            <cx-coupon-card\n              [coupon]=\"coupon\"\n              [couponSubscriptionLoading$]=\"couponSubscriptionLoading$\"\n              (notificationChanged)=\"notificationChange($event)\"\n            ></cx-coupon-card>\n          </div>\n        </div>\n\n        <div class=\"cx-my-coupons-sort bottom row\">\n          <label\n            class=\"\n              cx-my-coupons-form-group\n              form-group\n              cx-mycoupon-thead-mobile\n              col-sm-12 col-md-4 col-lg-4\n            \"\n          >\n            <span>{{ 'myCoupons.sortBy' | cxTranslate }}</span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              [sortLabels]=\"sortLabels | async\"\n              (sortListEvent)=\"sortChange($event)\"\n              [selectedOption]=\"sort\"\n              placeholder=\"{{ 'myCoupons.sortBy' | cxTranslate }}\"\n              [ariaLabel]=\"'myCoupons.sortCoupons' | cxTranslate\"\n              ariaControls=\"coupon-deck\"\n            >\n            </cx-sorting>\n          </label>\n          <div class=\"cx-my-coupons-pagination\">\n            <cx-pagination\n              [pagination]=\"pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n        <div class=\"cx-my-coupons-notes\">\n          <span>\n            <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n            {{ 'myCoupons.notesPreffix' | cxTranslate\n            }}<a [routerLink]=\"['/my-account/notification-preference']\">{{\n              'myCoupons.notesLink' | cxTranslate\n            }}</a\n            >{{ 'myCoupons.notesSuffix' | cxTranslate }}</span\n          >\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #noCoupons>\n      <section>\n        <p class=\"cx-section-msg\">\n          {{ 'myCoupons.noCouponsMessage' | cxTranslate }}\n        </p>\n      </section>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"col-md-12 cx-coupon-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </ng-template>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Component,\n  ElementRef,\n  ChangeDetectionStrategy,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { FocusConfig, LaunchDialogService } from '../../../../../layout/index';\n\n@Component({\n  selector: 'cx-coupon-dialog',\n  templateUrl: './coupon-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CouponDialogComponent implements OnDestroy, OnInit {\n  private subscription = new Subscription();\n  iconTypes = ICON_TYPE;\n  coupon: CustomerCoupon;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'button',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected launchDialogService: LaunchDialogService,\n    protected el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.launchDialogService.data$.subscribe((data) => {\n        this.coupon = data.coupon;\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  close(reason?: any): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n}\n","<div\n  class=\"cx-coupon-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n>\n  <div class=\"cx-coupon-container\">\n    <!-- Modal Header -->\n\n    <div class=\"cx-dialog-header modal-header\">\n      <div class=\"cx-dialog-title modal-title\">\n        {{ 'myCoupons.dialogTitle' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        (click)=\"close('Cross click')\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <div class=\"cx-dialog-row\">\n        <div class=\"cx-dialog-item col-sm-12 col-md-12\">\n          <div class=\"cx-coupon-card-head\">\n            <span class=\"card-label-bold cx-coupon-card-id\">{{\n              coupon?.couponId\n            }}</span>\n            <span>: {{ coupon?.name }}</span>\n          </div>\n          <div class=\"cx-coupon-description\">{{ coupon?.description }}</div>\n\n          <div class=\"cx-coupon-dialog-date\">\n            <p>{{ 'myCoupons.effectiveTitle' | cxTranslate }}</p>\n            <div class=\"cx-coupon-date\">\n              {{ coupon?.startDate | cxDate: 'medium' }} -\n              {{ coupon?.endDate | cxDate: 'medium' }}\n            </div>\n          </div>\n\n          <div class=\"cx-coupon-dialog-status\">\n            <p>{{ 'myCoupons.status' | cxTranslate }}</p>\n            <div class=\"cx-coupon-status {{ coupon?.status | lowercase }}\">\n              {{ 'myCoupons.' + coupon?.status | cxTranslate }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  RoutingService,\n  CustomerCouponService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  template: '',\n  selector: 'cx-coupon-claim',\n})\nexport class CouponClaimComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected routingService: RoutingService,\n    protected messageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService\n      .getRouterState()\n      .subscribe((k) => {\n        const couponCode = k.state.params.couponCode;\n        if (couponCode) {\n          this.couponService.claimCustomerCoupon(couponCode);\n          this.subscription = this.couponService\n            .getClaimCustomerCouponResultSuccess()\n            .subscribe((success) => {\n              if (success) {\n                this.messageService.add(\n                  { key: 'myCoupons.claimCustomerCoupon' },\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\n                );\n              }\n              this.routingService.go({ cxRoute: 'coupons' });\n            });\n        } else {\n          this.routingService.go({ cxRoute: 'notFound' });\n        }\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DIALOG_TYPE, LayoutConfig } from '../../../layout/index';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\n\nexport const defaultCouponLayoutConfig: LayoutConfig = {\n  launch: {\n    COUPON: {\n      inlineRoot: true,\n      component: CouponDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyCouponsComponent } from './my-coupons.component';\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { defaultCouponLayoutConfig } from './default-coupon-card-layout.config';\nimport { KeyboardFocusModule } from '../../../layout/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    IconModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'couponClaim' },\n      },\n    ]),\n    KeyboardFocusModule,\n  ],\n  declarations: [\n    MyCouponsComponent,\n    CouponCardComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyCouponsComponent: {\n          component: MyCouponsComponent,\n          guards: [AuthGuard],\n        },\n        CouponClaimComponent: {\n          component: CouponClaimComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    provideDefaultConfig(defaultCouponLayoutConfig),\n  ],\n  exports: [MyCouponsComponent, CouponClaimComponent],\n})\nexport class MyCouponsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './my-coupons.component';\nexport * from './my-coupons.module';\nexport * from './coupon-card/coupon-card.component';\nexport * from './coupon-card/coupon-dialog/coupon-dialog.component';\nexport * from './coupon-claim/coupon-claim.component';\nexport * from './my-coupons.component.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  PaginationModel,\n  Product,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n  ProductScope,\n  ProductService,\n  TranslationService,\n  UserInterestsService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\n  results?: (ProductInterestEntryRelation & {\n    product$?: Observable<Product | undefined>;\n  })[];\n}\n\n@Component({\n  selector: 'cx-my-interests',\n  templateUrl: './my-interests.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyInterestsComponent implements OnInit, OnDestroy {\n  private DEFAULT_PAGE_SIZE = 10;\n  private sortMapping: { [key: string]: string } = {\n    byNameAsc: 'name:asc',\n    byNameDesc: 'name:desc',\n  };\n  private sortChanged = false;\n\n  sort = 'byNameAsc';\n  sortOptions = [\n    {\n      code: 'byNameAsc',\n      selected: false,\n    },\n    {\n      code: 'byNameDesc',\n      selected: false,\n    },\n  ];\n  pagination: PaginationModel;\n\n  interests$: Observable<ProductInterestSearchResultUI>;\n  isRemoveDisabled$: Observable<boolean>;\n  getInterestsloading$: Observable<boolean>;\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\n\n  constructor(\n    private productInterestService: UserInterestsService,\n    private translationService: TranslationService,\n    private productService: ProductService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit() {\n    this.interests$ = this.productInterestService\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\n      .pipe(\n        tap(\n          (interests) =>\n            (this.pagination = {\n              currentPage: interests.pagination?.page,\n              pageSize: interests.pagination?.count,\n              totalPages: interests.pagination?.totalPages,\n              totalResults: interests.pagination?.totalCount,\n              sort: 'byNameAsc',\n            })\n        ),\n        tap(() => {\n          if (this.sortChanged) {\n            this.sortChanged = false;\n            this.globalMessageService?.add(\n              { key: 'sorting.pageViewUpdated' },\n              GlobalMessageType.MSG_TYPE_ASSISTIVE,\n              500\n            );\n          }\n        }),\n        map((interest) => ({\n          ...interest,\n          results: interest.results\n            ? interest.results.map((result) => ({\n                ...result,\n                product$: this.getProduct(result),\n              }))\n            : interest.results,\n        }))\n      );\n\n    this.getInterestsloading$ =\n      this.productInterestService.getProdutInterestsLoading();\n    this.isRemoveDisabled$ = combineLatest([\n      this.getInterestsloading$,\n      this.productInterestService.getRemoveProdutInterestLoading(),\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\n\n    this.sortLabels = this.getSortLabels();\n  }\n\n  private getSortLabels(): Observable<{\n    byNameAsc: string;\n    byNameDesc: string;\n  }> {\n    return combineLatest([\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\n    ]).pipe(\n      map(([asc, desc]) => {\n        return {\n          byNameAsc: asc,\n          byNameDesc: desc,\n        };\n      })\n    );\n  }\n\n  private getProduct(\n    interest: ProductInterestEntryRelation\n  ): Observable<Product | undefined> {\n    return this.productService.get(\n      interest.product?.code ?? '',\n      ProductScope.DETAILS\n    );\n  }\n\n  removeInterest(\n    relation: ProductInterestEntryRelation & {\n      product$?: Observable<Product | undefined>;\n    }\n  ): void {\n    this.productInterestService.removeProdutInterest({\n      product: relation.product,\n      productInterestEntry: relation.productInterestEntry,\n    });\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n    this.sortChanged = true;\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      0,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.productInterestService.clearProductInterests();\n    this.productInterestService.resetRemoveInterestState();\n  }\n}\n","<div *ngIf=\"interests$ | async as interests\" class=\"container\">\n  <div class=\"cx-product-interests-title\">\n    <h2>{{ 'myInterests.header' | cxTranslate }}</h2>\n  </div>\n  <div\n    class=\"cx-product-interests-body\"\n    *ngIf=\"!(getInterestsloading$ | async); else loading\"\n  >\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container\n      *ngIf=\"\n        interests.pagination &&\n          interests.pagination.totalCount &&\n          interests.pagination.totalCount > 0;\n        else noInterest\n      \"\n    >\n      <div class=\"cx-product-interests-sort top row\">\n        <label\n          class=\"\n            cx-product-interests-form-group\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n            [ariaLabel]=\"'myInterests.sortInterests' | cxTranslate\"\n            ariaControls=\"product-interests-table\"\n          >\n          </cx-sorting>\n        </label>\n        <div\n          class=\"\n            cx-product-interests-pagination cx-product-interests-thead-mobile\n          \"\n        >\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n\n      <table\n        id=\"product-interests-table\"\n        class=\"table cx-product-interests-table cx-product-interests-table-list\"\n      >\n        <caption class=\"cx-visually-hidden\">\n          {{\n            'myInterests.caption' | cxTranslate\n          }}\n        </caption>\n        <thead\n          class=\"cx-product-interests-thead-mobile cx-product-interests-header\"\n        >\n          <th role=\"columnheader\">\n            {{ 'myInterests.item' | cxTranslate }}\n          </th>\n          <th role=\"columnheader\">\n            {{ 'myInterests.price' | cxTranslate }}\n          </th>\n          <th role=\"columnheader\">\n            {{ 'myInterests.notifications' | cxTranslate }}\n          </th>\n          <th srole=\"columnheader\">\n            {{ 'myInterests.actions' | cxTranslate }}\n          </th>\n        </thead>\n        <tbody>\n          <tr\n            *ngFor=\"let interest of interests.results\"\n            class=\"cx-product-interests-product-item\"\n            role=\"row\"\n          >\n            <ng-container *ngIf=\"interest.product$ | async as product\">\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-cell-wrapper\">\n                  <div class=\"cx-product-interests-label\">\n                    <a\n                      class=\"cx-product-interests-product-image-link\"\n                      tabindex=\"-1\"\n                      [routerLink]=\"\n                        { cxRoute: 'product', params: product } | cxUrl\n                      \"\n                    >\n                      <cx-media\n                        [container]=\"product.images?.PRIMARY\"\n                        format=\"thumbnail\"\n                      ></cx-media>\n                    </a>\n                  </div>\n\n                  <div class=\"cx-info col-10\">\n                    <div class=\"cx-info-container row\">\n                      <div>\n                        <div *ngIf=\"product.name\" class=\"cx-name\">\n                          <a\n                            class=\"\n                              cx-link cx-product-interests-product-code-link\n                            \"\n                            [routerLink]=\"\n                              { cxRoute: 'product', params: product } | cxUrl\n                            \"\n                          >\n                            {{ product.name }}\n                          </a>\n                        </div>\n                        <div *ngIf=\"product.code\" class=\"cx-code\">\n                          <span>{{\n                            'myInterests.productId'\n                              | cxTranslate: { code: product.code }\n                          }}</span>\n                        </div>\n\n                        <ng-container\n                          *ngFor=\"let baseOptions of product.baseOptions\"\n                        >\n                          <div\n                            *ngFor=\"\n                              let variant of baseOptions.selected\n                                ?.variantOptionQualifiers\n                            \"\n                            class=\"cx-property\"\n                          >\n                            <div\n                              class=\"cx-label cx-product-interests-variant-name\"\n                            >\n                              {{ variant.name }}\n                            </div>\n                            <div\n                              class=\"\n                                cx-value cx-product-interests-variant-value\n                              \"\n                            >\n                              {{ variant.value }}\n                            </div>\n                          </div>\n                        </ng-container>\n                        <div\n                          class=\"cx-property\"\n                          *ngIf=\"\n                            product.stock?.stockLevelStatus === 'outOfStock'\n                          \"\n                        >\n                          <div\n                            class=\"cx-label cx-product-interests-product-stock\"\n                          >\n                            {{ 'myInterests.outOfStock' | cxTranslate }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-product-price\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.price' | cxTranslate }}\n                  </div>\n                  <span>{{ product.price?.formattedValue }}</span>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-product-interests-subscriptions\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.notifications' | cxTranslate }}\n                  </div>\n                  <div\n                    class=\"cx-product-interests-notification\"\n                    *ngFor=\"let interestEntry of interest.productInterestEntry\"\n                  >\n                    <span class=\"cx-product-interests-type\">\n                      {{\n                        'myInterests.' + interestEntry.interestType\n                          | cxTranslate\n                      }}\n                    </span>\n                    <span class=\"cx-product-interests-expiration-date\">\n                      {{\n                        'myInterests.expirationDate'\n                          | cxTranslate\n                            : {\n                                expirationDate:\n                                  interestEntry.expirationDate | cxDate\n                              }\n                      }}\n                    </span>\n                  </div>\n                </div>\n              </td>\n              <td role=\"cell\">\n                <div class=\"cx-actions cx-product-interests-remove-button\">\n                  <button\n                    type=\"button\"\n                    class=\"\n                      cx-product-interests-remove-btn\n                      link\n                      cx-action-link cx-remove-btn\n                    \"\n                    [cxAtMessage]=\"'myInterests.itemRemoved' | cxTranslate\"\n                    [disabled]=\"isRemoveDisabled$ | async\"\n                    (click)=\"removeInterest(interest)\"\n                  >\n                    {{ 'myInterests.remove' | cxTranslate }}\n                  </button>\n                </div>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"cx-product-interests-sort bottom row\">\n        <label\n          class=\"\n            cx-product-interests-form-group cx-product-interests-thead-mobile\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n            [ariaLabel]=\"'myInterests.sortInterests' | cxTranslate\"\n            ariaControls=\"product-interests-table\"\n          >\n          </cx-sorting>\n        </label>\n        <div class=\"cx-product-interests-pagination\">\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n<ng-template #noInterest>\n  <div class=\"cx-product-interests-message\">\n    {{ 'myInterests.noInterests' | cxTranslate }}\n  </div>\n</ng-template>\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { AtMessageModule } from '../../../shared/components/assistive-technology-message/assistive-technology-message.module';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyInterestsComponent } from './my-interests.component';\n\n@NgModule({\n  declarations: [MyInterestsComponent],\n  imports: [\n    AtMessageModule,\n    CommonModule,\n    I18nModule,\n    ListNavigationModule,\n    I18nModule,\n    UrlModule,\n    MediaModule,\n    SpinnerModule,\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'myInterests' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyInterestsComponent: {\n          component: MyInterestsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyInterestsComponent],\n})\nexport class MyInterestsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  NotificationPreference,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-notification-preference',\n  templateUrl: './notification-preference.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPreferenceComponent implements OnInit {\n  preferences$: Observable<NotificationPreference[]>;\n  isLoading$: Observable<boolean>;\n\n  protected preferences: NotificationPreference[] = [];\n\n  constructor(\n    private notificationPreferenceService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.notificationPreferenceService.resetNotificationPreferences();\n    this.preferences$ = this.notificationPreferenceService\n      .getPreferences()\n      .pipe(tap((preferences) => (this.preferences = preferences)));\n    this.notificationPreferenceService.loadPreferences();\n\n    this.isLoading$ = combineLatest([\n      this.notificationPreferenceService.getPreferencesLoading(),\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\n    ]).pipe(\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\n    );\n  }\n\n  updatePreference(preference: NotificationPreference) {\n    const updatedPreferences: NotificationPreference[] = [];\n    this.preferences.forEach((p) => {\n      if (p.channel === preference.channel) {\n        updatedPreferences.push({\n          ...p,\n          enabled: !p.enabled,\n        });\n      } else {\n        updatedPreferences.push(p);\n      }\n    });\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\n  }\n}\n","<ng-container *ngIf=\"preferences$ | async as preferences\">\n  <div *ngIf=\"preferences.length > 0; else loading\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <div class=\"row d-flex justify-content-center\">\n      <div class=\"col-md-8\">\n        <div class=\"pref-header\">\n          {{ 'notificationPreference.message' | cxTranslate }}\n        </div>\n        <div class=\"form-check cx-notification-channels\">\n          <ng-container *ngFor=\"let preference of preferences\">\n            <label *ngIf=\"preference.visible\" class=\"pref-channel\">\n              <input\n                class=\"form-check-input cx-np-checkbox\"\n                role=\"checkbox\"\n                type=\"checkbox\"\n                [checked]=\"preference.enabled\"\n                (change)=\"updatePreference(preference)\"\n                [disabled]=\"isLoading$ | async\"\n              />\n              <span class=\"form-check-label\">\n                {{\n                  'notificationPreference.' + preference.channel | cxTranslate\n                }}\n                {{ preference.value }}\n              </span>\n            </label>\n          </ng-container>\n        </div>\n        <label class=\"pref-note\"\n          ><strong>{{ 'notificationPreference.note' | cxTranslate }}</strong\n          >{{ 'notificationPreference.noteMessage' | cxTranslate }}\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loading>\n    <div class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </ng-template>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { NotificationPreferenceComponent } from './notification-preference.component';\n\n@NgModule({\n  declarations: [NotificationPreferenceComponent],\n  imports: [\n    CommonModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'notificationPreference' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NotificationPreferenceComponent: {\n          component: NotificationPreferenceComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [NotificationPreferenceComponent],\n})\nexport class NotificationPreferenceModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './notification-preference.component';\nexport * from './notification-preference.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string | undefined;\n  iconTypes = ICON_TYPE;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService,\n    protected globalMessageService?: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap((paymentDetails) => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = undefined;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n    cardType,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            role: 'region',\n            header: defaultPayment ? textDefaultPaymentMethod : undefined,\n            textBold: accountHolderName,\n            text: [cardNumber ?? '', textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n            img: this.getCardIcon(cardType?.code ?? ''),\n            label: defaultPayment\n              ? 'paymentCard.defaultPaymentLabel'\n              : 'paymentCard.additionalPaymentLabel',\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    if (paymentMethod.id) {\n      this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n      this.editCard = undefined;\n    }\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = undefined;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id ?? '');\n    this.globalMessageService?.add(\n      { key: 'paymentMessages.setAsDefaultSuccessfully' },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n  }\n\n  getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","<ng-container *ngIf=\"paymentMethods$ | async as paymentMethods\">\n  <div class=\"cx-payment container\">\n    <div class=\"cx-header\">\n      <h2>\n        {{ 'paymentMethods.paymentMethods' | cxTranslate }}\n      </h2>\n    </div>\n\n    <div class=\"cx-body\">\n      <div class=\"cx-msg\">\n        {{\n          'paymentMethods.newPaymentMethodsAreAddedDuringCheckout' | cxTranslate\n        }}\n      </div>\n      <div *ngIf=\"loading$ | async; else cards\"><cx-spinner></cx-spinner></div>\n      <ng-template #cards>\n        <div\n          role=\"status\"\n          [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n        ></div>\n        <div class=\"cx-existing row\">\n          <div\n            class=\"cx-payment-card col-sm-12 col-md-12 col-lg-6\"\n            *ngFor=\"let paymentMethod of paymentMethods; let i = index\"\n          >\n            <div class=\"cx-payment-inner\">\n              <cx-card\n                [index]=\"i\"\n                [border]=\"true\"\n                [fitToContainer]=\"true\"\n                [content]=\"getCardContent(paymentMethod) | async\"\n                (deleteCard)=\"deletePaymentMethod(paymentMethod)\"\n                (setDefaultCard)=\"setDefaultPaymentMethod(paymentMethod)\"\n                (editCard)=\"setEdit(paymentMethod)\"\n                [editMode]=\"editCard === paymentMethod.id\"\n                (cancelCard)=\"cancelCard()\"\n              ></cx-card>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './address-book/index';\nexport * from './consent-management/index';\nexport * from './my-coupons/index';\nexport * from './my-interests/my-interests.component';\nexport * from './my-interests/my-interests.module';\nexport * from './notification-preference/index';\nexport * from './payment-methods/payment-methods.component';\nexport * from './payment-methods/payment-methods.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  CmsPageTitleComponent,\n  isNotNullable,\n  PageMetaService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-page-title',\n  templateUrl: './page-title.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageTitleComponent implements OnInit, AfterViewInit {\n  title$: Observable<string>;\n  lastestTitle$: Observable<string>;\n\n  constructor(\n    public component: CmsComponentData<CmsPageTitleComponent>,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n  }\n\n  ngAfterViewInit(): void {\n    this.lastestTitle$ = this.title$;\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(isNotNullable),\n      map((meta) => (meta.heading || meta.title) ?? '')\n    );\n  }\n}\n","<h1 class=\"cx-visually-hidden\">{{ title$ | async }}</h1>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { PageTitleComponent } from '../page-header/page-title.component';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent extends PageTitleComponent implements OnInit {\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {\n    super(component, pageMetaService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.setCrumbs();\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","<nav [attr.aria-label]=\"'common.breadcrumbs' | cxTranslate\" tabindex=\"-1\">\n  <ol [attr.aria-label]=\"'common.breadcrumbs' | cxTranslate\">\n    <li *ngFor=\"let crumb of crumbs$ | async\">\n      <a\n        [attr.aria-label]=\"\n          'navigation.navigateTo' | cxTranslate: { nav: crumb.label }\n        \"\n        [routerLink]=\"crumb.link\"\n        [innerHTML]=\"crumb.label\"\n      ></a>\n    </li>\n  </ol>\n</nav>\n<!-- Hidden page title for Screen Reader initialized after view to avoid old values -->\n<span class=\"cx-visually-hidden\" aria-live=\"polite\" aria-atomic=\"true\">\n  {{ lastestTitle$ | async }}\n</span>\n<h1>{{ title$ | async }}</h1>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  PageMetaModule,\n  provideDefaultConfig,\n  I18nModule,\n} from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PageMetaModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BreadcrumbComponent],\n  exports: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsNavigationNode,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return {\n          title: data.name,\n          children: [nav],\n        };\n      })\n    );\n  }\n\n  /**\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n   * This function will load the navigation underlying entries and children if they haven't been\n   * loaded so far.\n   */\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter((data) => !!data),\n      switchMap((data) => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService\n          .getNavigationEntryItems(navigation.uid ?? '')\n          .pipe(\n            tap((items) => {\n              if (items === undefined) {\n                this.loadNavigationEntryItems(navigation, true);\n                return;\n              }\n              // we should check whether the existing node items are what expected\n              const expectedItems: {\n                superType: string | undefined;\n                id: string | undefined;\n              }[] = [];\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\n              const existingItems = Object.keys(items).map(\n                (key) => items[key].uid ?? ''\n              );\n              const missingItems = expectedItems.filter(\n                (it) => it.id && !existingItems.includes(it.id)\n              );\n              if (missingItems.length > 0) {\n                this.cmsService.loadNavigationItems(\n                  navigation.uid ?? '',\n                  missingItems\n                );\n              }\n            }),\n            filter(Boolean),\n            map((items) => this.populateNavigationNode(navigation, items) ?? {})\n          );\n      })\n    );\n  }\n\n  /**\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private loadNavigationEntryItems(\n    nodeData: CmsNavigationNode,\n    root: boolean,\n    itemsList: { superType: string | undefined; id: string | undefined }[] = []\n  ): void {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach((entry) => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      nodeData.children.forEach((child) =>\n        this.loadNavigationEntryItems(child, false, itemsList)\n      );\n    }\n\n    if (root && nodeData.uid) {\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for the view\n   * @param nodeData\n   * @param items\n   */\n  private populateNavigationNode(\n    nodeData: any,\n    items: any\n  ): NavigationNode | null {\n    const node: NavigationNode = {};\n\n    if (nodeData.title) {\n      // the node title will be populated by the first entry (if any)\n      // if there's no nodeData.title available\n      node.title = nodeData.title;\n    }\n\n    // populate style classes to apply CMS driven styling\n    if (nodeData.styleClasses) {\n      node.styleClasses = nodeData.styleClasses;\n    }\n    // populate style attributes to apply CMS driven styling\n    if (nodeData.styleAttributes) {\n      node.styleAttributes = nodeData.styleAttributes;\n    }\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.populateLink(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children?.length > 0) {\n      const children = nodeData.children\n        .map((child: any) => this.populateNavigationNode(child, items))\n        .filter(Boolean);\n      if (children.length > 0) {\n        node.children = children;\n      }\n    }\n\n    // return null in case there are no children\n    return Object.keys(node).length === 0 ? null : node;\n  }\n\n  /**\n   * The node link is driven by the first entry.\n   */\n  private populateLink(node: NavigationNode, entry: any, items: any) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (item && entry.itemType === 'CMSLinkComponent') {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n      const url = this.getLink(item);\n      // only populate the node link if we have a visible node\n      if (node.title && url) {\n        node.url = url;\n        // the backend provide boolean value for the target\n        // in case the link should be opened in a new window\n        if (item.target === 'true' || item.target === true) {\n          node.target = '_blank';\n        }\n      }\n      // populate style classes to apply CMS driven styling\n      if (item.styleClasses) {\n        node.styleClasses = item.styleClasses;\n      }\n      // populate style attributes to apply CMS driven styling\n      if (item.styleAttributes) {\n        node.styleAttributes = item.styleAttributes;\n      }\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category),\n   * also taking into account content pages (contentPageLabelOrId)\n   * and product pages (productCode)\n   */\n  protected getLink(item: any): string | string[] | undefined {\n    if (item.url) {\n      return item.url;\n    } else if (item.contentPageLabelOrId) {\n      return item.contentPageLabelOrId;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    } else if (item.productCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'product',\n        params: {\n          code: item.productCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n}\n\n// CHECK SONAR\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { WindowRef } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { HamburgerMenuService } from './../../../layout/header/hamburger-menu/hamburger-menu.service';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnInit, OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode | null;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n\n  /**\n   * Flag indicates whether to reset the state of menu navigation (ie. Collapse all submenus) when the menu is closed.\n   */\n  @Input() resetMenuOnClose: boolean | undefined;\n\n  @Input() navAriaLabel: string | null | undefined;\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navigation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef,\n    protected hamburgerMenuService: HamburgerMenuService,\n    protected winRef: WindowRef\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event) => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  /**\n   * During initialization of this component, we will check the resetMenuOnClose flag and attach a menu reset listener if needed.\n   */\n  ngOnInit() {\n    if (this.resetMenuOnClose) {\n      this.resetOnMenuCollapse();\n    }\n  }\n\n  /**\n   * This method performs the action of resetting the menu (close all sub menus and return to main options)\n   * when the menu is closed.\n   */\n  resetOnMenuCollapse(): void {\n    this.subscriptions.add(\n      this.hamburgerMenuService?.isExpanded\n        .pipe(distinctUntilChanged(), filter(Boolean))\n        .subscribe(() => {\n          this.reinitializeMenu();\n        })\n    );\n  }\n\n  closeIfClickedTheSameLink(navNode: NavigationNode): void {\n    if (\n      typeof navNode.url === 'string' &&\n      this.winRef.nativeWindow?.location.href.includes(navNode.url)\n    ) {\n      this.elemRef.nativeElement\n        .querySelectorAll('li.is-open:not(.back), li.is-opened')\n        .forEach((el: any) => {\n          this.renderer.removeClass(el, 'is-open');\n          this.renderer.removeClass(el, 'is-opened');\n        });\n      this.reinitializeMenu();\n      this.hamburgerMenuService.toggle();\n    }\n  }\n\n  /**\n   * This method performs the actions required to reset the state of the menu and reset any visual components.\n   */\n  reinitializeMenu(): void {\n    if (this.openNodes?.length > 0) {\n      this.clear();\n      this.renderer.removeClass(this.elemRef.nativeElement, 'is-open');\n    }\n  }\n\n  protected ariaCollapseNodes(): void {\n    this.openNodes.forEach((parentNode) => {\n      Array.from(parentNode.children)\n        .filter((childNode) => childNode?.tagName === 'BUTTON')\n        .forEach((childNode) => {\n          this.renderer.setAttribute(childNode, 'aria-expanded', 'false');\n        });\n    });\n  }\n\n  toggleOpen(event: UIEvent): void {\n    if (event.type === 'keydown') {\n      event.preventDefault();\n    }\n    this.ariaCollapseNodes();\n    const node = <HTMLElement>event.currentTarget;\n    const parentNode = <HTMLElement>node.parentNode;\n    if (this.openNodes.includes(parentNode)) {\n      if (event.type === 'keydown') {\n        this.back();\n      } else {\n        this.openNodes = this.openNodes.filter((n) => n !== parentNode);\n        this.renderer.removeClass(parentNode, 'is-open');\n      }\n    } else {\n      this.openNodes.push(parentNode);\n      this.renderer.setAttribute(node, 'aria-expanded', 'true');\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    if (this.openNodes[this.openNodes.length - 1]) {\n      this.renderer.removeClass(\n        this.openNodes[this.openNodes.length - 1],\n        'is-open'\n      );\n      this.openNodes.pop();\n      this.updateClasses();\n    }\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getTotalDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\n      );\n    } else {\n      return depth;\n    }\n  }\n\n  getColumnCount(length: number): number {\n    return Math.round(length / (this.wrapAfter || length));\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement?.matches('nav[tabindex]') &&\n      target.parentElement?.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\n    const body = <HTMLElement>node.closest('body');\n    if (wrapper) {\n      this.renderer.removeStyle(wrapper, 'margin-left');\n      if (\n        wrapper.offsetLeft + wrapper.offsetWidth >\n        body.offsetLeft + body.offsetWidth\n      ) {\n        this.renderer.setStyle(\n          wrapper,\n          'margin-left',\n          `${node.offsetWidth - wrapper.offsetWidth}px`\n        );\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter((node) => node.tagName === 'LI')\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n}\n","<nav [attr.aria-label]=\"navAriaLabel\">\n  <ul>\n    <li\n      *ngIf=\"flyout && (node?.children?.length ?? 0) > 1\"\n      class=\"back is-open\"\n    >\n      <button (click)=\"back()\">\n        <cx-icon [type]=\"iconType.CARET_LEFT\"></cx-icon>\n        {{ 'common.back' | cxTranslate }}\n      </button>\n    </li>\n\n    <ng-container *ngFor=\"let child of node?.children\">\n      <ng-container *ngTemplateOutlet=\"nav; context: { node: child, depth: 0 }\">\n      </ng-container>\n    </ng-container>\n  </ul>\n</nav>\n<!-- we generate links in a recursive manner -->\n\n<ng-template #nav let-node=\"node\" let-depth=\"depth\">\n  <li>\n    <cx-generic-link\n      *ngIf=\"\n        node.url && (!node.children || node.children?.length === 0);\n        else heading\n      \"\n      [url]=\"node.url\"\n      [target]=\"node.target\"\n      [style]=\"node.styleAttributes\"\n      [class]=\"node.styleClasses\"\n      (click)=\"closeIfClickedTheSameLink(node)\"\n    >\n      {{ node.title }}\n    </cx-generic-link>\n\n    <ng-template #heading>\n      <ng-container *ngIf=\"flyout && node.children?.length > 0; else title\">\n        <cx-generic-link\n          *ngIf=\"node.url\"\n          [url]=\"node.url\"\n          [target]=\"node.target\"\n          (click)=\"closeIfClickedTheSameLink(node)\"\n        >\n          {{ node.title }}\n        </cx-generic-link>\n        <button\n          [attr.tabindex]=\"depth < 1 ? 0 : -1\"\n          [attr.aria-haspopup]=\"true\"\n          [attr.aria-expanded]=\"false\"\n          [attr.aria-label]=\"node.title\"\n          (click)=\"toggleOpen($any($event))\"\n          (mouseenter)=\"onMouseEnter($event)\"\n          (keydown.space)=\"toggleOpen($any($event))\"\n          (keydown.esc)=\"back()\"\n        >\n          <ng-container *ngIf=\"!node.url\">\n            {{ node.title }}\n          </ng-container>\n          <cx-icon [type]=\"iconType.CARET_DOWN\"></cx-icon>\n        </button>\n      </ng-container>\n      <ng-template #title>\n        <span [attr.tabindex]=\"-1\">\n          {{ node.title }}\n        </span>\n      </ng-template>\n    </ng-template>\n\n    <!-- we add a wrapper to allow for better layout handling in CSS -->\n    <div class=\"wrapper\" *ngIf=\"node.children && node.children.length > 0\">\n      <ul\n        class=\"childs\"\n        [attr.depth]=\"getTotalDepth(node)\"\n        [attr.wrap-after]=\"node.children.length > wrapAfter ? wrapAfter : null\"\n        [attr.columns]=\"getColumnCount(node.children.length)\"\n      >\n        <ng-container *ngFor=\"let child of node.children\">\n          <ng-container\n            *ngTemplateOutlet=\"nav; context: { node: child, depth: depth + 1 }\"\n          >\n          </ng-container>\n        </ng-container>\n      </ul>\n    </div>\n  </li>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","<cx-navigation-ui\n  *ngIf=\"data$ | async as data\"\n  [node]=\"node$ | async\"\n  [ngClass]=\"data.styleClass ?? ''\"\n  [wrapAfter]=\"+(data.wrapAfter ?? '')\"\n  [resetMenuOnClose]=\"data.resetMenuOnClose\"\n  [navAriaLabel]=\"'navigation.categoryNavLabel' | cxTranslate\"\n></cx-navigation-ui>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  name$: Observable<string | undefined> = this.componentData.data$.pipe(\n    map((d) => d?.navigationNode?.title)\n  );\n\n  styleClass$: Observable<string | undefined> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","<cx-navigation-ui\n  [node]=\"node$ | async\"\n  [ngClass]=\"(styleClass$ | async) ?? ''\"\n  [navAriaLabel]=\"name$ | async\"\n>\n</cx-navigation-ui>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, NavigationModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n          data: {\n            resetMenuOnClose: true,\n          },\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string | undefined> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","<cx-navigation-ui\n  *ngIf=\"node$ | async as node\"\n  [node]=\"node\"\n  [flyout]=\"false\"\n  [ngClass]=\"(styleClass$ | async) ?? ''\"\n  [navAriaLabel]=\"'navigation.footerNavLabel' | cxTranslate\"\n></cx-navigation-ui>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  PageMetaModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { PageTitleComponent } from './page-title.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PageMetaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        PageTitleComponent: {\n          component: PageTitleComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [PageTitleComponent],\n  exports: [PageTitleComponent],\n})\nexport class PageTitleModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CxEvent, Suggestion } from '@spartacus/core';\n\n/**\n * Indicates that the user chose a suggestion\n */\nexport class SearchBoxSuggestionSelectedEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'SearchBoxSuggestionSelectedEvent';\n  freeText: string;\n  selectedSuggestion: string;\n  searchSuggestions: (Suggestion | string)[];\n}\n\n/**\n * Indicates that the user chose a product suggestion\n */\nexport class SearchBoxProductSelectedEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'SearchBoxProductSelectedEvent';\n  freeText: string;\n  productCode: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  EventService,\n  isNotUndefined,\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n  SearchBoxProductSelectedEvent,\n  SearchBoxSuggestionSelectedEvent,\n} from './search-box.events';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef,\n    protected eventService: EventService\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : undefined,\n          suggestions,\n          message,\n        };\n      }),\n      tap((results) =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  /**\n   * Dispatches a searchbox event for product selected\n   *\n   * @param eventData data for the \"SearchBoxProductSelectedEvent\"\n   */\n  dispatchProductSelectedEvent(eventData: SearchBoxProductSelectedEvent): void {\n    this.eventService.dispatch<SearchBoxProductSelectedEvent>(\n      {\n        freeText: eventData.freeText,\n        productCode: eventData.productCode,\n      },\n      SearchBoxProductSelectedEvent\n    );\n  }\n\n  /**\n   * Dispatches a searchbox event for suggestion selected\n   *\n   * @param eventData data for the \"SearchBoxSuggestionSelectedEvent\"\n   */\n  dispatchSuggestionSelectedEvent(\n    eventData: SearchBoxSuggestionSelectedEvent\n  ): void {\n    this.eventService.dispatch<SearchBoxSuggestionSelectedEvent>(\n      {\n        freeText: eventData.freeText,\n        selectedSuggestion: eventData.selectedSuggestion,\n        searchSuggestions: eventData.searchSuggestions,\n      },\n      SearchBoxSuggestionSelectedEvent\n    );\n  }\n\n  /**\n   * For search results model, it returns true when:\n   * * there is any product OR\n   * * the is any search suggestion OR\n   * * there is a message.\n   *\n   * Otherwise it returns false.\n   */\n  protected hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  /**\n   * Emits product search results in case when the config property `displayProducts` is true.\n   * Otherwise it emits an empty object.\n   */\n  protected getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  protected getProductSuggestions(\n    config: SearchBoxConfig\n  ): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map((res) =>\n          res.map((suggestion) => suggestion.value).filter(isNotUndefined)\n        ),\n        switchMap((suggestions) => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map((match) => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * Whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  protected getExactSuggestion(\n    config: SearchBoxConfig\n  ): Observable<string | undefined> {\n    return this.getProductResults(config).pipe(\n      switchMap((productResult) => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(undefined);\n      })\n    );\n  }\n\n  /**\n   * Emits a 'no match' message, in case the product search results and search suggestions are empty.\n   * Otherwise it emits null.\n   */\n  protected getSearchMessage(\n    config: SearchBoxConfig\n  ): Observable<string | undefined> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          suggestions &&\n          suggestions.length === 0\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  CmsSearchBoxComponent,\n  PageType,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport {\n  SearchBoxProductSelectedEvent,\n  SearchBoxSuggestionSelectedEvent,\n} from './search-box.events';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCH_BOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\nconst SEARCHBOX_IS_ACTIVE = 'searchbox-is-active';\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent implements OnInit, OnDestroy {\n  @Input() config: SearchBoxConfig;\n\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n  chosenWord = '';\n  public subscription: Subscription;\n\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\n    protected winRef: WindowRef,\n    protected routingService: RoutingService\n  ) {}\n\n  /**\n   * Returns the SearchBox configuration. The configuration is driven by multiple\n   * layers: default configuration, (optional) backend configuration and (optional)\n   * input configuration.\n   */\n  protected config$: Observable<SearchBoxConfig> = (\n    this.componentData?.data$ || of({} as any)\n  ).pipe(\n    map((config) => {\n      const isBool = (obj: SearchBoxConfig, prop: string): boolean =>\n        obj[prop as keyof SearchBoxConfig] !== 'false' &&\n        obj[prop as keyof SearchBoxConfig] !== false;\n\n      return {\n        ...DEFAULT_SEARCH_BOX_CONFIG,\n        ...config,\n        displayProducts: isBool(config, 'displayProducts'),\n        displayProductImages: isBool(config, 'displayProductImages'),\n        displaySuggestions: isBool(config, 'displaySuggestions'),\n        // we're merging the (optional) input of this component, but write the merged\n        // result back to the input property, as the view logic depends on it.\n        ...this.config,\n      };\n    }),\n    tap((config) => (this.config = config))\n  );\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\n  );\n\n  ngOnInit(): void {\n    this.subscription = this.routingService\n      .getRouterState()\n      .pipe(filter((data) => !data.nextState))\n      .subscribe((data) => {\n        if (\n          !(\n            data.state.context?.id === 'search' &&\n            data.state.context?.type === PageType.CONTENT_PAGE\n          )\n        ) {\n          this.chosenWord = '';\n        }\n      });\n  }\n\n  /**\n   * Closes the searchBox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchBox to open\n    this.open();\n  }\n\n  /**\n   * Opens the type-ahead searchBox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass(SEARCHBOX_IS_ACTIVE, true);\n  }\n\n  /**\n   * Dispatch UI events for Suggestion selected\n   *\n   * @param eventData the data for the event\n   */\n  dispatchSuggestionEvent(eventData: SearchBoxSuggestionSelectedEvent): void {\n    this.searchBoxComponentService.dispatchSuggestionSelectedEvent(eventData);\n  }\n\n  /**\n   * Dispatch UI events for Product selected\n   *\n   * @param eventData the data for the event\n   */\n  dispatchProductEvent(eventData: SearchBoxProductSelectedEvent): void {\n    this.searchBoxComponentService.dispatchProductSelectedEvent(eventData);\n  }\n\n  /**\n   * Closes the type-ahead searchBox.\n   */\n  close(event: UIEvent, force?: boolean): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if ((!this.ignoreCloseEvent && !this.isSearchBoxFocused()) || force) {\n        this.blurSearchBox(event);\n      }\n    });\n  }\n\n  protected blurSearchBox(event: UIEvent): void {\n    this.searchBoxComponentService.toggleBodyClass(SEARCHBOX_IS_ACTIVE, false);\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Check if focus is on searchbox or result list elements\n  private isSearchBoxFocused(): boolean {\n    return (\n      this.getResultElements().includes(this.getFocusedElement()) ||\n      this.winRef.document.querySelector('input[aria-label=\"Search\"]') ===\n        this.getFocusedElement()\n    );\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass(SEARCHBOX_IS_ACTIVE)) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  // Return result list as HTMLElement array\n  private getResultElements(): HTMLElement[] {\n    return Array.from(\n      this.winRef.document.querySelectorAll(\n        '.products > li a, .suggestions > li a'\n      )\n    );\n  }\n\n  // Return focused element as HTMLElement\n  private getFocusedElement(): HTMLElement {\n    return <HTMLElement>this.winRef.document.activeElement;\n  }\n\n  updateChosenWord(chosenWord: string): void {\n    this.chosenWord = chosenWord;\n  }\n\n  private getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  // Focus on previous item in results list\n  focusPreviousChild(event: UIEvent) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  // Focus on next item in results list\n  focusNextChild(event: UIEvent) {\n    this.open();\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a single product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    if (!query || query.trim().length === 0) {\n      return;\n    }\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  preventDefault(ev: UIEvent): void {\n    ev.preventDefault();\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n\n    // Use Timeout to run after blur event to prevent the searchbox from closing on mobile\n    setTimeout(() => {\n      // Retain focus on input lost by clicking on icon\n      el.focus();\n      this.ignoreCloseEvent = false;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div [attr.aria-label]=\"'searchBox.productSearch' | cxTranslate\" role=\"search\">\n  <label class=\"searchbox\" [class.dirty]=\"!!searchInput.value\">\n    <input\n      #searchInput\n      [placeholder]=\"'searchBox.placeholder' | cxTranslate\"\n      autocomplete=\"off\"\n      aria-describedby=\"initialDescription\"\n      aria-controls=\"results\"\n      [attr.aria-label]=\"'searchBox.placeholder' | cxTranslate\"\n      (focus)=\"open()\"\n      (click)=\"open()\"\n      (input)=\"search(searchInput.value)\"\n      (blur)=\"close($any($event))\"\n      (keydown.escape)=\"close($any($event))\"\n      (keydown.enter)=\"\n        close($any($event), true);\n        launchSearchResult($any($event), searchInput.value);\n        updateChosenWord(searchInput.value)\n      \"\n      (keydown.arrowup)=\"focusPreviousChild($any($event))\"\n      (keydown.arrowdown)=\"focusNextChild($any($event))\"\n      value=\"{{ chosenWord }}\"\n    />\n\n    <button\n      [attr.aria-label]=\"'common.reset' | cxTranslate\"\n      (mousedown)=\"clear(searchInput)\"\n      (keydown.enter)=\"clear(searchInput)\"\n      class=\"reset\"\n    >\n      <cx-icon [type]=\"iconTypes.RESET\"></cx-icon>\n    </button>\n\n    <div role=\"presentation\" class=\"search-icon\">\n      <cx-icon [type]=\"iconTypes.SEARCH\"></cx-icon>\n    </div>\n\n    <button\n      [attr.aria-label]=\"'common.search' | cxTranslate\"\n      class=\"search\"\n      (click)=\"open()\"\n    >\n      <cx-icon [type]=\"iconTypes.SEARCH\"></cx-icon>\n    </button>\n  </label>\n</div>\n\n<div\n  *ngIf=\"results$ | async as result\"\n  class=\"results\"\n  id=\"results\"\n  (click)=\"close($any($event), true)\"\n  role=\"dialog\"\n>\n  <div\n    *ngIf=\"result.message\"\n    class=\"message\"\n    [innerHTML]=\"result.message\"\n  ></div>\n\n  <ul\n    class=\"suggestions\"\n    attr.aria-label=\"{{ 'searchBox.ariaLabelSuggestions' | cxTranslate }}\"\n    role=\"listbox\"\n  >\n    <li *ngFor=\"let suggestion of result.suggestions\">\n      <a\n        role=\"option\"\n        [innerHTML]=\"suggestion | cxHighlight: searchInput.value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'search',\n            params: { query: suggestion }\n          } | cxUrl\n        \"\n        (keydown.arrowup)=\"focusPreviousChild($any($event))\"\n        (keydown.arrowdown)=\"focusNextChild($any($event))\"\n        (keydown.enter)=\"close($any($event), true)\"\n        (keydown.escape)=\"close($any($event), true)\"\n        (blur)=\"close($event)\"\n        (mousedown)=\"preventDefault($event)\"\n        (click)=\"\n          dispatchSuggestionEvent({\n            freeText: searchInput.value,\n            selectedSuggestion: suggestion,\n            searchSuggestions: result.suggestions ?? []\n          });\n          updateChosenWord(suggestion)\n        \"\n      >\n      </a>\n    </li>\n  </ul>\n\n  <ul\n    class=\"products\"\n    *ngIf=\"result.products\"\n    attr.aria-label=\"{{ 'searchBox.ariaLabelProducts' | cxTranslate }}\"\n    role=\"listbox\"\n  >\n    <li *ngFor=\"let product of result.products\">\n      <a\n        role=\"option\"\n        [routerLink]=\"\n          {\n            cxRoute: 'product',\n            params: product\n          } | cxUrl\n        \"\n        [class.has-media]=\"config.displayProductImages\"\n        (keydown.arrowup)=\"focusPreviousChild($any($event))\"\n        (keydown.arrowdown)=\"focusNextChild($any($event))\"\n        (keydown.enter)=\"close($any($event), true)\"\n        (keydown.escape)=\"close($any($event), true)\"\n        (blur)=\"close($any($event))\"\n        (mousedown)=\"preventDefault($event)\"\n        (click)=\"\n          dispatchProductEvent({\n            freeText: searchInput.value,\n            productCode: product.code\n          })\n        \"\n      >\n        <cx-media\n          *ngIf=\"config.displayProductImages\"\n          [container]=\"product.images?.PRIMARY\"\n          format=\"thumbnail\"\n          role=\"presentation\"\n        ></cx-media>\n        <div class=\"name\" [innerHTML]=\"product.nameHtml\"></div>\n        <span class=\"price\">{{ product.price?.formattedValue }}</span>\n      </a>\n    </li>\n  </ul>\n  <span id=\"initialDescription\" class=\"cx-visually-hidden\">\n    {{ 'searchBox.initialDescription' | cxTranslate }}\n  </span>\n  <div\n    *ngIf=\"result.suggestions?.length || result.products?.length\"\n    aria-live=\"assertive\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'searchBox.suggestionsResult'\n        | cxTranslate: { count: result.suggestions?.length }\n    }}\n    {{\n      'searchBox.productsResult'\n        | cxTranslate: { count: result.products?.length }\n    }}\n    {{ 'searchBox.initialDescription' | cxTranslate }}\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  exports: [SearchBoxComponent, HighlightPipe],\n})\nexport class SearchBoxModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './highlight.pipe';\nexport * from './search-box-component.service';\nexport * from './search-box.component';\nexport * from './search-box.events';\nexport * from './search-box.model';\nexport * from './search-box.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport {\n  WindowRef,\n  CmsScrollToTopComponent,\n  ScrollBehavior,\n} from '@spartacus/core';\nimport { take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { SelectFocusUtility } from '../../../layout/a11y/index';\n\n@Component({\n  selector: 'cx-scroll-to-top',\n  templateUrl: './scroll-to-top.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScrollToTopComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @HostBinding('class.display')\n  display: boolean | undefined;\n\n  protected window: Window | undefined = this.winRef.nativeWindow;\n  protected scrollBehavior: ScrollBehavior = ScrollBehavior.SMOOTH;\n  protected displayThreshold: number = (this.window?.innerHeight ?? 400) / 2;\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll(): void {\n    if (this.window) {\n      this.display = this.window.scrollY > this.displayThreshold;\n    }\n  }\n\n  constructor(\n    protected winRef: WindowRef,\n    protected componentData: CmsComponentData<CmsScrollToTopComponent>,\n    protected selectFocusUtility: SelectFocusUtility\n  ) {}\n\n  ngOnInit(): void {\n    this.setConfig();\n  }\n\n  protected setConfig(): void {\n    this.componentData.data$.pipe(take(1)).subscribe((data) => {\n      this.scrollBehavior = data.scrollBehavior ?? this.scrollBehavior;\n      this.displayThreshold = data.displayThreshold ?? this.displayThreshold;\n    });\n  }\n\n  /**\n   * Scroll back to the top of the page and set focus on top most focusable element.\n   */\n  scrollToTop(): void {\n    // Focus first focusable element within the html body\n    this.selectFocusUtility\n      .findFirstFocusable(this.winRef.document.body, { autofocus: '' })\n      ?.focus();\n\n    this.window?.scrollTo({\n      top: 0,\n      behavior: this.scrollBehavior,\n    });\n  }\n}\n","<button\n  [attr.aria-label]=\"'navigation.scrollToTop' | cxTranslate\"\n  class=\"cx-scroll-to-top-btn\"\n  (click)=\"scrollToTop()\"\n>\n  <span aria-hidden=\"true\">\n    <cx-icon class=\"caret-up-icon\" [type]=\"iconTypes.CARET_UP\"></cx-icon>\n  </span>\n</button>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { I18nModule, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { ScrollToTopComponent } from './scroll-to-top.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ScrollToTopComponent: {\n          component: ScrollToTopComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ScrollToTopComponent],\n  exports: [ScrollToTopComponent],\n})\nexport class ScrollToTopModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './breadcrumb/breadcrumb.component';\nexport * from './breadcrumb/breadcrumb.module';\nexport * from './category-navigation/category-navigation.component';\nexport * from './category-navigation/category-navigation.module';\nexport * from './footer-navigation/footer-navigation.component';\nexport * from './footer-navigation/footer-navigation.module';\nexport * from './navigation/navigation-node.model';\nexport * from './navigation/navigation-ui.component';\nexport * from './navigation/navigation.component';\nexport * from './navigation/navigation.module';\nexport * from './navigation/navigation.service';\nexport * from './page-header/page-title.component';\nexport * from './page-header/page-title.module';\nexport * from './search-box/index';\nexport * from './scroll-to-top/scroll-to-top.component';\nexport * from './scroll-to-top/scroll-to-top.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  isNotUndefined,\n  Product,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(isNotUndefined),\n      map((product: Product) => this.convertProduct(product))\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RouterState,\n  RoutingService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, using } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\nimport { ViewConfig } from '../../../../shared/config/view-config';\nimport { ProductListRouteParams, SearchCriteria } from './product-list.model';\n\n/**\n * The `ProductListComponentService` is used to search products. The service is used\n * on the Product Listing Page, for listing products and the facet navigation.\n *\n * The service exposes the product search results based on the category and search\n * route parameters. The route parameters are used to query products by the help of\n * the `ProductSearchService`.\n */\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router,\n    protected config: ViewConfig\n  ) {}\n\n  /**\n   * Emits the search results for the current search query.\n   *\n   * The `searchResults$` is _not_ concerned with querying, it only observes the\n   * `productSearchService.getResults()`\n   */\n  protected searchResults$: Observable<ProductSearchPage> =\n    this.productSearchService\n      .getResults()\n      .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\n\n  /**\n   * Observes the route and performs a search on each route change.\n   *\n   * Context changes, such as language and currencies are also taken\n   * into account, so that the search is performed again.\n   */\n  protected searchByRouting$: Observable<ActivatedRouterStateSnapshot> =\n    combineLatest([\n      this.routing.getRouterState().pipe(\n        distinctUntilChanged((x, y) => {\n          // router emits new value also when the anticipated `nextState` changes\n          // but we want to perform search only when current url changes\n          return x.state.url === y.state.url;\n        })\n      ),\n      ...this.siteContext,\n    ]).pipe(\n      debounceTime(0),\n      map(([routerState, ..._context]) => (routerState as RouterState).state),\n      tap((state: ActivatedRouterStateSnapshot) => {\n        const criteria = this.getCriteriaFromRoute(\n          state.params,\n          state.queryParams\n        );\n        this.search(criteria);\n      })\n    );\n\n  /**\n   * This stream is used for the Product Listing and Product Facets.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = using(\n    () => this.searchByRouting$.subscribe(),\n    () => this.searchResults$\n  ).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n\n  /**\n   * Expose the `SearchCriteria`. The search criteria are driven by the route parameters.\n   *\n   * This search route configuration is not yet configurable\n   * (see https://github.com/SAP/spartacus/issues/7191).\n   */\n  protected getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.config.view?.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  /**\n   * Resolves the search query from the given `ProductListRouteParams`.\n   */\n  protected getQueryFromRouteParams({\n    query,\n    categoryCode,\n    brandCode,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\n    }\n\n    // TODO: drop support for brands as they should be treated\n    // similarly as any category.\n    if (brandCode) {\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\n    }\n  }\n\n  /**\n   * Performs a search based on the given search criteria.\n   *\n   * The search is delegated to the `ProductSearchService`.\n   */\n  protected search(criteria: SearchCriteria): void {\n    const currentPage = criteria.currentPage;\n    const pageSize = criteria.pageSize;\n    const sort = criteria.sortCode;\n\n    this.productSearchService.search(\n      criteria.query,\n      // TODO: consider dropping this complex passing of cleaned object\n      Object.assign(\n        {},\n        currentPage && { currentPage },\n        pageSize && { pageSize },\n        sort && { sort }\n      )\n    );\n  }\n\n  /**\n   * Get items from a given page without using navigation\n   */\n  getPageItems(pageNumber: number): void {\n    this.routing\n      .getRouterState()\n      .subscribe((route) => {\n        const routeCriteria = this.getCriteriaFromRoute(\n          route.state.params,\n          route.state.queryParams\n        );\n        const criteria = {\n          ...routeCriteria,\n          currentPage: pageNumber,\n        };\n        this.search(criteria);\n      })\n      .unsubscribe();\n  }\n\n  /**\n   * Sort the search results by the given sort code.\n   */\n  sort(sortCode: string): void {\n    this.route({ sortCode });\n  }\n\n  /**\n   * Routes to the next product listing page, using the given `queryParams`. The\n   * `queryParams` support sorting, pagination and querying.\n   *\n   * The `queryParams` are delegated to the Angular router `NavigationExtras`.\n   */\n  protected route(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  /**\n   * The site context is used to update the search query in case of a\n   * changing context. The context will typically influence the search data.\n   *\n   * We keep this private for now, as we're likely refactoring this in the next\n   * major version.\n   */\n  private get siteContext(): Observable<string>[] {\n    // TODO: we should refactor this so that custom context will be taken\n    // into account automatically. Ideally, we drop the specific context\n    // from the constructor, and query a ContextService for all contexts.\n\n    return [this.languageService.getActive(), this.currencyService.getActive()];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<ViewModes>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode?.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    }\n    return this.iconTypes.LIST;\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","<button\n  class=\"btn cx-product-layout\"\n  [ngClass]=\"buttonClass\"\n  (click)=\"changeMode()\"\n  tabindex=\"0\"\n  attr.aria-label=\"{{\n    viewMode === iconTypes.GRID\n      ? ('productView.gridView' | cxTranslate)\n      : viewMode === iconTypes.LIST\n      ? ('productView.listView' | cxTranslate)\n      : null\n  }}\"\n>\n  <cx-icon\n    *ngIf=\"viewMode === iconTypes.GRID\"\n    [type]=\"iconTypes.GRID\"\n  ></cx-icon>\n  <cx-icon\n    *ngIf=\"viewMode === iconTypes.LIST\"\n    [type]=\"iconTypes.LIST\"\n  ></cx-icon>\n</button>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\nexport enum ProductListOutlets {\n  ITEM_ACTIONS = 'cx-product-list-item.actions',\n  ITEM_DETAILS = 'cx-product-list-item.details',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Context for `ProductListItemComponent`.\n */\n@Injectable()\nexport abstract class ProductListItemContext {\n  readonly product$: Observable<Product>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { ReplaySubject } from 'rxjs';\nimport { ProductListItemContext } from './product-list-item-context.model';\n\n/**\n * Context source for `ProductListItemComponent`.\n *\n * `ProductListItemContext` should be injected instead in child components.\n */\n@Injectable()\nexport class ProductListItemContextSource extends ProductListItemContext {\n  readonly product$ = new ReplaySubject<Product>(1);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { ProductListOutlets } from '../../product-outlets.model';\nimport { ProductListItemContextSource } from '../model/product-list-item-context-source.model';\nimport { ProductListItemContext } from '../model/product-list-item-context.model';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ProductListItemContextSource,\n    {\n      provide: ProductListItemContext,\n      useExisting: ProductListItemContextSource,\n    },\n  ],\n})\nexport class ProductListItemComponent implements OnChanges {\n  readonly ProductListOutlets = ProductListOutlets;\n  @Input() product: any;\n\n  constructor(\n    protected productListItemContextSource: ProductListItemContextSource\n  ) {}\n\n  ngOnChanges(changes?: SimpleChanges): void {\n    if (changes?.product) {\n      this.productListItemContextSource.product$.next(this.product);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12 col-md-4\">\n    <a\n      [attr.aria-label]=\"\n        !product.images?.hasOwnProperty('PRIMARY')\n          ? ('productDetails.noProductImage'\n            | cxTranslate: { product: product.name })\n          : undefined\n      \"\n      [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n      class=\"cx-product-image-container\"\n    >\n      <cx-media\n        class=\"cx-product-image\"\n        [container]=\"product.images?.PRIMARY\"\n        format=\"product\"\n        [alt]=\"product.name || product.summary\"\n      ></cx-media>\n    </a>\n  </div>\n  <div class=\"col-12 col-md-8\">\n    <a\n      [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n      class=\"cx-product-name\"\n    >\n      <h2 [innerHtml]=\"product.nameHtml\"></h2>\n    </a>\n\n    <ng-template [cxOutlet]=\"ProductListOutlets.ITEM_DETAILS\">\n      <cx-star-rating\n        *ngIf=\"product.averageRating\"\n        [rating]=\"product?.averageRating\"\n      ></cx-star-rating>\n      <div *ngIf=\"!product.averageRating\" class=\"cx-product-no-review\">\n        {{ 'productDetails.noReviews' | cxTranslate }}\n      </div>\n      <div\n        class=\"cx-product-price\"\n        [attr.aria-label]=\"'productDetails.productPrice' | cxTranslate\"\n      >\n        {{ product.price?.formattedValue }}\n      </div>\n    </ng-template>\n\n    <div class=\"row\">\n      <div class=\"col-12 col-md-7 col-xl-7\">\n        <p class=\"cx-product-summary\" [innerHtml]=\"product.summary\">\n          {{ product.summary }}\n        </p>\n      </div>\n      <div class=\"col-12 col-md-5 col-xl-5\">\n        <ng-template [cxOutlet]=\"ProductListOutlets.ITEM_ACTIONS\">\n          <ng-container cxInnerComponentsHost></ng-container>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { ProductListOutlets } from '../../product-outlets.model';\nimport { ProductListItemContextSource } from '../model/product-list-item-context-source.model';\nimport { ProductListItemContext } from '../model/product-list-item-context.model';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ProductListItemContextSource,\n    {\n      provide: ProductListItemContext,\n      useExisting: ProductListItemContextSource,\n    },\n  ],\n})\nexport class ProductGridItemComponent implements OnChanges {\n  readonly ProductListOutlets = ProductListOutlets;\n  @Input() product: any;\n\n  constructor(\n    protected productListItemContextSource: ProductListItemContextSource\n  ) {}\n\n  ngOnChanges(changes?: SimpleChanges): void {\n    if (changes?.product) {\n      this.productListItemContextSource.product$.next(this.product);\n    }\n  }\n}\n","<a\n  [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n  class=\"cx-product-image-container\"\n  tabindex=\"-1\"\n>\n  <cx-media\n    class=\"cx-product-image\"\n    [container]=\"product.images?.PRIMARY\"\n    format=\"product\"\n    [alt]=\"product.summary\"\n  ></cx-media>\n</a>\n<a\n  [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n  class=\"cx-product-name\"\n  [innerHTML]=\"product.nameHtml\"\n></a>\n\n<ng-template [cxOutlet]=\"ProductListOutlets.ITEM_DETAILS\">\n  <div class=\"cx-product-rating\">\n    <cx-star-rating\n      *ngIf=\"product.averageRating\"\n      [rating]=\"product?.averageRating\"\n    ></cx-star-rating>\n    <div *ngIf=\"!product.averageRating\">\n      {{ 'productDetails.noReviews' | cxTranslate }}\n    </div>\n  </div>\n  <div class=\"cx-product-price-container\">\n    <div\n      class=\"cx-product-price\"\n      [attr.aria-label]=\"'productDetails.productPrice' | cxTranslate\"\n    >\n      {{ product.price?.formattedValue }}\n    </div>\n  </div>\n</ng-template>\n\n<ng-template [cxOutlet]=\"ProductListOutlets.ITEM_ACTIONS\">\n  <ng-container cxInnerComponentsHost></ng-container>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectorRef, Component, Input, OnDestroy } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { ViewConfig } from '../../../../../shared/config/view-config';\nimport { ViewModes } from '../../product-view/product-view.component';\nimport { ProductListComponentService } from '../product-list-component.service';\n\n@Component({\n  selector: 'cx-product-scroll',\n  templateUrl: './product-scroll.component.html',\n})\nexport class ProductScrollComponent implements OnDestroy {\n  private subscription = new Subscription();\n\n  @Input('scrollConfig')\n  set setConfig(inputConfig: ViewConfig) {\n    this.setComponentConfigurations(inputConfig);\n  }\n\n  model: ProductSearchPage;\n  @Input('model')\n  set setModel(inputModel: ProductSearchPage) {\n    this.infiniteScrollOperations(inputModel);\n  }\n\n  inputViewMode: ViewModes;\n  @Input('inputViewMode')\n  set setViewMode(inputViewMode: ViewModes) {\n    this.inputViewMode = inputViewMode;\n    //If viewMode is already set (meaning it is not the first load)\n    //Reset the product list\n    if (this.viewMode) {\n      this.resetListOnViewModeChange();\n    } else {\n      //If viewMode is not set (meaning it is the first load)\n      //Set the viewMode\n      this.viewMode = inputViewMode;\n    }\n  }\n\n  viewMode: ViewModes;\n  productLimit: number | undefined;\n  maxProducts: number | undefined;\n\n  ViewModes = ViewModes;\n  appendProducts = false;\n  resetList = false;\n  isMaxProducts = false;\n  isLastPage = false;\n  isEmpty = false;\n\n  constructor(\n    private productListComponentService: ProductListComponentService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  scrollPage(pageNumber: number): void {\n    this.appendProducts = true;\n    this.ref.markForCheck();\n    this.productListComponentService.getPageItems(pageNumber);\n  }\n\n  loadNextPage(pageNumber: number): void {\n    this.isMaxProducts = false;\n    this.scrollPage(pageNumber);\n  }\n\n  scrollToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\n    const isButton = scrollConfig.view?.infiniteScroll?.showMoreButton;\n    const configProductLimit = scrollConfig.view?.infiniteScroll?.productLimit;\n\n    //Display \"show more\" button every time when button configuration is true\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\n    this.productLimit = isButton ? 1 : configProductLimit;\n  }\n\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\n    if (this.appendProducts) {\n      this.model = {\n        ...inputModel,\n        products: this.model.products?.concat(inputModel.products ?? []),\n      };\n    } else {\n      this.model = inputModel;\n      this.maxProducts = this.productLimit;\n    }\n    this.setConditions();\n    this.ref.markForCheck();\n  }\n\n  private resetListOnViewModeChange(): void {\n    this.scrollToTop();\n    this.resetList = true;\n    this.productListComponentService.getPageItems(0);\n  }\n\n  //Set booleans after model has been retrieved\n  private setConditions(): void {\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\n\n    this.isLastPage =\n      this.model.pagination?.currentPage ===\n      (this.model.pagination?.totalPages ?? 0) - 1;\n\n    if (this.model.products) {\n      this.isMaxProducts =\n        this.productLimit !== undefined &&\n        this.productLimit !== 0 &&\n        this.model.products.length >= (this.maxProducts ?? 0);\n\n      //Add the productLimit to the current number of products to determine the next max number of products\n      if (this.isMaxProducts) {\n        this.maxProducts =\n          this.model.products.length + (this.productLimit ?? 0);\n      }\n    }\n\n    //Only change viewMode once the new model is set\n    //This prevents flickering issues\n    if (this.viewMode !== this.inputViewMode) {\n      this.viewMode = this.inputViewMode;\n    }\n\n    this.resetList = false;\n    this.appendProducts = false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"viewMode === ViewModes.Grid\">\n  <div\n    infiniteScroll\n    [infiniteScrollDistance]=\"5\"\n    [infiniteScrollThrottle]=\"50\"\n    [infiniteScrollDisabled]=\"isMaxProducts || isLastPage || isEmpty\"\n    (scrolled)=\"scrollPage((model?.pagination?.currentPage ?? 0) + 1)\"\n  >\n    <div class=\"row\">\n      <cx-product-grid-item\n        *ngFor=\"let product of model?.products\"\n        [product]=\"product\"\n        class=\"col-12 col-sm-6 col-md-4\"\n      ></cx-product-grid-item>\n    </div>\n    <div\n      [className]=\"\n        !isLastPage && (model?.pagination?.currentPage ?? 0) > 0\n          ? 'cx-double-btn-container grid-btn-padding'\n          : 'cx-single-btn-container grid-btn-padding'\n      \"\n    >\n      <div\n        *ngIf=\"\n          (isMaxProducts || isLastPage) &&\n          (model?.pagination?.currentPage ?? 0) > 0\n        \"\n        (click)=\"scrollToTop()\"\n        class=\"btn btn-block btn-secondary\"\n      >\n        {{ 'productList.backToTopBtn' | cxTranslate }}\n      </div>\n      <div\n        *ngIf=\"isMaxProducts && !isLastPage\"\n        (click)=\"loadNextPage((model?.pagination?.currentPage ?? 0) + 1)\"\n        class=\"btn btn-block btn-secondary align-btn\"\n      >\n        {{ 'productList.showMoreBtn' | cxTranslate }}\n      </div>\n    </div>\n    <div *ngIf=\"appendProducts\" class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"viewMode === ViewModes.List\">\n  <div\n    infiniteScroll\n    [infiniteScrollDistance]=\"3\"\n    [infiniteScrollThrottle]=\"50\"\n    [infiniteScrollDisabled]=\"isMaxProducts || isLastPage || isEmpty\"\n    (scrolled)=\"scrollPage((model?.pagination?.currentPage ?? 0) + 1)\"\n  >\n    <cx-product-list-item\n      *ngFor=\"let product of model?.products\"\n      [product]=\"product\"\n      class=\"cx-product-search-list\"\n    ></cx-product-list-item>\n    <div\n      [className]=\"\n        !isLastPage && (model?.pagination?.currentPage ?? 0) > 0\n          ? 'cx-double-btn-container'\n          : 'cx-single-btn-container'\n      \"\n    >\n      <div\n        *ngIf=\"\n          (isMaxProducts || isLastPage) &&\n          (model?.pagination?.currentPage ?? 0) > 0\n        \"\n        (click)=\"scrollToTop()\"\n        class=\"btn btn-block btn-secondary\"\n      >\n        {{ 'productList.backToTopBtn' | cxTranslate }}\n      </div>\n      <div\n        *ngIf=\"isMaxProducts && !isLastPage\"\n        (click)=\"loadNextPage((model?.pagination?.currentPage ?? 0) + 1)\"\n        class=\"btn btn-block btn-secondary align-btn\"\n      >\n        {{ 'productList.showMoreBtn' | cxTranslate }}\n      </div>\n    </div>\n    <div *ngIf=\"appendProducts\" class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  ProductSearchPage,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, skip, take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewConfig } from '../../../../shared/config/view-config';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  isInfiniteScroll: boolean | undefined;\n\n  model$: Observable<ProductSearchPage> =\n    this.productListComponentService.model$;\n\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService,\n    private globalMessageService: GlobalMessageService,\n    public scrollConfig: ViewConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.isInfiniteScroll = this.scrollConfig.view?.infiniteScroll?.active;\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$\n        .pipe(take(1))\n        .subscribe((template) => {\n          this.viewMode$.next(\n            template === 'ProductGridPageTemplate'\n              ? ViewModes.Grid\n              : ViewModes.List\n          );\n        })\n    );\n\n    this.subscription.add(\n      combineLatest([this.model$, this.viewMode$])\n        .pipe(\n          skip(1),\n          filter(([model, mode]) => !!model && !!mode)\n        )\n        .subscribe(() =>\n          this.globalMessageService.add(\n            { key: 'sorting.pageViewUpdated' },\n            GlobalMessageType.MSG_TYPE_ASSISTIVE,\n            500\n          )\n        )\n    );\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"cx-page\" *ngIf=\"model$ | async as model\">\n  <section\n    tabindex=\"-1\"\n    class=\"cx-page-section\"\n    [attr.aria-label]=\"'productList.productListResults' | cxTranslate\"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\" *ngIf=\"viewMode$ | async as viewMode\">\n          <div class=\"cx-sorting top\">\n            <div class=\"row\">\n              <label\n                class=\"form-group cx-sort-dropdown col-12 col-lg-4 mr-auto\"\n              >\n                <span>{{ 'productList.sortBy' | cxTranslate }}</span>\n                <cx-sorting\n                  [sortOptions]=\"model.sorts\"\n                  (sortListEvent)=\"sortList($event)\"\n                  [selectedOption]=\"model.pagination?.sort\"\n                  [ariaLabel]=\"'productList.sortResults' | cxTranslate\"\n                  ariaControls=\"product-results-list\"\n                  placeholder=\"{{ 'productList.sortBy' | cxTranslate }}\"\n                ></cx-sorting>\n              </label>\n              <div *ngIf=\"!isInfiniteScroll\" class=\"col-auto\">\n                <div\n                  class=\"cx-pagination\"\n                  [attr.aria-label]=\"\n                    'productList.productSearchPagination' | cxTranslate\n                  \"\n                >\n                  <cx-pagination\n                    [pagination]=\"model.pagination\"\n                    queryParam=\"currentPage\"\n                    [defaultPage]=\"0\"\n                  ></cx-pagination>\n                </div>\n              </div>\n              <div class=\"col-auto ml-auto ml-lg-0\">\n                <cx-product-view\n                  (modeChange)=\"setViewMode($event)\"\n                  [mode]=\"viewMode\"\n                ></cx-product-view>\n              </div>\n            </div>\n          </div>\n          <div id=\"product-results-list\" class=\"cx-product-container\">\n            <!-- Product list when using pagination -->\n            <ng-container *ngIf=\"!isInfiniteScroll; else infiniteScroll\">\n              <ng-container *ngIf=\"viewMode === ViewModes.Grid\">\n                <div class=\"row\">\n                  <cx-product-grid-item\n                    *ngFor=\"let product of model?.products\"\n                    [product]=\"product\"\n                    class=\"col-12 col-sm-6 col-md-4\"\n                  ></cx-product-grid-item>\n                </div>\n              </ng-container>\n\n              <ng-container *ngIf=\"viewMode === ViewModes.List\">\n                <cx-product-list-item\n                  *ngFor=\"let product of model?.products\"\n                  [product]=\"product\"\n                  class=\"cx-product-search-list\"\n                ></cx-product-list-item>\n              </ng-container>\n            </ng-container>\n\n            <!-- Product list when using infinite scroll -->\n            <ng-template #infiniteScroll>\n              <cx-product-scroll\n                [scrollConfig]=\"scrollConfig\"\n                [model]=\"model\"\n                [inputViewMode]=\"viewMode\"\n              ></cx-product-scroll>\n            </ng-template>\n          </div>\n          <div class=\"cx-sorting bottom\">\n            <div class=\"row\">\n              <label\n                class=\"form-group cx-sort-dropdown col-12 col-lg-4 mr-auto\"\n              >\n                <span>{{ 'productList.sortBy' | cxTranslate }}</span>\n                <cx-sorting\n                  [sortOptions]=\"model.sorts\"\n                  (sortListEvent)=\"sortList($event)\"\n                  [selectedOption]=\"model.pagination?.sort\"\n                  [ariaLabel]=\"'productList.sortResults' | cxTranslate\"\n                  ariaControls=\"product-results-list\"\n                  placeholder=\"{{ 'productList.sortBy' | cxTranslate }}\"\n                ></cx-sorting>\n              </label>\n              <div\n                *ngIf=\"!isInfiniteScroll\"\n                class=\"col-auto\"\n                [attr.aria-label]=\"\n                  'productList.productSearchPagination' | cxTranslate\n                \"\n              >\n                <div class=\"cx-pagination\">\n                  <cx-pagination\n                    [pagination]=\"model.pagination\"\n                    queryParam=\"currentPage\"\n                    [defaultPage]=\"0\"\n                  ></cx-pagination>\n                </div>\n              </div>\n              <div class=\"col-auto ml-auto ml-lg-0\">\n                <cx-product-view\n                  (modeChange)=\"setViewMode($event)\"\n                  [mode]=\"viewMode\"\n                ></cx-product-view>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-list-component.service';\nexport * from './product-list.component';\nexport * from './product-list.model';\nexport * from './product-scroll/product-scroll.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-list-item-context-source.model';\nexport * from './product-list-item-context.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Breadcrumb, Facet } from '@spartacus/core';\n\n/**\n * UI model that holds the full list of facet and active facets for\n * the product list.\n */\nexport interface FacetList {\n  facets: Facet[];\n  activeFacets?: Breadcrumb[];\n}\n\nexport interface FacetCollapseState {\n  /**\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\n   * Whether the toggle results in an expanded or collapsed state, depends on the\n   * experience, which is controlled in CSS.\n   */\n  toggled?: FacetGroupCollapsedState;\n\n  /**\n   * The top number of facet values that will be visible.\n   */\n  topVisible?: number;\n\n  /**\n   * The max number of facet values which will be visible. This includes\n   * the top visible number.\n   */\n  maxVisible?: number;\n}\n\nexport enum FacetGroupCollapsedState {\n  EXPANDED = 'EXPANDED',\n  COLLAPSED = 'COLLAPSED',\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  Breadcrumb,\n  PageType,\n  ProductSearchPage,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\nimport { ProductListComponentService } from '../../container/product-list-component.service';\nimport { FacetList } from '../facet.model';\n\n/**\n * Provides access to all the facets and active facets for the Product Listing Page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductFacetService {\n  constructor(\n    protected routing: RoutingService,\n    protected productListComponentService: ProductListComponentService\n  ) {}\n\n  protected readonly routeState$ = this.routing\n    .getRouterState()\n    .pipe(pluck('state'));\n\n  /**\n   * Returns the search results for the current page.\n   */\n  protected readonly searchResult$: Observable<ProductSearchPage> =\n    this.routeState$.pipe(\n      switchMap((state) =>\n        this.productListComponentService.model$.pipe(\n          filter((page) => this.filterForPage(state, page)),\n          map((page) => ({\n            ...page,\n            breadcrumbs: this.filterBreadcrumbs(\n              page?.breadcrumbs ?? [],\n              state.params\n            ),\n          }))\n        )\n      )\n    );\n\n  /**\n   * Observes the facets and active facets for the given page. The facet data\n   * is provided in a `FacetList`.\n   */\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\n    map(\n      (result: ProductSearchPage) =>\n        ({\n          facets: result.facets,\n          activeFacets: result.breadcrumbs,\n        } as FacetList)\n    )\n  );\n\n  /**\n   * Filters the current result by verifying if the result is related to the page.\n   * This is done to avoid a combination of the next page and the current search results.\n   */\n  protected filterForPage(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): boolean {\n    if (!page.currentQuery?.query?.value) {\n      return false;\n    }\n    if (state.context.type === PageType.CATEGORY_PAGE) {\n      return (\n        page.currentQuery.query.value.indexOf(\n          `allCategories:${state.context.id}`\n        ) > -1\n      );\n    }\n\n    if (\n      state.context.type === PageType.CONTENT_PAGE &&\n      state.context.id === 'search'\n    ) {\n      return page.freeTextSearch === state.params.query.split(':')[0];\n    }\n    return false;\n  }\n\n  /**\n   * Filter breadcrumbs which are not actively selected but coming from\n   * the route navigation.\n   *\n   * The breadcrumbs might include the active category page code, which is not actively\n   * selected by the user.\n   */\n  protected filterBreadcrumbs(\n    breadcrumbs: Breadcrumb[],\n    params: Params\n  ): Breadcrumb[] {\n    return breadcrumbs\n      ? breadcrumbs.filter(\n          (breadcrumb) =>\n            !(\n              breadcrumb.facetCode === 'allCategories' &&\n              (breadcrumb.facetValueCode === params.categoryCode ||\n                breadcrumb.facetValueCode === params.brandCode)\n            )\n        )\n      : [];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpUrlEncodingCodec } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {\n  FacetCollapseState,\n  FacetGroupCollapsedState,\n  FacetList,\n} from '../facet.model';\nimport { ProductFacetService } from './product-facet.service';\n\n/**\n * Provides access to the facets as well as their UI state. The UI state\n * represents user related changes on the facets, such as expanding or\n * collapsing a facet group or expanding the number of _visible_ facet values.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacetService {\n  /**\n   * An internal map where we keep the UI state of the facets.\n   */\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\n\n  protected readonly codec = new HttpUrlEncodingCodec();\n\n  constructor(protected productFacetService: ProductFacetService) {}\n\n  /**\n   * Observes the facets for the given page and configures the initial UI state.\n   *\n   * Facets are configured on each emission so that we keep the facet UI state.\n   * This is mainly done to keep the state during usage of the facet, but also\n   * benefitial when the facets are rebuild while using them.\n   */\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\n    tap((facetList) => {\n      facetList.facets?.forEach((facet) => this.initialize(facet));\n    })\n  );\n\n  /**\n   * Returns the observed UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  getState(facet: Facet): Observable<FacetCollapseState> {\n    this.initialize(facet);\n    return facet.name ? this.facetState.get(facet.name) ?? of({}) : of({});\n  }\n\n  /**\n   * Returns the UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\n  }\n\n  /**\n   * Toggles the facet expanded state. If the expanded state becomes false,\n   * the visible values will decrease to the top values only.\n   *\n   * If the optional value argument is provided the expanded state will be set\n   * to this value, regardless of the current `expanded` state.\n   */\n  toggle(facet: Facet, isExpanded: boolean): void {\n    const state = this.getStateSnapshot(facet);\n\n    const toggledState = {\n      toggled: isExpanded\n        ? FacetGroupCollapsedState.COLLAPSED\n        : FacetGroupCollapsedState.EXPANDED,\n    } as FacetCollapseState;\n\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\n      toggledState.maxVisible = state.topVisible;\n    }\n\n    this.updateState(facet, toggledState);\n  }\n\n  /**\n   * Increases the visible values to the maximum values of the facet.\n   */\n  increaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.values?.length });\n  }\n\n  /**\n   * Decreases the visible values to the topValueCount.\n   *\n   * The topValueCount defaults to 6, but can be controlled in\n   * the backend as well.\n   */\n  decreaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.topValueCount });\n  }\n\n  /**\n   * Persists the facet state and initializes the default values for the top\n   * and max visible values.\n   */\n  protected initialize(facet: Facet): void {\n    const topFacets =\n      facet.topValueCount && facet.topValueCount > 0\n        ? facet.topValueCount\n        : facet.values?.length || 0;\n    if (facet.name && !this.hasState(facet)) {\n      this.facetState.set(\n        facet.name,\n        new BehaviorSubject({\n          topVisible: topFacets,\n          maxVisible: topFacets,\n        } as FacetCollapseState)\n      );\n    }\n  }\n\n  /**\n   * Updates the state of the facet in the local facet map.\n   */\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\n    const state = { ...this.getStateSnapshot(facet), ...property };\n    if (facet.name) {\n      this.facetState.get(facet.name)?.next(state);\n    }\n  }\n\n  protected hasState(facet: Facet): boolean {\n    if (facet.name) {\n      return this.facetState.has(facet.name);\n    }\n    return false;\n  }\n\n  getLinkParams(query: string): { [key: string]: string } {\n    return {\n      // to avoid encoding issues with facets that have space (' ') in their name,\n      // we replace the decoded '+' back to empty space ' '.\n      // For more, see https://github.com/SAP/spartacus/issues/7348\n      query: this.codec\n        .decodeValue(this.decodeUriComponentSafe(query))\n        .replace(/\\+/g, ' '),\n    };\n  }\n\n  protected decodeUriComponentSafe(query: string): string {\n    return query.replace(/%(?![0-9a-fA-F]{2})/g, '%25');\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { Breadcrumb } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FacetList } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n/**\n * Active facets render the applied facet values as a list of focusable buttons\n * which can be used to remove the applied facet value.\n */\n@Component({\n  selector: 'cx-active-facets',\n  templateUrl: './active-facets.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ActiveFacetsComponent {\n  @HostBinding('attr.role') role = 'group';\n  @HostBinding('attr.aria-labelledby') labelledby =\n    'cx-active-facets-groupName';\n\n  /** Active facets which are applied to the product results. */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  /** Configurable icon which is used for the active facet close button */\n  @Input() closeIcon = ICON_TYPE.CLOSE;\n\n  constructor(protected facetService: FacetService) {}\n\n  getLinkParams(facet: Breadcrumb) {\n    return this.facetService.getLinkParams(\n      facet.removeQuery?.query?.value ?? ''\n    );\n  }\n\n  /**\n   * The focus key is used to persist the focus on the facet when the DOM is being\n   * recreated. We only apply the focus key for the given _active_ facet when there\n   * the original facets is not available. This happens for non multi-valued facets.\n   *\n   * With this approach, the we keep the focus, either at the facet list or on the\n   * active facets.\n   */\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\n    return facetList.facets?.find((f) =>\n      f.values?.find((val) => val.name === facet.facetValueName)\n    )\n      ? ''\n      : facet.facetValueName;\n  }\n\n  /**\n   * Purpose of this function is to allow keyboard users to click on a filter they\n   * wish to remove by pressing spacebar. Event not handled natively by <a> elements.\n   *\n   * @param event spacebar keydown\n   */\n  removeFilterWithSpacebar(event?: Event): void {\n    event?.preventDefault(); // Avoid spacebar scroll\n    event?.target?.dispatchEvent(new MouseEvent('click', { cancelable: true }));\n  }\n}\n","<ng-container *ngIf=\"facetList$ | async as facetList\">\n  <div\n    id=\"cx-active-facets-groupName\"\n    *ngIf=\"facetList.activeFacets && facetList.activeFacets.length > 0\"\n  >\n    {{ 'productList.appliedFilter' | cxTranslate }}\n  </div>\n\n  <a\n    *ngFor=\"let facet of facetList?.activeFacets\"\n    routerLink=\"./\"\n    [queryParams]=\"getLinkParams(facet)\"\n    [cxFocus]=\"{ key: getFocusKey(facetList, facet) }\"\n    role=\"button\"\n    (keydown.space)=\"removeFilterWithSpacebar($event)\"\n    [attr.aria-label]=\"\n      'productList.activeFilter' | cxTranslate: { filter: facet.facetValueName }\n    \"\n  >\n    <span>{{ facet.facetValueName }}</span>\n    <cx-icon aria-hidden=\"true\" [type]=\"closeIcon\"></cx-icon>\n  </a>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ActiveFacetsComponent } from './active-facets.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [ActiveFacetsComponent],\n  exports: [ActiveFacetsComponent],\n})\nexport class ActiveFacetsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './active-facets.component';\nexport * from './active-facets.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { Facet, FacetValue } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\nimport { FacetCollapseState } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet',\n  templateUrl: './facet.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetComponent {\n  protected _facet: Facet;\n\n  state$: Observable<FacetCollapseState>;\n\n  /** configurable icon that is used to collapse the facet group  */\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\n\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\n\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\n\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\n\n  @Input()\n  set facet(value: Facet) {\n    this._facet = value;\n    this.isMultiSelect = !!value.multiSelect;\n    this.state$ = this.facetService.getState(value);\n  }\n\n  get facet(): Facet {\n    return this._facet;\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Handles clicking the heading of the facet group, which means toggling\n   * the visibility of the group (collapse / expand) and optionally focusing\n   * the group.\n   */\n  toggleGroup(event: UIEvent) {\n    const host: HTMLElement = this.elementRef.nativeElement;\n    const isLocked = this.keyboardFocus?.isLocked;\n\n    this.facetService.toggle(this.facet, this.isExpanded);\n\n    if (!isLocked || this.isExpanded) {\n      host.focus();\n      // we stop propagating the event as otherwise the focus on the host will trigger\n      // an unlock event from the LockFocus directive.\n      event.stopPropagation();\n    }\n  }\n\n  get isExpanded(): boolean {\n    return this.values?.first?.nativeElement.offsetParent !== null;\n  }\n\n  openLink(event: KeyboardEvent) {\n    (event.target as HTMLElement).click();\n    event.preventDefault();\n  }\n\n  /**\n   * Increases the number of visible values for the facet. This is delegated\n   * to `facetService.increaseVisibleValues`.\n   */\n  increaseVisibleValues(): void {\n    this.facetService.increaseVisibleValues(this.facet);\n  }\n\n  /**\n   * Decreases the number of visible values for the facet. This is delegated\n   * to `facetService.decreaseVisibleValues`.\n   */\n  decreaseVisibleValues(): void {\n    this.facetService.decreaseVisibleValues(this.facet);\n  }\n\n  getLinkParams(value: FacetValue) {\n    return this.facetService.getLinkParams(value.query?.query?.value ?? '');\n  }\n}\n","<ng-container *ngIf=\"state$ | async as state\">\n  <button\n    class=\"heading\"\n    (click)=\"toggleGroup($event)\"\n    [attr.aria-expanded]=\"isExpanded\"\n    [attr.aria-label]=\"\n      'productFacetNavigation.filterBy.name' | cxTranslate: { name: facet.name }\n    \"\n  >\n    {{ facet.name }}\n    <cx-icon class=\"collapse-icon\" [type]=\"collapseIcon\"></cx-icon>\n    <cx-icon class=\"expand-icon\" [type]=\"expandIcon\"></cx-icon>\n  </button>\n\n  <div>\n    <a\n      *ngFor=\"let value of facet.values | slice: 0:state.topVisible\"\n      #facetValue\n      routerLink=\"./\"\n      [queryParams]=\"getLinkParams(value)\"\n      class=\"value\"\n      [class.selected]=\"value.selected\"\n      [cxFocus]=\"{ key: value.name }\"\n      (keydown.space)=\"openLink($any($event))\"\n      [attr.role]=\"facet.multiSelect ? 'checkbox' : null\"\n      [attr.aria-checked]=\"facet.multiSelect ? value.selected : null\"\n      attr.aria-label=\"{{\n        'productFacetNavigation.ariaLabelItemsAvailable'\n          | cxTranslate: { name: value.name, count: value.count }\n      }}\"\n    >\n      <span aria-hidden=\"true\"\n        >{{ value.name\n        }}<span aria-hidden=\"true\" class=\"count\">{{ value.count }}</span></span\n      >\n    </a>\n\n    <div class=\"more\">\n      <a\n        *ngFor=\"\n          let value of facet.values\n            | slice: state.topVisible ?? 0:state.maxVisible\n        \"\n        #facetValue\n        routerLink=\"./\"\n        [queryParams]=\"getLinkParams(value)\"\n        class=\"value\"\n        [class.selected]=\"value.selected\"\n        [cxFocus]=\"{ key: value.name }\"\n        (keydown.space)=\"openLink($any($event))\"\n      >\n        <span\n          >{{ value.name }}<span class=\"count\">{{ value.count }}</span></span\n        >\n      </a>\n\n      <button\n        *ngIf=\"\n          state.maxVisible &&\n          state.topVisible &&\n          state.maxVisible > state.topVisible\n        \"\n        (click)=\"decreaseVisibleValues()\"\n        [cxAtMessage]=\"\n          'productFacetNavigation.decreaseOptionsVisibility' | cxTranslate\n        \"\n        aria-expanded=\"true\"\n        attr.aria-label=\"{{\n          'productFacetNavigation.ariaLabelShowLess' | cxTranslate\n        }}\"\n        class=\"cx-action-link\"\n        [cxFocus]=\"{ key: 'moreorless' }\"\n      >\n        {{ 'productList.showLess' | cxTranslate }}\n      </button>\n\n      <button\n        *ngIf=\"\n          state.maxVisible &&\n          facet.values &&\n          state.maxVisible > 0 &&\n          state.maxVisible < facet.values.length\n        \"\n        (click)=\"increaseVisibleValues()\"\n        [cxAtMessage]=\"\n          'productFacetNavigation.increaseOptionsVisibility' | cxTranslate\n        \"\n        aria-expanded=\"false\"\n        attr.aria-label=\"{{\n          'productFacetNavigation.ariaLabelShowMore' | cxTranslate\n        }}\"\n        class=\"cx-action-link\"\n        [cxFocus]=\"{ key: 'moreorless' }\"\n      >\n        {{ 'productList.showMore' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\nimport { FacetComponent } from '../facet/facet.component';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet-list',\n  templateUrl: './facet-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetListComponent {\n  private _isDialog: boolean;\n  /**\n   * Indicates that the facet navigation is rendered in dialog.\n   */\n  @Input()\n  set isDialog(value: boolean) {\n    this._isDialog = value;\n    if (value) {\n      this.renderer.addClass(document.body, 'modal-open');\n    }\n  }\n\n  get isDialog(): boolean {\n    return this._isDialog;\n  }\n\n  /** Emits when the list must close */\n  @Output() closeList = new EventEmitter();\n\n  /** The list of all facet and values related to the products in the list */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  iconTypes = ICON_TYPE;\n\n  dialogFocusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    focusOnEscape: true,\n    autofocus: 'cx-facet',\n  };\n\n  @HostListener('click') handleClick() {\n    this.close();\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2\n  ) {}\n\n  /**\n   * Toggles the facet group in case it is not expanded.\n   */\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\n    if (!ref.isExpanded) {\n      this.facetService.toggle(facet, ref.isExpanded);\n    }\n  }\n\n  /**\n   * Indicates that the facet group has been expanded.\n   */\n  isExpanded(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\n      );\n  }\n\n  /**\n   * Indicates that the facet group has been collapsed.\n   */\n  isCollapsed(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\n      );\n  }\n\n  close(event?: boolean): void {\n    this.renderer.removeClass(document.body, 'modal-open');\n    this.closeList.emit(event);\n  }\n\n  block(event?: MouseEvent) {\n    event?.stopPropagation();\n  }\n}\n","<section\n  class=\"inner\"\n  *ngIf=\"(facetList$ | async)?.facets as facets\"\n  [attr.aria-label]=\"'productFacetNavigation.filterBy.facet' | cxTranslate\"\n  [cxFocus]=\"isDialog ? dialogFocusConfig : {}\"\n  [tabindex]=\"-1\"\n  (esc)=\"close($event)\"\n  (click)=\"block($event)\"\n>\n  <div class=\"list-header\">\n    <h4>\n      {{ 'productList.filterBy.label' | cxTranslate }}\n    </h4>\n    <button\n      type=\"button\"\n      class=\"close\"\n      [attr.aria-label]=\"'common.close' | cxTranslate\"\n      (click)=\"close()\"\n    >\n      <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n\n  <!--\n      Here we'd like to introduce configurable facet components,\n      either by using specific configuration or generic sproutlets\n  -->\n  <cx-facet\n    *ngFor=\"let facet of facets\"\n    #facetRef\n    [facet]=\"facet\"\n    [class.expanded]=\"isExpanded(facet) | async\"\n    [class.collapsed]=\"isCollapsed(facet) | async\"\n    role=\"group\"\n    attr.aria-label=\"{{\n      'productFacetNavigation.ariaLabelItemsAvailable'\n        | cxTranslate\n          : {\n              name: facet.name,\n              count: facet?.values?.length\n            }\n    }}\"\n  ></cx-facet>\n</section>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AtMessageModule } from '../../../../../shared/components/assistive-technology-message/assistive-technology-message.module';\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { FacetComponent } from './facet.component';\n@NgModule({\n  imports: [\n    AtMessageModule,\n    CommonModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n    RouterModule,\n    UrlModule,\n  ],\n  declarations: [FacetComponent],\n  exports: [FacetComponent],\n})\nexport class FacetModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { FacetModule } from '../facet/facet.module';\nimport { FacetListComponent } from './facet-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    FacetModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetListComponent],\n  exports: [FacetListComponent],\n})\nexport class FacetListModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './facet-list.component';\nexport * from './facet-list.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './facet.component';\nexport * from './facet.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent {\n  iconTypes = ICON_TYPE;\n\n  /**\n   * We delay the removal of DOM so that animations can finish playing before the\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\n   * to be focused.\n   */\n  protected CLOSE_DELAY = 300;\n\n  /**\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\n   * on the availability of the trigger element, which is driven by CSS.\n   *\n   * The reference is also used to refocus the trigger after the dialog is closed.\n   */\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\n\n  protected open$ = new BehaviorSubject(false);\n\n  /**\n   * Emits the open state that indicates whether the facet list should be rendered.\n   * This is either done instantly, or after the user triggers this by using the trigger\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\n   * the behaviour. This can differ per breakpoint.\n   *\n   * There's a configurable delay for the closed state, so that the DOM is not removed\n   * before some CSS animations are done.\n   */\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\n    // method represents the actual UI state.\n    observeOn(asapScheduler),\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\n  );\n\n  /**\n   * Emits the active state that indicates whether the facet list is activated. Activation\n   * is related to the css, so that a animation or transition can visualize opening/closing\n   * the list (i.e. dialog).\n   */\n  isActive$ = this.open$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure the active class is\n    //  applied after the DOM is created\n    observeOn(asapScheduler)\n  );\n\n  constructor(protected breakpointService: BreakpointService) {}\n\n  launch() {\n    this.open$.next(true);\n  }\n\n  close() {\n    this.open$.next(false);\n    this.trigger.nativeElement.focus();\n  }\n\n  /**\n   * Indicates that the facet navigation should be open explicitely by a trigger.\n   * This is fully controlled by CSS, where the trigger button can be hidden\n   * (display:none) for certain screen sizes.\n   */\n  get hasTrigger() {\n    return this.trigger.nativeElement.offsetParent !== null;\n  }\n}\n","<button\n  #trigger\n  class=\"btn btn-secondary btn-block dialog-trigger\"\n  (click)=\"launch()\"\n>\n  <cx-icon [type]=\"iconTypes.FILTER\"></cx-icon>\n  {{ 'productList.filterBy.label' | cxTranslate }}\n</button>\n\n<cx-active-facets></cx-active-facets>\n\n<cx-facet-list\n  *ngIf=\"isOpen$ | async\"\n  [isDialog]=\"hasTrigger\"\n  (closeList)=\"close()\"\n  [class.active]=\"isActive$ | async\"\n  [class.dialog]=\"hasTrigger\"\n></cx-facet-list>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\nimport { FacetListModule } from './facet-list/facet-list.module';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FacetListModule,\n    ActiveFacetsModule,\n    IconModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductFacetNavigationComponent],\n  exports: [ProductFacetNavigationComponent],\n})\nexport class ProductFacetNavigationModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './facet.service';\nexport * from './product-facet.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './active-facets/index';\nexport * from './facet-list/index';\nexport * from './facet.model';\nexport * from './facet/index';\nexport * from './product-facet-navigation.component';\nexport * from './product-facet-navigation.module';\nexport * from './services/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultViewConfig: ViewConfig = {\n  view: {\n    defaultPageSize: 12,\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { ViewConfig } from '../../../shared/config/view-config';\nimport {\n  AtMessageModule,\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { defaultViewConfig } from '../config/default-view-config';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\n@NgModule({\n  imports: [\n    AtMessageModule,\n    CommonModule,\n    FeaturesConfigModule,\n    I18nModule,\n    IconModule,\n    InfiniteScrollModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    MediaModule,\n    OutletModule,\n    PageComponentModule,\n    RouterModule,\n    SpinnerModule,\n    StarRatingModule,\n    UrlModule,\n  ],\n  providers: [\n    provideDefaultConfig(<ViewConfig>defaultViewConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n          data: {\n            composition: {\n              inner: ['ProductAddToCartComponent'],\n            },\n          },\n        },\n        ProductGridComponent: {\n          component: ProductListComponent,\n          data: {\n            composition: {\n              inner: ['ProductAddToCartComponent'],\n            },\n          },\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n          data: {\n            composition: {\n              inner: ['ProductAddToCartComponent'],\n            },\n          },\n        },\n      },\n    }),\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n})\nexport class ProductListModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './container/index';\nexport * from './model/index';\nexport * from './product-facet-navigation/index';\nexport * from './product-grid-item/product-grid-item.component';\nexport * from './product-list-item/product-list-item.component';\nexport * from './product-list.module';\nexport * from './product-view/product-view.component';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport {\n  ProductListItemContext,\n  ProductListItemContextSource,\n} from '../../product-list';\n\n@Component({\n  selector: 'cx-product-carousel-item',\n  templateUrl: './product-carousel-item.component.html',\n  providers: [\n    ProductListItemContextSource,\n    {\n      provide: ProductListItemContext,\n      useExisting: ProductListItemContextSource,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselItemComponent implements OnChanges {\n  @Input() item: Product;\n\n  constructor(\n    protected productListItemContextSource: ProductListItemContextSource\n  ) {}\n\n  ngOnChanges(changes?: SimpleChanges): void {\n    if (changes?.item) {\n      this.productListItemContextSource.product$.next(this.item);\n    }\n  }\n}\n","<a tabindex=\"0\" [routerLink]=\"{ cxRoute: 'product', params: item } | cxUrl\">\n  <cx-media\n    [container]=\"item.images?.PRIMARY\"\n    format=\"product\"\n    [alt]=\"item.name ?? ''\"\n  ></cx-media>\n  <h3 class=\"cx-product-name\">\n    {{ item.name }}\n  </h3>\n  <div class=\"price\">\n    {{ item.price?.formattedValue }}\n  </div>\n</a>\n<div class=\"actions\">\n  <ng-container cxInnerComponentsHost></ng-container>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  Product,\n  ProductScope,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  protected readonly PRODUCT_SCOPE = [\n    ProductScope.LIST,\n    ProductScope.PRICE,\n    ProductScope.STOCK,\n  ];\n\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter((data) => Boolean(data))\n  );\n\n  /**\n   * returns an Observable string for the title.\n   */\n  title$: Observable<string | undefined> = this.componentData$.pipe(\n    map((data) => data.title)\n  );\n\n  /**\n   * Observable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product | undefined>[]> =\n    this.componentData$.pipe(\n      map((data) => data.productCodes?.trim().split(' ') ?? []),\n      map((codes) =>\n        codes.map((code) =>\n          this.productService.get(code, [...this.PRODUCT_SCOPE])\n        )\n      )\n    );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService\n  ) {}\n}\n","<cx-carousel\n  *ngIf=\"items$ | async as items\"\n  role=\"region\"\n  [attr.aria-label]=\"\n    'productCarousel.carouselLabel' | cxTranslate: { title: title$ | async }\n  \"\n  [items]=\"items\"\n  [title]=\"title$ | async\"\n  [template]=\"carouselItem\"\n  itemWidth=\"285px\"\n>\n</cx-carousel>\n\n<ng-template #carouselItem let-item=\"item\">\n  <cx-product-carousel-item [item]=\"item\"></cx-product-carousel-item>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageComponentModule } from '../../../../cms-structure';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\nimport { ProductCarouselItemComponent } from '../product-carousel-item/product-carousel-item.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CarouselModule,\n    MediaModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    PageComponentModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent, ProductCarouselItemComponent],\n  exports: [ProductCarouselComponent, ProductCarouselItemComponent],\n})\nexport class ProductCarouselModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  isNotNullable,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  constructor(\n    protected cmsComponentData: CmsComponentData<CmsProductReferencesComponent>,\n    protected currentProductService: CurrentProductService,\n    protected productReferenceService: ProductReferenceService\n  ) {}\n\n  protected get componentData$(): Observable<CmsProductReferencesComponent> {\n    return this.cmsComponentData.data$.pipe(filter((data) => Boolean(data)));\n  }\n\n  /**\n   * Returns an Observable String for the product code\n   */\n  protected get productCode$(): Observable<string> {\n    return this.currentProductService.getProduct().pipe(\n      filter(isNotNullable),\n      map((product) => product.code ?? ''),\n      tap((_) => this.productReferenceService.cleanReferences())\n    );\n  }\n\n  /**\n   * Returns an Observable String for the title\n   */\n  get title$(): Observable<string | undefined> {\n    return this.componentData$.pipe(map((data) => data?.title));\n  }\n\n  /**\n   * Observable with an Array of Observables. This is done so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product | undefined>[]> =\n    this.productCode$.pipe(\n      withLatestFrom(this.componentData$),\n      tap(([productCode, data]) =>\n        this.productReferenceService.loadProductReferences(\n          productCode,\n          data.productReferenceTypes\n        )\n      ),\n      switchMap(([productCode, data]) =>\n        this.getProductReferences(productCode, data.productReferenceTypes ?? '')\n      )\n    );\n\n  /**\n   * Returns an observable for product references\n   */\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product | undefined>[]> {\n    return this.productReferenceService\n      .getProductReferences(code, referenceType)\n      .pipe(\n        filter((references) => Boolean(references)),\n        map((references: ProductReference[]) =>\n          references.map((reference) => of(reference.target))\n        )\n      );\n  }\n}\n","<cx-carousel\n  *ngIf=\"items$ | async as items\"\n  [title]=\"title$ | async\"\n  [items]=\"items\"\n  [template]=\"carouselItem\"\n>\n</cx-carousel>\n\n<ng-template #carouselItem let-item=\"item\">\n  <a tabindex=\"0\" [routerLink]=\"{ cxRoute: 'product', params: item } | cxUrl\">\n    <cx-media [container]=\"item.images?.PRIMARY\" format=\"product\"></cx-media>\n    <h4>{{ item.name }}</h4>\n    <div class=\"price\">{{ item.price?.formattedValue }}</div>\n  </a>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-carousel.model';\nexport * from './product-carousel.service';\nexport * from './product-carousel/product-carousel.component';\nexport * from './product-carousel-item/product-carousel-item.component';\nexport * from './product-carousel/product-carousel.module';\nexport * from './product-references/product-references.component';\nexport * from './product-references/product-references.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ImageGroup, isNotNullable, Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  protected mainMediaContainer = new BehaviorSubject<any>(null);\n\n  protected product$: Observable<Product> = this.currentProductService\n    .getProduct()\n    .pipe(\n      filter(isNotNullable),\n      distinctUntilChanged(),\n      tap((p: Product) => {\n        this.mainMediaContainer.next(p.images?.PRIMARY ? p.images.PRIMARY : {});\n      })\n    );\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map((p: Product) => this.createThumbs(p))\n  );\n\n  mainImage$: Observable<any> = combineLatest([\n    this.product$,\n    this.mainMediaContainer,\n  ]).pipe(map(([, container]) => container));\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail: ImageGroup): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          (t) =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\n  }\n}\n","<ng-container *ngIf=\"mainImage$ | async as main\">\n  <cx-media [container]=\"main\"></cx-media>\n</ng-container>\n\n<ng-container *ngIf=\"thumbs$ | async as thumbs\">\n  <cx-carousel\n    *ngIf=\"thumbs.length\"\n    class=\"thumbs\"\n    [items]=\"thumbs\"\n    itemWidth=\"120px\"\n    [hideIndicators]=\"false\"\n    [template]=\"thumb\"\n  ></cx-carousel>\n</ng-container>\n\n<ng-template #thumb let-item=\"item\">\n  <cx-media\n    [container]=\"item.container\"\n    tabindex=\"0\"\n    (focus)=\"openImage(item.container)\"\n    [class.is-active]=\"isActive(item.container) | async\"\n    format=\"product\"\n  >\n  </cx-media>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    CarouselModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  EventService,\n  Product,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { defer, merge, Observable, of } from 'rxjs';\nimport { filter, mapTo } from 'rxjs/operators';\nimport {\n  ComponentCreateEvent,\n  ComponentDestroyEvent,\n} from '../../../cms-structure';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent {\n  product$: Observable<Product | null> =\n    this.currentProductService.getProduct();\n\n  /**\n   * Observable that checks the reviews component availability on the page.\n   */\n  areReviewsAvailable$: Observable<boolean> = merge(\n    // Check if reviews component is already defined:\n    defer(() => of(!!this.getReviewsComponent())),\n\n    // Observe EventService for reviews availability:\n    this.eventService.get(ComponentCreateEvent).pipe(\n      filter((event) => event.id === this.reviewsComponentId),\n      mapTo(true)\n    ),\n    this.eventService.get(ComponentDestroyEvent).pipe(\n      filter((event) => event.id === this.reviewsComponentId),\n      mapTo(false)\n    )\n  );\n\n  protected reviewsComponentId = 'ProductReviewsTabComponent';\n\n  protected reviewsTranslationKey = `TabPanelContainer.tabs.${this.reviewsComponentId}`;\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef,\n    protected eventService: EventService\n  ) {}\n\n  /**\n   * Scroll to views component on page and click \"Reviews\" tab\n   */\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate(this.reviewsTranslationKey)\n      .subscribe((reviewsTabLabel) => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab =\n          tabsComponent && this.getTabByLabel(reviewsTabLabel, tabsComponent);\n\n        if (reviewsTab) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(() => {\n            reviewsTab.scrollIntoView({ behavior: 'smooth' });\n            reviewsTab.focus({ preventScroll: true });\n          });\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  /**\n   * Get Reviews Component if exists on page\n   */\n  protected getReviewsComponent(): HTMLElement | null {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  /**\n   * Get Tabs Component if exists on page\n   */\n  private getTabsComponent(): HTMLElement | null {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  /**\n   * Click to activate tab if not already active\n   *\n   * @param tab tab to click if needed\n   */\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  /**\n   * Get Tab by label if exists on page\n   *\n   * @param label label of searched tab\n   * @param tabsComponent component containing tabs\n   */\n  private getTabByLabel(\n    label: string,\n    tabsComponent: HTMLElement\n  ): HTMLElement | undefined {\n    // NOTE: Reads through button tags to click on correct tab\n    // There may be a better way of doing this now/after refactor\n    const tabElements: HTMLCollectionOf<HTMLElement> =\n      tabsComponent.getElementsByTagName('button');\n\n    // Look through button tab elements until finding tab with label\n    return Array.from(tabElements).find((buttonElement) =>\n      buttonElement.innerHTML.includes(label)\n    );\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"rating\" *ngIf=\"product?.averageRating\">\n    <cx-star-rating [rating]=\"product?.averageRating ?? 0\"></cx-star-rating>\n\n    <div class=\"count\">({{ product?.numberOfReviews }})</div>\n\n    <button\n      *ngIf=\"areReviewsAvailable$ | async\"\n      class=\"btn btn-link cx-action-link\"\n      (click)=\"showReviews()\"\n      [attr.aria-label]=\"\n        'productSummary.showReviewsDetailed'\n          | cxTranslate\n            : {\n                rating: product?.averageRating | number: '1.0-1',\n                count: product?.numberOfReviews\n              }\n      \"\n    >\n      {{ 'productSummary.showReviews' | cxTranslate }}\n    </button>\n  </div>\n  <div class=\"rating\" *ngIf=\"!product?.averageRating\">\n    {{ 'productDetails.noReviews' | cxTranslate }}\n  </div>\n  <div class=\"code\">\n    {{ 'productSummary.id' | cxTranslate }} {{ product?.code }}\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, StarRatingModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  exports: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product | null> = this.currentProductService.getProduct([\n    ProductScope.DETAILS,\n    ProductScope.PRICE,\n  ]);\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <ng-template\n    [cxOutlet]=\"outlets.PRICE\"\n    [cxOutletContext]=\"{ product: product }\"\n  >\n    <div\n      [attr.aria-label]=\"'productSummary.newItemPrice' | cxTranslate\"\n      class=\"price\"\n    >\n      {{ product?.price?.formattedValue }}\n    </div>\n  </ng-template>\n\n  <ng-template\n    [cxOutlet]=\"outlets.SUMMARY\"\n    [cxOutletContext]=\"{ product: product }\"\n  >\n    <p [innerHTML]=\"product?.summary\" class=\"summary\"></p>\n  </ng-template>\n\n  <!-- @TODO: Temp. Comment out share link while not in use by CMS -->\n  <!-- <ng-container *cxOutlet=\"outlets.SHARE\">\n        <div>\n          <a href=\"#\" class=\"share btn-link\">\n            {{ 'productSummary.share' | cxTranslate }}\n          </a>\n        </div>\n      </ng-container> -->\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent {\n  product$: Observable<Product | null> = this.currentProductService.getProduct(\n    ProductScope.ATTRIBUTES\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"container\">\n    <h2>{{ 'productDetails.specification' | cxTranslate }}</h2>\n    <table *ngFor=\"let class of product?.classifications\">\n      <th>\n        <h2>{{ class.name }}</h2>\n      </th>\n      <tr *ngFor=\"let feature of class.features\">\n        <td>{{ feature.name }}</td>\n        <td>\n          <ul>\n            <li *ngFor=\"let featureValue of feature?.featureValues\">\n              {{ featureValue?.value }}\n              <span\n                *ngIf=\"\n                  feature.featureUnit &&\n                  feature.featureUnit.symbol &&\n                  feature.featureUnit.symbol.length > 0 &&\n                  feature.featureUnit?.unitType !== '300'\n                \"\n              >\n                {{ feature.featureUnit?.symbol }}\n              </span>\n            </li>\n          </ul>\n        </td>\n      </tr>\n    </table>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CmsComponentWithChildren, CmsService, Product } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product | null>;\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    protected componentData: CmsComponentData<CmsComponentWithChildren>,\n    protected cmsService: CmsService\n  ) {}\n  children$: Observable<any[]> = this.componentData.data$.pipe(\n    switchMap((data) =>\n      combineLatest(\n        (data?.children ?? '').split(' ').map((component) =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map((child) => {\n              if (!child) {\n                return undefined;\n              }\n              if (!child.flexType) {\n                child = {\n                  ...child,\n                  flexType: child.typeCode,\n                };\n              }\n\n              return child;\n            })\n          )\n        )\n      )\n    )\n  );\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"container\" [innerHTML]=\"product?.description\"></div>\n</ng-container>\n<ng-container *ngIf=\"children$ | async as children\">\n  <ng-container *ngFor=\"let child of children\">\n    <ng-container *ngIf=\"child\">\n      <ng-template [cxOutlet]=\"child.flexType\" [cxOutletContext]=\"{}\">\n        <div class=\"container\">\n          <ng-container [cxComponentWrapper]=\"child\"></ng-container>\n        </div>\n      </ng-template>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from './../../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from './../../../../cms-structure/page/component/page-component.module';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, OutletModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  isNotNullable,\n  Product,\n  ProductReviewService,\n  Review,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CustomFormValidators } from '../../../../shared/index';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\n  @ViewChild('writeReviewButton', { static: false })\n  writeReviewButton: ElementRef;\n\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: UntypedFormGroup;\n\n  product$: Observable<Product | null> =\n    this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter(isNotNullable),\n    map((p) => p.code ?? ''),\n    distinctUntilChanged(),\n    switchMap((productCode) =>\n      this.reviewService.getByProductCode(productCode)\n    ),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: UntypedFormBuilder,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n\n    this.cd.detectChanges();\n\n    if (this.titleInput && this.titleInput.nativeElement) {\n      this.titleInput.nativeElement.focus();\n    }\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  setRating(rating: number): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product) {\n    if (this.reviewForm.valid) {\n      this.addReview(product);\n    } else {\n      this.reviewForm.markAllAsTouched();\n    }\n  }\n\n  addReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code ?? '', review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [null, CustomFormValidators.starRatingEmpty],\n      reviewerName: '',\n    });\n  }\n}\n","<div class=\"container\" *ngIf=\"product$ | async as product\">\n  <h2>\n    {{ 'productDetails.reviews' | cxTranslate }} ({{ product.numberOfReviews }})\n  </h2>\n  <ng-container *ngIf=\"!isWritingReview; else writeReview\">\n    <div class=\"header\">\n      <h3>{{ 'productReview.overallRating' | cxTranslate }}</h3>\n      <button\n        #writeReviewButton\n        class=\"btn btn-primary\"\n        (click)=\"initiateWriteReview()\"\n      >\n        {{ 'productReview.writeReview' | cxTranslate }}\n      </button>\n      <cx-star-rating\n        *ngIf=\"product.averageRating\"\n        class=\"rating\"\n        [rating]=\"product.averageRating\"\n      ></cx-star-rating>\n      <div class=\"rating\" *ngIf=\"!product.averageRating\">\n        {{ 'productDetails.noReviews' | cxTranslate }}\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"!isWritingReview; else writeReview\">\n      <ng-container *ngIf=\"reviews$ | async as reviews\">\n        <div\n          class=\"review\"\n          tabindex=\"0\"\n          *ngFor=\"let review of reviews | slice: 0:maxListItems\"\n        >\n          <div class=\"title\">{{ review.headline }}</div>\n          <cx-star-rating [rating]=\"review.rating ?? 0\"></cx-star-rating>\n          <div class=\"name\">\n            {{ review.alias ? review.alias : review.principal?.name }}\n          </div>\n          <div class=\"date\">{{ review.date | cxDate }}</div>\n          <div class=\"text\">{{ review.comment }}</div>\n        </div>\n        <div *ngIf=\"reviews.length > initialMaxListItems\">\n          <button\n            class=\"btn btn-primary\"\n            (click)=\"maxListItems = reviews.length\"\n            *ngIf=\"maxListItems === initialMaxListItems\"\n          >\n            {{ 'productReview.more' | cxTranslate }}\n          </button>\n          <button\n            class=\"btn btn-primary\"\n            (click)=\"maxListItems = initialMaxListItems\"\n            *ngIf=\"maxListItems !== initialMaxListItems\"\n          >\n            {{ 'productReview.less' | cxTranslate }}\n          </button>\n        </div>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #writeReview>\n    <form (ngSubmit)=\"submitReview(product)\" [formGroup]=\"reviewForm\">\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.reviewTitle' | cxTranslate\n          }}</span>\n          <input\n            required=\"true\"\n            #titleInput\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"title\"\n          />\n          <cx-form-errors [control]=\"reviewForm.get('title')\"></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.writeYourComments' | cxTranslate\n          }}</span>\n          <textarea\n            required=\"true\"\n            class=\"form-control\"\n            rows=\"3\"\n            formControlName=\"comment\"\n          ></textarea>\n          <cx-form-errors\n            [control]=\"reviewForm.get('comment')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.rating' | cxTranslate\n          }}</span>\n          <input\n            required=\"true\"\n            type=\"number\"\n            formControlName=\"rating\"\n            class=\"rating-input\"\n          />\n          <cx-star-rating\n            tabindex=\"0\"\n            [attr.aria-label]=\"'productReview.ratingRequired' | cxTranslate\"\n            (change)=\"setRating($event)\"\n            [disabled]=\"false\"\n          ></cx-star-rating>\n          <cx-form-errors [control]=\"reviewForm.get('rating')\"></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.reviewerName' | cxTranslate\n          }}</span>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"reviewerName\"\n          />\n        </label>\n      </div>\n      <div class=\"form-group row\">\n        <div class=\"col-12 col-md-4\">\n          <button\n            type=\"button\"\n            class=\"btn btn-block btn-secondary\"\n            (click)=\"cancelWriteReview()\"\n          >\n            {{ 'common.cancel' | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-12 col-md-4\">\n          <button type=\"submit\" class=\"btn btn-block btn-primary\">\n            {{ 'common.submit' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </form>\n  </ng-template>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductReviewsComponent } from './product-reviews.component';\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-attributes/product-attributes.component';\nexport * from './product-attributes/product-attributes.module';\nexport * from './product-details-tab/product-details-tab.component';\nexport * from './product-details-tab/product-details-tab.module';\nexport * from './product-reviews/product-reviews.component';\nexport * from './product-reviews/product-reviews.module';\nexport * from './product-tabs.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\nimport { LaunchDialogService } from '../../../../layout/index';\nimport { Observable, Subscription } from 'rxjs';\nimport { FocusConfig } from '../../../../layout/a11y/keyboard-focus/keyboard-focus.model';\n\n@Component({\n  selector: 'cx-stock-notification-dialog',\n  templateUrl: './stock-notification-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationDialogComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  subscribeSuccess$: Observable<boolean>;\n  enabledPrefs: NotificationPreference[] = [];\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'button',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    private interestsService: UserInterestsService,\n    protected launchDialogService: LaunchDialogService,\n    protected el: ElementRef\n  ) {}\n\n  close(reason?: any) {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.launchDialogService.data$.subscribe((data) => {\n        this.init(data.subscribeSuccess$, data.enabledPrefs);\n      })\n    );\n  }\n\n  init(\n    subscribeSuccess$: Observable<boolean>,\n    enabledPrefs: NotificationPreference[]\n  ) {\n    this.subscribeSuccess$ = subscribeSuccess$;\n    this.enabledPrefs = enabledPrefs;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribeSuccess$) {\n      this.subscribeSuccess$\n        .subscribe((success) => {\n          if (success) {\n            this.interestsService.resetAddInterestState();\n          }\n        })\n        .unsubscribe();\n    }\n\n    this.subscription.unsubscribe();\n  }\n}\n","<div\n  class=\"cx-stock-notification-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n>\n  <div class=\"cx-stock-notification-container\">\n    <div class=\"cx-dialog-header cx-modal-header\">\n      <div class=\"cx-dialog-title modal-title\">\n        {{ 'stockNotification.subscriptionDialog.header' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        class=\"close\"\n        tabindex=\"-1\"\n        (click)=\"close('Button clicked')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <ng-container *ngIf=\"subscribeSuccess$ | async; else loading\">\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <div class=\"cx-dialog-body modal-body\">\n        <div class=\"cx-stock-notification-content\">\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.notifiedPrefix'\n                | cxTranslate\n            }}\n          </p>\n          <p *ngFor=\"let preference of enabledPrefs\" class=\"channels\">\n            <span>{{ preference.channel }}</span\n            ><span *ngIf=\"preference.value\">{{ ': ' + preference.value }}</span>\n          </p>\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.notifiedSuffix'\n                | cxTranslate\n            }}\n          </p>\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.manageChannelsPrefix'\n                | cxTranslate\n            }}\n            <a\n              (click)=\"close('Link clicked')\"\n              [routerLink]=\"{ cxRoute: 'notificationPreference' } | cxUrl\"\n              class=\"link-prefs cx-stock-notification-link\"\n            >\n              {{\n                'stockNotification.subscriptionDialog.manageChannelsLink'\n                  | cxTranslate\n              }}</a\n            >\n            {{\n              'stockNotification.subscriptionDialog.manageChannelsSuffix'\n                | cxTranslate\n            }}\n          </p>\n\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.manageSubscriptionsPrefix'\n                | cxTranslate\n            }}\n            <a\n              (click)=\"close('Link clicked')\"\n              [routerLink]=\"{ cxRoute: 'myInterests' } | cxUrl\"\n              class=\"link-interests cx-stock-notification-link\"\n            >\n              {{\n                'stockNotification.subscriptionDialog.manageSubscriptionsLink'\n                  | cxTranslate\n              }}</a\n            >\n            {{\n              'stockNotification.subscriptionDialog.manageSubscriptionsSuffix'\n                | cxTranslate\n            }}\n          </p>\n        </div>\n      </div>\n      <div class=\"cx-modal-footer\">\n        <div class=\"row\">\n          <div\n            class=\"\n              cx-dialog-actions\n              col-sm-12 col-md-4\n              offset-md-8\n              col-lg-3\n              offset-lg-9\n            \"\n          >\n            <button\n              class=\"btn btn-primary btn-block btn-ok\"\n              type=\"button\"\n              (click)=\"close('Button clicked')\"\n            >\n              {{ 'stockNotification.subscriptionDialog.okBtn' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #loading>\n    <div class=\"cx-dialog-body modal-body\">\n      <p>\n        {{ 'stockNotification.subscriptionDialog.subscribing' | cxTranslate }}\n      </p>\n      <div class=\"cx-dialog-row\">\n        <div class=\"col-sm-12\">\n          <cx-spinner></cx-spinner>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  isNotNullable,\n  NotificationPreference,\n  NotificationType,\n  OCC_USER_ID_ANONYMOUS,\n  Product,\n  TranslationService,\n  UserIdService,\n  UserInterestsService,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, first, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\nimport { LaunchDialogService, LAUNCH_CALLER } from '../../../layout/index';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-stock-notification',\n  templateUrl: './stock-notification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationComponent implements OnInit, OnDestroy {\n  hasProductInterests$: Observable<boolean>;\n  prefsEnabled$: Observable<boolean>;\n  outOfStock$: Observable<boolean>;\n  isRemoveInterestLoading$: Observable<boolean>;\n  anonymous = true;\n\n  private enabledPrefs: NotificationPreference[] = [];\n  private productCode: string;\n  private subscribeSuccess$: Observable<boolean>;\n  private subscriptions = new Subscription();\n\n  @ViewChild('element') element: ElementRef;\n\n  constructor(\n    private currentProductService: CurrentProductService,\n    private globalMessageService: GlobalMessageService,\n    private translationService: TranslationService,\n    private interestsService: UserInterestsService,\n    private notificationPrefService: UserNotificationPreferenceService,\n    private userIdService: UserIdService,\n    protected launchDialogService: LaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  ngOnInit() {\n    this.outOfStock$ = combineLatest([\n      this.currentProductService.getProduct().pipe(filter(isNotNullable)),\n      this.userIdService.getUserId(),\n    ]).pipe(\n      tap(([product, userId]) => {\n        this.productCode = product.code ?? '';\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\n          this.anonymous = false;\n          this.notificationPrefService.loadPreferences();\n          this.interestsService.loadProductInterests(\n            undefined,\n            undefined,\n            undefined,\n            product.code,\n            NotificationType.BACK_IN_STOCK\n          );\n        }\n      }),\n      map(\n        ([product]: [Product, String]) =>\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\n      )\n    );\n\n    this.hasProductInterests$ = this.interestsService\n      .getProductInterests()\n      .pipe(\n        map(\n          (interests) => !!interests.results && interests.results.length === 1\n        )\n      );\n    this.subscribeSuccess$ =\n      this.interestsService.getAddProductInterestSuccess();\n    this.isRemoveInterestLoading$ =\n      this.interestsService.getRemoveProdutInterestLoading();\n    this.prefsEnabled$ = this.notificationPrefService\n      .getEnabledPreferences()\n      .pipe(\n        tap((prefs) => (this.enabledPrefs = prefs)),\n        map((prefs) => prefs.length > 0)\n      );\n\n    this.subscriptions.add(\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\n        if (error) {\n          this.onInterestAddingError();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.interestsService\n        .getRemoveProdutInterestSuccess()\n        .subscribe((success) => {\n          if (success) {\n            this.onInterestRemovingSuccess();\n          }\n        })\n    );\n  }\n\n  subscribe() {\n    this.openDialog();\n    this.interestsService.addProductInterest(\n      this.productCode,\n      NotificationType.BACK_IN_STOCK\n    );\n  }\n\n  unsubscribe() {\n    this.interestsService.removeProdutInterest(\n      {\n        product: {\n          code: this.productCode,\n        },\n        productInterestEntry: [\n          {\n            interestType: NotificationType.BACK_IN_STOCK,\n          },\n        ],\n      },\n      true\n    );\n  }\n\n  private onInterestRemovingSuccess() {\n    this.subscriptions.add(\n      this.translationService\n        .translate('stockNotification.unsubscribeSuccess')\n        .pipe(first())\n        .subscribe((text) =>\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\n        )\n    );\n    this.interestsService.resetRemoveInterestState();\n  }\n\n  private onInterestAddingError() {\n    this.launchDialogService.closeDialog('Interests error');\n    this.interestsService.resetAddInterestState();\n  }\n\n  private openDialog() {\n    const modalInstanceData = {\n      subscribeSuccess$: this.subscribeSuccess$,\n      enabledPrefs: this.enabledPrefs,\n    };\n\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.STOCK_NOTIFICATION,\n      this.element,\n      this.vcr,\n      modalInstanceData\n    );\n\n    if (dialog) {\n      dialog.pipe(take(1)).subscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.interestsService.clearProductInterests();\n    this.notificationPrefService.clearPreferences();\n  }\n}\n","<ng-container *ngIf=\"outOfStock$ | async\">\n  <ng-container *ngIf=\"!(hasProductInterests$ | async); else stopNotify\">\n    <ng-container *ngIf=\"prefsEnabled$ | async; else disableNotify\">\n      <div class=\"stock-notification-notes\">\n        <p>{{ 'stockNotification.getNotified' | cxTranslate }}</p>\n      </div>\n      <button\n        class=\"btn btn-primary btn-block btn-notify\"\n        type=\"button\"\n        (click)=\"subscribe()\"\n      >\n        {{ 'stockNotification.notifyMe' | cxTranslate }}\n      </button>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #disableNotify>\n  <div class=\"stock-notification-notes\" id=\"outOfStockMessage\">\n    <p>\n      <ng-container *ngIf=\"anonymous; else loggedIn\">\n        <a [routerLink]=\"{ cxRoute: 'login' } | cxUrl\">\n          {{ 'miniLogin.signInRegister' | cxTranslate }}</a\n        >\n        {{ 'stockNotification.getNotifySuffix' | cxTranslate }}<br />\n      </ng-container>\n      <ng-template #loggedIn>\n        {{ 'stockNotification.getNotify' | cxTranslate }}<br />\n        {{ 'stockNotification.activateChannelsPrefix' | cxTranslate }}\n        <a [routerLink]=\"{ cxRoute: 'notificationPreference' } | cxUrl\">{{\n          'stockNotification.channelsLink' | cxTranslate\n        }}</a\n        >{{ 'stockNotification.activateChannelsSuffix' | cxTranslate }}\n      </ng-template>\n    </p>\n  </div>\n  <button\n    class=\"btn btn-primary btn-block btn-notify\"\n    type=\"button\"\n    [attr.disabled]=\"anonymous ? true : null\"\n    aria-describedby=\"outOfStockMessage\"\n    (click)=\"subscribe()\"\n  >\n    {{ 'stockNotification.notifyMe' | cxTranslate }}\n  </button>\n</ng-template>\n\n<ng-template #stopNotify>\n  <ng-container *ngIf=\"!(isRemoveInterestLoading$ | async); else loading\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <div class=\"stock-notification-notes\">\n      <p>{{ 'stockNotification.notified' | cxTranslate }}</p>\n    </div>\n    <button\n      class=\"btn btn-primary btn-block btn-stop-notify\"\n      type=\"button\"\n      (click)=\"unsubscribe()\"\n    >\n      {{ 'stockNotification.stopNotify' | cxTranslate }}\n    </button>\n  </ng-container>\n</ng-template>\n\n<ng-template #loading>\n  <div class=\"cx-dialog-body modal-body\">\n    <div class=\"cx-dialog-row\">\n      <div class=\"col-sm-12\">\n        <cx-spinner></cx-spinner>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DIALOG_TYPE } from '../../../../layout/launch-dialog/config/launch-config';\nimport { LayoutConfig } from '../../../../layout/config/layout-config';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog.component';\n\nexport const defaultStockNotificationLayoutConfig: LayoutConfig = {\n  launch: {\n    STOCK_NOTIFICATION: {\n      inlineRoot: true,\n      component: StockNotificationDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockNotificationComponent } from './stock-notification.component';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { RouterModule } from '@angular/router';\nimport { defaultStockNotificationLayoutConfig } from './stock-notification-dialog/default-stock-notification-layout.config';\n\n@NgModule({\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    I18nModule,\n    SpinnerModule,\n    UrlModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultStockNotificationLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        StockNotificationComponent: {\n          component: StockNotificationComponent,\n        },\n      },\n    }),\n  ],\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\n})\nexport class StockNotificationModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './carousel/index';\nexport * from './config/default-view-config';\nexport * from './current-product.service';\nexport * from './product-images/product-images.component';\nexport * from './product-images/product-images.module';\nexport * from './product-intro/product-intro.component';\nexport * from './product-intro/product-intro.module';\nexport * from './product-list/index';\nexport * from './product-list/model/product-list-item-context.model';\nexport * from './product-outlets.model';\nexport * from './product-summary/product-summary.component';\nexport * from './product-summary/product-summary.module';\nexport * from './product-tabs/index';\nexport * from './stock-notification/stock-notification-dialog/stock-notification-dialog.component';\nexport * from './stock-notification/stock-notification.component';\nexport * from './stock-notification/stock-notification.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { AuthConfigService, AuthService, OAuthFlow } from '@spartacus/core';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\n\n/**\n * Guards the _login_ route.\n *\n * Takes care of routing the user to a auth server login page (if implicit or code flow is used).\n * In case of Resource Owner Password Flow just renders the page as normal CMS page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected authConfigService: AuthConfigService,\n    protected cmsPageGuard: CmsPageGuard\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.authService.isUserLoggedIn().pipe(\n      take(1),\n      switchMap((isUserLoggedIn) => {\n        if (\n          this.authConfigService.getOAuthFlow() ===\n            OAuthFlow.ResourceOwnerPasswordFlow ||\n          isUserLoggedIn\n        ) {\n          return this.cmsPageGuard.canActivate(route, state);\n        } else {\n          // This method can trigger redirect to OAuth server that's why we don't return anything in this case\n          const redirected = this.authService.loginWithRedirect();\n          if (!redirected) {\n            return of(false);\n          }\n          return EMPTY;\n        }\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LoginGuard } from './login.guard';\n\n/**\n * This module enables to quickly switch from Resource Owner Password Flow\n * to Implicit Flow or Authorization Code Flow. The `login` route in this case will be\n * responsible for initalizing the redirect to OAuth server to login.\n *\n * Instead of manually invoking OAuth redirect you only have to redirect to `login` page.\n */\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [LoginGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'login' },\n      },\n    ]),\n  ],\n})\nexport class LoginRouteModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  ProtectedRoutesService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { from, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n/**\n * Guards the _logout_ route.\n *\n * Takes care of routing the user to a logout page (if available) or redirects to\n * the homepage. If the homepage is protected, the user is redirected\n * to the login route instead.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutes: ProtectedRoutesService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    /**\n     * First we want to complete logout process before redirecting to logout page\n     * We want to avoid errors like `token is no longer valid`\n     */\n    return from(this.logout()).pipe(\n      switchMap(() => {\n        return this.cms\n          .hasPage({\n            id: this.semanticPathService.get('logout') ?? '',\n            type: PageType.CONTENT_PAGE,\n          })\n          .pipe(\n            map((hasPage) => {\n              if (!hasPage) {\n                return this.getRedirectUrl();\n              }\n              // TODO(#9385): Use CMS page guard here.\n              return hasPage;\n            })\n          );\n      })\n    );\n  }\n\n  protected logout(): Promise<any> {\n    return this.auth.coreLogout();\n  }\n\n  /**\n   * Whenever there is no specific \"logout\" page configured in the CMS,\n   * we redirect after the user is logged out.\n   *\n   * The user gets redirected to the homepage, unless the homepage is protected\n   * (in case of a closed shop). We'll redirect to the login page instead.\n   */\n  protected getRedirectUrl(): UrlTree {\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\n    return this.router.parseUrl(this.semanticPathService.get(cxRoute) ?? '');\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout.guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [LogoutGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { LoginRouteModule } from './login-route/login-route.module';\nimport { LogoutModule } from './logout/logout.module';\n\n@NgModule({\n  imports: [\n    LogoutModule,\n    LoginRouteModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n  ],\n})\nexport class UserComponentModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './login-route/login-route.module';\nexport * from './login-route/login.guard';\nexport * from './logout/logout.guard';\nexport * from './logout/logout.module';\nexport * from './user.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './anonymous-consent-management/index';\nexport * from './content/index';\nexport * from './misc/index';\nexport * from './myaccount/index';\nexport * from './navigation/index';\nexport * from './product/index';\nexport * from './user/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductDetailsUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPDPMatcher = getSuffixUrlMatcher({\n      marker: 'p',\n      paramName: 'productCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PDP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / p / :productCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_DETAILS_URL_MATCHER =\n  new InjectionToken<UrlMatcherFactory>('PRODUCT_DETAILS_URL_MATCHER', {\n    providedIn: 'root',\n    factory: () =>\n      getProductDetailsUrlMatcherFactory(\n        inject(UrlMatcherService),\n        inject(DEFAULT_URL_MATCHER)\n      ),\n  });\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          product: {\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-details-page.module';\nexport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductListingUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPLPMatcher = getSuffixUrlMatcher({\n      marker: 'c',\n      paramName: 'categoryCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PLP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / c / :categoryCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_LISTING_URL_MATCHER =\n  new InjectionToken<UrlMatcherFactory>('PRODUCT_LISTING_URL_MATCHER', {\n    providedIn: 'root',\n    factory: () =>\n      getProductListingUrlMatcherFactory(\n        inject(UrlMatcherService),\n        inject(DEFAULT_URL_MATCHER)\n      ),\n  });\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\n        // @ts-ignore\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          category: {\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductListingPageModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-listing-page.module';\nexport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-details-page/index';\nexport * from './product-listing-page/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { ActivatedRoutesService, UnifiedInjector } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { ContextToken } from './context.model';\n\n/**\n * Resolves the context for the specific route, based on the property `data.cxContext`\n * defined in the Angular Route.\n */\n@Injectable({ providedIn: 'root' })\nexport class RoutingContextService {\n  constructor(\n    protected activatedRoutesService: ActivatedRoutesService,\n    protected injector: UnifiedInjector\n  ) {}\n\n  /**\n   * Combined context token mapping consisting of all mappings defined in currently\n   * Activated Angular Routes.\n   *\n   * The context token mapping is read from each Route's property `data.cxContext`.\n   */\n  protected readonly contextTokenMapping$: Observable<\n    Record<ContextToken, any>\n  > = this.activatedRoutesService.routes$.pipe(\n    map((routes) => this.getRoutesContextTokenMapping(routes)),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  /**\n   * Returns the merged context token mapping, consisting of mappings\n   * defined in all Activated Angular Routes.\n   */\n  protected getRoutesContextTokenMapping(\n    routes: ActivatedRouteSnapshot[]\n  ): Record<ContextToken, any> {\n    return Object.assign({}, ...routes.map((route) => route?.data?.cxContext));\n  }\n\n  /**\n   * Resolves the specified `contextToken` from `cxContext` data parameter of the activated Angular Routes.\n   * @param contextToken\n   *\n   * @returns instance from the root injector if defined, otherwise `undefined`.\n   */\n  get<T>(contextToken: ContextToken): Observable<T | undefined> {\n    return this.contextTokenMapping$.pipe(\n      switchMap((contextMapping) => {\n        const providerToken = contextMapping?.[contextToken];\n        return !!providerToken\n          ? this.injector.get<T>(providerToken)\n          : of(undefined);\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { ContextToken } from './context.model';\nimport { RoutingContextService } from './routing-context.service';\n\n/**\n * Generic service for resolving the context for the UI components.\n */\n@Injectable({ providedIn: 'root' })\nexport class ContextService {\n  constructor(protected routingContextService: RoutingContextService) {}\n\n  /**\n   * Returns the context for the given token.\n   */\n  get<T>(contextToken: ContextToken): Observable<T | undefined> {\n    return this.resolveContext<T>(contextToken).pipe(\n      distinctUntilChanged(),\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n  }\n\n  /**\n   * Resolves the context for the given token.\n   */\n  protected resolveContext<T>(\n    contextToken: ContextToken\n  ): Observable<T | undefined> {\n    return this.routingContextService.get(contextToken);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './context.service';\nexport * from './routing-context.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Params } from '@angular/router';\nimport { CxEvent, PageContext } from '@spartacus/core';\n\n/**\n * Indicates that a user navigated to an arbitrary page.\n */\nexport class NavigationEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'NavigationEvent';\n  /**\n   * The page's context\n   */\n  context: PageContext;\n  /**\n   * The route's semantic name\n   */\n  semanticRoute?: string;\n  /**\n   * The current URL\n   */\n  url: string;\n  /**\n   * The current URL's params\n   */\n  params: Params;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CxEvent } from '@spartacus/core';\nimport { NavigationEvent } from '../navigation/navigation.event';\n\n/**\n * Indicates that a user visited an arbitrary page.\n */\nexport abstract class PageEvent extends CxEvent {\n  /**\n   * `NavigationEvent`'s payload\n   */\n  navigation: NavigationEvent;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a home page.\n */\nexport class HomePageEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'HomePageEvent';\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { createFrom, EventService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NavigationEvent } from '../navigation/navigation.event';\nimport { HomePageEvent } from './home-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomePageEventBuilder {\n  constructor(protected eventService: EventService) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(HomePageEvent, this.buildHomePageEvent());\n  }\n\n  protected buildHomePageEvent(): Observable<HomePageEvent> {\n    return this.eventService.get(NavigationEvent).pipe(\n      filter((navigationEvent) => navigationEvent.semanticRoute === 'home'),\n      map((navigationEvent) =>\n        createFrom(HomePageEvent, {\n          navigation: navigationEvent,\n        })\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { HomePageEventBuilder } from './home-page-event.builder';\n\n@NgModule({})\nexport class HomePageEventModule {\n  constructor(_homePageEventBuilder: HomePageEventBuilder) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './home-page-event.builder';\nexport * from './home-page-event.module';\nexport * from './home-page.events';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { RouterNavigatedAction, ROUTER_NAVIGATED } from '@ngrx/router-store';\nimport { ActionsSubject } from '@ngrx/store';\nimport {\n  ActivatedRouterStateSnapshot,\n  createFrom,\n  EventService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NavigationEvent } from './navigation.event';\n\n/**\n * A builder for the NavigationEvent\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationEventBuilder {\n  constructor(\n    protected actions: ActionsSubject,\n    protected eventService: EventService\n  ) {\n    this.register();\n  }\n\n  /**\n   * Registers events\n   */\n  protected register(): void {\n    this.eventService.register(NavigationEvent, this.buildNavigationEvent());\n  }\n\n  /**\n   * Builds the navigation events\n   */\n  protected buildNavigationEvent(): Observable<NavigationEvent> {\n    return this.getNavigatedEvent().pipe(\n      map((state) =>\n        createFrom(NavigationEvent, {\n          context: state.context,\n          semanticRoute: state.semanticRoute,\n          url: state.url,\n          params: state.params,\n        })\n      )\n    );\n  }\n\n  private getNavigatedEvent(): Observable<ActivatedRouterStateSnapshot> {\n    return this.actions.pipe(\n      ofType<RouterNavigatedAction<ActivatedRouterStateSnapshot>>(\n        ROUTER_NAVIGATED\n      ),\n      map((event) => event.payload.routerState)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { NavigationEventBuilder } from './navigation-event.builder';\n\n@NgModule({})\nexport class NavigationEventModule {\n  constructor(_navigationEventBuilder: NavigationEventBuilder) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './navigation-event.builder';\nexport * from './navigation-event.module';\nexport * from './navigation.event';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './page.events';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Category, Price } from '@spartacus/core';\nimport { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a product details page.\n */\nexport class ProductDetailsPageEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'ProductDetailsPageEvent';\n  categories?: Category[];\n  code?: string;\n  name?: string;\n  price?: Price;\n}\n\n/**\n * Indicates that a user visited a category page.\n */\nexport class CategoryPageResultsEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'CategoryPageResultsEvent';\n  categoryCode: string;\n  categoryName?: string;\n  numberOfResults: Number;\n}\n\n/**\n * Indicates that the a user visited the search results page,\n * and that the search results have been retrieved.\n */\nexport class SearchPageResultsEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'SearchPageResultsEvent';\n  searchTerm: string;\n  numberOfResults: Number;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  createFrom,\n  EventService,\n  ProductSearchService,\n  ProductService,\n} from '@spartacus/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { filter, map, skip, switchMap, take } from 'rxjs/operators';\nimport { NavigationEvent } from '../navigation/navigation.event';\nimport {\n  CategoryPageResultsEvent,\n  ProductDetailsPageEvent,\n  SearchPageResultsEvent,\n} from './product-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductPageEventBuilder {\n  constructor(\n    protected eventService: EventService,\n    protected productService: ProductService,\n    protected productSearchService: ProductSearchService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(\n      SearchPageResultsEvent,\n      this.buildSearchPageResultsEvent()\n    );\n    this.eventService.register(\n      ProductDetailsPageEvent,\n      this.buildProductDetailsPageEvent()\n    );\n    this.eventService.register(\n      CategoryPageResultsEvent,\n      this.buildCategoryResultsPageEvent()\n    );\n  }\n\n  protected buildProductDetailsPageEvent(): Observable<ProductDetailsPageEvent> {\n    return this.eventService.get(NavigationEvent).pipe(\n      filter((navigationEvent) => navigationEvent.semanticRoute === 'product'),\n      switchMap((navigationEvent) =>\n        this.productService.get(navigationEvent.context.id).pipe(\n          filter((product) => Boolean(product)),\n          take(1),\n          map((product) =>\n            createFrom(ProductDetailsPageEvent, {\n              navigation: navigationEvent,\n              categories: product?.categories,\n              code: product?.code,\n              name: product?.name,\n              price: product?.price,\n            })\n          )\n        )\n      )\n    );\n  }\n\n  protected buildCategoryResultsPageEvent(): Observable<CategoryPageResultsEvent> {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(NavigationEvent).pipe(\n      switchMap((navigationEvent) => {\n        if (navigationEvent?.semanticRoute !== 'category') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) =>\n            createFrom(CategoryPageResultsEvent, {\n              navigation: navigationEvent,\n              ...{\n                categoryCode: navigationEvent?.context?.id,\n                numberOfResults: searchResults?.pagination?.totalResults ?? 0,\n                categoryName: searchResults.breadcrumbs?.[0].facetValueName,\n              },\n            })\n          )\n        );\n      })\n    );\n  }\n\n  protected buildSearchPageResultsEvent(): Observable<SearchPageResultsEvent> {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(NavigationEvent).pipe(\n      switchMap((navigationEvent) => {\n        if (navigationEvent?.semanticRoute !== 'search') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) =>\n            createFrom(SearchPageResultsEvent, {\n              navigation: navigationEvent,\n              ...{\n                searchTerm: searchResults?.freeTextSearch ?? '',\n                numberOfResults: searchResults?.pagination?.totalResults ?? 0,\n              },\n            })\n          )\n        );\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { ProductPageEventBuilder } from './product-page-event.builder';\n\n@NgModule({})\nexport class ProductPageEventModule {\n  constructor(_productPageEventBuilder: ProductPageEventBuilder) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './product-page-event.builder';\nexport * from './product-page-event.module';\nexport * from './product-page.events';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './home/index';\nexport * from './navigation/index';\nexport * from './page/index';\nexport * from './product/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MediaConfig } from '../../shared/components/media/media.config';\n\nexport const mediaConfig: MediaConfig = {\n  mediaFormats: {\n    mobile: { width: 400 },\n    tablet: { width: 770 },\n    desktop: { width: 1140 },\n    widescreen: { width: 1400 },\n    // product media\n    cartIcon: { width: 65 },\n    thumbnail: { width: 96 },\n    product: { width: 284 },\n    zoom: { width: 515 },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LayoutConfig } from '../../layout/config/layout-config';\n\n/**\n * The layout configuration is used to define the overall layout of the storefront.\n * The configuration includes the following aspects:\n * - breakpoint layout (AKA screen layout)\n * - Page sections slot configuration (i.e. header vs footer)\n * - page template slot configuration (i.e. landing page template vs PDP page template)\n * - deferred loading configuration\n *\n * The page slot configurations is directly related to the data in the backend. If you use the\n * Spartacus sample-data, you will have an aligned setup. However, if you introduce custom page\n * templates and/or slots, you most likely need to further adjust or replace this configuration.\n */\nexport const layoutConfig: LayoutConfig = {\n  // deferredLoading: {\n  //   strategy: DeferLoadingStrategy.DEFER,\n  //   intersectionMargin: '50px',\n  // },\n  layoutSlots: {\n    header: {\n      lg: {\n        slots: [\n          'PreHeader',\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n    },\n    navigation: {\n      lg: { slots: [] },\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      pageFold: 'Section2B',\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      pageFold: 'Section2',\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\n    },\n    ProductGridPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsListSlot',\n        'Section4',\n      ],\n    },\n    SearchResultsGridPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsGridSlot',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      lg: {\n        pageFold: 'UpSelling',\n      },\n      pageFold: 'Summary',\n      slots: [\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n    CheckoutLoginPageTemplate: {\n      slots: ['RightContentSlot'],\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ValueProvider } from '@angular/core';\nimport { provideCmsStructure } from '../../cms-structure/utils/cms-structure.util';\n\nexport const defaultCmsContentProviders: ValueProvider[] = [\n  provideCmsStructure({\n    componentId: 'HamburgerMenuComponent',\n    pageSlotPosition: 'PreHeader',\n  }),\n  provideCmsStructure({\n    componentId: 'LoginComponent',\n    pageSlotPosition: 'SiteLogin',\n  }),\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-media.config';\nexport * from './layout-config';\nexport * from './static-cms-structure';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OnNavigateConfig } from './on-navigate-config';\n\nexport const defaultOnNavigateConfig: OnNavigateConfig = {\n  enableResetViewOnNavigate: {\n    active: true,\n    ignoreQueryString: false,\n    ignoreRoutes: [],\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class OnNavigateConfig {\n  enableResetViewOnNavigate?: {\n    active?: boolean;\n    ignoreQueryString?: boolean;\n    ignoreRoutes?: string[];\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends OnNavigateConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-on-navigate-config';\nexport * from './on-navigate-config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ViewportScroller } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentRef,\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport { Router, Scroll } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, pairwise } from 'rxjs/operators';\nimport { OnNavigateConfig } from './config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnNavigateService {\n  protected subscription: Subscription;\n\n  get hostComponent(): ComponentRef<any> {\n    return this.injector.get(ApplicationRef)?.components?.[0];\n  }\n\n  constructor(\n    protected config: OnNavigateConfig,\n    protected router: Router,\n    protected viewportScroller: ViewportScroller,\n    protected injector: Injector\n  ) {}\n\n  /**\n   * Reads configuration and enables features based on flags set.\n   */\n  initializeWithConfig(): void {\n    if (this.config?.enableResetViewOnNavigate?.active) {\n      this.setResetViewOnNavigate(this.config.enableResetViewOnNavigate.active);\n    }\n  }\n\n  /**\n   * Resets view back to the original position when performing a back navigation and to the top when performing a front navigation\n   * and sets the focus back to the top of the page before skiplinks for any type of navigation\n   * @param enable Enable or disable this feature\n   */\n  setResetViewOnNavigate(enable: boolean): void {\n    this.subscription?.unsubscribe();\n\n    if (enable) {\n      // Disable automatic scroll restoration to avoid race conditions\n      this.viewportScroller.setHistoryScrollRestoration('manual');\n\n      this.subscription = this.router.events\n        .pipe(\n          filter((event): event is Scroll => event instanceof Scroll),\n          pairwise()\n        )\n        .subscribe((event) => {\n          const previousRoute = event[0];\n          const currentRoute = event[1];\n\n          const position = currentRoute.position;\n          if (position) {\n            // allow the pages to be repainted before scrolling to proper position\n            setTimeout(() => this.viewportScroller.scrollToPosition(position));\n          } else {\n            if (\n              this.config.enableResetViewOnNavigate?.ignoreQueryString &&\n              this.isPathEqual(previousRoute, currentRoute)\n            ) {\n              return;\n            }\n\n            if (this.isChildRoute(currentRoute)) {\n              return;\n            }\n\n            setTimeout(\n              () => this.viewportScroller.scrollToPosition([0, 0]),\n              100\n            );\n          }\n\n          this.hostComponent?.location?.nativeElement.focus();\n        });\n    }\n  }\n\n  /**\n   * Verifies if the current route is a child route from the given ignore config route\n   *\n   * @param route\n   * @returns boolean whether the route is a child route\n   */\n  private isChildRoute(route: Scroll): boolean {\n    return (\n      this.config.enableResetViewOnNavigate?.ignoreRoutes?.some((configRoute) =>\n        route.routerEvent.urlAfterRedirects.split('/').includes(configRoute)\n      ) ?? false\n    );\n  }\n\n  /**\n   * Verifies if the previous and current route are the same without the query string\n   *\n   * @param previousRoute\n   * @param currentRoute\n   * @returns boolean depending on the previous and current route are equal without the query strings\n   */\n  private isPathEqual(previousRoute: Scroll, currentRoute: Scroll): boolean {\n    return (\n      previousRoute.routerEvent.urlAfterRedirects.split('?')[0] ===\n      currentRoute.routerEvent.urlAfterRedirects.split('?')[0]\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultOnNavigateConfig } from './config/default-on-navigate-config';\nimport { OnNavigateService } from './on-navigate.service';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      anchorScrolling: 'enabled',\n      initialNavigation: 'enabledBlocking',\n    }),\n  ],\n  providers: [\n    provideDefaultConfig(defaultOnNavigateConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: onNavigateFactory,\n      deps: [OnNavigateService],\n      multi: true,\n    },\n  ],\n})\nexport class AppRoutingModule {}\n\nexport function onNavigateFactory(\n  onNavigateService: OnNavigateService\n): () => void {\n  const isReady = () => onNavigateService.initializeWithConfig();\n  return isReady;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './app-routing.module';\nexport * from './config/index';\nexport * from './on-navigate.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AbstractControl,\n  UntypedFormArray,\n  UntypedFormGroup,\n} from '@angular/forms';\n\n/**\n * Utils for Angular forms\n */\nexport namespace FormUtils {\n  /**\n   * Calls the native Angular method `#updateValueAndValidity` for the given from control\n   * and all its descendants (in case when it's `FormGroup` or `FormArray`).\n   *\n   * In particular it's useful for triggering re-emission of observables\n   * `valueChanges` and `statusChanges` for all descendant form controls.\n   *\n   * _Note: Dropping this function may be considered, when it's implemented natively\n   * by Angular. See https://github.com/angular/angular/issues/6170_\n   *\n   * @param control form control\n   * @param options additional options\n   * * `emitEvent`: When true or not given (the default), the `statusChanges` and\n   * `valueChanges` observables emit the latest status and value. When false,\n   * it doesn't trigger observables emission.\n   */\n  export function deepUpdateValueAndValidity(\n    control: AbstractControl,\n    options: { emitEvent?: boolean } = {}\n  ): void {\n    if (\n      control instanceof UntypedFormGroup ||\n      control instanceof UntypedFormArray\n    ) {\n      Object.values(control.controls).forEach(\n        (childControl: AbstractControl) => {\n          deepUpdateValueAndValidity(childControl, options);\n        }\n      );\n    }\n\n    control.updateValueAndValidity({\n      onlySelf: true, // avoid calling `#updateValueAndValidity` for all ancestors\n      emitEvent: options.emitEvent,\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './form-utils';\nexport * from './address-number-utils';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BaseCoreModule } from '@spartacus/core';\nimport { GlobalMessageComponentModule } from './cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from './cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from './cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from './cms-structure/page/component/page-component.module';\nimport { PageLayoutModule } from './cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from './cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from './cms-structure/pwa/pwa.module';\nimport { RoutingModule } from './cms-structure/routing/routing.module';\nimport { SeoModule } from './cms-structure/seo/seo.module';\nimport { KeyboardFocusModule } from './layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from './layout/a11y/skip-link/skip-link.module';\nimport { LayoutModule } from './layout/layout.module';\nimport { StorefrontComponentModule } from './layout/main/storefront-component.module';\nimport { MediaModule } from './shared/components/media/media.module';\n\n@NgModule({\n  imports: [\n    BaseCoreModule.forRoot(),\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageComponentModule.forRoot(),\n    PageSlotModule,\n    SkipLinkModule,\n    KeyboardFocusModule,\n    LayoutModule,\n    RoutingModule.forRoot(),\n    MediaModule.forRoot(),\n    OutletModule.forRoot(),\n    StorefrontComponentModule,\n  ],\n  exports: [LayoutModule, StorefrontComponentModule],\n})\nexport class BaseStorefrontModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * Public API Surface of storefrontlib\n */\n\nexport * from './cms-components/index';\nexport * from './cms-pages/index';\nexport * from './cms-structure/index';\nexport * from './context/index';\nexport * from './events/index';\nexport * from './layout/index';\nexport * from './recipes/index';\nexport * from './router/index';\nexport * from './shared/index';\nexport * from './utils/index';\nexport * from './base-storefront.module';\n\n/** AUGMENTABLE_TYPES_START */\nexport { BREAKPOINT } from './layout/config/layout-config';\nexport { LAUNCH_CALLER } from './layout/launch-dialog/config/launch-config';\nexport { ICON_TYPE } from './cms-components/misc/icon';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.BaseFocusService","i1.PersistFocusService","i1.SelectFocusUtility","i1.EscapeFocusService","i1.AutoFocusService","i1.TabFocusService","i1.TrapFocusService","i1.LockFocusService","i1.KeyboardFocusService","i1.LayoutConfig","i2.LaunchDialogService","i1.OutletService","i2.IntersectionService","i2.DeferLoaderService","i3.OutletRendererService","i2.OutletRendererService","i2.IconConfig","i3","i1.IconLoaderService","i4.IconComponent","i5.SpinnerComponent","i6.ConsentManagementFormComponent","i7.FocusDirective","i1.LaunchDialogService","i2","i2.LayoutConfig","i3.BreakpointService","i2.CmsFeaturesService","i1.CmsComponentsService","i3.ComponentHandlerService","i4.CmsInjectorService","i2.PageSlotService","i4.OutletDirective","i5.ComponentWrapperDirective","i1.PageLayoutService","i3.OutletDirective","i4.PageSlotComponent","i5.PageTemplateDirective","i1","i2.CmsComponentsService","i3.CmsGuardsService","i2.CmsRoutesService","i3.CmsI18nService","i4.CmsGuardsService","i5.CmsComponentsService","i2.CmsPageGuardService","i1.DefaultComponentHandler","i1.CmsComponentData","i4.ComponentHandlerService","i5.CmsInjectorService","i1.PageSlotService","i1.PWAModuleConfig","i1.AddToHomeScreenService","CoreRoutingModule","i3.PageMetaLinkService","i2.SeoConfig","i1.JsonLdScriptFactory","i1.CarouselService","i3.IconComponent","i4","i4.ComponentWrapperDirective","i5.CarouselComponent","i3.SpinnerComponent","i4.ConsentManagementFormComponent","i1.PositioningService","i5.FocusDirective","i6.IconComponent","i1.PopoverService","i2.PopoverDirective","i4.TruncatePipe","i2.AtMessageDirective","i4.TruncateTextPopoverComponent","i6","i1.MediaService","i1.DatePickerService","i3.FormErrorsComponent","i1.IconComponent","i2.FormConfig","i2.GenericLinkComponentService","i4.NgSelectA11yDirective","i5","i1.PaginationConfig","i1.PaginationBuilder","i1.SplitViewService","i2.BreakpointService","i1.AtMessageDirective","i1.SiteContextComponentService","i1.SiteContextSelectorComponent","i2.IconComponent","i1.OutletContextData","i2.TableConfig","i1.TableRendererService","i1.BreakpointService","i2.FilesFormValidators","i6.FileUploadComponent","i7.FormErrorsComponent","i8.AvatarComponent","i4.GenericLinkComponent","i5.MediaComponent","i3.GenericLinkComponent","i4.SupplementHashAnchorsPipe","i2.MediaService","i5.OutletDirective","i6.SpinnerComponent","i1.SkipLinkConfig","i2.KeyboardFocusService","i1.SkipLinkService","i3.FocusDirective","i1.HamburgerMenuService","i1.LaunchDialogModule","i3.KeyboardFocusService","i5.GlobalMessageComponent","i6.OutletDirective","i7.PageLayoutComponent","i8.PageTemplateDirective","i9.PageSlotComponent","i10.FocusDirective","i11.SkipLinkDirective","i12","i3.LaunchDialogService","i1.AddressBookComponentService","i4.CardComponent","i5.AddressFormComponent","i1.FileDownloadService","i1.FileReaderService","i1.MyCouponsComponentService","i2.MyCouponsComponentService","i4.SpinnerComponent","i7.SortingComponent","i8.PaginationComponent","i9.CouponCardComponent","i4.SortingComponent","i5.PaginationComponent","i6.MediaComponent","i7.SpinnerComponent","i8","i3.CardComponent","i2.HamburgerMenuService","i5.IconComponent","i6.GenericLinkComponent","i2.NavigationService","i4.NavigationUIComponent","i1.SearchBoxComponentService","i2.CmsComponentData","i7.IconComponent","i8.HighlightPipe","i3.SelectFocusUtility","i3.ViewConfig","i1.ProductListItemContextSource","i3.MediaComponent","i5.InnerComponentsHostDirective","i7.StarRatingComponent","i1.ProductListComponentService","i5.ProductListItemComponent","i6.ProductGridItemComponent","i7","i2.ProductListComponentService","i4.ViewConfig","i6.SortingComponent","i7.PaginationComponent","i8.ProductListItemComponent","i9.ProductGridItemComponent","i10.ProductViewComponent","i11.ProductScrollComponent","i1.ProductFacetService","i1.FacetService","i4.FacetComponent","i3.FacetListComponent","i4.ActiveFacetsComponent","i2.MediaComponent","i4.InnerComponentsHostDirective","i4.CarouselComponent","i5.ProductCarouselItemComponent","i2.CurrentProductService","i1.CurrentProductService","i4.StarRatingComponent","i5.StarRatingComponent","i6.FormErrorsComponent","i6.FocusDirective","i2.CmsPageGuard","i1.RoutingContextService","i1.HomePageEventBuilder","i1.NavigationEventBuilder","i1.ProductPageEventBuilder","i1.OnNavigateConfig","i3.RoutingModule","i4.MediaModule","i5.OutletModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIG;AAEH;AACO,MAAM,UAAU,GAAG,eAAe,CAAC;AAC1C;AACO,MAAM,gBAAgB,GAAG,qBAAqB,CAAC;AA0E1C,IAAA,UAeX;AAfD,CAAA,UAAY,SAAS,EAAA;AACnB;;AAEG;AACH,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf;;AAEG;AACH,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX;;;;AAIG;AACH,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAfW,SAAS,KAAT,SAAS,GAepB,EAAA,CAAA,CAAA;;AClGD;;;;AAIG;MAOmB,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFxB,MAAM,EAAA,CAAA,CAAA;2FAEE,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAHrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACVD;;;;AAIG;AAcH;;;;;;;;;AASG;MAEmB,kBAAkB,CAAA;IAetC,WACY,CAAA,UAAmC,EACnC,OAAyB,EAAA;AADzB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAyB;AACnC,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAkB;AAVrC;;;AAGG;AACO,QAAA,IAAa,CAAA,aAAA,GAAoB,EAAE,CAAC;KAO1C;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAC/B,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;KAC5B;;AAGD,IAAA,WAAW,CAAC,QAAuB,EAAA;;KAElC;AAED;;;;;AAKG;IACO,uBAAuB,GAAA;AAC/B,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,KAAK,IAAI,CAAC,aAAa,EAAE;AAC9D,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;AAClC,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,IAAc,IAAI,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACtC;AAED;;;;;;AAMG;IACH,IAAc,gBAAgB,CAAC,QAAgB,EAAA;QAC7C,IAAI,IAAI,CAAC,wBAAwB,EAAE;AACjC,YAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,IAAc,wBAAwB,GAAA;AACpC,QAAA,QACE,IAAI,CAAC,QAAQ,KAAK,SAAS;YAC3B,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,OAAO,CAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAChC,KAAK,CAAC,CAAC;AACR,YAAA,EACE,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG;AACzB,iBAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;AAC7B,oBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;oBACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,CACpD,EACD;KACH;;+GAjFmB,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGAAlB,kBAAkB,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,eAAA,EAAA,eAAA,EAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBADvC,SAAS;6HAc+B,QAAQ,EAAA,CAAA;sBAA9C,KAAK;;sBAAI,WAAW;uBAAC,eAAe,CAAA;;;AC1CvC;;;;AAIG;AAMH;;;;;;;;;;;AAWG;AAEG,MAAO,qBAAsB,SAAQ,kBAAkB,CAAA;AAD7D,IAAA,WAAA,GAAA;;QAEY,IAAA,CAAA,aAAa,GAAuB;AAC5C,YAAA,iBAAiB,EAAE,IAAI;SACxB,CAAC;;AAMgC,QAAA,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;KAwCtD;IAtC4B,eAAe,GAAA;QACxC,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC3B,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACxB,SAAA;KACF;AAEoC,IAAA,aAAa,CAAC,KAAoB,EAAA;QACrE,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAA;KACF;AAED;;AAEG;AACH,IAAA,IAAc,kBAAkB,GAAA;;AAC9B,QAAA,OAAO,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,iBAAiB,CAAC;KACvC;AAED;;;AAGG;AACO,IAAA,YAAY,CAAC,KAAoB,EAAA;;QAEzC,IAAI,KAAK,CAAC,OAAO,EAAE;AACjB,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;;AAED,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;AACxB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;;AAED,QAAA,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAE,KAAK,CAAC,MAAsB,CAAC,OAAO,CAAC,EAAE;AACzE,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;;kHAhDU,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sGAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,uBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,SAAS;8BAU0B,UAAU,EAAA,CAAA;sBAA3C,WAAW;uBAAC,mBAAmB,CAAA;gBAEL,eAAe,EAAA,CAAA;sBAAzC,YAAY;uBAAC,WAAW,CAAA;gBAMY,aAAa,EAAA,CAAA;sBAAjD,YAAY;uBAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAA;;;ACxCrC;;;;AAIG;AAQH;AACM,MAAO,mBACX,SAAQ,qBAAqB,CAAA;IAQ7B,WACY,CAAA,UAAsB,EACtB,OAAyB,EAAA;AAEnC,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAHjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAkB;QAP3B,IAAA,CAAA,aAAa,GAAqB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;AAGlD,QAAA,IAAM,CAAA,MAAA,GAAqB,EAAE,CAAC;KAOvC;IAED,QAAQ,GAAA;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;AACjB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AACrB,YAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AACpB,SAAA;KACF;;gHArBU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oGAAnB,mBAAmB,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAF/B,SAAS;;;ACXV;;;;AAIG;AAMH,MAAM,YAAY,GAAG,KAAK,CAAC;AAE3B;;;;;AAKG;AAIG,MAAO,mBAAoB,SAAQ,gBAAgB,CAAA;AAHzD,IAAA,WAAA,GAAA;;;;AAMY,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;KAiC7C;AA/BC,IAAA,GAAG,CAAC,KAAqB,EAAA;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC;KAC9C;AAED;;;AAGG;IACH,GAAG,CAAC,GAAuB,EAAE,KAAqB,EAAA;AAChD,QAAA,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,YAAY,EAAE,GAAG,CAAC,CAAC;AAC5C,SAAA;KACF;AAED;;AAEG;AACH,IAAA,KAAK,CAAC,KAAc,EAAA;QAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC;KAC1C;AAED;;;AAGG;IACH,mBAAmB,CACjB,IAAoC,EACpC,MAA2B,EAAA;QAE3B,OAAO,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,KAAK,IAAG,MAAM,CAAC,KAAK,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,YAAY,CAAC,gBAAgB,CAAC,CAAC;KAC5E;;gHAnCU,mBAAmB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACpBD;;;;AAIG;AAcH;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;AAEG,MAAO,qBACX,SAAQ,mBAAmB,CAAA;AAqB3B,IAAA,WAAW,CAAC,KAAqB,EAAA;AAC/B,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAEvC,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,cAAc,EAAE,CAAC;AACxB,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,eAAe,EAAE,CAAC;KAC1B;IAED,WACY,CAAA,UAAsB,EACtB,OAA4B,EAAA;AAEtC,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAHjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAqB;AA3B9B,QAAA,IAAa,CAAA,aAAA,GAAuB,EAAE,CAAC;AAEjD;;;;AAIG;;AAEO,QAAA,IAAM,CAAA,MAAA,GAAuB,EAAE,CAAC;KAsBzC;IAED,QAAQ,GAAA;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;AACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;KAC7C;IAES,uBAAuB,GAAA;AAC/B,QAAA,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AACpC,SAAA;QACD,KAAK,CAAC,uBAAuB,EAAE,CAAC;KACjC;AAED;;AAEG;IACH,eAAe,GAAA;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1C,SAAA;KACF;AAED,IAAA,IAAc,WAAW,GAAA;QACvB,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC;KAChE;AAED;;;AAGG;AACH,IAAA,IAAc,GAAG,GAAA;;AACf,QAAA,OAAQ,MAAA,IAAI,CAAC,MAA6B,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC;KACjD;AAED;;AAEG;AACH,IAAA,IAAc,KAAK,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CACrC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAA4B,CAClC,CAAC;KACH;;kHA7EU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sGAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,qBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,SAAS;gIAoB2B,IAAI,EAAA,CAAA;sBAAtC,WAAW;AAAC,gBAAA,IAAA,EAAA,CAAA,CAAQ,KAAA,EAAA,UAAU,EAAE,CAAA;gBAGjC,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AClEnC;;;;AAIG;MAQU,kBAAkB,CAAA;AAH/B,IAAA,WAAA,GAAA;AAIE;;;AAGG;QACO,IAAA,CAAA,kBAAkB,GAAa;YACvC,SAAS;YACT,QAAQ;YACR,YAAY;YACZ,OAAO;YACP,QAAQ;YACR,UAAU;SACX,CAAC;;;;;AAOQ,QAAA,IAAuB,CAAA,uBAAA,GAC/B,mDAAmD,CAAC;KA8DvD;IA5DC,KAAK,CAAC,IAAoC,EAAE,QAAgB,EAAA;AAC1D,QAAA,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,EAAE,EAAE;AAChC,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;AACD,QAAA,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,gBAAgB,CAAC,QAAQ,CAA4B,CAC5D,CAAC;KACH;IAED,kBAAkB,CAChB,IAAoC,EACpC,MAAA,GAA0B,EAAE,SAAS,EAAE,IAAI,EAAE,EAAA;QAE7C,MAAM,QAAQ,GACZ,QAAO,MAAM,aAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,SAAS,CAAA,KAAK,QAAQ,GAAG,MAAM,CAAC,SAAS,GAAG,aAAa,CAAC;;QAE3E,QACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC3D,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC,EAClD;KACH;AAED;;;;;;;AAOG;IACH,aAAa,CACX,IAAoC,EACpC,MAAM,GAAG,KAAK,EACd,SAAS,GAAG,KAAK,EAAA;AAEjB,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC1C,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,uBAAuB,CAAC;AACnC,SAAA;AACD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB;aACrC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC;aACzB,IAAI,CAAC,GAAG,CAAC,CAAC;AACb,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,KAC1C,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,CAC9C,CAAC;KACH;AAED;;;;;;;;;AASG;AACO,IAAA,QAAQ,CAAC,EAAe,EAAA;AAChC,QAAA,OAAO,EAAE,CAAC,YAAY,KAAK,IAAI,CAAC;KACjC;;+GAjFU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACXD;;;;AAIG;AAUG,MAAO,kBAAmB,SAAQ,mBAAmB,CAAA;AACzD,IAAA,WAAA,CAAsB,eAAmC,EAAA;AACvD,QAAA,KAAK,EAAE,CAAC;AADY,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAoB;KAExD;AAED,IAAA,WAAW,CAAC,MAAyB,EAAA;QACnC,OAAO,CAAC,EAAC,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,aAAa,CAAA,CAAC;KAChC;AAED,IAAA,YAAY,CACV,IAAiB,EACjB,MAAyB,EACzB,KAAoB,EAAA;;AAEpB,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;AAC5B,YAAA,IAAI,IAAI,KAAK,KAAK,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;gBACpC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,mBAAmB,EAAE;oBAC/B,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe;AACjB,yBAAA,kBAAkB,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAC5C,KAAK,EAAE,CAAC;AACb,iBAAA;AACF,aAAA;AACF,SAAA;KACF;;+GA3BU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACbD;;;;AAIG;AAcH;;;;;;AAMG;AAEG,MAAO,oBACX,SAAQ,qBAAqB,CAAA;AAU7B;;;AAGG;AAEH,IAAA,YAAY,CAAC,KAAoB,EAAA;QAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACzC,YAAA,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAA;AACD,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KACtD;IAED,WACY,CAAA,UAAsB,EACtB,OAA2B,EAAA;AAErC,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAHjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAoB;QArB7B,IAAA,CAAA,aAAa,GAAsB,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;AAK3D,QAAA,IAAA,CAAA,GAAG,GAAG,IAAI,YAAY,EAAW,CAAC;KAmB3C;IAED,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACzC,YAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;AAC5B,SAAA;QACD,KAAK,CAAC,QAAQ,EAAE,CAAC;KAClB;;iHAnCU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;qGAApB,oBAAoB,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,SAAS;+HAUE,GAAG,EAAA,CAAA;sBAAZ,MAAM;gBAOP,YAAY,EAAA,CAAA;sBADX,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;ACzC5C;;;;AAIG;AAaG,MAAO,gBAAiB,SAAQ,kBAAkB,CAAA;AACtD;;AAEG;IACH,kBAAkB,CAChB,IAAoC,EACpC,MAAA,GAA0B,EAAE,SAAS,EAAE,IAAI,EAAE,EAAA;QAE7C,IAAI,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,SAAS,MAAK,OAAO,EAAE;AACjC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;aAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;AAC/C,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;AACxE,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC;AACtE,SAAA;KACF;AAED;;AAEG;IACH,iBAAiB,CACf,IAAoC,EACpC,MAA0B,EAAA;AAE1B,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;KAC1E;AAED;;;;;;AAMG;IACO,YAAY,CACpB,IAAyB,EACzB,KAAqB,EAAA;AAErB,QAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACpB,OAAO;AACR,SAAA;QACD,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CACzB,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,gBAAgB,CACpB,CAAI,CAAA,EAAA,UAAU,CAAK,EAAA,EAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,EAAA,CAAI,CACZ,CAC7B,CAAC;AACF,QAAA,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;KACtD;;6GA/CU,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AChBD;;;;AAIG;AAaH;;;;;;;;;;;;;;;;;;;;;AAqBG;AAEG,MAAO,kBACX,SAAQ,oBAAoB,CAAA;IAS5B,WACY,CAAA,UAAsB,EACtB,OAAyB,EAAA;AAEnC,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAHjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAkB;;QAP3B,IAAA,CAAA,aAAa,GAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;KAU9D;AAED;;AAEG;IACH,eAAe,GAAA;QACb,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;QACD,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACnD,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;KACF;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;;;AAEhC,QAAA,IAAI,CAAC,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAgC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,CAAA,EAAE;;AAErE,YAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AAC1B,gBAAA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,aAAA;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;AACD,QAAA,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC5B;AAED;;;AAGG;AACH,IAAA,WAAW,CAAC,KAAqB,EAAA;;QAC/B,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,EAAC,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,MAAM,CAAA,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,EAAE;AAChD,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAE,CAAC;AAC9B,aAAA;AAAM,iBAAA;AACJ,gBAAA,KAAK,CAAC,MAAsB,CAAC,KAAK,EAAE,CAAC;AACvC,aAAA;AACF,SAAA;AACD,QAAA,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1B;AAED;;AAEG;AACH,IAAA,IAAc,iBAAiB,GAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/D;AAED;;;AAGG;AACH,IAAA,IAAc,eAAe,GAAA;;QAC3B,OAAO,CAAC,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,CAAA,CAAC;KACjC;AAED;;;;AAIG;AACH,IAAA,IAAY,cAAc,GAAA;AACxB,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAChE;;+GA9EU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGAAlB,kBAAkB,EAAA,eAAA,EAAA,IAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,SAAS;;;ACvCV;;;;AAIG;AASG,MAAO,eAAgB,SAAQ,gBAAgB,CAAA;AACnD;;AAEG;AACH,IAAA,OAAO,CACL,IAAiB,EACjB,MAAsB,EACtB,SAAqB,EACrB,KAAoB,EAAA;AAEpB,QAAA,IAAI,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,GAAG,EAAE;AACf,YAAA,MAAM,IAAI,GACR,MAAM,CAAC,GAAG,KAAK,QAAQ;kBACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;kBAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAE7C,YAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,KAAK,EAAE,CAAC;YAEd,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;KACF;AAED;;;;AAIG;AACO,IAAA,kBAAkB,CAC1B,IAAiB,EACjB,MAAsB,EACtB,SAAqB,EAAA;;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;AACR,SAAA;;AAED,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;;AAG1E,QAAA,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CACpC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,CAC3D,CAAC;AAEF,QAAA,IAAI,gBAAgB,GAAG,mBAAmB,GAAG,SAAS,CAAC;AACvD,QAAA,IACE,SAAS,KAAoB,CAAA;YAC7B,gBAAgB,IAAI,iBAAiB,EACrC;YACA,gBAAgB,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,IAAI,SAAS,KAAoB,CAAA,CAAA,0BAAI,gBAAgB,GAAG,CAAC,EAAE;AACzD,YAAA,gBAAgB,GAAG,iBAAiB,GAAG,CAAC,CAAC;AAC1C,SAAA;QAED,MAAM,oBAAoB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAC/D,CAAC,GAAG,KACF,GAAG,CAAC,UAAU;YACd,CAAC,IAAI,CAAC,WAAW,GAAG,iBAAiB,IAAI,gBAAgB,CAC5D,CAAC;AAEF,QAAA,OAAO,oBAAoB,CAAC;KAC7B;AAES,IAAA,QAAQ,CAChB,IAAiB,EACjB,MAAsB,EACtB,SAAqB,EAAA;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAG,MAAM,KAAN,IAAA,IAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,SAAS,CACjC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAC/C,CAAC;AAEF,QAAA,IAAI,CAAC,WAAW,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;YACtC,WAAW,GAAG,CAAC,CAAC;AACjB,SAAA;QACD,WAAW,IAAI,SAAS,CAAC;AAEzB,QAAA,IAAI,SAAS,gCAAwB,WAAW,KAAI,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,MAAM,CAAA,EAAE;AAClE,YAAA,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AACjC,SAAA;QACD,IAAI,SAAS,KAAoB,CAAA,CAAA,0BAAI,WAAW,GAAG,CAAC,EAAE;YACpD,WAAW,GAAG,CAAC,CAAC;AACjB,SAAA;AACD,QAAA,OAAO,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;KACjD;AAED;;;AAGG;IACO,cAAc,CACtB,IAAiB,EACjB,MAAsB,EAAA;AAEtB,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,KAAK,CAAC,CAAC;AACzD,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAChD,QAAA,IAAI,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D,QAAA,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAC1B,KAAK,GAAG,CAAC,CAAC;AACX,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;KACxB;IAES,WAAW,CACnB,IAAiB,EACjB,MAAsB,EAAA;AAEtB,QAAA,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,IAAI,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;AAC7D,YAAA,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AACrD,SAAA;AAAM,aAAA;YACL,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACvC,SAAA;KACF;AAED;;;;;;AAMG;IACH,aAAa,CACX,IAAiB,EACjB,MAAM,GAAG,KAAK,EACd,SAAS,GAAG,KAAK,EAAA;AAEjB,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;KACpE;AAES,IAAA,QAAQ,CAAC,EAAe,EAAA;AAChC,QAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC;QACrC,MAAM,QAAQ,GAAG,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,OAAO,CAAC;QAEhC,QACE,EAAE,KAAK,KAAK;aACX,CAAC,CAAC,QAAQ;gBACT,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,EACvE;KACH;;4GAjJU,eAAe,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA;2FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACZD;;;;AAIG;AAOH;;;;AAIG;AAEG,MAAO,iBAAkB,SAAQ,kBAAkB,CAAA;AAQvD,IAAA,aAAa,CAAC,KAAoB,EAAA;;AAChC,QAAA,IAAI,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,EAAE;AACpB,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAmB,CAAA,wBAAA,KAAK,CAAC,CAAC;AACtE,SAAA;KACF;AAGD,IAAA,iBAAiB,CAAC,KAAoB,EAAA;;AACpC,QAAA,IAAI,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAmB,CAAA,CAAA,wBAAA,KAAK,CAAC,CAAC;AACtE,SAAA;KACF;IAED,WACY,CAAA,UAAsB,EACtB,OAAwB,EAAA;AAElC,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAHjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAiB;;QArB1B,IAAA,CAAA,aAAa,GAAmB,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;;AAG9C,QAAA,IAAM,CAAA,MAAA,GAAmB,EAAE,CAAC;KAqBrC;;8GA1BU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,oBAAA,EAAA,uBAAA,EAAA,mBAAA,EAAA,2BAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,SAAS;4HASR,aAAa,EAAA,CAAA;sBADZ,YAAY;uBAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAQ9C,iBAAiB,EAAA,CAAA;sBADhB,YAAY;uBAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AC/B/C;;;;AAIG;AAcG,MAAO,gBAAiB,SAAQ,eAAe,CAAA;AACnD;;;;AAIG;AACH,IAAA,oBAAoB,CAAC,IAAiB,EAAA;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KAC5C;AAED;;;;AAIG;AACH,IAAA,SAAS,CACP,IAAiB,EACjB,MAAuB,EACvB,SAAqB,EACrB,KAAc,EAAA;QAEd,MAAM,SAAS,GAAkB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAE1D,QAAA,IAAI,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;AAEvE,QAAA,MAAM,eAAe,GACnB,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,SAAS,CAAC,MAAM;AACvC,aAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC7C,aAAC,KAAK,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAE9D,QAAA,IAAI,eAAe,EAAE;AACnB,YAAA,IAAI,KAAK,IAAI,SAAS,CAAC,MAAM,EAAE;gBAC7B,KAAK,GAAG,CAAC,CAAC;AACX,aAAA;YACD,IAAI,KAAK,GAAG,CAAC,EAAE;AACb,gBAAA,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9B,aAAA;YAED,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,YAAA,MAAM,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YAE5B,EAAE,CAAC,KAAK,EAAE,CAAC;AACZ,SAAA;KACF;AAES,IAAA,YAAY,CAAC,IAA+B,EAAA;QACpD,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC,KAAK,CAAC;KAClD;AAES,IAAA,UAAU,CAAC,IAA+B,EAAA;QAClD,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC,GAAG,CAAC;KAChD;;6GArDU,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACjBD;;;;AAIG;AAOH;;;AAGG;AAEG,MAAO,kBAAmB,SAAQ,iBAAiB,CAAA;IAsBvD,WACY,CAAA,UAAsB,EACtB,OAAyB,EAAA;AAEnC,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAHjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAkB;QAvB3B,IAAA,CAAA,aAAa,GAAoB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;AAGhD,QAAA,IAAM,CAAA,MAAA,GAAoB,EAAE,CAAC;AAIvC,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,KAAoB,KAAI;AACxC,YAAA,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,KAAK,0BAAkB,CAAC;AACxC,aAAA;AACH,SAAC,CAAC;AAIF,QAAA,IAAA,CAAA,YAAY,GAAG,CAAC,KAAoB,KAAI;AACtC,YAAA,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,KAAK,2BAAkB,CAAC;AACxC,aAAA;AACH,SAAC,CAAC;KAOD;AAED;;;;;;;AAOG;IACO,SAAS,CAAC,KAAc,EAAE,SAAiB,EAAA;QACnD,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAChD,YAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CACpB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,SAAS,EACT,KAAgB,CACjB,CAAC;AACH,SAAA;KACF;;+GA9CU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,mBAAA,EAAA,wBAAA,EAAA,aAAA,EAAA,wBAAA,EAAA,iBAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,sBAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,SAAS;6HASR,cAAc,EAAA,CAAA;sBAFb,YAAY;uBAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBAC5C,YAAY;uBAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAA;gBASvC,YAAY,EAAA,CAAA;sBAFX,YAAY;uBAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBAC1C,YAAY;uBAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AC/B/C;;;;AAIG;AAQG,MAAO,gBAAiB,SAAQ,gBAAgB,CAAA;;6GAAzC,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACXD;;;;AAIG;AAiBH;;;AAGG;AACH,MAAM,sBAAsB,GAAG,IAAI,CAAC;AACpC;;;;AAIG;AAEG,MAAO,kBACX,SAAQ,kBAAkB,CAAA;AAwB1B;;;AAGG;AAGH,IAAA,WAAW,CAAC,KAAoB,EAAA;QAC9B,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,KAAM,KAAK,CAAC,MAAsB,EAAE;AAClE,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;KACF;AAED;;;AAGG;AAEH,IAAA,WAAW,CAAC,KAAc,EAAA;AACxB,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;AACpC,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;KACF;AAED,IAAA,WAAA,CACY,UAAsB,EACtB,OAAyB,EACzB,QAAmB,EAAA;AAE7B,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAJjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAkB;AACzB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QAlDrB,IAAA,CAAA,aAAa,GAAoB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;AAGhD,QAAA,IAAM,CAAA,MAAA,GAAoB,EAAE,CAAC;AAavC;;AAEG;AACO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAW,CAAC;KAkC9C;IAES,SAAS,GAAA;AACjB,QAAA,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;KAChC;AAES,IAAA,WAAW,CAAC,KAAe,EAAA;AACnC,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,QAAA,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;;AAE9B,QAAA,IAAI,CAAA,KAAK,KAAL,IAAA,IAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,MAAM,MAAK,IAAI,CAAC,IAAI,EAAE;;;YAG/B,UAAU,CAAC,MAAK;AACd,gBAAA,KAAK,CAAC,WAAW,CAAC,KAAsB,CAAC,CAAC;aAC3C,EAAE,GAAG,CAAC,CAAC;AACT,SAAA;KACF;IAED,QAAQ,GAAA;;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,UAAU,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC;QAEpC,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;;;YAIlB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;AAC5C,gBAAA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,aAAA;;;;YAID,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;AAChD,gBAAA,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,MAAK,KAAK,CAAC,CAAC;AACrE,aAAA;AACF,SAAA;KACF;IAED,eAAe,GAAA;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB;;;;AAIG;AACH,YAAA,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;AAChB,gBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,gBAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;;AAE/C,gBAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,gBAAgB,EAAE,KAAK,CAAC,CACxD,CAAC;AACH,aAAA;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,aAAA;AACF,SAAA;QACD,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;AAED,IAAA,WAAW,CAAC,KAAqB,EAAA;QAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE;;gBAE1C,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3C,aAAA;AAAM,iBAAA;gBACL,UAAU,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AACnC,gBAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,eAAe,EAAE,CAAC;gBACzB,OAAO;AACR,aAAA;AACF,SAAA;AACD,QAAA,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1B;AAED,IAAA,YAAY,CAAC,KAAoB,EAAA;QAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACvC,SAAA;AACD,QAAA,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC3B;AAED;;;;;;AAMG;AACK,IAAA,0BAA0B,CAAC,KAAqB,EAAA;AACtD,QAAA,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACzE;AAED;;AAEG;IACO,qBAAqB,CAAC,CAAC,GAAG,CAAC,EAAA;QACnC,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACzB,YAAA,IAAI,EAAE,IAAI,CAAC,oBAAoB,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,KACxB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CACzD,CAAC;AACH,aAAA;AACF,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,IAAY,oBAAoB,GAAA;QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD;AAED;;;;;;AAMG;AACH,IAAA,IAAY,SAAS,GAAA;AACnB,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAC/B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,UAAU,EACf,sBAAsB,CACvB,CAAC;KACH;;+GA5LU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGAAlB,kBAAkB,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,qBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,SAAS;qJAcyB,UAAU,EAAA,CAAA;sBAA1C,WAAW;uBAAC,kBAAkB,CAAA;gBAKC,QAAQ,EAAA,CAAA;sBAAvC,WAAW;uBAAC,iBAAiB,CAAA;gBAKpB,MAAM,EAAA,CAAA;sBAAf,MAAM;gBAQP,WAAW,EAAA,CAAA;sBAFV,YAAY;uBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBACxC,YAAY;uBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAczC,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AC3EnC;;;;AAIG;AAQG,MAAO,oBAAqB,SAAQ,gBAAgB,CAAA;;iHAA7C,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACXD;;;;AAIG;AAUG,MAAO,cAAe,SAAQ,kBAAkB,CAAA;AAKpD,IAAA,WAAA,CACY,UAAsB,EACtB,OAA6B,EAC7B,QAAmB,EAAA;AAE7B,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAJ3B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAsB;AAC7B,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AAPrB,QAAA,IAAa,CAAA,aAAA,GAAgB,EAAE,CAAC;AAExB,QAAA,IAAM,CAAA,MAAA,GAAgB,EAAE,CAAC;KAQ1C;;2GAXU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;+FAAd,cAAc,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,WAAW;iBACtB,CAAA;yJAImB,MAAM,EAAA,CAAA;sBAAvB,KAAK;uBAAC,SAAS,CAAA;;;ACjBlB;;;;AAIG;AAMH,MAAM,UAAU,GAAG;;;;;;;;;IASjB,cAAc;CACf,CAAC;MAOW,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,YAAA,EAAA;;;;;;;;;QAR9B,cAAc;iBAIJ,YAAY,CAAA,EAAA,OAAA,EAAA;;;;;;;;;QAJtB,cAAc;AAAA,KAAA,EAAA,CAAA,CAAA;AAQH,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAJpB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,YAAY,EAAE,CAAC,GAAG,UAAU,CAAC;AAC7B,oBAAA,OAAO,EAAE,CAAC,GAAG,UAAU,CAAC;iBACzB,CAAA;;;AC1BD;;;;AAIG;MAQU,0BAA0B,CAAA;AAHvC,IAAA,WAAA,GAAA;AAIoB,QAAA,IAAM,CAAA,MAAA,GAAgB,EAAE,CAAC;KAC5C;;uHAFY,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;2GAA1B,0BAA0B,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAA1B,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAHtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,WAAW;iBACtB,CAAA;8BAEmB,MAAM,EAAA,CAAA;sBAAvB,KAAK;uBAAC,SAAS,CAAA;;MAOL,0BAA0B,CAAA;;uHAA1B,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wHAA1B,0BAA0B,EAAA,YAAA,EAAA,CAR1B,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAA1B,0BAA0B,CAAA,EAAA,CAAA,CAAA;wHAQ1B,0BAA0B,EAAA,CAAA,CAAA;2FAA1B,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAJtC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;iBACtC,CAAA;;;ACnBD;;;;AAIG;;ACJH;;;;AAIG;AAUH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;;;;AAIG;AAyEH;;AAEG;AACS,IAAA,YAOX;AAPD,CAAA,UAAY,WAAW,EAAA;AACrB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,WAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACnD,IAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,WAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAPW,WAAW,KAAX,WAAW,GAOtB,EAAA,CAAA,CAAA;;ACvFD;;;;AAIG;;ACJH;;;;AAIG;AAmBmB,IAAA,oBAAoB,GAAnC,MAAe,oBAAoB,CAAA;IAqCxC,WAC8B,CAAA,QAAa,EAC/B,eAAiC,EAAA;AADf,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;AAC/B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;;AArCnC,QAAA,IAAe,CAAA,eAAA,GAIpB,EAAE,CAAC;AAER;;AAEG;AACgB,QAAA,IAAa,CAAA,aAAA,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACxE;;AAEG;AACgB,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAC1D;;AAEG;AACgB,QAAA,IAAA,CAAA,oBAAoB,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACvE;;AAEG;QACgB,IAAA,CAAA,4BAA4B,GAAG;YAChD,mCAAmC;SACpC,CAAC;AACF;;AAEG;AACgB,QAAA,IAAA,CAAA,iBAAiB,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC1D;;AAEG;AACgB,QAAA,IAAA,CAAA,mBAAmB,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAQ5D,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC5D;AAoBD;;;;;AAKG;IACO,YAAY,CACpB,MAA8B,EAC9B,MAAoB,EAAA;AAEpB,QAAA,QACE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;AACzB,aAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,MAAM,KAAK,MAAM,CAAC;AACtD,kBAAE,CAAC,CAAC,MAAM,CAAC,KAAK;AAChB,kBAAE,IAAI,CAAC,EACT;KACH;IAES,YAAY,CACpB,SAA4B,EAC5B,UAAuB,EAAA;QAEvB,IAAI,OAAO,GAAG,EAAE,CAAC;;AAGjB,QAAA,QAAQ,UAAU;YAChB,KAAK,WAAW,CAAC,MAAM;AACrB,gBAAA,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;AAC7B,gBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;gBACzD,MAAM;YACR,KAAK,WAAW,CAAC,OAAO;AACtB,gBAAA,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;gBAC9B,MAAM;YACR,KAAK,WAAW,CAAC,cAAc;AAC7B,gBAAA,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACpC,MAAM;YACR,KAAK,WAAW,CAAC,uBAAuB;AACtC,gBAAA,OAAO,GAAG,IAAI,CAAC,4BAA4B,CAAC;gBAC5C,MAAM;YACR,KAAK,WAAW,CAAC,WAAW;AAC1B,gBAAA,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACjC,MAAM;YACR,KAAK,WAAW,CAAC,aAAa;AAC5B,gBAAA,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBACnC,MAAM;AACT,SAAA;AAED,QAAA,KAAK,MAAM,QAAQ,IAAI,OAAO,EAAE;AAC9B,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;AACpE,SAAA;KACF;AAED;;;;;;AAMG;IACI,MAAM,CAAC,MAA8B,EAAE,MAAqB,EAAA;QACjE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAChD,CAAC,EAAE,KAAK,EAAE,CAAC,MAAM,KAAK,MAAM,CAC7B,CAAC;AAEF,QAAA,IAAK,CAAA,MAAuB,KAAvB,IAAA,IAAA,MAAuB,KAAvB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAuB,CAAE,UAAU,MAAK,WAAW,CAAC,MAAM,EAAE;AAC/D,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AAC7D,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,OAAA,CAAA,EAAA,oBAAoB;KACrB;EACF;AAtIqB,oBAAoB,GAAA,UAAA,CAAA;AAsCrC,IAAA,OAAA,CAAA,CAAA,EAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;CAtCC,EAAA,oBAAoB,CAsIzC;;AC7JD;;;;AAIG;AAMH;;;;;;;;;;AAUG;AACS,IAAA,WAMX;AAND,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,UAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,UAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,UAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,UAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACX,CAAC,EANW,UAAU,KAAV,UAAU,GAMrB,EAAA,CAAA,CAAA,CAAA;AAwDD;;;;;AAKG;MAKmB,YAAY,CAAA;;yGAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;6GAAZ,YAAY,EAAA,UAAA,EAHpB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;AC5FD;;;;AAIG;MAkBU,mBAAmB,CAAA;AAI9B,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;IAED,WAEY,CAAA,gBAAwC,EACxC,YAA0B,EAAA;AAD1B,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAwB;AACxC,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAV9B,IAAA,CAAA,YAAY,GAAG,IAAI,eAAe,CAAkB,SAAS,CAAC,CAAC;QAC/D,IAAA,CAAA,YAAY,GAAG,IAAI,eAAe,CAAM,SAAS,CAAC,CAAC;QAWzD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,IAAI,EAAE,CAAC;KACrD;AAED;;;;;;;AAOG;AACH,IAAA,UAAU,CACR,MAA8B,EAC9B,WAAwB,EACxB,GAAsB,EACtB,IAAU,EAAA;AAEV,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAEjD,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,OAAO,aAAa,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CACtD,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,KAAK,SAAS,CAAC,EAC1C,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI;gBACb,WAAW,KAAA,IAAA,IAAX,WAAW,KAAX,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAW,CAAE,aAAa,CAAC,KAAK,EAAE,CAAC;AACnC,gBAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACnB,gBAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,OAAO,EAAE,CAAC;AAClB,aAAC,CAAC,EACF,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CACtB,CAAC;AACH,SAAA;KACF;AACD;;;;;AAKG;AACH,IAAA,MAAM,CACJ,MAA8B,EAC9B,GAAsB,EACtB,IAAU,EAAA;QAEV,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;AAG1C,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClC,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE7B,OAAO,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AAC7C,aAAA;AACF,SAAA;aAAM,IAAI,SAAS,EAAE,EAAE;AACtB,YAAA,OAAO,CAAC,IAAI,CAAC,uCAAuC,GAAG,MAAM,CAAC,CAAC;AAChE,SAAA;KACF;AAED;;;;;;AAMG;AACH,IAAA,sBAAsB,CACpB,MAA8B,EAC9B,WAAwB,EACxB,IAAU,EAAA;;QAEV,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,MACjD,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,CACb,SAAS,EAAE,CAAC;KAChB;AAED;;;;AAIG;AACH,IAAA,KAAK,CAAC,MAA8B,EAAA;QAClC,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAE9C,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;AAG1C,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACjC,aAAA;AACF,SAAA;KACF;AAED,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;AAED,IAAA,WAAW,CAAC,MAAW,EAAA;AACrB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;AAED;;;;AAIG;AACO,IAAA,iBAAiB,CACzB,MAA8B,EAAA;;AAE9B,QAAA,IAAI,MAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,EAAE;YAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACzC,SAAA;AACD,QAAA,OAAO,SAAS,CAAC;KAClB;AAED;;;;AAIG;AACO,IAAA,WAAW,CACnB,MAAqB,EAAA;QAErB,OAAO,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3D;;AAzIU,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,kBASpB,oBAAoB,EAAA,EAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AATnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cADN,MAAM,EAAA,CAAA,CAAA;2FACnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;8BAU7B,MAAM;+BAAC,oBAAoB,CAAA;;;;AC/BhC;;;;AAIG;MAaU,yCAAyC,CAAA;AAMpD,IAAA,WAAA,CACY,wBAAkD,EAClD,GAAqB,EACrB,mBAAwC,EAAA;AAFxC,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;AAClD,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AACrB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AAR5C,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAE3C,IAAA,CAAA,cAAc,GACZ,IAAI,CAAC,wBAAwB,CAAC,eAAe,EAAE,CAAC;KAM9C;IAEJ,WAAW,GAAA;QACT,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAEhD,mBAAA,wCAAA,SAAS,EACT,IAAI,CAAC,GAAG,CACT,CAAC;AACF,QAAA,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;AAC5C,SAAA;KACF;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,wBAAwB;AAC1B,aAAA,eAAe,EAAE;aACjB,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;aAClC,SAAS,EAAE,CACf,CAAC;KACH;IAED,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC3D;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;;sIAvCU,yCAAyC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzC,yCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,yCAAyC,8ECjBtD,6gCA4BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDXa,yCAAyC,EAAA,UAAA,EAAA,CAAA;kBAJrD,SAAS;+BACE,wCAAwC,EAAA,QAAA,EAAA,6gCAAA,EAAA,CAAA;;;AEdpD;;;;AAIG;AAiBG,MAAO,oBAAqB,SAAQ,oBAAoB,CAAA;AAC5D,IAAA,WAAA,CAC8B,QAAa,EAC/B,eAAiC,EACjC,wBAAkD,EAAA;AAE5D,QAAA,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;AAJL,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;AAC/B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;AACjC,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;KAG7D;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,MAA0B,EAC1B,MAA8B,EAC9B,GAAqB,EAAA;;QAGrB,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;AAC5C,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACpE,MAAM,CAAC,SAAS,CACjB,CAAC;YAEF,MAAM,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AAEhD,YAAA,IAAI,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,UAAU,EAAE;AACtB,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,KAAN,IAAA,IAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,UAAU,CAAC,CAAC;AAClD,aAAA;AAED,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;AAEvE,YAAA,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;AACtB,SAAA;aAAM,IAAI,SAAS,EAAE,EAAE;YACtB,IAAI,CAAC,GAAG,EAAE;AACR,gBAAA,OAAO,CAAC,IAAI,CAAC,sCAAsC,MAAM,CAAA,CAAE,CAAC,CAAC;AAC9D,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,CAAC,IAAI,CACV,eAAe,MAAM,CAAA,qEAAA,CAAuE,CAC7F,CAAC;AACH,aAAA;AACF,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,MAA0B,EAAA;AACjC,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC/B;;AAjDU,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,kBAErB,QAAQ,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAFP,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cADP,MAAM,EAAA,CAAA,CAAA;2FACnB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;8BAG7B,MAAM;+BAAC,QAAQ,CAAA;;;;ACvBpB;;;;AAIG;AAiBG,MAAO,wBAAyB,SAAQ,oBAAoB,CAAA;AAChE,IAAA,WAAA,CAC8B,QAAa,EAC/B,eAAiC,EACjC,wBAAkD,EAClD,QAAkB,EAAA;AAE5B,QAAA,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;AALL,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;AAC/B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;AACjC,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;AAClD,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAG7B;AAED,IAAA,IAAI,aAAa,GAAA;;AACf,QAAA,OAAO,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,CAAC;KAC3D;IAED,MAAM,CACJ,MAA8B,EAC9B,MAA8B,EAAA;;QAE9B,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;AACrC,YAAA,MAAM,gBAAgB,GACpB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAE1E,YAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC;AACtC,gBAAA,SAAS,EAAE,EAAE;AACd,aAAA,CAAC,CAAC;YAEH,MAAM,YAAY,GAAG,gBAAgB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AAE9D,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAErE,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,aAAa,EAC1C,YAAY,CAAC,QAAQ,CAAC,aAAa,CACpC,CAAC;AAEF,YAAA,IAAI,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,UAAU,EAAE;AACtB,gBAAA,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,KAAN,IAAA,IAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,UAAU,CAAC,CAAC;AACrD,aAAA;AAED,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC;AAE/D,YAAA,OAAO,EAAE,CAAC,YAAY,CAAC,CAAC;AACzB,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,MAA8B,EAAA;AACrC,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KACnC;;AA/CU,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,kBAEzB,QAAQ,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAFP,wBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,cADX,MAAM,EAAA,CAAA,CAAA;2FACnB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBADpC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;8BAG7B,MAAM;+BAAC,QAAQ,CAAA;;;;ACvBpB;;;;AAIG;AAIS,IAAA,eAIX;AAJD,CAAA,UAAY,cAAc,EAAA;AACxB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAJW,cAAc,KAAd,cAAc,GAIzB,EAAA,CAAA,CAAA,CAAA;AAEM,MAAM,qBAAqB,GAAG,MAAM;AACpC,MAAM,mBAAmB,GAAG,KAAK;AAExC;;AAEG;MACmB,iBAAiB,CAAA;AAuBtC;;AC3CD;;;;AAIG;MAQU,aAAa,CAAA;AAH1B,IAAA,WAAA,GAAA;QAIU,IAAA,CAAA,aAAa,GAAG;AACtB,YAAA,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,GAAG,EAAe;AAC/C,YAAA,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,GAAG,EAAe;AAChD,YAAA,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,GAAG,EAAe;SAC/C,CAAC;KA4FH;AAtEC;;AAEG;IACH,GAAG,CACD,MAAc,EACd,iBAAoB,EACpB,QAA2B,GAAA,cAAc,CAAC,OAAO,EAAA;QAEjD,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC3C,QAAA,IAAI,KAAK,EAAE;YACT,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACzC,MAAM,QAAQ,GAAQ,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC3D,YAAA,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC7B,SAAA;KACF;AAED;;;;;;;;AAQG;IACH,GAAG,CACD,MAAc,EACd,QAA2B,GAAA,cAAc,CAAC,OAAO,EACjD,OAAO,GAAG,qBAAqB,EAAA;AAE/B,QAAA,MAAM,KAAK,GACT,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;AAC5B,YAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAE7C,MAAM,WAAW,GAAoB,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACvD,QAAA,IAAI,WAAW,IAAI,CAAC,OAAO,EAAE;AAC3B,YAAA,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC;AACvB,SAAA;AACD,QAAA,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,CACJ,MAAc,EACd,QAAA,GAA2B,cAAc,CAAC,OAAO,EACjD,KAAS,EAAA;AAET,QAAA,MAAM,KAAK,GACT,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;AAC5B,YAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAE7C,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KAC7C;AAES,IAAA,gBAAgB,CACxB,KAAuB,EACvB,MAAc,EACd,KAAS,EAAA;QAET,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAC/B,YAAA,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACtB,SAAA;aAAM,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEjC,YAAA,QAAQ,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,KAAK,CAAC,CAAC;AAEpD,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC7B,aAAA;AACF,SAAA;KACF;;0GAhGU,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cAFZ,MAAM,EAAA,CAAA,CAAA;2FAEP,aAAa,EAAA,UAAA,EAAA,CAAA;kBAHzB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACXD;;;;AAIG;MAeU,kBAAkB,CAAA;IAM7B,WACU,CAAA,GAAqB,EACrB,aAA4B,EAAA;AAD5B,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AACrB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;KAClC;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACtE;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KACzE;;+GAjBU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGAAlB,kBAAkB,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;iBAC1B,CAAA;2HAGC,WAAW,EAAA,CAAA;sBADV,KAAK;gBAGN,WAAW,EAAA,CAAA;sBADV,KAAK;;;ACtBR;;;;AAIG;MAYU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAHX,YAAA,EAAA,CAAA,kBAAkB,CADvB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAEjB,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YAJhB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B,CAAA;;;ACfD;;;;AAIG;MAWU,qBAAqB,CAAA;AAHlC,IAAA,WAAA,GAAA;QAIU,IAAU,CAAA,UAAA,GAAG,IAAI,eAAe,CAAC,IAAI,GAAG,EAA2B,CAAC,CAAC;KAgC9E;AA9BC;;;;AAIG;AACH,IAAA,MAAM,CAAC,MAAc,EAAA;;QACnB,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;AACpC,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,EAAE,CAAC;AAC7C,SAAA;KACF;AAED;;;;;AAKG;IACH,QAAQ,CAAC,QAAgB,EAAE,OAAwB,EAAA;AACjD,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;KACpE;AACD;;;AAGG;AACH,IAAA,YAAY,CAAC,MAAc,EAAA;AACzB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CACxC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAC7B,MAAM,CAAC,aAAa,CAAC,CACtB,CAAC;KACH;;kHAhCU,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAFpB,MAAM,EAAA,CAAA,CAAA;2FAEP,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACdD;;;;AAIG;AAYH;;;;AAIG;MAIU,mBAAmB,CAAA;AAC9B,IAAA,WAAA,CAAsB,MAAoB,EAAA;AAApB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAc;KAAI;AAE9C;;;;;;;;;;;;;AAaG;AACH,IAAA,aAAa,CACX,OAAoB,EACpB,OAA6B,EAC7B,qBAA6C,EAAA;QAE7C,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,qBAAqB,CAAC,CAAC,IAAI,CAClE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CACzB,CAAC;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,cAAc,CACZ,OAAoB,EACpB,OAA6B,EAC7B,qBAA6C,EAAA;QAE7C,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,qBAAqB,CAAC,CAAC;KACjE;AAED;;;;AAIG;AACK,IAAA,UAAU,CAChB,OAAoB,EACpB,OAA+B,GAAA,EAAE,EACjC,qBAA6C,EAAA;AAE7C,QAAA,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,CAC7D,QAAQ,CAAC,CAAC,OAAoC,KAAK,OAAO,CAAC,EAC3D,GAAG,CAAC,CAAC,KAAgC,KACnC,qBAAqB;AACnB,cAAE,qBAAqB,CAAC,KAAK,CAAC;cAC5B,KAAK,CAAC,cAAc,CACzB,EACD,oBAAoB,EAAE,CACvB,CAAC;KACH;IAEO,4BAA4B,CAClC,OAAoB,EACpB,OAA4B,EAAA;AAE5B,QAAA,OAAO,IAAI,UAAU,CAAC,CAAC,QAA+C,KAAI;YACxE,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,gBAAgB,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC;YACtE,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,CAAC,OAAO,KAAI;AAChE,gBAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxB,EAAE,gBAAgB,CAAC,CAAC;AACrB,YAAA,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACtC,YAAA,OAAO,MAAK;gBACV,oBAAoB,CAAC,UAAU,EAAE,CAAC;AACpC,aAAC,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;IAEO,aAAa,CAAC,UAA+B,EAAE,EAAA;QACrD,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,OAAO,OAAO,CAAC,UAAU,CAAC;AAC3B,SAAA;AACD,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,MAAsB,CAAC;QACjD,IACE,YAAY,CAAC,eAAe;AAC5B,YAAA,YAAY,CAAC,eAAe,CAAC,kBAAkB,EAC/C;AACA,YAAA,OAAO,YAAY,CAAC,eAAe,CAAC,kBAAkB,CAAC;AACxD,SAAA;KACF;;gHA7FU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACvBD;;;;AAIG;AAUH;;;AAGG;MAIU,kBAAkB,CAAA;AAG7B,IAAA,WAAA,CAC+B,UAAkB,EACrC,MAAoB,EACpB,mBAAwC,EAAA;;AAFrB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAQ;AACrC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAc;AACpB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AAElD,QAAA,IAAI,CAAC,kBAAkB;YACrB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAM,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,oBAAoB,CAAC,OAAO,CAAC;KACpE;AAED;;;;;;;;;AASG;IACH,IAAI,CACF,OAAoB,EACpB,OAA6B,EAAA;AAE7B,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE;AAC1D,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,SAAA;AAAM,aAAA;YACL,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACjE,SAAA;KACF;AAEO,IAAA,mBAAmB,CACzB,sBAAwD,EAAA;AAExD,QAAA,QACE,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC;YACjC,sBAAsB,KAAK,oBAAoB,CAAC,OAAO;AACvD,aAAC,sBAAsB,KAAK,oBAAoB,CAAC,KAAK;gBACpD,IAAI,CAAC,kBAAkB,KAAK,oBAAoB,CAAC,OAAO,CAAC,EAC3D;KACH;;AA1CU,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,kBAInB,WAAW,EAAA,EAAA,EAAA,KAAA,EAAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJV,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAKI,MAAM;+BAAC,WAAW,CAAA;;;;ACzBvB;;;;AAIG;MA+BU,eAAe,CAAA;IAiC1B,WACU,CAAA,GAAqB,EACrB,WAA6B,EAC7B,aAA4B,EAC5B,kBAAsC,EACtC,qBAA4C,EAAA;AAJ5C,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AACrB,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAkB;AAC7B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;AAC5B,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AArC9C,QAAA,IAAgB,CAAA,gBAAA,GAAU,EAAE,CAAC;AAC9B,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,GAAG,EAGhC,CAAC;AASJ;;AAEG;QACc,IAAA,CAAA,cAAc,GAAG,IAAI,aAAa,CAAI,CAAC,CAAC,CAAC;QAOhD,IAAA,CAAA,MAAM,GAA0B,IAAI,YAAY,CAAU,IAAI,CAAC,CAAC;AAGhE,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,YAAY,EAE9C,CAAC;AAEJ,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAQ9B;AAEJ;;AAEG;IACI,MAAM,GAAA;AACX,QAAA,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACjB,QAAA,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;AAChC,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AAChC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAEvC,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;AACrB,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,SAAA;KACF;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC1D,SAAA;QACD,IAAI,OAAO,CAAC,eAAe,EAAE;YAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAChD,SAAA;KACF;IAEO,YAAY,GAAA;AAClB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;;;;AAIxE,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,kBAAkB;AACpB,aAAA,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;aACrC,SAAS,CAAC,MAAK;YACd,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB,CAAC,CACL,CAAC;KACH;AAED;;AAEG;IACK,KAAK,GAAA;AACX,QAAA,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KACxC;AAED;;AAEG;AACK,IAAA,WAAW,CAAC,QAAwB,EAAA;AAC1C,QAAA,IAAI,SAAS,IACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CACrE,CAAC;QAEF,SAAS,GAAG,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,SAAS,IAAI,QAAQ,KAAK,cAAc,CAAC,OAAO,EAAE;AACrD,YAAA,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChC,SAAA;;;AAID,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AAC7B,YAAA,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;AACzB,SAAA;QAED,MAAM,UAAU,GAAiD,EAAE,CAAC;AACpE,QAAA,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;YACxB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC7C,YAAA,IAAI,SAAS,EAAE;AACb,gBAAA,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5B,aAAA;AACH,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;KACnD;AAED;;AAEG;IACK,MAAM,CACZ,aAAkB,EAClB,QAAwB,EAAA;AAExB,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE1C,IAAI,aAAa,YAAY,gBAAgB,EAAE;AAC7C,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CACxC,aAAa,EACb,SAAS,EACT,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CACpC,CAAC;AACF,YAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC1C,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;aAAM,IAAI,aAAa,YAAY,WAAW,EAAE;YAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CACpB,aAAa,EAC/B;gBACE,SAAS,EAAE,IAAI,CAAC,eAAe;AAChC,aAAA,CACF,CAAC;;;YAIF,IAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,YAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;KACF;AAED;;;AAGG;AACK,IAAA,oBAAoB,CAAC,QAAwB,EAAA;AACnD,QAAA,MAAM,WAAW,GAAyB;YACxC,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,QAAQ;YACR,OAAO,EAAE,IAAI,CAAC,eAAe;AAC7B,YAAA,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;SAC7C,CAAC;QAEF,OAAO,QAAQ,CAAC,MAAM,CAAC;AACrB,YAAA,SAAS,EAAE;AACT,gBAAA;AACE,oBAAA,OAAO,EAAE,iBAAiB;AAC1B,oBAAA,QAAQ,EAAE,WAAW;AACtB,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ;AAC1B,SAAA,CAAC,CAAC;KACJ;AAED;;;;;;;;;AASG;AACK,IAAA,cAAc,CAAC,OAAa,EAAA;QAClC,IAAI,OAAO,YAAY,WAAW,EAAE;AAClC,YAAA,OAAO,OAAO,CAAC;AAChB,SAAA;QACD,OAAO,IAAI,CAAC,cAAc,CAAc,OAAO,CAAC,UAAU,CAAC,CAAC;KAC7D;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AAChC,QAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAChC;;4GAzMU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAD,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAE,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;gGAAf,eAAe,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,YAAY;iBACvB,CAAA;yNAQU,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAKG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBAUG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAEI,MAAM,EAAA,CAAA;sBAAf,MAAM;gBAEE,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBACI,oBAAoB,EAAA,CAAA;sBAA7B,MAAM;;;AC9DT;;;;AAIG;AAKH;;AAEG;AACI,MAAM,sBAAsB,GAAG,IAAI,cAAc,CACtD,wBAAwB,CACzB,CAAC;AAmBF;;;;;;AAMG;AACG,SAAU,aAAa,CAAC,OAA6B,EAAA;IACzD,OAAO;AACL,QAAA,OAAO,EAAE,sBAAsB;AAC/B,QAAA,QAAQ,EAAE,OAAO;AACjB,QAAA,KAAK,EAAE,IAAI;KACZ,CAAC;AACJ;;AC9CA;;;;AAIG;AAqBH;;AAEG;SACa,sBAAsB,CACpC,qBAA6C,EAC7C,wBAAkD,EAClD,aAAyD,EAAA;IAEzD,MAAM,MAAM,GAAG,MAAK;AAClB,QAAA,CAAC,qBAAqB,KAAA,IAAA,IAArB,qBAAqB,KAAA,KAAA,CAAA,GAArB,qBAAqB,GAAI,EAAE,EAAE,OAAO,CAAC,CAAC,OAAO,KAAI;;YAChD,MAAM,OAAO,GAAG,wBAAwB,CAAC,uBAAuB,CAC9D,OAAO,CAAC,SAAS,CAClB,CAAC;AACF,YAAA,aAAa,CAAC,GAAG,CACf,OAAO,CAAC,EAAE,EACV,OAAO,EACP,CAAA,EAAA,GAAA,OAAO,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,cAAc,CAAC,KAAK,CACzC,CAAC;AACJ,SAAC,CAAC,CAAC;AACL,KAAC,CAAC;AACF,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;MAOY,YAAY,CAAA;AACvB,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,YAAY;AACtB,YAAA,SAAS,EAAE;AACT,gBAAA;AACE,oBAAA,OAAO,EAAE,eAAe;AACxB,oBAAA,UAAU,EAAE,sBAAsB;AAClC,oBAAA,IAAI,EAAE;AACJ,wBAAA,CAAC,IAAI,QAAQ,EAAE,EAAE,sBAAsB,CAAC;wBACxC,wBAAwB;wBACxB,aAAa;AACd,qBAAA;AACD,oBAAA,KAAK,EAAE,IAAI;AACZ,iBAAA;AACF,aAAA;SACF,CAAC;KACH;AAED,IAAA,OAAO,QAAQ,GAAA;QACb,OAAO;AACL,YAAA,QAAQ,EAAE,YAAY;AACtB,YAAA,SAAS,EAAE;AACT,gBAAA;AACE,oBAAA,OAAO,EAAE,kBAAkB;AAC3B,oBAAA,UAAU,EAAE,sBAAsB;AAClC,oBAAA,IAAI,EAAE;AACJ,wBAAA,CAAC,IAAI,QAAQ,EAAE,EAAE,sBAAsB,CAAC;wBACxC,wBAAwB;wBACxB,aAAa;AACd,qBAAA;AACD,oBAAA,KAAK,EAAE,IAAI;AACZ,iBAAA;AACF,aAAA;SACF,CAAC;KACH;;yGAnCU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,EAHR,YAAA,EAAA,CAAA,eAAe,CADpB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,eAAe,CAAA,EAAA,CAAA,CAAA;AAEd,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,YAJb,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,YAAY,EAAA,UAAA,EAAA,CAAA;kBALxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,eAAe,CAAC;oBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;iBAC3B,CAAA;;;ACpDD;;;;AAIG;;ACJH;;;;AAIG;AAsBG,MAAO,oBAAqB,SAAQ,oBAAoB,CAAA;IAC5D,WAC8B,CAAA,QAAa,EAC/B,eAAiC,EACjC,aAAmD,EACnD,wBAAkD,EAClD,qBAA4C,EAAA;AAEtD,QAAA,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;AANL,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;AAC/B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;AACjC,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAsC;AACnD,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;AAClD,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;KAGvD;AAED;;;;;;AAMG;IACH,MAAM,CACJ,MAA0B,EAC1B,MAA8B,EAAA;QAE9B,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;AACrC,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACpE,MAAM,CAAC,SAAS,CACjB,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,MAAM,CAAC,MAAM,EACb,QAAQ,EACR,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC,MAAM,CAC1D,CAAC;YACF,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;AAEtC,YAAA,OAAO,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAChE,GAAG,CAAC,CAAC,eAAe,KAAI;gBACtB,MAAM,UAAU,GAAG,eAAe,CAAC,kBAAkB,CAAC,GAAG,CACvD,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC,MAAM,CACnC,CAAC;AAEzB,gBAAA,OAAO,UAAU;AACd,qBAAA,OAAO,EAAE;AACT,qBAAA,IAAI,CACH,CAAC,SAAS,KAAK,SAAS,CAAC,aAAa,KAAK,QAAQ,CAAC,aAAa,CAClE,CAAC;AACN,aAAC,CAAC,EACF,GAAG,CAAC,CAAC,SAAS,KAAI;gBAChB,IAAI,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,UAAU,KAAI,SAAS,EAAE;AACnC,oBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,KAAN,IAAA,IAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,UAAU,CAAC,CAAC;AAClD,iBAAA;aACF,CAAC,CACH,CAAC;AACH,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,MAA0B,EAAA;AACjC,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC/B;IAED,MAAM,CAAC,MAA8B,EAAE,MAA0B,EAAA;AAC/D,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACpE,MAAM,CAAC,SAAS,CACjB,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,MAAM,CACvB,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC,MAAM,EACzD,QAAQ,CACT,CAAC;AAEF,QAAA,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KAC9B;;AAvEU,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,kBAErB,QAAQ,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAH,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAAI,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAFP,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cADP,MAAM,EAAA,CAAA,CAAA;2FACnB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;8BAG7B,MAAM;+BAAC,QAAQ,CAAA;;;;AC5BpB;;;;AAIG;AASG,MAAO,qBAAsB,SAAQ,oBAAoB,CAAA;AAC7D,IAAA,WAAA,CAC8B,QAAa,EAC/B,eAAiC,EACjC,cAA8B,EAAA;AAExC,QAAA,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;AAJL,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;AAC/B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;AACjC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;KAGzC;AACD;;AAEG;IACH,MAAM,CAAC,MAAmB,EAAE,OAA+B,EAAA;AACzD,QAAA,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;KAChC;AAED,IAAA,QAAQ,CAAC,MAAmB,EAAA;AAC1B,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAChC;;AAjBU,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,kBAEtB,QAAQ,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAFP,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cADR,MAAM,EAAA,CAAA,CAAA;2FACnB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;8BAG7B,MAAM;+BAAC,QAAQ,CAAA;;;;ACfpB;;;;AAIG;;ACJH;;;;AAIG;MAqCU,kBAAkB,CAAA;AAC7B,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;SAC5D,CAAC;KACH;;+GANU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAlB,kBAAkB,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAvBlB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,oBAAoB;AAC7B,YAAA,WAAW,EAAE,oBAAoB;AACjC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,oBAAoB;AAC7B,YAAA,WAAW,EAAE,oBAAoB;AACjC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,oBAAoB;AAC7B,YAAA,WAAW,EAAE,qBAAqB;AAClC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,oBAAoB;AAC7B,YAAA,WAAW,EAAE,wBAAwB;AACrC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,CAAA,CAAA;2FAEU,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAxB9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,oBAAoB;AAC7B,4BAAA,WAAW,EAAE,oBAAoB;AACjC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,oBAAoB;AAC7B,4BAAA,WAAW,EAAE,oBAAoB;AACjC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,oBAAoB;AAC7B,4BAAA,WAAW,EAAE,qBAAqB;AAClC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,oBAAoB;AAC7B,4BAAA,WAAW,EAAE,wBAAwB;AACrC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;iBACF,CAAA;;;ACxCD;;;;AAIG;;ACJH;;;;AAIG;AAMS,IAAA,UAyDX;AAzDD,CAAA,UAAY,SAAS,EAAA;AACnB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,SAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAzDW,SAAS,KAAT,SAAS,GAyDpB,EAAA,CAAA,CAAA,CAAA;MAMqB,UAAU,CAAA;;uGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAV,UAAU,EAAA,UAAA,EAHlB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,UAAU,EAAA,UAAA,EAAA,CAAA;kBAJ/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;AA+CD;;;AAGG;AACS,IAAA,iBAgBX;AAhBD,CAAA,UAAY,gBAAgB,EAAA;AAC1B;;;AAGG;AACH,IAAA,gBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AAEX;;AAEG;AACH,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb;;;AAGG;AACH,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAhBW,gBAAgB,KAAhB,gBAAgB,GAgB3B,EAAA,CAAA,CAAA;;AC3ID;;;;AAIG;AAIU,MAAA,qBAAqB,GAAe;AAC/C,IAAA,IAAI,EAAE;AACJ,QAAA,OAAO,EAAE;AACP,YAAA,MAAM,EAAE,cAAc;AACtB,YAAA,YAAY,EAAE,qBAAqB;AACnC,YAAA,IAAI,EAAE,gBAAgB;AACtB,YAAA,UAAU,EAAE,mBAAmB;AAC/B,YAAA,UAAU,EAAE,mBAAmB;AAC/B,YAAA,WAAW,EAAE,oBAAoB;AACjC,YAAA,QAAQ,EAAE,iBAAiB;AAC3B,YAAA,IAAI,EAAE,sBAAsB;AAC5B,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,MAAM,EAAE,eAAe;AACvB,YAAA,cAAc,EAAE,uBAAuB;AACvC,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,QAAQ,EAAE,cAAc;AACxB,YAAA,WAAW,EAAE,oBAAoB;AACjC,YAAA,WAAW,EAAE,uBAAuB;AACpC,YAAA,QAAQ,EAAE,iBAAiB;AAC3B,YAAA,WAAW,EAAE,cAAc;AAC3B,YAAA,KAAK,EAAE,2BAA2B;AAClC,YAAA,aAAa,EAAE,eAAe;AAC9B,YAAA,MAAM,EAAE,aAAa;AACrB,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,GAAG,EAAE,YAAY;AACjB,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,MAAM,EAAE,eAAe;AACvB,YAAA,IAAI,EAAE,iBAAiB;AACvB,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,IAAI,EAAE,oBAAoB;AAC1B,YAAA,QAAQ,EAAE,0BAA0B;AACpC,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,WAAW,EAAE,sBAAsB;AACnC,YAAA,GAAG,EAAE,mBAAmB;AACxB,YAAA,EAAE,EAAE,kBAAkB;AACtB,YAAA,KAAK,EAAE,uBAAuB;AAC9B,YAAA,QAAQ,EAAE,iBAAiB;AAC3B,YAAA,MAAM,EAAE,mBAAmB;AAC3B,YAAA,MAAM,EAAE,gBAAgB;AACxB,YAAA,KAAK,EAAE,qBAAqB;AAC5B,YAAA,MAAM,EAAE,eAAe;AACvB,YAAA,gBAAgB,EAAE,yBAAyB;AAC3C,YAAA,cAAc,EAAE,uBAAuB;AACvC,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,OAAO,EAAE,qBAAqB;AAC9B,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,YAAY,EAAE,qBAAqB;AACnC,YAAA,IAAI,EAAE,gBAAgB;AACtB,YAAA,OAAO,EAAE,6BAA6B;AACtC,YAAA,OAAO,EAAE,gBAAgB;AACzB,YAAA,UAAU,EAAE,kBAAkB;AAC9B,YAAA,MAAM,EAAE,eAAe;AACvB,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,UAAU,EAAE,mBAAmB;AAC/B,YAAA,WAAW,EAAE,qBAAqB;AAClC,YAAA,UAAU,EAAE,oBAAoB;AAChC,YAAA,QAAQ,EAAE,kBAAkB;AAC7B,SAAA;AACD,QAAA,SAAS,EAAE;AACT,YAAA;gBACE,IAAI,EAAE,gBAAgB,CAAC,IAAI;AAC3B,gBAAA,GAAG,EAAE,EAAE;AACR,aAAA;AACF,SAAA;AACF,KAAA;;;AC3EH;;;;AAIG;MAiBU,iBAAiB,CAAA;AAE5B,IAAA,WAAA,CACY,MAAiB,EACjB,UAAsB,EACtB,SAAuB,EAAA;AAFvB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAc;AAJ3B,QAAA,IAAe,CAAA,eAAA,GAAa,EAAE,CAAC;KAKnC;AAEJ;;AAEG;AACH,IAAA,OAAO,CAAC,IAAwB,EAAA;QAC9B,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC,EAAE;YACnD,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CACjC,eAAe,CAAC,GAAG,EACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAC9B,CAAC;AACF,YAAA,IAAI,GAAG,EAAE;AACP,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC7D,gBAAA,UAAU,CAAC,YAAY,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;AAC3C,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC7D,gBAAA,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACrE,aAAA;AACF,SAAA;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,EAAE;YACpD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACpC,YAAA,IAAI,MAAM,EAAE;AACV,gBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC5D,gBAAA,SAAS,CAAC,WAAW,GAAG,MAAM,CAAC;gBAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACpE,aAAA;AACF,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,gBAAgB,CAAC,IAAwB,EAAA;;QACvC,OAAO,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,IAAI,CAAC,CAAC;KAC3C;AAED;;;AAGG;AACH,IAAA,eAAe,CAAC,QAA4B,EAAA;QAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACvC;AAED;;;AAGG;IACK,cAAc,CACpB,QAA4B,EAC5B,YAA8B,EAAA;;QAE9B,QACE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,MAAK,SAAS;AACpC,YAAA,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAC1B,CAAC,GAAG,KACF,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACzE,EACD;KACH;AAED;;;;;AAKG;AACK,IAAA,UAAU,CAAC,QAA4B,EAAA;;QAC7C,MAAM,WAAW,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAC9C,CAAC,GAAG,KACF,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,GAAG;AACjC,YAAA,GAAG,CAAC,KAAK;YACT,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAC/B,CAAC;AACF,QAAA,IAAI,WAAW,EAAE;YACf,OAAO,WAAW,CAAC,GAAG;AACpB,kBAAE,CAAA,EAAG,WAAW,CAAC,GAAG,CAAA,CAAA,EAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAE,CAAA;kBAChD,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA,CAAE,CAAC;AACpC,SAAA;KACF;AAED;;;;;;;AAOG;AACH,IAAA,eAAe,CAAC,QAA4B,EAAA;AAC1C,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAEpE,IAAI,CAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,GAAG,KAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACjE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;;AAExC,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAC1C,eAAe,CAAC,GAAG,EACnB,QAAQ,CAAC,GAAG,CACb,CAAC;AACF,YAAA,IAAI,YAAY,EAAE;AAChB,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACxD,gBAAA,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;AACxB,gBAAA,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;AACvB,gBAAA,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;AACzB,gBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACxB,aAAA;AACF,SAAA;KACF;IAEO,YAAY,CAClB,QAA4B,EAC5B,YAA8B,EAAA;;QAE9B,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,CAAA,EAAE;YAC3B,OAAO;AACR,SAAA;AAED,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACvC,CAAC,GAAG,KACF,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACzE,CAAC;;QAEF,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACnC,CAAC,GAAG,KACF,CAAC,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK;AACxC,iBAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CACxC,CAAC;AACH,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC;KACjB;AAED,IAAA,SAAS,CAAC,QAA4B,EAAA;AACpC,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACvE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACtC,SAAA;KACF;AAED,IAAA,IAAY,MAAM,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;KAC7B;;8GApJU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACpBD;;;;AAIG;AAEH;;;;;;AAMG;AACS,IAAA,cASX;AATD,CAAA,UAAY,aAAa,EAAA;AACvB;;AAEG;AACH,IAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX;;AAEG;AACH,IAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EATW,aAAa,KAAb,aAAa,GASxB,EAAA,CAAA,CAAA;;ACtBD;;;;AAIG;AAgBH;;;;;;;;;;;;;;;;;;;AAmBG;MAKU,aAAa,CAAA;AACxB;;;AAGG;IACH,IAAa,MAAM,CAAC,IAAe,EAAA;AACjC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACpB;AAED;;;AAGG;IACH,IAAa,IAAI,CAAC,IAAe,EAAA;AAC/B,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACpB;AAuBD,IAAA,WAAA,CACY,UAA6B,EAC7B,UAAmC,EACnC,QAAmB,EAAA;AAFnB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAmB;AAC7B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAyB;AACnC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;KAC3B;AAEM,IAAA,OAAO,CAAC,IAAe,EAAA;AAC/B,QAAA,IAAI,CAAC,IAAI,IAAY,IAAI,KAAK,EAAE,EAAE;YAChC,OAAO;AACR,SAAA;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1C,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACtC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACrB;AAED;;AAEG;AACO,IAAA,QAAQ,CAAC,IAAe,EAAA;;AAEhC,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;YACrC,OAAO;AACR,SAAA;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,aAAa,KAAK,aAAa,CAAC,GAAG,CAAC;QACrD,IAAI,CAAC,SAAS,GAAG,aAAa,KAAK,aAAa,CAAC,GAAG,CAAC;KACtD;AAED;;AAEG;AACO,IAAA,eAAe,CAAC,IAAe,EAAA;;QACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAE7C,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAC,CAAC,GAAG,KAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAC1C,CAAC;AAEF,QAAA,IAAI,CAAC,YAAY,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,GAAG,CAAC,CAAC;QACtE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,CAAC,GAAG,KAAI;YACjC,IAAI,GAAG,KAAK,EAAE,EAAE;gBACd,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACxC,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,IAAc,IAAI,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACtC;;0GAvFU,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aAAa,4MC5C1B,yDACA,EAAA,CAAA,CAAA;2FD2Ca,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,SAAS;+BACE,kBAAkB,EAAA,QAAA,EAAA,yDAAA,EAAA,CAAA;sJAQf,MAAM,EAAA,CAAA;sBAAlB,KAAK;gBAQO,IAAI,EAAA,CAAA;sBAAhB,KAAK;gBAY4B,SAAS,EAAA,CAAA;sBAA1C,WAAW;uBAAC,mBAAmB,CAAA;gBAKE,SAAS,EAAA,CAAA;sBAA1C,WAAW;uBAAC,mBAAmB,CAAA;;;AE1ElC;;;;AAIG;AAKI,MAAM,iBAAiB,GAAe;AAC3C,IAAA,IAAI,EAAE;AACJ,QAAA,aAAa,EAAE;YACb,WAAW,EAAE,aAAa,CAAC,GAAG;YAC9B,UAAU,EAAE,aAAa,CAAC,GAAG;AAC9B,SAAA;AACF,KAAA;CACF;;AChBD;;;;AAIG;MAmBU,UAAU,CAAA;;uGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAV,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EATN,YAAA,EAAA,CAAA,aAAa,CAClB,EAAA,OAAA,EAAA,CAAA,YAAY,aAMZ,aAAa,CAAA,EAAA,CAAA,CAAA;AAEZ,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EAPV,SAAA,EAAA;QACT,oBAAoB,CAAC,iBAAiB,CAAC;;QAEvC,oBAAoB,CAAC,qBAAqB,CAAC;AAC5C,KAAA,EAAA,OAAA,EAAA,CALS,YAAY,CAAA,EAAA,CAAA,CAAA;2FAQX,UAAU,EAAA,UAAA,EAAA,CAAA;kBAVtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,aAAa,CAAC;oBAC7B,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,iBAAiB,CAAC;;wBAEvC,oBAAoB,CAAC,qBAAqB,CAAC;AAC5C,qBAAA;oBACD,OAAO,EAAE,CAAC,aAAa,CAAC;iBACzB,CAAA;;;ACtBD;;;;AAIG;AAKH;MAKa,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,oGAFlB,CAAsB,oBAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FAErB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,QAAQ,EAAE,CAAsB,oBAAA,CAAA;iBACjC,CAAA;8BAEU,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;;AAGR,MAAM,cAAc,GAAG,CAAC,iBAAiB,CAAC,CAAC;MAE9B,qBAAqB,CAAA;IAChC,OAAO,GAAA;;KAEN;IACD,eAAe,GAAA;;KAEd;IACD,eAAe,GAAA;;KAEd;IACD,eAAe,GAAA;;KAEd;AACF,CAAA;MAYY,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAhCjB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAAjB,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAgCjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAPjB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,QAAQ,EAAE,qBAAqB;AAChC,SAAA;AACF,KAAA,EAAA,CAAA,CAAA;2FAEU,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAV7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,cAAc;AAC5B,oBAAA,OAAO,EAAE,cAAc;AACvB,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,QAAQ,EAAE,qBAAqB;AAChC,yBAAA;AACF,qBAAA;iBACF,CAAA;;;AC7CD;;;;AAIG;;ACJH;;;;AAIG;AAIH;MAMa,gBAAgB,CAAA;AAC3B,IAAA,WAAA,GAAA;;KAEC;;6GAHU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,kDCd7B,iIAGA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDWa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,SAAS;+BACE,YAAY,EAAA,QAAA,EAAA,iIAAA,EAAA,CAAA;;;AEXxB;;;;AAIG;MAaU,8BAA8B,CAAA;AAkBzC,IAAA,WAAA,GAAA;AAjBA,QAAA,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;AAMrB,QAAA,IAAgB,CAAA,gBAAA,GAAa,EAAE,CAAC;AAMhC,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAG7B,CAAC;;KAIJ;IAED,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,YAAY,GAAG,OAAO,CACzB,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,wBAAwB,CAAC,KAAK,CAC7D,CAAC;AACH,SAAA;AAAM,aAAA;YACL,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;AAC/D,gBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,oBAAoB,EAAE;AAC5D,oBAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC3B,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,gBAAgB,EAAE;AAC/D,oBAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC1B,iBAAA;AACF,aAAA;AACF,SAAA;KACF;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;AAEvC,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,KAAK,EAAE,IAAI,CAAC,YAAY;YACxB,QAAQ,EAAE,IAAI,CAAC,eAAe;AAC/B,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,UAA8B,EAAA;AACvC,QAAA,OAAO,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;KACxE;;2HAjDU,8BAA8B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,2NCjB3C,sdAkBA,EAAA,CAAA,CAAA;2FDDa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAJ1C,SAAS;+BACE,4BAA4B,EAAA,QAAA,EAAA,sdAAA,EAAA,CAAA;0EAOtC,eAAe,EAAA,CAAA;sBADd,KAAK;gBAIN,gBAAgB,EAAA,CAAA;sBADf,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,cAAc,EAAA,CAAA;sBADb,MAAM;;;AE7BT;;;;AAIG;MA0BU,+BAA+B,CAAA;AAsB1C,IAAA,WAAW,CAAC,KAAc,EAAA;;AAExB,QAAA,IAAK,KAAK,CAAC,MAAc,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE;AACnE,YAAA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC3B,SAAA;KACF;AAED,IAAA,WAAA,CACY,MAA+B,EAC/B,wBAAkD,EAClD,EAAc,EACd,mBAAwC,EAAA;AAHxC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAyB;AAC/B,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;AAClD,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;AACd,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AAhC1B,QAAA,IAAI,CAAA,IAAA,GAAG,QAAQ,CAAC;AACV,QAAA,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;AAErC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;AAE3C,QAAA,IAAoB,CAAA,oBAAA,GAAwB,IAAI,CAAC;AACjD,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AACtB,QAAA,IAAgB,CAAA,gBAAA,GAAa,EAAE,CAAC;QAMhC,IAAA,CAAA,WAAW,GAAgB;AACzB,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,SAAS,EAAE,wBAAwB;AACnC,YAAA,aAAa,EAAE,IAAI;SACpB,CAAC;AAgBA,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;AACjC,YAAA,IAAI,CAAC,oBAAoB;AACvB,gBAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,4BAA4B,CAAC;AAC7D,YAAA,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,EAAE;gBAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;AACxE,aAAA;AACF,SAAA;KACF;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;QAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,EAAE,CAAC;KACzE;AAED,IAAA,KAAK,CAAC,MAAY,EAAA;AAChB,QAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC9C;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7C,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,KACxB,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACjE,YAAA,IACE,OAAO;AACP,gBAAA,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,OAAO,CAAC,EACrD;AACA,gBAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;AACR,iBAAA;gBAED,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACf,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5D,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CACF;aACA,SAAS,EAAE,CACf,CAAC;AACF,QAAA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;KACzB;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7C,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,KACxB,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACjE,YAAA,IACE,OAAO;AACP,iBAAC,OAAO,CAAC,YAAY,IAAI,IAAI;oBAC3B,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,EAC5D;AACA,gBAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;AACR,iBAAA;gBAED,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACf,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxD,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CACF;aACA,SAAS,EAAE,CACf,CAAC;AACF,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACxB;AAEO,IAAA,iBAAiB,CAAC,QAAyB,EAAA;;AACjD,QAAA,OAAO,OAAO,CACZ,QAAQ,CAAC,EAAE;AACT,aAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,gBAAgB,CAAA;AAC/C,YAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CACvE,CAAC;KACH;AAED,IAAA,eAAe,CAAC,EACd,KAAK,EACL,QAAQ,GAIT,EAAA;QACC,IAAI,QAAQ,CAAC,EAAE,EAAE;AACf,YAAA,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxD,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5D,aAAA;AACF,SAAA;KACF;AAED,IAAA,uBAAuB,CACrB,QAAyB,EACzB,QAAA,GAA+B,EAAE,EAAA;AAEjC,QAAA,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;AAC9B,YAAA,IAAI,QAAQ,CAAC,EAAE,KAAK,OAAO,CAAC,YAAY,EAAE;AACxC,gBAAA,OAAO,OAAO,CAAC;AAChB,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;;4HAvJU,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAR,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,+BAA+B,uMC9B5C,+vEAgEA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAS,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,8BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,kBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDlCa,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAJ3C,SAAS;+BACE,6BAA6B,EAAA,QAAA,EAAA,+vEAAA,EAAA,CAAA;6MAIb,IAAI,EAAA,CAAA;sBAA7B,WAAW;uBAAC,WAAW,CAAA;gBACQ,KAAK,EAAA,CAAA;sBAApC,WAAW;uBAAC,iBAAiB,CAAA;gBAoB9B,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AEnDnC;;;;AAIG;AAMI,MAAM,mCAAmC,GAAiB;AAC/D,IAAA,MAAM,EAAE;AACN,QAAA,iBAAiB,EAAE;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,SAAS,EAAE,+BAA+B;YAC1C,UAAU,EAAE,WAAW,CAAC,MAAM;AAC/B,SAAA;AACF,KAAA;CACF;;AClBD;;;;AAIG;MAgBU,mCAAmC,CAAA;IAG9C,WACY,CAAA,GAAqB,EACrB,mBAAwC,EAAA;AADxC,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AACrB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAChD;IAEJ,UAAU,GAAA;QACR,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAA,mBAAA,wCAEhD,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,GAAG,CACT,CAAC;AACF,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;AAClC,SAAA;KACF;;gIAjBU,mCAAmC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnC,mCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mCAAmC,6KCpBhD,oIAGA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDiBa,mCAAmC,EAAA,UAAA,EAAA,CAAA;kBAJ/C,SAAS;+BACE,kCAAkC,EAAA,QAAA,EAAA,oIAAA,EAAA,CAAA;sIAIzB,WAAW,EAAA,CAAA;sBAA7B,SAAS;uBAAC,MAAM,CAAA;;;AErBnB;;;;AAIG;MA8CU,sCAAsC,CAAA;;mIAAtC,sCAAsC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAtC,sCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sCAAsC,iBAR/C,yCAAyC;AACzC,QAAA,mCAAmC,aArBnC,YAAY;QACZ,UAAU;QACV,oBAAoB;AACpB,QAAA,mBAAmB,aAqBnB,yCAAyC;QACzC,mCAAmC,CAAA,EAAA,CAAA,CAAA;AAG1B,sCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sCAAsC,EAvBtC,SAAA,EAAA;QACT,oBAAoB,CAAC,mCAAmC,CAAC;AACzD,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,yCAAyC,EAAE;AACzC,oBAAA,SAAS,EAAE,yCAAyC;oBACpD,YAAY,EAAE,oBAAoB,CAAC,OAAO;AAC3C,iBAAA;AACD,gBAAA,mCAAmC,EAAE;AACnC,oBAAA,SAAS,EAAE,mCAAmC;AAC/C,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAlBC,YAAY;QACZ,UAAU;QACV,oBAAoB;QACpB,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAyBV,sCAAsC,EAAA,UAAA,EAAA,CAAA;kBA9BlD,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,UAAU;wBACV,oBAAoB;wBACpB,mBAAmB;AACpB,qBAAA;AACD,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,mCAAmC,CAAC;AACzD,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,yCAAyC,EAAE;AACzC,oCAAA,SAAS,EAAE,yCAAyC;oCACpD,YAAY,EAAE,oBAAoB,CAAC,OAAO;AAC3C,iCAAA;AACD,gCAAA,mCAAmC,EAAE;AACnC,oCAAA,SAAS,EAAE,mCAAmC;AAC/C,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,yCAAyC;wBACzC,mCAAmC;AACpC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,yCAAyC;wBACzC,mCAAmC;AACpC,qBAAA;iBACF,CAAA;;;ACjDD;;;;AAIG;;ACJH;;;;AAIG;MAMU,mBAAmB,GAAG,IAAI,cAAc,CACnD,mBAAmB;;ACXrB;;;;AAIG;AAcH;;;;;;;;;;;;;;AAcG;MAIU,iBAAiB,CAAA;AAU5B,IAAA,WAAA,CACY,MAAiB,EACjB,YAA0B,EACL,QAAa,EAAA;AAFlC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AACL,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;QAV9C,IAAA,CAAA,WAAW,GAA2B,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;AACpE,cAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CACtB,GAAG,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAU,KAAK,CAAC,MAAO,CAAC,UAAU,CAAC,CAAC,EACrE,oBAAoB,EAAE,CACvB;AACH,cAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAM5B;AAEJ;;;;;AAKG;AACH,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACtB,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;AACzD,SAAA;QACD,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;AAED;;;AAGG;AACH,IAAA,OAAO,CAAC,UAAsB,EAAA;;AAC5B,QAAA,QACE,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA;;;QAG3B,IAAI,CAAC,UAAU,CACb,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,0CAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAC7D,EACD;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CAAC,UAAsB,EAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1B,GAAG,CAAC,CAAC,EAAE,KACL,IAAI,CAAC,WAAW;AACb,aAAA,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAClD,aAAA,QAAQ,CAAC,EAAE,CAAC,CAChB,CACF,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,IAAI,CAAC,UAAsB,EAAA;AACzB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1B,GAAG,CAAC,CAAC,EAAE,KACL,IAAI,CAAC,WAAW;aACb,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC3C,aAAA,QAAQ,CAAC,EAAE,CAAC,CAChB,CACF,CAAC;KACH;AAED;;AAEG;AACH,IAAA,OAAO,CAAC,UAAsB,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,UAAU,CAAC,CAAC,CAAC;KAC9D;AAED;;;;;AAKG;AACH,IAAA,IAAc,kBAAkB,GAAA;;AAC9B,QAAA,OAAO,MAAA,IAAI,CAAC,WAAW,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,CAAC;KAC9B;AAED;;;;AAIG;IACO,4BAA4B,GAAA;AACpC,QAAA,MAAM,gBAAgB,GAAG,CAAC,IAAgB,EAAE,IAAgB,KAAY;YACtE,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CACtB,WAAW,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,EACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAC3B,CAAC;YACF,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CACtB,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,EAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAC3B,CAAC;AACF,YAAA,OAAO,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,SAAC,CAAC;AACF,QAAA,OAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC1E;AAED;;;;;AAKG;AACO,IAAA,UAAU,CAAC,UAAsB,EAAA;QACzC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEjD,IAAI,CAAC,gBAAgB,EAAE;AACrB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;;AAGD,QAAA,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EAAE;AACxC,YAAA,OAAO,gBAA0B,CAAC;AACnC,SAAA;aAAM,IAAI,gBAAgB,CAAC,GAAG,EAAE;YAC/B,OAAO,gBAAgB,CAAC,GAAG,CAAC;AAC7B,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;KACF;AAES,IAAA,UAAU,CAAC,UAAsB,EAAA;;AACzC,QAAA,OAAQ,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAgB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC;KAC7D;AAED;;;;;;;;;AASG;AACO,IAAA,aAAa,CAAC,WAAmB,EAAA;;QACzC,QACE,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,KAAI;YAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9B,YAAA,OAAO,IAAI,KAAK,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC;AAC7C,SAAC,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,EACrD;KACH;AAED;;AAEG;AACH,IAAA,IAAc,MAAM,GAAA;;QAClB,OAAO,CAAA,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,KAAI,EAAE,CAAC;KAC7C;;AAxKU,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,oEAalB,WAAW,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAbV,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAcI,MAAM;+BAAC,WAAW,CAAA;;;;ACjDvB;;;;AAIG;MAuBU,iBAAiB,CAAA;AAI5B,IAAA,WAAA,CACU,GAAe,EACf,MAAoB,EACpB,iBAAoC,EACpC,eAAgC,EAAA;AAHhC,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAY;AACf,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAc;AACpB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AANhC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;;;;AAkBpC,QAAA,IAAe,CAAA,eAAA,GAAQ,EAAE,CAAC;AAC1B,QAAA,IAAQ,CAAA,QAAA,GAAQ,EAAE,CAAC;AAXzB,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,eAAe;aACjB,QAAQ,CAAC,mBAAmB,CAAC;AAC7B,aAAA,SAAS,CAAC,CAAC,QAAQ,MAAM,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CACvD,CAAC;KACH;AAQD,IAAA,QAAQ,CAAC,OAAgB,EAAA;QACvB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CACzE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,KAAI;AACzB,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;AACnC,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AAC3D,YAAA,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC;AAC7C,SAAC,CAAC,EACF,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,KAAI;AAChD,YAAA,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;YACvB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;AACzC,gBAAA,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AACpE,aAAA;AACD,YAAA,OAAO,MAAM,CAAC;SACf,CAAC,EACF,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAI;AAC5B,YAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;AACzB,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;AACD,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACjB,oBAAA,OAAO,KAAK,CAAC;AACd,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,eAAe,CAAC,YAAoB,EAAA;AAClC,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAC5C,GAAG,CAAC,CAAC,UAAU,KAAI;AACjB,YAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;;AAE5B,gBAAA,OAAO,SAAS,CAAC;AAClB,aAAA;YACD,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AACjE,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,uBAAuB,CACvB,kBAAkB,EACpC,UAAU,EACV,UAAU,CACX,CAAC;YACF,OAAO,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC;SAC7C,CAAC,CACH,CAAC;KACH;AAEO,IAAA,YAAY,CAClB,IAAU,EACV,OAA2B,EAC3B,UAAsB,EAAA;;AAEtB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAC/B,MAAA,IAAI,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EACnB,OAAO,EACP,OAAO,EACP,UAAU,CACX,CAAC;AACF,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE;YAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5D,YAAA,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAChE,SAAA;aAAM,IAAI,CAAC,OAAO,EAAE;AACnB,YAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;AAClC,YAAA,OAAO,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAClD,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC3C,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;KACF;AAED,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KACjE;AAED,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CACpB,GAAG,CAAC,CAAC,IAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,EAClC,MAAM,CAAC,cAAc,CAAC,CACvB,CAAC;KACH;AAED;;;;;AAKG;AACO,IAAA,aAAa,CACrB,WAAmB,EACnB,eAAuB,EACvB,OAAgB,EAChB,UAAuB,EAAA;AAEvB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;AAC5B,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;QACD,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AAEhE,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,OAAO,IAAI,CAAC,uBAAuB,CACjC,WAAW,EACX,eAAe,EACf,OAAO,EACP,UAAU,CACX,CAAC;AACH,SAAA;AAED,QAAA,IAAI,kBAAkB,EAAE;YACtB,OAAO,IAAI,CAAC,uBAAuB,CACf,kBAAkB,EACpC,eAAe,EACf,UAAU,CACX,CAAC;AACH,SAAA;KACF;AAES,IAAA,uBAAuB,CAC/B,WAAmB,EACnB,eAAuB,EACvB,OAAgB,EAChB,UAAuB,EAAA;;QAEvB,MAAM,kBAAkB,GAAQ,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,WAAW,CAAC,CAAC;AAEvE,QAAA,IAAI,CAAC,kBAAkB,IAAI,CAAC,OAAO,EAAE;AACnC,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;;;AAID,QAAA,MAAM,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC/C,cAAE,kBAAkB,CAAC,OAAO,CAAC;cAC3B,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,aAAa,EAAE;AAClB,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;AAED,QAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CACjC,aAAa,EAC/B,eAAe,EACf,UAAU,CACX,CAAC;AAEF,QAAA,IAAI,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;AACpD,YAAA,OAAO,gBAAgB,CAAC;AACzB,SAAA;aAAM,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;AACtE,YAAA,OAAO,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACpC,SAAA;aAAM,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,OAAO,CAAC,EAAE;YAC7C,OAAmB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACrD,SAAA;KACF;AAED;;;;AAIG;AACO,IAAA,uBAAuB,CAC/B,gBAAkC,EAClC,eAAuB,EACvB,UAAuB,EAAA;QAEvB,IAAI,UAAU,GAAe,gBAAgB,CAAC;;AAG9C,QAAA,IAAI,CAAC,gBAAgB,IAAI,CAAC,UAAU,EAAE;AACpC,YAAA,OAAO,UAAU,CAAC;AACnB,SAAA;;QAGD,IACE,gBAAgB,CAAC,UAAU,CAAC;YAC5B,gBAAgB,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,EAC5D;AACA,YAAA,OAAmB,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACjD,SAAA;;AAGD,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC;AAE/C,QAAA,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;YACtD,IACE,gBAAgB,CAAC,EAAE,CAAC;gBACpB,gBAAgB,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,EACpD;AACA,gBAAA,UAAU,GAAe,gBAAgB,CAAC,EAAE,CAAC,CAAC;AAC/C,aAAA;AACF,SAAA;AACD,QAAA,OAAO,UAAU,CAAC;KACnB;AAED;;;;;AAKG;IACK,sBAAsB,CAAC,IAAU,EAAE,OAAgB,EAAA;QACzD,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;;;AAGlD,YAAA,OAAO,CAAC,IAAI,CACV,8BAA8B,CAAC,IAAI,CAAC,KAAK;kBACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;kBACvB,EAAE,EACJ,IAAI,CAAC,CAAK,GAAA,CAAA,CAAC,CAAG,CAAA,CAAA,CACjB,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;AACrC,SAAA;AAED,QAAA,MAAM,QAAQ,GAAG,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;QAC1C,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;AAC/C,YAAA,OAAO,CAAC,IAAI,CACV,8BAA8B,QAAQ,CAAA,4EAAA,CAA8E,CACrH,CAAC;AACF,YAAA,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;AACvC,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;8GA7PU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC1BD;;;;AAIG;AAsBH;;AAEG;MAIU,kBAAkB,CAAA;IAgB7B,WACY,CAAA,iBAA2C,EAC3C,cAAqC,EAAA;AADrC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAA0B;AAC3C,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAuB;;AAXzC,QAAA,IAAA,CAAA,mBAAmB,GAAwB,IAAI,GAAG,EAAE,CAAC;AAE7D;;;AAGG;AACK,QAAA,IAAA,CAAA,gBAAgB,GACtB,IAAI,GAAG,EAAE,CAAC;QAMV,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,cAAc,GAAA;AACpB,QAAA,IAAI,CAAC,iBAAiB;aACnB,SAAS,CAAC,gBAAgB,CAAC;AAC3B,aAAA,SAAS,CAAC,CAAC,MAAiB,KAAI;;YAC/B,IAAI,CAAC,oBAAoB,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,cAAc,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;AAExD,YAAA,KAAK,MAAM,CAAC,WAAW,EAAE,aAAa,CAAC,IAAI,MAAM,CAAC,OAAO,CACvD,IAAI,CAAC,oBAAoB,CAC1B,EAAE;gBACD,IACE,OAAO,aAAa,KAAK,QAAQ;AACjC,qBAAA,aAAa,aAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,MAAM,CAAA;qBACrB,CAAA,EAAA,GAAA,aAAa,KAAb,IAAA,IAAA,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAA,EACpC;AACA,oBAAA,KAAK,MAAM,SAAS,IAAI,aAAa,CAAC,aAAa,EAAE;wBACnD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AACtD,qBAAA;AACF,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACN;AAED;;;AAGG;AACH,IAAA,aAAa,CAAC,aAAqB,EAAA;QACjC,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;KACpD;AAED;;AAEG;AACH,IAAA,aAAa,CACX,aAAqB,EAAA;QAErB,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE5D,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;AACtB,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9C,GAAG,CACD,CAAC,eAAe,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,eAAe,CAAC,kBAAkB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,aAAa,CAAC,CAAA,EAAA,CACzE,CACF,CAAC;KACH;AAED;;;;AAIG;AACH,IAAA,SAAS,CAAC,aAAqB,EAAA;;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE5D,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;AAED,QAAA,IAAI,MAAM,CAAC;;QAGX,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB;aAClB,GAAG,CAAC,OAAO,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACX,SAAS,CAAC,CAAC,eAAe,KAAI;AAC9B,YAAA,MAAM,GAAG,eAAe,CAAC,SAAS,CAAC;SACpC,CAAA,CACA,WAAW,EAAE,CAAC;AACjB,QAAA,OAAO,MAAM,CAAC;KACf;AAED;;;;AAIG;AACK,IAAA,sBAAsB,CAC5B,WAAmB,EAAA;QAEnB,OAAO,KAAK,CAAC,MAAK;YAChB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;AAC3C,gBAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CACvB,WAAW,EACX,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,IAAI,CAClD,GAAG,CAAC,CAAC,SAAS,KACZ,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,WAAW,CAAC,CACnD,EACD,WAAW,EAAE,CACd,CACF,CAAC;AACH,aAAA;YAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAChD,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;IACK,qBAAqB,CAC3B,SAA2B,EAC3B,OAAe,EAAA;;;QAGf,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAqB,CAC9C,OAAO,CACe,CAAC;AAEzB,QAAA,MAAM,eAAe,GAAoB;YACvC,SAAS;AACT,YAAA,kBAAkB,EAAE,EAAE;SACvB,CAAC;;QAGF,MAAM,qBAAqB,GAAG,IAAI,CAAC,2BAA2B,CAC5D,SAAS,CAAC,QAAQ,CACnB,CAAC;;QAGF,KAAK,MAAM,aAAa,IAAI,CAAA,EAAA,GAAA,aAAa,CAAC,aAAa,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EAAE;;AAE7D,YAAA,eAAe,CAAC,kBAAmB,CAAC,aAAa,CAAC;gBAChD,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,qBAAqB,CAAC,aAAa,0CAAG,aAAa,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;AAC9D,SAAA;AACD,QAAA,OAAO,eAAe,CAAC;KACxB;AAED;;AAEG;AACK,IAAA,2BAA2B,CAAC,eAAyB,EAAA;;QAE3D,MAAM,mBAAmB,GAAG,eAAe,CAAC,GAAG,CAAQ,WAAW,EAAE,EAAE,EAAE;AACtE,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;;AAEH,QAAA,MAAM,0BAA0B,GAAG,eAAe,CAAC,GAAG,CACpD,kBAAkB,EAClB,EAAE,EACF,EAAE,IAAI,EAAE,IAAI,EAAE,CACf,CAAC;QAEF,OAAO,SAAS,CACd,EAAE,EACF,IAAI,0BAA0B,KAA1B,IAAA,IAAA,0BAA0B,KAA1B,KAAA,CAAA,GAAA,0BAA0B,GAAI,EAAE,CAAC,EACrC,IAAI,mBAAmB,KAAnB,IAAA,IAAA,mBAAmB,KAAnB,KAAA,CAAA,GAAA,mBAAmB,GAAI,EAAE,CAAC,CAClB,CAAC;KAChB;;+GA5KU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC/BD;;;;AAIG;AA0BH;;AAEG;MAIU,oBAAoB,CAAA;AAc/B,IAAA,WAAA,CACY,MAAiB,EACI,UAAkB,EACvC,cAAkC,EAClC,iBAA2C,EAAA;AAH3C,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACI,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAQ;AACvC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAoB;AAClC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAA0B;;AAhB7C,QAAA,IAAiB,CAAA,iBAAA,GAAa,EAAE,CAAC;;AAGjC,QAAA,IAAQ,CAAA,QAAA,GAAqD,EAAE,CAAC;;AAMhE,QAAA,IAAA,CAAA,gBAAgB,GACxB,IAAI,GAAG,EAAE,CAAC;AAQV,QAAA,IAAI,CAAC,iBAAiB;aACnB,SAAS,CAAC,eAAe,CAAC;AAC1B,aAAA,SAAS,CAAC,CAAC,SAAoB,KAAI;;;;AAIlC,YAAA,IAAI,CAAC,eAAe,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,SAAS,CAAC,aAAa,CAAE,CAAC;AACxD,SAAC,CAAC,CAAC;KACN;AAED;;;;;;;AAOG;AACH,IAAA,iBAAiB,CAAC,cAAwB,EAAA;QACxC,OAAO,KAAK,CAAC,MAAK;;;;;YAIhB,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAE5B,YAAA,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;AAC1C,gBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACjC,oBAAA,MAAM,YAAY,GAAG,CAAA,EAAA,IAAC,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GACxC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAC,CAAC;;oBAG9C,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;AACpD,wBAAA,gBAAgB,CAAC,IAAI;;wBAEnB,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,YAAY,CAAC,CAC5D,CAAC;AACH,qBAAA;AAAM,yBAAA;;AAEL,wBAAA,IAAI,YAAY,EAAE;AAChB,4BAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,YAAY,CAAC;AAC7C,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;YAED,IAAI,gBAAgB,CAAC,MAAM,EAAE;AAC3B,gBAAA,OAAO,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;AAC/D,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,EAAE,CAAC,cAAc,CAAC,CAAC;AAC3B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAEO,yBAAyB,CAC/B,aAAqB,EACrB,YAAkC,EAAA;QAElC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;AAC7C,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc;iBACzC,aAAa,CAAC,aAAa,CAAC;iBAC5B,IAAI,CACH,MAAM,CAAC,cAAc,CAAC,EACtB,GAAG,CAAC,CAAC,uBAAuB,KAAI;;;AAG9B,gBAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,SAAS,CACtC,EAAE,EACF,uBAAuB,EACvB,YAAY,CACb,CAAC;AACF,gBAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAC9C,aAAC,CAAC,EACF,KAAK,EAAE,CACR,CAAC;YACJ,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;AAC5D,SAAA;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;KACjD;AAED;;;;;AAKG;AACH,IAAA,SAAS,CAAC,aAAqB,EAAA;QAC7B,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;YACpD,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AACrD,SAAA;KACF;AAED;;;;;;;;;AASG;AACH,IAAA,UAAU,CAAC,aAAqB,EAAA;;QAC9B,MAAM,eAAe,GACnB,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAC5B,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA,IAAC,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,aAAa,CAAC,CAAC;AAEvE,QAAA,IAAI,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACnD,gBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC3C,OAAO,CAAC,IAAI,CACV,CAAA,8DAAA,EAAiE,aAAa,CAAM,IAAA,CAAA,EACpF,CAAoE,kEAAA,CAAA,CACrE,CAAC;AACH,aAAA;AACF,SAAA;AAED,QAAA,OAAO,eAAe,CAAC;KACxB;AAED;;;AAGG;AACH,IAAA,YAAY,CAAC,aAAqB,EAAA;;QAChC,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChD,QAAA,OAAO,EAAE,KAAK,KAAI,MAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAA,CAAC,CAAC;KAC/D;AAED;;AAEG;AACH,IAAA,uBAAuB,CACrB,aAAqB,EAAA;;AAErB,QAAA,OAAO,MAAA,CAAA,EAAA,IAAC,MAAA,IAAI,CAAC,eAAe,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,aAAa,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACvE,YAAY,CAAC;KAClB;AAED;;AAEG;AACH,IAAA,cAAc,CAAC,cAAwB,EAAA;;QACrC,MAAM,OAAO,GAAG,EAAE,CAAC;AACnB,QAAA,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;AAC1C,YAAA,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;AACpC,gBAAA,OAAO,CAAC,IAAI,CAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC,CAAC;AACjE,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;KAC7C;AAED;;AAEG;AACH,IAAA,aAAa,CACX,aAAqB,EAAA;;QAErB,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAS,CAAC;KAClD;AAED;;;;;AAKG;AACO,IAAA,sBAAsB,CAC9B,kBAA+D,EAAA;AAE/D,QAAA,MAAM,MAAM,GAAkC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAE/D,CAAC,kBAAkB,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,MAAM,KAAI;;AAC5C,YAAA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACzB,CAAA,EAAA,GAAA,MAAM,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC;AAClC,aAAA;AAAM,iBAAA;AACL,gBAAA,CAAA,EAAA,GAAA,MAAM,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;gBAClD,IAAI,MAAM,CAAC,MAAM,EAAE;AACjB,oBAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,MAAM,CAAC;KACf;AAED;;AAEG;AACH,IAAA,SAAS,CAAC,cAAwB,EAAA;;AAChC,QAAA,MAAM,MAAM,GAAG,IAAI,GAAG,EAAO,CAAC;AAC9B,QAAA,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;YAC1C,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,CAAC,KAAK,KACpD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAClB,CAAC;AACH,SAAA;AACD,QAAA,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;AAED;;AAEG;AACH,IAAA,WAAW,CAAC,cAAwB,EAAA;;AAClC,QAAA,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAU,CAAC;AACnC,QAAA,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;AAC1C,YAAA,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;gBACpC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,CAAC,GAAG,KACpD,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAClB,CAAC;AACH,aAAA;AACF,SAAA;AACD,QAAA,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7B;;AAxOU,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,2CAgBrB,WAAW,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAhBV,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAiBI,MAAM;+BAAC,WAAW,CAAA;;;;ACpDvB;;;;AAIG;MAWU,eAAe,CAAA;AAG1B,IAAA,WAAA,CACY,oBAA0C,EACrB,UAAe,EAClB,QAAkB,EAAA;AAFpC,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AACrB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAK;AAClB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;QAE9C,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAChC;AAED;;AAEG;IACO,uBAAuB,GAAA;AAC/B,QAAA,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACtC,YAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAChC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAC/C;iBACE,MAAM,CACL,CAAC,EAAW,KACV,EAAE,CAAC,qBAAqB,EAAE,CAAC,GAAG;AAC9B,gBAAA,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAC7C;AACA,iBAAA,GAAG,CAAC,CAAC,EAAW,KAAK,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;AACtD,SAAA;KACF;AAED;;;;;;AAMG;AACH,IAAA,cAAc,CAAC,IAAY,EAAA;;QACzB,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,0CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,YAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACrE,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;AAGG;IACH,wBAAwB,CACtB,IAAwB,EACxB,aAAqB,EAAA;QAErB,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AACrC,YAAA,OAAO,EAAE,YAAY,EAAE,oBAAoB,CAAC,OAAO,EAAE,CAAC;AACvD,SAAA;QACD,MAAM,YAAY,GAChB,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;QACnE,OAAO,EAAE,YAAY,EAAE,CAAC;KACzB;;4GAzDU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAKhB,WAAW,EAAA,EAAA,EAAA,KAAA,EACX,QAAQ,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AANP,eAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA;2FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAMI,MAAM;+BAAC,WAAW,CAAA;;8BAClB,MAAM;+BAAC,QAAQ,CAAA;;;;ACrBpB;;;;AAIG;AAIH;;;;;AAKG;AACG,MAAgB,cAAe,SAAQ,OAAO,CAAA;AASnD,CAAA;AAED;;AAEG;AACG,MAAO,oBAAqB,SAAQ,cAAc,CAAA;;AACtD;;AAEG;AACa,oBAAI,CAAA,IAAA,GAAG,iBAAiB,CAAC;AAO3C;;AAEG;AACG,MAAO,qBAAsB,SAAQ,cAAc,CAAA;;AACvD;;AAEG;AACa,qBAAI,CAAA,IAAA,GAAG,kBAAkB;;AC9C3C;;;;AAIG;AAYH;;;AAGG;MACmB,gBAAgB,CAAA;AAwBrC;;AC5CD;;;;AAIG;AAiBH;;AAEG;MAIU,uBAAuB,CAAA;AAClC,IAAA,WAAA,CAGY,QAA4B,EAAA;AAA5B,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAoB;AAG9B,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,GAAG,EAA4B,CAAC;KAF5D;AAIJ;;;;AAIG;AACO,IAAA,OAAO,CACf,gBAAqC,EAAA;AAErC,QAAA,MAAM,OAAO,GAAG,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAErE,QAAA,IAAI,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;AAC/C,gBAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC3C,gBAAA,OAAO,CAAC,IAAI,CACV,+CAA+C,EAC/C,gBAAgB,CACjB,CAAC;AACH,aAAA;AACF,SAAA;AAED,QAAA,OAAO,OAAO,CAAC;KAChB;AAED;;;;;;AAMG;AACH,IAAA,WAAW,CACT,gBAAqC,EACrC,gBAAkC,EAClC,eAA0B,EAC1B,MAAyB,EAAA;;AAIzB,QAAA,OAAO,MAAA,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAC7C,gBAAgB,EAChB,gBAAgB,EAChB,eAAe,EACf,MAAM,CACP,CAAC;KACH;;AArDU,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,kBAGxB,gBAAgB,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAHf,uBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cAFtB,MAAM,EAAA,CAAA,CAAA;2FAEP,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAHnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAGI,QAAQ;;8BACR,MAAM;+BAAC,gBAAgB,CAAA;;;;AC9B5B;;;;AAIG;MAKmB,gBAAgB,CAAA;AAGrC;;ACZD;;;;AAIG;AAQH;;;;;AAKG;MAIU,qBAAqB,CAAA;IAChC,WACY,CAAA,iBAAuC,EACvC,UAAsB,EAAA;AADtB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAsB;AACvC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;KAC9B;AAEJ;;;;;;AAMG;IACH,GAAG,CAAyB,GAAW,EAAE,IAAa,EAAA;QACpD,OAAO,KAAK,CAAC,MAAK;AAChB,YAAA,IAAI,mBAAkC,CAAC;AAEvC,YAAA,IAAI,IAAI,EAAE;gBACR,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAI,IAAI,CAAC,CAAC;AACrE,aAAA;AAED,YAAA,IAAI,GAAG,EAAE;AACP,gBAAA,IAAI,mBAAmB,EAAE;AACvB,oBAAA,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAI,GAAG,CAAC,CAAC,IAAI,CAClD,GAAG,CAAC,CAAC,IAAI,MAAK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACT,mBAAmB,CAAA,EACnB,IAAI,CAAA,CACP,CAAC,EACH,SAAS,CAAC,mBAAmB,CAAC,CAC/B,CAAC;AACH,iBAAA;AAAM,qBAAA;oBACL,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAI,GAAG,CAAC,CAAC;AACjD,iBAAA;AACF,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,mBAAmB,GAAG,EAAE,CAAC,mBAAmB,CAAC,GAAG,KAAK,CAAC;AAC9D,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;;kHArCU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAJ,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAFpB,MAAM,EAAA,CAAA,CAAA;2FAEP,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACpBD;;;;AAIG;AAOH;;;;;AAKG;MAIU,kBAAkB,CAAA;IAC7B,WACY,CAAA,oBAA0C,EAC1C,QAAkB,EAAA;AADlB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAC1B;AAEG,IAAA,WAAW,CAChB,IAAY,EACZ,GAAW,EACX,cAAyB,EAAA;;AAEzB,QAAA,MAAM,eAAe,GACnB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC;QAC9D,OAAO,QAAQ,CAAC,MAAM,CAAC;AACrB,YAAA,SAAS,EAAE;AACT,gBAAA;AACE,oBAAA,OAAO,EAAE,gBAAgB;AACzB,oBAAA,UAAU,EAAE,CAAC,YAAmC,MAAM;wBACpD,GAAG;wBACH,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;qBACnC,CAAC;oBACF,IAAI,EAAE,CAAC,qBAAqB,CAAC;AAC9B,iBAAA;AACD,gBAAA,GAAG,eAAe;AACnB,aAAA;YACD,MAAM,EAAE,cAAc,KAAd,IAAA,IAAA,cAAc,cAAd,cAAc,GAAI,IAAI,CAAC,QAAQ;AACxC,SAAA,CAAC,CAAC;KACJ;;+GA3BU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAI,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACnBD;;;;AAIG;AAkCH;;AAEG;MAIU,yBAAyB,CAAA;AAapC,IAAA,WAAA,CACY,GAAqB,EACrB,oBAA0C,EAC1C,QAAkB,EAClB,uBAAgD,EAChD,QAAmB,EACnB,gBAAyC,EACzC,WAA+B,EAC/B,YAA0B,EAAA;AAP1B,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AACrB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAClB,QAAA,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;AAChD,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAyB;AACzC,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AAC/B,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAnB5B,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAqB,CAAC;KAoB7D;IAEJ,QAAQ,GAAA;;AACN,QAAA,IAAI,CAAC,oBAAoB;aACtB,iBAAiB,CAAC,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC,CAAC;aAC3D,SAAS,CAAC,MAAK;;AACd,YAAA,IACE,IAAI,CAAC,oBAAoB,CAAC,YAAY,CACpC,CAAA,EAAA,GAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CACvC,EACD;gBACA,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,aAAA;AACH,SAAC,CAAC,CAAC;KACN;IAEO,eAAe,GAAA;;AACrB,QAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAC3D,CAAA,EAAA,GAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CACvC,CAAC;QAEF,IAAI,CAAC,gBAAgB,EAAE;YACrB,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB;AAC1C,aAAA,WAAW,CACV,gBAAgB,EAChB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,WAAW,CAAC,WAAW,CAC1B,MAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,EACtC,MAAA,IAAI,CAAC,kBAAkB,CAAC,GAAG,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,EACjC,IAAI,CAAC,QAAQ,CACd,EACD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CACjC,CAAA,EAAA,GAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CACvC,CACF,MACC,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CACJ,MAAM,CAAC,cAAc,CAAC,EACtB,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,KAAI;AACnC,YAAA,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;AAE3B,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAEvC,YAAA,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;AACrD,YAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,YAAY,EAAE,CAAC;AACtD,SAAC,CAAC,EACF,QAAQ,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAE1D,CAAA,SAAS,EAAE,CAAC;KAChB;AAED;;;;AAIG;IACO,aAAa,CACrB,KAA2B,EAC3B,UAAuB,EAAA;AAEvB,QAAA,MAAM,OAAO,GAAG;AACd,YAAA,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ;AAC1C,YAAA,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG;SACd,CAAC;QACpB,IAAI,KAAK,KAAK,oBAAoB,EAAE;YACjC,OAAgC,CAAC,IAAI,GAAG,UAAU,KAAA,IAAA,IAAV,UAAU,KAAV,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,UAAU,CAAE,aAAa,CAAC;AACpE,SAAA;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAC5C;AAEO,IAAA,QAAQ,CAAC,UAAsB,EAAA;AACrC,QAAA,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CACnD,UAAU,CAAC,aAAa,EACxB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,kBAAkB,CACxB,CAAC;KACH;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACzB,YAAA,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;AACrC,SAAA;KACF;;sHA3GU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAAJ,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAN,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;0GAAzB,yBAAyB,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAzB,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAHrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sBAAsB;iBACjC,CAAA;wTAEU,kBAAkB,EAAA,CAAA;sBAA1B,KAAK;gBACI,cAAc,EAAA,CAAA;sBAAvB,MAAM;;;AC9CT;;;;AAIG;AA+BH;;;;;;;;AAQG;MAMU,iBAAiB,CAAA;AAC5B;;;;;;AAMG;IACH,IAEI,QAAQ,CAAC,KAAyB,EAAA;AACpC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;AACD,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;KAC7B;IA8CD,WACY,CAAA,UAAsB,EACtB,uBAAgD,EAChD,QAAmB,EACnB,UAAsB,EACtB,EAAqB,EACrB,eAAgC,EAAA;AALhC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;AAChD,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;AACrB,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AA7C5C;;AAEG;AACsC,QAAA,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AAE5D;;;AAGG;AAC8B,QAAA,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;AAElD;;;AAGG;AAC2C,QAAA,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;QAE1D,IAAA,CAAA,SAAS,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;AAI/D,QAAA,IAAA,CAAA,KAAK,GAAgC,IAAI,CAAC,SAAS,CAAC,IAAI,CAChE,MAAM,CAAC,cAAc,CAAC,EACtB,SAAS,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EACjE,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CACtC,CAAC;;AAGF,QAAA,IAAW,CAAA,WAAA,GAA2C,IAAI,CAAC,KAAK,CAAC,IAAI,CACnE,GAAG,CAAC,CAAC,IAAI,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAA,EAAA,GAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,uBAAJ,IAAI,CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAA,EAAA,CAAC,CACtC,CAAC;AAEQ,QAAA,IAAA,CAAA,YAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;;AAGlD,QAAA,IAAqB,CAAA,qBAAA,GAAG,CAAC,CAAC;KAW9B;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AACtE,YAAA,IAAI,CAAC,UAAU,GAAG,CAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,UAAU,KAAI,EAAE,CAAC;AAC1C,YAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB,CAAC,CACH,CAAC;KACH;AAES,IAAA,QAAQ,CAAC,IAAqB,EAAA;;AACtC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;AAE3B,QAAA,IAAI,IAAI,CAAC,YAAY,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5D,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AAC1C,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AAC1C,SAAA;;AAGD,QAAA,IAAI,CAAC,OAAO,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,KAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,CAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,UAAU;AACnC,cAAE,CAAA,CAAA,EAAA,GAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC;cAC5B,KAAK,CAAC;AACV,QAAA,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,CAAC,KAAK,EAAE;AAC7B,YAAA,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAClB,SAAA;AAED,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAC9C,IAAI,CAAC,UAAU,CAAC,aAAa,EAC7B,IAAI,CAAC,QAAQ,EACb,IAAI,CACL,CAAC;AACH,SAAA;KACF;AAED;;;AAGG;IACH,IAAc,OAAO,CAAC,KAAa,EAAA;AACjC,QAAA,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;KACjD;AAED,IAAA,IAAc,OAAO,GAAA;QACnB,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;AAED;;;AAGG;AACH,IAAA,QAAQ,CAAC,SAAkB,EAAA;AACzB,QAAA,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,OAAO,EAAE,CAAC;AACf,YAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACxB,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,wBAAwB,CAAC,aAAqB,EAAA;AAC5C,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAClD,IAAI,CAAC,QAAQ,EACb,aAAa,CACd,CAAC;KACH;IAES,UAAU,CAClB,GAAoB,EACpB,OAAwB,EAAA;AAExB,QAAA,OAAO,OAAO,CACZ,OAAO,CAAC,UAAU;AAChB,YAAA,GAAG,CAAC,UAAU;YACd,GAAG,CAAC,UAAU,CAAC,MAAM,KAAK,OAAO,CAAC,UAAU,CAAC,MAAM;AACnD,YAAA,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAClB,CAAC,EAAE,EAAE,KAAK,eAAK,OAAA,EAAE,CAAC,GAAG,MAAK,CAAA,EAAA,GAAA,OAAO,CAAC,UAAU,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAE,CAAA,GAAG,CAAA,CAAA,EAAA,CAC1D,CACJ,CAAC;KACH;IAED,WAAW,GAAA;;AACT,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;KAClC;;8GA/JU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAO,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,4XCjD9B,2jBAiBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,yBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDgCa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;+BACE,6BAA6B,EAAA,eAAA,EAEtB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,2jBAAA,EAAA,CAAA;mPAY3C,QAAQ,EAAA,CAAA;sBAFX,WAAW;uBAAC,eAAe,CAAA;;sBAC3B,KAAK;gBAWkB,KAAK,EAAA,CAAA;sBAA5B,KAAK;;sBAAI,WAAW;gBAKoB,UAAU,EAAA,CAAA;sBAAlD,WAAW;uBAAC,iBAAiB,CAAA;;sBAAG,KAAK;gBAML,SAAS,EAAA,CAAA;sBAAzC,WAAW;uBAAC,kBAAkB,CAAA;gBAMe,aAAa,EAAA,CAAA;sBAA1D,WAAW;uBAAC,sBAAsB,CAAA;;sBAAG,KAAK;;;AEtF7C;;;;AAIG;AAeH;;;;;;;;;;;;;;;;;;;;;;;AAuBG;MAIU,qBAAqB,CAAA;AAOhC;;;;;;AAMG;IACH,IAAkC,WAAW,CAAC,QAAgB,EAAA;AAC5D,QAAA,IAAI,QAAQ,IAAI,QAAQ,KAAK,EAAE,EAAE;AAC/B,YAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACjC,YAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9B,SAAA;aAAM,IAAI,IAAI,CAAC,oBAAoB,EAAE;;YAEpC,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,SAAA;KACF;AAWD,IAAA,WAAA,CACY,iBAAoC,EACpC,UAAsB,EACV,WAAqC,EACjD,EAAqB,EAAA;AAHrB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACV,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAA0B;AACjD,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;;AAZvB,QAAA,IAAA,CAAA,YAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;KAatD;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,KACtD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAC7B,CACF,CAAC;AACH,SAAA;KACF;AAED;;;;;;;AAOG;IACO,aAAa,CAAC,QAAgB,EAAE,EAAgB,EAAA;AACxD,QAAA,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACf,QAAA,IAAI,QAAQ,EAAE;AACZ,YAAA,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;AAChC,YAAA,CAAC,EAAE,KAAF,IAAA,IAAA,EAAE,cAAF,EAAE,GAAI,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACtD,YAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACxB,SAAA;KACF;AAED;;AAEG;AACO,IAAA,KAAK,CAAC,EAAgB,EAAA;;QAC9B,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,CAAA,EAAA,GAAA,CAAC,EAAE,KAAF,IAAA,IAAA,EAAE,cAAF,EAAE,GAAI,IAAI,CAAC,IAAI,EAAE,SAAS,0CAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC1D,YAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACxB,SAAA;KACF;AAED;;;;;AAKG;AACH,IAAA,IAAc,IAAI,GAAA;AAChB,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW;cACrB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa;AACzD,cAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACnC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;kHA3FU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sGAArB,qBAAqB,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,CAAA,qBAAA,EAAA,aAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,uBAAuB;iBAClC,CAAA;;;8BAqCI,QAAQ;;yBAtBuB,WAAW,EAAA,CAAA;sBAA5C,KAAK;uBAAC,qBAAqB,CAAA;;;AC5D9B;;;;AAIG;MAYU,mBAAmB,CAAA;IAC9B,IAAa,OAAO,CAAC,KAAa,EAAA;AAChC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;AAsBD,IAAA,WAAA,CAAsB,iBAAoC,EAAA;AAApC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QArBjD,IAAA,CAAA,QAAQ,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QAE9D,IAAA,CAAA,aAAa,GACpB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;AAE9B,QAAA,IAAA,CAAA,WAAW,GAAuB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC3D,SAAS,CAAC,CAAC,OAAO,MAAM,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CACrE,CAAC;QAEO,IAAM,CAAA,MAAA,GAAyB,IAAI,CAAC,QAAQ,CAAC,IAAI,CACxD,SAAS,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CACjE,CAAC;AAEO,QAAA,IAAa,CAAA,aAAA,GACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,SAAS,CAAC,CAAC,YAAY,KACrB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,YAAY,CAAC,CACrD,EACD,oBAAoB,EAAE,CACvB,CAAC;KAE0D;;gHAzBnD,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,sFChBhC,scAkBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAW,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,iBAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAb,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDFa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,gBAAgB,EAAA,eAAA,EAET,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,scAAA,EAAA,CAAA;qGAGlC,OAAO,EAAA,CAAA;sBAAnB,KAAK;;;AEjBR;;;;AAIG;MAgBU,gBAAgB,CAAA;AAC3B,IAAA,WAAA,CACY,oBAA0C;;IAE1C,eAAgC,EAAA;AAFhC,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAE1C,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;KACxC;AAEJ,IAAA,kBAAkB,CAChB,cAAwB,EACxB,KAAgC,EAChC,KAA0B,EAAA;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAEnE,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,MAAM,sBAAsB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAC9C,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAC3C,CAAC;AAEF,YAAA,OAAO,MAAM,CAAC,GAAG,sBAAsB,CAAC,CAAC,IAAI,CAC3C,SAAS,CAAC,CAAC,WAA8B,KAAK,WAAW,KAAK,IAAI,CAAC,EACnE,OAAO,CAAC,IAAI,CAAC,EACb,KAAK,EAAE,CACR,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,SAAA;KACF;AAED,IAAA,gBAAgB,CACd,UAAe,EACf,KAAgC,EAChC,KAA0B,EAAA;AAE1B,QAAA,MAAM,KAAK,GAAG,gBAAgB,CAC5B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAc,UAAU,CAAC,CAClD,CAAC;AACF,QAAA,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;AACxB,YAAA,OAAO,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1E,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;AAC5D,SAAA;KACF;;6GA1CU,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAI,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAJ,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;AA8CD,SAAS,kBAAkB,CACzB,KAAqC,EAAA;AAErC,IAAA,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;AACvB,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AAED,IAAA,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACrC,KAAA;AAED,IAAA,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AACnB,CAAC;AAED,SAAS,SAAS,CAAC,GAAQ,EAAA;IACzB,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;AACjD,CAAC;AAED,SAAS,aAAa,CAAC,KAAU,EAAA;IAC/B,OAAO,KAAK,IAAI,UAAU,CAAc,KAAK,CAAC,WAAW,CAAC,CAAC;AAC7D,CAAC;AAED,SAAS,UAAU,CAAI,CAAM,EAAA;AAC3B,IAAA,OAAO,OAAO,CAAC,KAAK,UAAU,CAAC;AACjC;;ACzFA;;;;AAIG;AAsBH;MAEa,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CACU,MAAc,EACd,oBAA0C,EAC1C,gBAAkC,EAAA;AAFlC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACd,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;KACxC;AAEI,IAAA,cAAc,CAAC,GAAW,EAAA;QAChC,MAAM,gBAAgB,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAE7C,IAAI,CAAC,gBAAgB,EAAE;AACrB,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QAED,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAEhC,QAAA,QACE,gBAAgB;AAChB,YAAA,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACvB,CAAC,KAAe,KACd,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,iBAAiB,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,CACzE,EACD;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,sBAAsB,CACpB,WAAwB,EACxB,cAAwB,EACxB,UAAkB,EAClB,gBAAwB,EAAA;;AAExB,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE;AACzC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QAED,MAAM,iBAAiB,GACrB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAE3D,IAAI,CAAA,EAAA,GAAA,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjB,iBAAiB,CAAE,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,EAAE;YACvC,IACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,gBAAgB,EAAE,iBAAiB,CAAC,EACpE;AACA,gBAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACtC,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAEO,IAAA,aAAa,CACnB,WAAwB,EACxB,SAAiB,EACjB,iBAAgD,EAAA;;AAEhD,QAAA,IACE,WAAW,CAAC,IAAI,KAAK,QAAQ,CAAC,YAAY;AAC1C,YAAA,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC;AACzB,YAAA,SAAS,CAAC,MAAM,GAAG,CAAC,EACpB;AACA,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAC5C,CAAA,EAAA,GAAA,iBAAiB,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CACjC,CAAC;AAEF,YAAA,MAAM,QAAQ,GAAa;AACzB,gBAAA,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACzB,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,QAAQ,EAAE,QAAQ;AAClB,gBAAA,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,CAAA,EAAA,GAAA,MAAA,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjB,iBAAiB,CAAE,MAAM,0CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,EAAE;AACzD,oBAAA,iBAAiB,EAAE;wBACjB,IAAI,EAAE,WAAW,CAAC,IAAI;AACtB,wBAAA,EAAE,EAAE,SAAS;AACd,qBAAA;iBACF,CAAC;aACH,CAAC;AAEF,YAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3D,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;;;;AAUG;AACK,IAAA,wBAAwB,CAAC,MAAe,EAAA;AAC9C,QAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAAI;;YAC1B,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAClB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChE,aAAA;YAED,IAAI,CAAA,EAAA,GAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,EAAE;gBAC9B,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,KAC9C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CACzB,CAAC;AACH,aAAA;AAED,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC,CAAC;KACJ;AAED;;;;;;AAMG;AACK,IAAA,YAAY,CAClB,UAAqB,EAAA;AAKrB,QAAA,OAAO,CACL,KAA6B,EAC7B,KAA0B,KACO;AACjC,YAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC1E,SAAC,CAAC;KACH;;iHAzIU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cADP,MAAM,EAAA,CAAA,CAAA;2FACnB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;AC3BlC;;;;AAIG;AAMH;AACA;MAKsB,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iHAAhB,gBAAgB,EAAA,UAAA,EAHxB,MAAM,EAAA,WAAA,EACL,oBAAoB,EAAA,CAAA,CAAA;2FAEb,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,oBAAoB;iBAClC,CAAA;;;ACfD;;;;AAIG;MASU,cAAc,CAAA;AACzB,IAAA,WAAA,CACY,oBAA0C,EAC1C,WAA+B,EAC/B,gBAAyC,EAAA;AAFzC,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AAC/B,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAyB;KACjD;AAEJ,IAAA,iBAAiB,CAAC,cAAwB,EAAA;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AACvE,QAAA,MAAM,UAAU,GAAG,IAAI,GAAG,EAAU,CAAC;AACrC,QAAA,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;AAC1B,YAAA,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,SAAA;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;KACrD;;2GAdU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAZ,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAJ,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA;2FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACZD;;;;AAIG;AA6BH;;AAEG;MAIU,mBAAmB,CAAA;AAC9B,IAAA,WAAA,CACY,mBAAwC,EACxC,UAAsB,EACtB,SAA2B,EAC3B,OAAuB,EACvB,SAA2B,EAC3B,oBAA0C,EAC1C,OAAuB,EAAA;AANvB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;AAC3B,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;AACvB,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;AAC3B,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;KAC/B;AAEJ;;;;;;;;;;;;;;;AAeG;AACH,IAAA,eAAe,CACb,WAAwB,EACxB,QAAc,EACd,KAAgC,EAChC,KAA0B,EAAA;QAE1B,OAAO,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,IAAI,CAC5D,GAAG,CAAC,CAAC,cAAc,KACjB,WAAW,CAAC,EAAE,KAAK,kBAAkB;AACnC,cAAE,CAAC,+BAA+B,EAAE,GAAG,cAAc,CAAC;AACtD,cAAE,cAAc,CACnB,EACD,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,CAAC,cAAc,KACvB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAC5D,EACD,SAAS,CAAC,CAAC,cAAc,KACvB,IAAI,CAAC,SAAS;AACX,aAAA,kBAAkB,CAAC,cAAc,EAAE,KAAK,EAAE,KAAK,CAAC;aAChD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAC5C,EACD,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,cAAc,CAAC,KAAI;YACpC,IAAI,WAAW,KAAK,IAAI,EAAE;AACxB,gBAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;AAChD,aAAA;SACF,CAAC,EACF,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,cAAc,CAAC,KAAI;;YACpC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC;AACnD,YAAA,IAAI,WAAW,KAAK,IAAI,IAAI,EAAC,CAAA,EAAA,GAAA,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,iBAAiB,CAAA,EAAE;AAC3D,gBAAA,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAC1C,WAAW,EACX,cAAc,EACd,KAAK,CAAC,GAAG,EACT,SAAS,CACV,CAAC;AACH,aAAA;AACD,YAAA,OAAO,WAAW,CAAC;SACpB,CAAC,CACH,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,uBAAuB,CACrB,WAAwB,EACxB,KAAgC,EAChC,KAA0B,EAAA;QAE1B,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,EAAE;AAClB,YAAA,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AAClB,SAAA;AACD,QAAA,MAAM,sBAAsB,GAAgB;YAC1C,IAAI,EAAE,QAAQ,CAAC,YAAY;AAC3B,YAAA,EAAE,EAAE,aAAa;SAClB,CAAC;AAEF,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,IAAI,CACzD,SAAS,CAAC,CAAC,YAAY,KAAI;AACzB,YAAA,IAAI,YAAY,EAAE;AAChB,gBAAA,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAC9D,GAAG,CAAC,CAAC,aAAa,KAAI;oBACpB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAC7D,oBAAA,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC;AAC7D,iBAAC,CAAC,EACF,SAAS,CAAC,CAAC,aAAa,KACtB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI;;AAE5C,gBAAA,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,KAAK,aAAa,CAAC,CAC3C,CACF,EACD,SAAS,CAAC,MACR,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAC9D,CACF,CAAC;AACH,aAAA;AACD,YAAA,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;SAClB,CAAC,CACH,CAAC;KACH;;gHA9GU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAiB,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACtCD;;;;AAIG;MAoBU,YAAY,CAAA;IAGvB,WACY,CAAA,cAA8B,EAC9B,UAAsB,EACtB,oBAA0C,EAC1C,OAA4B,EAC5B,aAAmC,EAAA;AAJnC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAqB;AAC5B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAsB;KAC3C;AAEJ;;;;;;;;;;AAUG;IACH,WAAW,CACT,KAAgC,EAChC,KAA0B,EAAA;QAE1B,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CACtD,SAAS,CAAC,CAAC,WAAW,KACpB,WAAW,KAAK,IAAI;cAChB,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAC3C,MAAM,CAAC,cAAc,CAAC,EACtB,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,CAAC,WAAW,KACpB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CAC5D,KAAK,EAAE,EACP,SAAS,CAAC,CAAC,QAAQ,KACjB,QAAQ;AACN,kBAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAC1B,WAAW,EACX,QAAQ,EACR,KAAK,EACL,KAAK,CACN;AACH,kBAAE,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAClC,WAAW,EACX,KAAK,EACL,KAAK,CACN,CACN,CACF,CACF,CACF;AACH,cAAE,EAAE,CAAC,WAAW,CAAC,CACpB,CACF,CAAC;KACH;AAED;;AAEG;IACK,YAAY,GAAA;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,yCAA4B;KACxE;;AA7DM,YAAS,CAAA,SAAA,GAAG,cAAc,CAAC;yGADvB,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACvBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAeH;;;AAGG;MAIU,uBAAuB,CAAA;AAClC,IAAA,QAAQ,CAAC,gBAAqC,EAAA;AAC5C,QAAA,OAAO,OAAO,gBAAgB,CAAC,SAAS,KAAK,UAAU,CAAC;KACzD;IAED,WAAW,GAAA;AACT,QAAA,OAAyB,CAAA,EAAA,yBAAA;KAC1B;AAED,IAAA,QAAQ,CACN,gBAAqC,EACrC,gBAAkC,EAClC,eAA0B,EAC1B,MAAyB,EAAA;AAEzB,QAAA,OAAO,IAAI,UAAU,CAGlB,CAAC,UAAU,KAAI;AAChB,YAAA,IAAI,YAA+B,CAAC;YAEpC,MAAM,QAAQ,GAAG,eAAe,KAAf,IAAA,IAAA,eAAe,KAAf,KAAA,CAAA,GAAA,eAAe,GAAI,gBAAgB,CAAC,QAAQ,CAAC;YAE9D,MAAM,OAAO,GAAG,MAAK;AACnB,gBAAA,IAAI,YAAY,EAAE;oBAChB,YAAY,CAAC,OAAO,EAAE,CAAC;AACxB,iBAAA;AACH,aAAC,CAAC;AAEF,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CACtC,QAAQ,EACR,gBAAgB,CAAC,SAAS,CAC3B,CAAC;AAEF,YAAA,IAAI,OAAO,EAAE;AACX,gBAAA,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAC7C,OAAO,EACP,SAAS,EACT,QAAQ,EACR,SAAS,EACT,MAAM,CACP,CAAC;AACF,gBAAA,UAAU,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,YAAY,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;AACtE,aAAA;AAED,YAAA,OAAO,OAAO,CAAC;AACjB,SAAC,CAAC,CAAC;KACJ;IAES,mBAAmB,CAAC,QAAkB,EAAE,SAAc,EAAA;QAC9D,IAAI,CAAC,SAAS,EAAE;AACd,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QACD,MAAM,OAAO,GAAG,QAAQ;aACrB,GAAG,CAAC,wBAAwB,CAAC;aAC7B,uBAAuB,CAAC,SAAS,CAAC,CAAC;AAEtC,QAAA,OAAO,OAAO,CAAC;KAChB;;oHA1DU,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cAFtB,MAAM,EAAA,CAAA,CAAA;2FAEP,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAHnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACzBD;;;;AAIG;AAgBH;;;AAGG;MAIU,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CAAsB,cAAuC,EAAA;AAAvC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAyB;KAAI;AAEjE;;AAEG;AACH,IAAA,QAAQ,CAAC,gBAAqC,EAAA;AAC5C,QAAA,QACE,OAAO,gBAAgB,CAAC,SAAS,KAAK,UAAU;YAChD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAC3C;KACH;AAEO,IAAA,UAAU,CAAC,MAAW,EAAA;QAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AACnE,QAAA,OAAO,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KAC3E;IAED,WAAW,GAAA;AACT,QAAA,OAAoB,CAAA,EAAA,oBAAA;KACrB;AAED,IAAA,QAAQ,CACN,gBAAqC,EACrC,gBAAkC,EAClC,eAA0B,EAC1B,MAAyB,EAAA;AAEzB,QAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAC5C,SAAS,CAAC,CAAC,SAAS,KAClB,IAAI,CAAC,cAAc,CAAC,QAAQ,CACrB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gBAAgB,KAAE,SAAS,EAAA,CAAA,EAChC,gBAAgB,EAChB,eAAe,EACf,MAAM,CACP,CACF,CACF,CAAC;KACH;;iHAtCU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC1BD;;;;AAIG;;ACJH;;;;AAIG;MA0BU,4BAA4B,CAAA;IASvC,WACY,CAAA,IAAoC,EACpC,GAAqB;;IAErB,oBAA0C,EAC1C,QAAkB,EAClB,uBAAgD,EAChD,QAAmB,EACnB,gBAAyC,EACzC,WAA+B,EAC/B,YAA0B,EAAA;AAT1B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAgC;AACpC,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AAErB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAClB,QAAA,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;AAChD,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAyB;AACzC,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AAC/B,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAlB5B,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAC/C,GAAG,CAAC,CAAC,IAAI,KAAK,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,CAAA,OAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,uBAAJ,IAAI,CAAE,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAA,EAAA,CAAC,EAC7C,oBAAoB,EAAE,CACvB,CAAC;AAEQ,QAAA,IAAiB,CAAA,iBAAA,GAAU,EAAE,CAAC;KAcpC;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,KAAI;AACxD,YAAA,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAC,CAAC,CAAC;KACJ;AAES,IAAA,gBAAgB,CAAC,UAAoB,EAAA;QAC7C,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,QAAA,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;KACpE;AAES,IAAA,eAAe,CAAC,SAAiB,EAAA;AACzC,QAAA,MAAM,gBAAgB,GAAG,IAAI,yBAAyB,CACpD,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,CAClB,CAAC;AACF,QAAA,gBAAgB,CAAC,kBAAkB,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QACvE,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AAC5B,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC/C;IAES,eAAe,GAAA;AACvB,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;AACnE,QAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC7B;IAED,WAAW,GAAA;;AACT,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;yHAzDU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAR,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAAtB,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA+B,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAhC,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;6GAA5B,4BAA4B,EAAA,QAAA,EAAA,yBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAA5B,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAHxC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,yBAAyB;iBACpC,CAAA;;;AC7BD;;;;AAIG;MAeU,mBAAmB,CAAA;AAC9B,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,mBAAmB;AAC7B,YAAA,SAAS,EAAE;AACT,gBAAA;AACE,oBAAA,OAAO,EAAE,gBAAgB;AACzB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,KAAK,EAAE,IAAI;AACZ,iBAAA;AACD,gBAAA;AACE,oBAAA,OAAO,EAAE,gBAAgB;AACzB,oBAAA,WAAW,EAAE,oBAAoB;AACjC,oBAAA,KAAK,EAAE,IAAI;AACZ,iBAAA;AACF,aAAA;SACF,CAAC;KACH;;gHAjBU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAHf,yBAAyB,EAAE,4BAA4B,aAD5D,YAAY,CAAA,EAAA,OAAA,EAAA,CAEZ,yBAAyB,EAAE,4BAA4B,CAAA,EAAA,CAAA,CAAA;AAEtD,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAJpB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,YAAY,EAAE,CAAC,yBAAyB,EAAE,4BAA4B,CAAC;AACvE,oBAAA,OAAO,EAAE,CAAC,yBAAyB,EAAE,4BAA4B,CAAC;iBACnE,CAAA;;;AClBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAcU,cAAc,CAAA;;AAEzB,IAAA,WAAA,CAAY,SAA0B,EAAA;;KAErC;;2GAJU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAiC,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,YAAA,EAAA,CAHV,iBAAiB,CADtB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAE/C,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAEhB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAJf,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAI9C,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,mBAAmB,CAAC;oBAC1D,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;iBAC7B,CAAA;;;ACjBD;;;;AAIG;MAcU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAHZ,YAAA,EAAA,CAAA,mBAAmB,EAAE,qBAAqB,CAD/C,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,cAAc,CAE1C,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,qBAAqB,CAAA,EAAA,CAAA,CAAA;AAEzC,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAJjB,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;2FAIzC,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC;AACrD,oBAAA,YAAY,EAAE,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;AAC1D,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;iBACtD,CAAA;;;ACjBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MASmB,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;gHAAf,eAAe,EAAA,UAAA,EAHvB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJpC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;AAQY,MAAA,sBAAsB,GAAoB;AACrD,IAAA,GAAG,EAAE;AACH,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,eAAe,EAAE,KAAK;AACvB,KAAA;;;ACxBH;;;;AAIG;MAcU,sBAAsB,CAAA;AAOjC,IAAA,WAAA,CACY,MAAuB,EACvB,oBAA0C,EAC1C,MAAiB,EAAA;;AAFjB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAiB;AACvB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QAPnB,IAAA,CAAA,SAAS,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAE1D,IAAA,CAAA,UAAU,GAAwB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAO9D,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,GAAG,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,EAAE;YACpC,IAAI,CAAC,IAAI,EAAE,CAAC;AACb,SAAA;KACF;IAED,IAAI,GAAA;AACF,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAC5B,YAAA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAgB,CACvC,qBAAqB,EACrB,CAAC,KAAK,KAAI;gBACR,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,gBAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC/B,aAAC,CACF,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAK;AAC7D,gBAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,uBAAuB,EAAE,EAChC,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;gBAEF,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9B,gBAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC5B,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAED,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;IAED,sBAAsB,GAAA;AACpB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;IAED,UAAU,GAAA;QACR,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;AAC7B,SAAA;KACF;;mHApDU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA3B,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACjBD;;;;AAIG;AAOH;MACsB,wBAAwB,CAAA;AAE5C,IAAA,WAAA,CAAsB,sBAA8C,EAAA;AAA9C,QAAA,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;KAAI;IAExE,QAAQ,GAAA;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC;KAC1D;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,CAAC;KAC1C;;qHAVmB,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA4B,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;yGAAxB,wBAAwB,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAxB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAF7C,SAAS;;;ACVV;;;;AAIG;AAUG,MAAO,8BAA+B,SAAQ,wBAAwB,CAAA;AAC1E,IAAA,WAAA,CAAsB,sBAA8C,EAAA;QAClE,KAAK,CAAC,sBAAsB,CAAC,CAAC;AADV,QAAA,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;KAEnE;;2HAHU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,2FCd3C,kiBAgBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA5B,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDFa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAJ1C,SAAS;+BACE,8BAA8B,EAAA,QAAA,EAAA,kiBAAA,EAAA,CAAA;;;AEX1C;;;;AAIG;AAUG,MAAO,2BAA4B,SAAQ,wBAAwB,CAAA;AACvE,IAAA,WAAA,CAAsB,sBAA8C,EAAA;QAClE,KAAK,CAAC,sBAAsB,CAAC,CAAC;AADV,QAAA,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;KAEnE;;wHAHU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAmC,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,wFCdxC,kGAGA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA5B,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDWa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAJvC,SAAS;+BACE,2BAA2B,EAAA,QAAA,EAAA,kGAAA,EAAA,CAAA;;;AEXvC;;;;AAIG;AAcG,SAAU,uBAAuB,CACrC,SAA0B,EAAA;;AAE1B,IAAA,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,KAAI,CAAA,EAAA,GAAA,SAAS,CAAC,GAAG,0CAAE,OAAO,CAAA,KAAK,KAAK,EAAE,CAAC;AACxE,CAAC;AAEK,SAAU,UAAU,CACxB,sBAA8C,EAAA;AAE9C,IAAA,MAAM,MAAM,GAAG,MAAM,sBAAsB,CAAC;AAC5C,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;MAyBY,SAAS,CAAA;;sGAAT,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uGAAT,SAAS,EAAA,YAAA,EAAA,CAHL,2BAA2B,EAAE,8BAA8B,CAAA,EAAA,OAAA,EAAA,CAlBxE,YAAY,EAAAc,IAAA,CAAA,mBAAA,EAEZ,UAAU,CAAA,EAAA,OAAA,EAAA,CAiBF,2BAA2B,EAAE,8BAA8B,CAAA,EAAA,CAAA,CAAA;AAE1D,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,EAjBT,SAAA,EAAA;QACT,oBAAoB,CAAC,sBAAsB,CAAC;AAC5C,QAAA;AACE,YAAA,OAAO,EAAE,qBAAqB;AAC9B,YAAA,UAAU,EAAE,uBAAuB;YACnC,IAAI,EAAE,CAAC,MAAM,CAAC;AACf,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,UAAU,EAAE,UAAU;YACtB,IAAI,EAAE,CAAC,sBAAsB,CAAC;AAC9B,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;KACF,EAAA,OAAA,EAAA,CAjBC,YAAY;AACZ,QAAA,mBAAmB,CAAC,QAAQ,CAAC,gBAAgB,CAAC;QAC9C,UAAU,CAAA,EAAA,CAAA,CAAA;2FAmBD,SAAS,EAAA,UAAA,EAAA,CAAA;kBAvBrB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;AACZ,wBAAA,mBAAmB,CAAC,QAAQ,CAAC,gBAAgB,CAAC;wBAC9C,UAAU;AACX,qBAAA;AACD,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,sBAAsB,CAAC;AAC5C,wBAAA;AACE,4BAAA,OAAO,EAAE,qBAAqB;AAC9B,4BAAA,UAAU,EAAE,uBAAuB;4BACnC,IAAI,EAAE,CAAC,MAAM,CAAC;AACf,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,UAAU,EAAE,UAAU;4BACtB,IAAI,EAAE,CAAC,sBAAsB,CAAC;AAC9B,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,2BAA2B,EAAE,8BAA8B,CAAC;AAC3E,oBAAA,OAAO,EAAE,CAAC,2BAA2B,EAAE,8BAA8B,CAAC;iBACvE,CAAA;;;ACrDD;;;;AAIG;;ACJH;;;;AAIG;AAOH,MAAM,QAAQ,GAAU;AACtB,IAAA,IAAI,EAAE,IAAI;IACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,IAAA,SAAS,EAAE,mBAAmB;CAC/B,CAAC;AAEI,SAAU,WAAW,CAAC,QAAkB,EAAA;IAC5C,MAAM,MAAM,GAAG,MAAK;;QAElB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/B,KAAC,CAAC;AACF,IAAA,OAAO,MAAM,CAAC;AAChB;;ACxBA;;;;AAIG;MAeU,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EATd,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,CAAC,QAAQ,CAAC;AAChB,YAAA,UAAU,EAAE,WAAW;AACxB,SAAA;AACF,KAAA,EAAA,CAAA,CAAA;2FAEU,cAAc,EAAA,UAAA,EAAA,CAAA;kBAV1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,KAAK,EAAE,IAAI;4BACX,IAAI,EAAE,CAAC,QAAQ,CAAC;AAChB,4BAAA,UAAU,EAAE,WAAW;AACxB,yBAAA;AACF,qBAAA;iBACF,CAAA;;;AClBD;;;;AAIG;;ACJH;;;;AAIG;AAII,MAAM,6BAA6B,GAAiB;AACzD,IAAA,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;AACrB,IAAA,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,EAAE;;AAGlC,IAAA,KAAK,EAAE;QACL,KAAK,EAAE,CAAC,OAAO,CAAC;AAChB,QAAA,SAAS,EAAE,KAAK;AAChB,QAAA,QAAQ,EAAE,IAAI;AACf,KAAA;AACD,IAAA,QAAQ,EAAE;QACR,KAAK,EAAE,CAAC,gBAAgB,CAAC;AACzB,QAAA,SAAS,EAAE,KAAK;AAChB,QAAA,QAAQ,EAAE,IAAI;AACf,KAAA;AACD,IAAA,cAAc,EAAE;QACd,KAAK,EAAE,CAAC,uBAAuB,CAAC;AAChC,QAAA,SAAS,EAAE,KAAK;AAChB,QAAA,QAAQ,EAAE,IAAI;AACf,KAAA;AACD,IAAA,aAAa,EAAE;QACb,KAAK,EAAE,CAAC,iBAAiB,CAAC;AAC1B,QAAA,SAAS,EAAE,KAAK;AAChB,QAAA,QAAQ,EAAE,IAAI;AACf,KAAA;AACD,IAAA,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;;AAG/D,IAAA,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,eAAe,CAAC,EAAE;AACpC,IAAA,QAAQ,EAAE;QACR,KAAK,EAAE,CAAC,wBAAwB,CAAC;AACjC,QAAA,aAAa,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE;AACxC,KAAA;AACD,IAAA,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,gCAAgC,CAAC,EAAE;;AAGpD,IAAA,OAAO,EAAE;QACP,KAAK,EAAE,CAAC,4BAA4B,CAAC;AACrC,QAAA,aAAa,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE;AACvC,KAAA;AAED,IAAA,kBAAkB,EAAE,EAAE,KAAK,EAAE,CAAC,sBAAsB,CAAC,EAAE;AACvD,IAAA,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,oBAAoB,CAAC,EAAE;AAC1C,IAAA,WAAW,EAAE;QACX,KAAK,EAAE,CAAC,qCAAqC,CAAC;AAC9C,QAAA,aAAa,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE;AACtC,KAAA;AACD,IAAA,WAAW,EAAE;QACX,KAAK,EAAE,CAAC,yBAAyB,CAAC;AACnC,KAAA;AACD,IAAA,sBAAsB,EAAE;QACtB,KAAK,EAAE,CAAC,oCAAoC,CAAC;AAC9C,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAAkB;AACjD,IAAA,OAAO,EAAE;AACP,QAAA,MAAM,EAAE,6BAA6B;AACtC,KAAA;CACF;;ACnED;;;;AAIG;MAaU,aAAa,CAAA;AACxB,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,aAAa;AACvB,YAAA,SAAS,EAAE,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;SACxD,CAAC;KACH;;0GANU,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,8BAFe,cAAc,CAAA,EAAA,CAAA,CAAA;AAE1C,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAFde,eAAiB,CAAC,OAAO,EAAE,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;2FAE1C,aAAa,EAAA,UAAA,EAAA,CAAA;kBAHzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAACA,eAAiB,CAAC,OAAO,EAAE,EAAE,cAAc,CAAC;iBACvD,CAAA;;;AChBD;;;;AAIG;AAKH;;;;;;;AAOG;AACG,SAAU,mBAAmB,CAAC,EAClC,MAAM,EACN,SAAS,EACT,kBAAkB,GAKnB,EAAA;AACC,IAAA,kBAAkB,GAAG,kBAAkB,IAAI,OAAO,CAAC;AACnD,IAAA,MAAM,OAAO,GAAG,SAAS,gBAAgB,CACvC,QAAsB,EAAA;AAEtB,QAAA,MAAM,WAAW,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,KAAK,MAAM,CAAC,CAAC;QAC3E,MAAM,mBAAmB,GAAG,WAAW,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AAEhE,QAAA,IAAI,WAAW,KAAK,CAAC,CAAC,IAAI,mBAAmB,EAAE;AAC7C,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,MAAM,UAAU,GAAG,WAAW,GAAG,CAAC,CAAC;AACnC,QAAA,MAAM,SAAS,GAAmC;AAChD,YAAA,CAAC,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC;SAClC,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AACpC,YAAA,SAAS,CAAC,CAAA,EAAG,kBAAkB,CAAA,EAAG,CAAC,CAAA,CAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtD,SAAA;AAED,QAAA,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC;AACpE,KAAC,CAAC;IAEF,IAAI,SAAS,EAAE,EAAE;AACf,QAAA,OAAO,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;AAC3E,KAAA;AAED,IAAA,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,aAAa,CAAI,QAAa,EAAE,SAA6B,EAAA;AACpE,IAAA,KAAK,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;AACzD,QAAA,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;AAC9B,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACF,KAAA;IACD,OAAO,CAAC,CAAC,CAAC;AACZ;;AC/DA;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAQU,mBAAmB,CAAA;IAC9B,WACY,CAAA,MAAiB,EACjB,eAAiC,EAAA;AADjC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;KACzC;AAEJ;;;;;AAKG;AACH,IAAA,gBAAgB,CAAC,GAAuB,EAAA;AACtC,QAAA,IAAI,IAAI,GAAoB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAC5D,uBAAuB,CACL,CAAC;QAErB,IAAI,CAAC,GAAG,EAAE;;;AAGR,YAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,MAAM,EAAE,CAAC;YACf,OAAO;AACR,SAAA;QAED,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAA,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC;AACvB,YAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AAChB,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5D,SAAA;AAAM,aAAA;YACL,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACjC,SAAA;KACF;AAED,IAAA,IAAc,QAAQ,GAAA;QACpB,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACxD;;gHApCU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACXD;;;;AAIG;MAiBU,cAAc,CAAA;AACzB,IAAA,WAAA,CACY,OAAc,EACd,MAAY,EACZ,eAAgC,EAChC,mBAAyC,EAAA;AAHzC,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAO;AACd,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAM;AACZ,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AAChC,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAsB;KACjD;IAIJ,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe;AACrC,aAAA,OAAO,EAAE;AACT,aAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAC3B,aAAA,SAAS,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;KAC5C;IAED,IAAc,IAAI,CAAC,IAAc,EAAA;AAC/B,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACpC,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;KACvC;IAED,IAAc,KAAK,CAAC,KAAyB,EAAA;QAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;KACpC;IAED,IAAc,WAAW,CAAC,KAAyB,EAAA;AACjD,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;AAC5D,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;AAC7C,SAAA;KACF;IAED,IAAc,KAAK,CAAC,QAA4B,EAAA;AAC9C,QAAA,IAAI,QAAQ,EAAE;AACZ,YAAA,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;AACtD,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;AAC1C,SAAA;KACF;IAED,IAAc,MAAM,CAAC,KAAmC,EAAA;AACtD,QAAA,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,YAAA,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5D,SAAA;KACF;AAED;;;;;AAKG;IACH,IAAc,YAAY,CAAC,GAAuB,EAAA;;QAChD,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC;KACjD;AAES,IAAA,MAAM,CAAC,IAAoB,EAAA;QACnC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAA;KACF;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,YAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AACjC,SAAA;KACF;;2GAvEU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAf,IAAA,CAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA8B,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA;2FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACpBD;;;;AAIG;AAIU,MAAA,gBAAgB,GAAc;AACzC,IAAA,GAAG,EAAE;AACH,QAAA,cAAc,EAAE;AACd,YAAA,gBAAgB,EAAE,IAAI;AACvB,SAAA;AACF,KAAA;;;ACbH;;;;AAIG;MASmB,SAAS,CAAA;;sGAAT,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;0GAAT,SAAS,EAAA,UAAA,EAHjB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,SAAS,EAAA,UAAA,EAAA,CAAA;kBAJ9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;ACZD;;;;AAIG;;ACJH;;;;AAIG;AAKI,MAAM,gBAAgB,GAAa;AACxC,IAAA,OAAO,EAAE,eAAe;AACxB,IAAA,KAAK,EAAE,IAAI;AACX,IAAA,UAAU,EAAE,oBAAoB;AAChC,IAAA,IAAI,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;CACnC,CAAC;AAEF;;AAEG;AACa,SAAA,oBAAoB,CAClC,MAAiB,EACjB,eAAgC,EAAA;IAEhC,MAAM,MAAM,GAAG,MAAK;QAClB,eAAe,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AAC7C,YAAA,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACjE,SAAC,CAAC,CAAC;AACL,KAAC,CAAC;AACF,IAAA,OAAO,MAAM,CAAC;AAChB;;AC7BA;;;;AAIG;MAiBU,mBAAmB,CAAA;AAM9B,IAAA,WAAA,CACiC,UAAkB,EACvC,MAAiB,EACjB,eAAiC,EACjC,MAAiB,EAAA;AAHI,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAQ;AACvC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;AACjC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AATnB,QAAA,IAAQ,CAAA,QAAA,GAAc,IAAI,CAAC,eAAe,CAAC,cAAc,CACjE,IAAI,EACJ,IAAI,CACL,CAAC;KAOE;AAEJ,IAAA,KAAK,CAAC,MAAY,EAAA;AAChB,QAAA,IAAI,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACrC,YAAA,IAAI,CAAC,sBAAsB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACrE,SAAA;KACF;AAED;;;;AAIG;IACH,gBAAgB,GAAA;;AACd,QAAA,QACE,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;AACnC,aAAC,SAAS,EAAE,IAAI,EAAC,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,CAAC,GAAG,0CAAE,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,gBAAgB,CAAA,CAAC,EACnE;KACH;AAED;;;;;;;;AAQG;IACO,sBAAsB,GAAA;QAC9B,MAAM,EAAE,GAAG,SAAS,CAAC;AACrB,QAAA,IAAI,aAAa,IACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CACxC,CAAC;QAEF,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,MAAM,GAAsB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxE,YAAA,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;AACf,YAAA,MAAM,CAAC,IAAI,GAAG,qBAAqB,CAAC;AACpC,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC7D,aAAa,GAAG,MAAM,CAAC;AACxB,SAAA;AACD,QAAA,OAAO,aAAa,CAAC;KACtB;AAED;;;;;AAKG;AACH,IAAA,UAAU,CAAC,MAAU,EAAA;QACnB,MAAM,GAAG,GAAsB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClE,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACzC,OAAO,GAAG,CAAC,SAAS,CAAC;KACtB;;AAlEU,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,kBAOpB,WAAW,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAPV,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAQI,MAAM;+BAAC,WAAW,CAAA;;;;AC5BvB;;;;AAIG;AAKH;;;;;;;;;;AAUG;MAIU,eAAe,CAAA;AAC1B;;AAEG;IACH,IAAa,QAAQ,CAAC,MAAmB,EAAA;AACvC,QAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;KACnC;AAED,IAAA,WAAA,CACY,QAAmB,EACnB,mBAAwC,EACxC,OAAmB,EAAA;AAFnB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;KAC3B;AAEJ;;AAEG;AACO,IAAA,oBAAoB,CAAC,MAAmB,EAAA;QAChD,IAAI,MAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,EAAE;YACzD,MAAM,MAAM,GAAsB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxE,YAAA,MAAM,CAAC,IAAI,GAAG,qBAAqB,CAAC;YACpC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACjE,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAC/D,SAAA;KACF;;4GAxBU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;gGAAf,eAAe,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,YAAY;iBACvB,CAAA;wJAKc,QAAQ,EAAA,CAAA;sBAApB,KAAK;;;AC3BR;;;;AAIG;AAIH;;;;;AAKG;MACU,cAAc,GAAG,IAAI,cAAc,CAAC,oBAAoB,EAAE;AAEvE;;;AAGG;MACU,sBAAsB,GAAG,IAAI,cAAc,CACtD,2BAA2B;;ACrB7B;;;;AAIG;AAQH;;;AAGG;MAIU,qBAAqB,CAAA;IAChC,WACU,CAAA,aAAkC,EAGlC,QAAyB,EAAA;AAHzB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAqB;AAGlC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAiB;AAGzB,QAAA,IAAA,CAAA,YAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;KAFtD;AAIJ;;;AAGG;IACH,KAAK,GAAA;QACH,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC1D,YAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,MAAY,KAAI;AAC/C,gBAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aAClC,CAAC,CACH,CAAC;AACH,SAAA;KACF;AAED;;AAEG;IACO,cAAc,GAAA;AACtB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACvE;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;AAjCU,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,kDAItB,cAAc,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJb,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAFpB,MAAM,EAAA,CAAA,CAAA;2FAEP,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAII,QAAQ;;8BACR,MAAM;+BAAC,cAAc,CAAA;;;;ACvB1B;;;;AAIG;AAOH;;;AAGG;AACG,SAAU,wBAAwB,CAAC,QAAkB,EAAA;IACzD,MAAM,MAAM,GAAG,MAAK;QAClB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,EAAE,CAAC;AAClB,KAAC,CAAC;AACF,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;MAeY,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAXhB,YAAA,EAAA,CAAA,eAAe,CADpB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,eAAe,CAAA,EAAA,CAAA,CAAA;AAUd,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EATpB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,UAAU,EAAE,wBAAwB;YACpC,IAAI,EAAE,CAAC,QAAQ,CAAC;AAChB,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,OAAA,EAAA,CAVS,YAAY,CAAA,EAAA,CAAA,CAAA;2FAYX,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAbhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,eAAe,CAAC;oBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;AAC1B,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,UAAU,EAAE,wBAAwB;4BACpC,IAAI,EAAE,CAAC,QAAQ,CAAC;AAChB,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;iBACF,CAAA;;;ACnCD;;;;AAIG;AASG,SAAU,cAAc,CAAC,QAAkB,EAAA;IAC/C,MAAM,MAAM,GAAG,MAAK;QAClB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC7C,OAAO,CAAC,IAAI,EAAE,CAAC;AACjB,KAAC,CAAC;AACF,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;MAeY,SAAS,CAAA;;sGAAT,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAT,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,YAZV,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAYnB,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,EAXT,SAAA,EAAA;QACT,oBAAoB,CAAC,gBAAgB,CAAC;AACtC,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,UAAU,EAAE,cAAc;YAC1B,IAAI,EAAE,CAAC,QAAQ,CAAC;AAChB,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;QACD,gBAAgB;AACjB,KAAA,EAAA,OAAA,EAAA,CAVS,oBAAoB,CAAA,EAAA,CAAA,CAAA;2FAYnB,SAAS,EAAA,UAAA,EAAA,CAAA;kBAbrB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAC/B,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,gBAAgB,CAAC;AACtC,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,UAAU,EAAE,cAAc;4BAC1B,IAAI,EAAE,CAAC,QAAQ,CAAC;AAChB,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;wBACD,gBAAgB;AACjB,qBAAA;iBACF,CAAA;;;ACjCD;;;;AAIG;MAWU,uBAAuB,CAAA;AAClC,IAAA,WAAA,CAAsB,eAAgC,EAAA;AAAhC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;KAAI;IAE1D,KAAK,GAAA;QACH,OAAO,IAAI,CAAC,eAAe;AACxB,aAAA,OAAO,EAAE;AACT,aAAA,IAAI,CAAC,GAAG,CAAC,CAAC,QAAyB,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACrE;AAES,IAAA,OAAO,CAAC,QAAyB,EAAA;QACzC,IAAI,EAAC,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,CAAA,EAAE;YAC1B,OAAO;AACR,SAAA;AACD,QAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,KAAI;YACvD,OAAO;AACL,gBAAA,OAAO,EAAE,UAAU;gBACnB,QAAQ,EAAE,KAAK,GAAG,CAAC;AACnB,gBAAA,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK,CAAC,IAAI;oBACjB,IAAI,EAAE,KAAK,CAAC,KAAK;AAClB,iBAAA;aACF,CAAC;AACJ,SAAC,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,MAAM,CAAC,IAAI,CAAC;AACV,gBAAA,OAAO,EAAE,UAAU;AACnB,gBAAA,QAAQ,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC;AAC3B,gBAAA,IAAI,EAAE;oBACJ,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACrB,IAAI,EAAE,QAAQ,CAAC,KAAK;AACrB,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;QAED,OAAO;AACL,YAAA,UAAU,EAAE,mBAAmB;AAC/B,YAAA,OAAO,EAAE,gBAAgB;AACzB,YAAA,eAAe,EAAE,MAAM;SACxB,CAAC;KACH;;oHAxCU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cAFtB,MAAM,EAAA,CAAA,CAAA;2FAEP,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAHnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACdD;;;;AAIG;;ACJH;;;;AAIG;AAOH;;;AAGG;MAIU,wBAAwB,CAAA;AACnC,IAAA,KAAK,CAAC,OAAgB,EAAA;QACpB,OAAO,EAAE,+CACJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAC5B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA,EAC7B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA,CAChC,CAAC;KACJ;AAED;;AAEG;AACK,IAAA,cAAc,CAAC,OAAgB,EAAA;QACrC,MAAM,MAAM,GAAQ,EAAE,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;QAC1C,IAAI,OAAO,CAAC,IAAI,EAAE;AAChB,YAAA,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC5B,SAAA;QACD,IAAI,OAAO,CAAC,OAAO,EAAE;AACnB,YAAA,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC;AACtC,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;AAED;;;;AAIG;AACO,IAAA,eAAe,CAAC,OAAgB,EAAA;;AACxC,QAAA,MAAM,KAAK,GAAS,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,OAAO,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC;QACxD,OAAO,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;KAC/B;AAED;;;;AAIG;AACO,IAAA,eAAe,CAAC,OAAgB,EAAA;AACxC,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;QACnC,OAAO,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;KAC/B;;qHAzCU,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,cAFvB,MAAM,EAAA,CAAA,CAAA;2FAEP,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAHpC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACjBD;;;;AAIG;AAOH;;;AAGG;MAIU,yBAAyB,CAAA;AACpC,IAAA,KAAK,CAAC,OAAgB,EAAA;;AACpB,QAAA,MAAM,MAAM,GAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAEzC,QAAA,IAAI,MAAA,OAAO,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,EAAE;YACxB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;AACnC,YAAA,IAAI,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE;gBAC7B,MAAM,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC;AAClD,aAAA;AACF,SAAA;QAED,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE;AACnD,YAAA,MAAM,CAAC,YAAY;AACjB,gBAAA,OAAO,CAAC,KAAK,CAAC,gBAAgB,KAAK,SAAS,GAAG,SAAS,GAAG,YAAY,CAAC;AAC3E,SAAA;QAED,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC/B;;sHAjBU,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,cAFxB,MAAM,EAAA,CAAA,CAAA;2FAEP,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAHrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACjBD;;;;AAIG;AASH;;;AAGG;MAIU,0BAA0B,CAAA;IACrC,WACY,CAAA,aAAmC,EACnC,MAAiB,EAAA;AADjB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAsB;AACnC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;KACzB;AAEJ,IAAA,KAAK,CAAC,OAAgB,EAAA;;AACpB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC,CAAC,IAAI,CACjE,GAAG,CAAC,CAAC,OAAiB,KACpB,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,MAAM,IAAG,CAAC;AACjB,cAAE;gBACE,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC;AAC9D,gBAAA,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC3D,aAAA;AACH,cAAE,EAAE,CACP,CACF,CAAC;KACH;IAES,sBAAsB,CAAC,OAAgB,EAAE,OAAiB,EAAA;AAClE,QAAA,MAAM,UAAU,GAAQ;AACtB,YAAA,OAAO,EAAE,iBAAiB;SAC3B,CAAC;QACF,IAAI,OAAO,CAAC,aAAa,EAAE;AACzB,YAAA,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC;AAChD,SAAA;AACD,QAAA,IAAI,OAAO,EAAE;YACX,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACtE,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;AACxE,SAAA;AACD,QAAA,OAAO,UAAU,CAAC;KACnB;AAES,IAAA,YAAY,CAAC,MAAc,EAAA;AACnC,QAAA,MAAM,YAAY,GAAQ;AACxB,YAAA,OAAO,EAAE,QAAQ;SAClB,CAAC;QAEF,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;YAC7C,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC;AAC7C,SAAA;QACD,IAAI,MAAM,CAAC,IAAI,EAAE;YACf,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,YAAY,CAAC,aAAa,GAAG,CAAA,EAAG,IAAI,CAAC,WAAW,EAAE,CAChD,CAAA,EAAA,IAAI,CAAC,QAAQ,EAAE,GAAG,CACpB,CAAA,CAAA,EAAI,IAAI,CAAC,OAAO,EAAE,CAAA,CAAE,CAAC;AACtB,SAAA;QACD,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,YAAA,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;AACrC,SAAA;QACD,IAAI,MAAM,CAAC,OAAO,EAAE;AAClB,YAAA,YAAY,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;AAC3C,SAAA;QACD,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,YAAY,CAAC,YAAY,GAAG;AAC1B,gBAAA,OAAO,EAAE,QAAQ;AACjB,gBAAA,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;aACtC,CAAC;AACH,SAAA;AAED,QAAA,OAAO,YAAY,CAAC;KACrB;;uHA7DU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAD,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,cAFzB,MAAM,EAAA,CAAA,CAAA;2FAEP,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAHtC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACnBD;;;;AAIG;MAgBU,qBAAqB,CAAA;IAChC,WACU,CAAA,cAA8B,EAC9B,cAA8B,EAAA;AAD9B,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAGrB,QAAA,IAAA,CAAA,qBAAqB,GAAwB,SAAA,4BAAA;KAF5D;AAIJ;;;;;;AAMG;AACH,IAAA,UAAU,CACR,MAA0D,EAAA;AAE1D,QAAA,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CACxB,oBAAoB,EAAE,EACtB,SAAS,CAAC,CAAC,WAAmB,KAAI;AAChC,YAAA,OAAO,WAAW;AAChB,kBAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CACrB,WAAW,EACX,MAAM,IAAI,IAAI,CAAC,qBAAqB,CACrC;AACH,kBAAE,EAAE,CAAC,IAAI,CAAC,CAAC;AACf,SAAC,CAAC,EACF,MAAM,CAAC,cAAc,CAAC,CACvB,CAAC;KACH;IAES,OAAO,GAAA;QACf,OAAO,IAAI,CAAC,cAAc;AACvB,aAAA,cAAc,EAAE;AAChB,aAAA,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;KAC5D;;kHApCU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAFpB,MAAM,EAAA,CAAA,CAAA;2FAEP,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACnBD;;;;AAIG;AAUH;;;;AAIG;MAIU,oBAAoB,CAAA;IAC/B,WACU,CAAA,cAAqC,EAGnC,QAAkC,EAAA;AAHpC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAuB;AAGnC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA0B;KAC1C;IAEJ,KAAK,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,IAAI,CAC1C,SAAS,CAAC,CAAC,OAAuB,KAAI;AACpC,YAAA,IAAI,OAAO,EAAE;AACX,gBAAA,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAC9C,GAAG,CAAC,CAAC,GAAS,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,CAC9C,CAAC;AACH,aAAA;AACD,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,CACH,CAAC;KACH;AAES,IAAA,OAAO,CAAC,OAAgB,EAAA;AAChC,QAAA,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC7B,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;AACD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAC5B,cAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;cACtD,EAAE,CAAC;QACP,OAAO;AACL,YAAA,EAAE,CAAC;AACD,gBAAA,UAAU,EAAE,mBAAmB;AAC/B,gBAAA,OAAO,EAAE,SAAS;aACnB,CAAC;AACF,YAAA,GAAG,QAAQ;SACZ,CAAC;KACH;;AAnCU,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,oDAIrB,sBAAsB,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJrB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAII,QAAQ;;8BACR,MAAM;+BAAC,sBAAsB,CAAA;;;;AC1BlC;;;;AAIG;;ACJH;;;;AAIG;AAYH;;;AAGG;MAgCU,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EA9BnB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,cAAc;AACvB,YAAA,WAAW,EAAE,oBAAoB;AACjC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,cAAc;AACvB,YAAA,WAAW,EAAE,uBAAuB;AACpC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;;;AAGD,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,wBAAwB;AACrC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,yBAAyB;AACtC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,0BAA0B;AACvC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,CAAA,CAAA;2FAEU,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBA/B/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,cAAc;AACvB,4BAAA,WAAW,EAAE,oBAAoB;AACjC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,cAAc;AACvB,4BAAA,WAAW,EAAE,uBAAuB;AACpC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;;;AAGD,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,wBAAwB;AACrC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,yBAAyB;AACtC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,0BAA0B;AACvC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;iBACF,CAAA;;;AClDD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAIS,IAAA,YAIX;AAJD,CAAA,UAAY,WAAW,EAAA;AACrB,IAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EAJW,WAAW,KAAX,WAAW,GAItB,EAAA,CAAA,CAAA;;ACZD;;;;AAIG;AAOH;;;;;;;;;;;;;;;;;;AAkBG;AACG,SAAU,mBAAmB,CACjC,OAA4B,EAAA;AAE5B,IAAA,OAAO,aAAa,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACf,iBAAiB,CAAC,OAAO,CAAC,CAC1B,EAAA,iBAAiB,CAAC,OAAO,CAAC,CAAA,CAC7B,CAAC;AACL,CAAC;AAED;;AAEG;AACH,SAAS,iBAAiB,CAAC,EACzB,WAAW,EACX,gBAAgB,MACO,EAAE,EAAA;AACzB,IAAA,MAAM,MAAM,GAAuB,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;AAExD,IAAA,IAAI,WAAW,EAAE;QACf,MAAM,CAAC,YAAY,GAAG;AACpB,YAAA,UAAU,EAAE;gBACV,CAAC,WAAW,GAAG;AACb,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,QAAQ,EAAE,WAAW;AACtB,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA;AAED,IAAA,IAAI,WAAW,IAAI,gBAAgB,IAAI,MAAM,CAAC,YAAY,EAAE;AAC1D,QAAA,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG;YAC1B,CAAC,gBAAgB,GAAG,EAAE,YAAY,EAAE,CAAC,WAAW,CAAC,EAAE;SACpD,CAAC;AACH,KAAA;AACD,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;AAEG;AACH,SAAS,iBAAiB,CAAC,EACzB,YAAY,EACZ,gBAAgB,EAChB,UAAU,EACV,OAAO,GAAA,GACgB,EAAE,EAAA;IACzB,MAAM,YAAY,GAAiB,EAAE,CAAC;IACtC,IAAI,YAAY,IAAI,gBAAgB,EAAE;QACpC,MAAM,iBAAiB,GAAQ,EAAE,CAAC;AAClC,QAAA,IAAI,UAAU,EAAE;YACd,iBAAiB,CAAC,UAAU,CAAC,GAAG;gBAC9B,KAAK,EAAE,CAAC,gBAAgB,CAAC;aAC1B,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,iBAAiB,CAAC,KAAK,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC9C,SAAA;QACD,YAAY,CAAC,WAAW,GAAG;YACzB,CAAC,YAAY,GAAG,iBAAiB;SAClC,CAAC;AACH,KAAA;IAED,IAAI,OAAO,IAAI,gBAAgB,EAAE;QAC/B,MAAM,YAAY,GAAQ,EAAE,CAAC;AAC7B,QAAA,IAAI,UAAU,EAAE;YACd,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,gBAAgB,CAAC,EAAE,CAAC;AAC1D,SAAA;AAAM,aAAA;AACL,YAAA,YAAY,CAAC,KAAK,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACzC,SAAA;QACD,IAAI,YAAY,CAAC,WAAW,EAAE;AAC5B,YAAA,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;AAClD,SAAA;AAAM,aAAA;YACL,YAAY,CAAC,WAAW,GAAG;gBACzB,CAAC,OAAO,GAAG,YAAY;aACxB,CAAC;AACH,SAAA;AACF,KAAA;AACD,IAAA,OAAO,YAAY,CAAC;AACtB;;AC3GA;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAUU,eAAe,CAAA;AAC1B,IAAA,WAAA,CAAoB,MAAiB,EAAA;AAAjB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;KAAI;AAEzC;;;;;;;;;;AAUG;IACH,gBAAgB,CACd,aAA0B,EAC1B,SAAiB,EAAA;AAEjB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAC7B,GAAG,CAAC,MAAO,aAA6B,CAAC,WAAW,CAAC,EACrD,GAAG,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAChE,CAAC;KACH;AAED;;;;;;AAMG;IACK,cAAc,CAAC,cAAsB,EAAE,SAAiB,EAAA;QAC9D,IAAI,eAAe,GAAG,CAAC,CAAC;AACxB,QAAA,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC5B,YAAA,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzD,YAAA,eAAe,GAAG,cAAc,GAAiB,GAAI,CAAC;AACvD,SAAA;AAED,QAAA,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC3B,YAAA,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC1D,eAAe;gBACb,cAAc,IAAI,cAAc,IAAkB,IAAK,GAAG,GAAG,CAAC,CAAC,CAAC;AACnE,SAAA;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KACzC;;4GA7CU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA;2FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACbD;;;;AAIG;AAgBH;;;;;;;;;;;;;;AAcG;MAMU,iBAAiB,CAAA;IAW5B,IACI,QAAQ,CAAC,UAA6B,EAAA;AACxC,QAAA,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;;AAExB,QAAA,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;KACtB;IA6BD,WAAsB,CAAA,EAAc,EAAY,OAAwB,EAAA;AAAlD,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;AAAY,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAiB;AArBxE;;;;;;AAMG;AACM,QAAA,IAAS,CAAA,SAAA,GAAG,OAAO,CAAC;AAE7B;;AAEG;AACM,QAAA,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AAEvB,QAAA,IAAA,CAAA,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC;AACjC,QAAA,IAAA,CAAA,YAAY,GAAG,SAAS,CAAC,UAAU,CAAC;AACpC,QAAA,IAAA,CAAA,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC;KAKkC;IAE5E,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE,EAAE;AACjC,YAAA,OAAO,CAAC,KAAK,CACX,mFAAmF,CACpF,CAAC;YACF,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO;aACtB,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC;AACvD,aAAA,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5C;IAED,cAAc,CAAC,IAAY,EAAE,YAAoB,EAAA;AAC/C,QAAA,MAAM,sBAAsB,GAAG,YAAY,GAAG,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAC;KACjD;;8GA9DU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAE,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,oRCxC9B,ooEAmEA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAjC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkC,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAlC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAmC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD3Ba,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;+BACE,aAAa,EAAA,eAAA,EAEN,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,ooEAAA,EAAA,CAAA;4HAMtC,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAQF,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,OAAO,CAAA;gBAWL,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBASG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAKG,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBAEG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;;AEhFR;;;;AAIG;AAYH;;AAEG;MAMU,uBAAuB,CAAA;IAoBlC,WACU,CAAA,aAAsC,EACtC,UAAsB,EAAA;AADtB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAyB;AACtC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QArBxB,IAAA,CAAA,cAAc,GAAsB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACvE,MAAM,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,EAC/B,GAAG,CAAC,CAAC,CAAQ,MAAM,IAAI,CAAC,KAAK,GAAG,CAAA,EAAG,CAAC,CAAC,MAAM,QAAQ,CAAC,CAAC,CACtD,CAAC;AAEM,QAAA,IAAM,CAAA,MAAA,GACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,GAAG,CAAC,CAAC,IAAI,KAAI,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,EAAG,CAAA,KAAK,CAAC,GAAG,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAA,EAAA,CAAC,EACpD,GAAG,CAAC,CAAC,KAAK,KACR,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAC5D,CACF,CAAC;AAEJ;;;AAGG;AACmB,QAAA,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;KAK7B;AAEJ;;;;AAIG;IACH,QAAQ,GAAA;QACN,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;oHAhCU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAZ,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,2GCxBpC,kZAkBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAoC,yBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,iBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDMa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,oBAAoB,EAAA,eAAA,EAEb,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,kZAAA,EAAA,CAAA;6HAoBzB,KAAK,EAAA,CAAA;sBAA1B,WAAW;uBAAC,OAAO,CAAA;;;AE1CtB;;;;AAIG;MAaU,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,iBAHT,gBAAgB,CAAA,EAAA,OAAA,EAAA,CADrB,YAAY,EAAE,UAAU,aAExB,gBAAgB,CAAA,EAAA,CAAA,CAAA;2GAEf,aAAa,EAAA,OAAA,EAAA,CAJd,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAIvB,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;oBACnC,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;iBAC5B,CAAA;;;AChBD;;;;AAIG;MAiCU,0BAA0B,CAAA;IASrC,WACY,CAAA,kBAAsC,EACtC,oBAA0C,EAC1C,uBAAgD,EAChD,wBAAkD,EAClD,WAAwB,EAAA;AAJxB,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;AAChD,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;AAClD,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AAb5B,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QACnC,IAAA,CAAA,kBAAkB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AAKjE,QAAA,IAAgB,CAAA,gBAAA,GAAa,EAAE,CAAC;KAQ5B;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;AAC5B,YAAA,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE;AAClD,YAAA,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,EAAE;AACrD,YAAA,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE;AACzD,YAAA,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;AACjC,YAAA,IAAI,CAAC,kBAAkB;SACxB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,cAAc,EACd,kBAAkB,EAClB,sBAAsB,EACtB,cAAc,EACd,kBAAkB,EACnB,KACC,cAAc;YACd,kBAAkB;YAClB,sBAAsB;AACtB,YAAA,CAAC,cAAc;YACf,kBAAkB,CACrB,CACF,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAEO,eAAe,GAAA;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC,IAAI,CAC7D,cAAc,CACZ,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,EAC5C,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAClC,EACD,MAAM,CACJ,CAAC,CAAC,aAAa,EAAE,mBAAmB,EAAE,cAAc,CAAC,KAAK,cAAc,CACzE,EACD,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,mBAAmB,CAAC,KAAI;AAC1C,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AACtC,gBAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AACxC,aAAA;SACF,CAAC,EACF,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,kBAAkB,CAAC,KAAI;AACzC,YAAA,IAAI,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE;AAClD,gBAAA,IAAI,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,gBAAgB,EAAE;AACnE,oBAAA,IAAI,CAAC,gBAAgB;AACnB,wBAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;AACnE,iBAAA;AACD,gBAAA,IACE,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,qBAAqB,EACpE;oBACA,OAAO,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AACrE,iBAAA;AACF,aAAA;AAED,YAAA,OAAO,YAAY,CAAC;SACrB,CAAC,CACH,CAAC;KACH;AAEO,IAAA,qBAAqB,CAC3B,YAA+B,EAC/B,kBAAA,GAAwC,EAAE,EAAA;;QAE1C,IAAI,eAAe,GAAa,EAAE,CAAC;AAEnC,QAAA,IACE,EAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,qBAAqB,MAClE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,qBAAqB,CAAA,EACzB;YACA,eAAe,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,QAAQ,CAAC,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAA,EAAA,CAAC,CAAC;YAC1E,OAAO,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CACnD,YAAY,EACZ,eAAe,CAChB,CAAC;AACH,SAAA;AAED,QAAA,IACE,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,qBAAqB;aACjE,YAAY;AACf,YAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,qBAAqB;AACjE,iBAAA,YAAY,CAAC,MAAM,GAAG,CAAC,EAC1B;YACA,eAAe;AACb,gBAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,qBAAqB;AACjE,qBAAA,YAAY,CAAC;AACnB,SAAA;QAED,OAAO,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CACnD,YAAY,EACZ,eAAe,CAChB,CAAC;KACH;IAEO,eAAe,GAAA;AACrB,QAAA,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,CAAC;AACvD,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,kBAAkB;AACpB,aAAA,2BAA2B,EAAE;AAC7B,aAAA,SAAS,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAC/D,CAAC;KACH;IAEO,mBAAmB,GAAA;AACzB,QAAA,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,CAAC;AAC3D,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,kBAAkB;AACpB,aAAA,+BAA+B,EAAE;AACjC,aAAA,IAAI,CACH,SAAS,CAAC,OAAO,CAAC,EAClB,cAAc,CACZ,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE,CAC1D,EACD,GAAG,CAAC,CAAC,GAAG,iBAAiB,CAAC,KAAK,iBAAiB,CAAC,EACjD,GAAG,CAAC,CAAC,iBAAiB,KAAI;AACxB,YAAA,IAAI,iBAAiB,EAAE;AACrB,gBAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AACxC,aAAA;AACH,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,CAAC,iBAAiB,KAC3B,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,CAClD,CACJ,CAAC;KACH;AAEO,IAAA,cAAc,CAAC,YAA+B,EAAA;QACpD,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;KACzD;AAED,IAAA,eAAe,CAAC,EACd,KAAK,EACL,QAAQ,GAIT,EAAA;;QACC,IAAI,KAAK,IAAI,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE;AAC1D,YAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;AACpE,SAAA;AAAM,aAAA,IAAI,MAAA,QAAQ,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,EAAE;YACxC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACvE,SAAA;KACF;AAEO,IAAA,qBAAqB,CAAC,OAAgB,EAAA;AAC5C,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,CAAC;AACvD,YAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,6CAA6C,EAAE,EACtD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;AACH,SAAA;KACF;AAEO,IAAA,yBAAyB,CAAC,OAAgB,EAAA;AAChD,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,CAAC;AAC3D,YAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,iDAAiD,EAAE,EAC1D,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;AACH,SAAA;KACF;IAED,SAAS,CAAC,YAA+B,EAAE,EAAA;QACzC,MAAM,kBAAkB,GAAsB,EAAE,CAAC;AACjD,QAAA,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;YAC7B,IACE,QAAQ,CAAC,cAAc;gBACvB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,EAC/D;AACA,gBAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;AACR,iBAAA;AACD,gBAAA,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnC,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC;AAC3C,aAAA,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAChE,SAAS,EAAE,CACf,CAAC;KACH;IAEO,qBAAqB,CAC3B,qBAAwC,EAAE,EAAA;AAE1C,QAAA,MAAM,QAAQ,GAAG,MAAM,CACrB,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE,CAC1D,CAAC,IAAI,CACJ,oBAAoB,EAAE,EACtB,MAAM,CAAC,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,CAC9B,CAAC;QACF,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAC3B,GAAG,CAAC,CAAC,CAAC,KAAI;;AACR,YAAA,IAAI,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE;gBACjC,MAAM,IAAI,GAAG,CAAA,EAAA,GAAA,kBAAkB,CAAC,CAAC,CAAC,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC;AACxD,gBAAA,IAAI,IAAI,EAAE;AACR,oBAAA,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AAC/C,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CAAC;QACF,MAAM,iBAAiB,GAAG,SAAS,CAAC,IAAI,CACtC,MAAM,CAAC,CAAC,WAAW,KAAK,WAAW,KAAK,kBAAkB,CAAC,MAAM,CAAC,CACnE,CAAC;AAEF,QAAA,OAAO,iBAAiB,CAAC;KAC1B;IAED,QAAQ,CAAC,YAA+B,EAAE,EAAA;QACxC,MAAM,cAAc,GAAsB,EAAE,CAAC;AAC7C,QAAA,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;YAC7B,IACE,QAAQ,CAAC,cAAc;gBACvB,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,EACnE;AACA,gBAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;AACR,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChC,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;AACjC,aAAA,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAChE,SAAS,EAAE,CACf,CAAC;KACH;IAEO,eAAe,CACrB,iBAAoC,EAAE,EAAA;AAEtC,QAAA,MAAM,QAAQ,GAAG,MAAM,CACrB,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,EAAE,CACtD,CAAC,IAAI,CACJ,oBAAoB,EAAE,EACtB,MAAM,CAAC,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,CAC9B,CAAC;QACF,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAC9B,GAAG,CAAC,CAAC,CAAC,KAAI;AACR,YAAA,IAAI,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE;AAC7B,gBAAA,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;AAC/C,oBAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AAClE,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CAAC;QACF,MAAM,iBAAiB,GAAG,YAAY,CAAC,IAAI,CACzC,MAAM,CAAC,CAAC,WAAW,KAAK,WAAW,KAAK,cAAc,CAAC,MAAM,CAAC,CAC/D,CAAC;AAEF,QAAA,OAAO,iBAAiB,CAAC;KAC1B;AAEO,IAAA,iBAAiB,CAAC,QAAyB,EAAA;;AACjD,QAAA,OAAO,OAAO,CACZ,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,uBAAuB,CAAC,iBAAiB;AAC9C,aAAA,CAAA,EAAA,GAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,gBAAgB,CAAA;AAChE,YAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CACtE,QAAQ,CAAC,EAAE,CACZ,CACJ,CAAC;KACH;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AAEtC,QAAA,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,CAAC;AACvD,QAAA,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,CAAC;KAC5D;;uHA1SU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,6DCrCvC,q1CAwCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAsC,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,8BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,kBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAvC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDHa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAJtC,SAAS;+BACE,uBAAuB,EAAA,QAAA,EAAA,q1CAAA,EAAA,CAAA;;;AElCnC;;;;AAIG;MAsCU,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAHnB,YAAA,EAAA,CAAA,0BAA0B,EAAE,8BAA8B,aAjBvE,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,UAAU;QACV,UAAU,CAAA,EAAA,OAAA,EAAA,CAaF,0BAA0B,EAAE,8BAA8B,CAAA,EAAA,CAAA,CAAA;AAEzD,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAbvB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,0BAA0B,EAAE;AAC1B,oBAAA,SAAS,EAAE,0BAA0B;oBACrC,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAhBC,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,UAAU;QACV,UAAU,CAAA,EAAA,CAAA,CAAA;2FAeD,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAtBnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,UAAU;wBACV,UAAU;AACX,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,0BAA0B,EAAE;AAC1B,oCAAA,SAAS,EAAE,0BAA0B;oCACrC,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,0BAA0B,EAAE,8BAA8B,CAAC;AAC1E,oBAAA,OAAO,EAAE,CAAC,0BAA0B,EAAE,8BAA8B,CAAC;iBACtE,CAAA;;;ACzCD;;;;AAIG;MAuBU,6BAA6B,CAAA;;0HAA7B,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2HAA7B,6BAA6B,EAAA,YAAA,EAAA,CAHzB,+BAA+B,CAAA,EAAA,OAAA,EAAA,CAP5C,YAAY;QACZ,UAAU;QACV,UAAU;QACV,aAAa;QACb,uBAAuB;QACvB,mBAAmB,aAGX,+BAA+B,CAAA,EAAA,CAAA,CAAA;AAE9B,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,YAVtC,YAAY;QACZ,UAAU;QACV,UAAU;QACV,aAAa;QACb,uBAAuB;QACvB,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAKV,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAZzC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,UAAU;wBACV,UAAU;wBACV,aAAa;wBACb,uBAAuB;wBACvB,mBAAmB;AACpB,qBAAA;oBACD,YAAY,EAAE,CAAC,+BAA+B,CAAC;oBAC/C,OAAO,EAAE,CAAC,+BAA+B,CAAC;iBAC3C,CAAA;;;AC1BD;;;;AAIG;;ACJH;;;;AAIG;MAoBU,kBAAkB,CAAA;AAM7B,IAAA,WAAA,CACY,UAAmC,EACvB,WAAqC,EACjD,oBAA0C,EAAA;AAF1C,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAyB;AACvB,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAA0B;AACjD,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;KAClD;AAEJ,IAAA,IAAc,IAAI,GAAA;AAChB,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW;cACrB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa;AACzD,cAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACnC;AAED;;;AAGG;AAEH,IAAA,WAAW,CAAC,KAAiB,EAAA;AAC3B,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,cAAc,EAAE,CAAC;AAExB,QAAA,IAAI,CAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,MAAM,MAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;YACnD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;kBAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B,kBAAE,IAAI,CAAC,WAAW,CAAC;AAErB,YAAA,IAAI,CAAC,oBAAoB;AACtB,iBAAA,GAAG,EAAE;AACL,iBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,iBAAA,SAAS,CAAC,CAAC,qBAA4C,KAAI;;AAE1D,gBAAA,IAAI,qBAAqB,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,EAAE;oBAC/D,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAC9B,iBAAiB,CAAC,kBAAkB,CACrC,CAAC;AACH,iBAAA;gBACD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,OAAO,EACP,iBAAiB,CAAC,kBAAkB,CACrC,CAAC;AACJ,aAAC,CAAC,CAAC;AACN,SAAA;KACF;;+GA/CU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGAAlB,kBAAkB,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;iBAC1B,CAAA;;;8BASI,QAAQ;;yBAJF,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAmBN,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AC9CnC;;;;AAIG;AAsBS,IAAA,aASX;AATD,CAAA,UAAY,YAAY,EAAA;AACtB,IAAA,YAAA,CAAA,cAAA,CAAA,GAAA,aAA4B,CAAA;AAC5B,IAAA,YAAA,CAAA,eAAA,CAAA,GAAA,cAA8B,CAAA;AAC9B,IAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,eAAgC,CAAA;AAChC,IAAA,YAAA,CAAA,oBAAA,CAAA,GAAA,kBAAuC,CAAA;AACvC,IAAA,YAAA,CAAA,sBAAA,CAAA,GAAA,oBAA2C,CAAA;AAC3C,IAAA,YAAA,CAAA,cAAA,CAAA,GAAA,aAA4B,CAAA;AAC5B,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,gBAAmC,CAAA;AACrC,CAAC,EATW,YAAY,KAAZ,YAAY,GASvB,EAAA,CAAA,CAAA;;ACnCD;;;;AAIG;MAsBU,kBAAkB,CAAA;AAC7B,IAAA,WAAA,CAAsB,MAAiB,EAAA;AAAjB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;KAAI;AAE3C,IAAA,IAAc,iBAAiB,GAAA;QAC7B,OAAO;YACL,KAAK;YACL,QAAQ;YACR,MAAM;YACN,OAAO;YACP,UAAU;YACV,WAAW;YACX,aAAa;YACb,cAAc;YACd,UAAU;YACV,aAAa;YACb,WAAW;YACX,cAAc;SACf,CAAC;KACH;AAED,IAAA,IAAc,kBAAkB,GAAA;AAC9B,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,IAAc,MAAM,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;KACjC;AAED,IAAA,IAAc,QAAQ,GAAA;AACpB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;KAC7B;AAES,IAAA,YAAY,CACpB,OAAoB,EAAA;;QAEpB,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,gBAAgB,CAAC,OAAO,CAAC,CAAC;KAC/C;AAES,IAAA,wBAAwB,CAAC,OAAoB,EAAA;QACrD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAE1C,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC;AACxC,SAAA;KACF;AAES,IAAA,kBAAkB,CAAC,OAAoB,EAAA;AAC/C,QAAA,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,IAAI,QAAQ,MAAM,QAAQ,CAAC;KAC1E;AAES,IAAA,YAAY,CAAC,OAAoB,EAAA;QACzC,IAAI,cAAc,GACH,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;AAErE,QAAA,OACE,cAAc;AACd,YAAA,cAAc,KAAK,IAAI,CAAC,QAAQ,CAAC,eAAe;AAChD,YAAA,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EACvC;AACA,YAAA,cAAc,GAAgB,cAAc,CAAC,YAAY,CAAC;AAC3D,SAAA;AAED,QAAA,OAAO,cAAc,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;KACxD;AAES,IAAA,QAAQ,CAAC,OAAoB,EAAE,KAAK,GAAG,IAAI,EAAA;AACnD,QAAA,IAAI,UAA+B,CAAC;AACpC,QAAA,IAAI,YAAY,GAAwB;AACtC,YAAA,KAAK,EAAE,CAAC;AACR,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,GAAG,EAAE,CAAC;AACN,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,CAAC;SACT,CAAC;QAEF,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,KAAK,OAAO,EAAE;AACtD,YAAA,UAAU,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;AAC7C,YAAA,UAAU,GAAG;gBACX,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,IAAI,EAAE,UAAU,CAAC,IAAI;gBACrB,KAAK,EAAE,UAAU,CAAC,KAAK;gBACvB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,KAAK,EAAE,UAAU,CAAC,KAAK;aACxB,CAAC;AACH,SAAA;AAAM,aAAA;YACL,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAElD,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAEzC,YAAA,IAAI,cAAc,KAAK,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;gBACpD,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AACnD,aAAA;AAED,YAAA,YAAY,CAAC,GAAG,IAAI,cAAc,CAAC,SAAS,CAAC;AAC7C,YAAA,YAAY,CAAC,IAAI,IAAI,cAAc,CAAC,UAAU,CAAC;AAChD,SAAA;AAED,QAAA,UAAU,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC;AACnC,QAAA,UAAU,CAAC,MAAM,IAAI,YAAY,CAAC,GAAG,CAAC;AACtC,QAAA,UAAU,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC;AACrC,QAAA,UAAU,CAAC,KAAK,IAAI,YAAY,CAAC,IAAI,CAAC;AAEtC,QAAA,IAAI,KAAK,EAAE;YACT,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC5C,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAClD,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC9C,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACjD,SAAA;AAED,QAAA,OAAO,UAAU,CAAC;KACnB;AAES,IAAA,MAAM,CAAC,OAAoB,EAAE,KAAK,GAAG,IAAI,EAAA;AACjD,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;AAC9C,QAAA,MAAM,cAAc,GAAG;AACrB,YAAA,GAAG,EACD,CAAC,IAAI,CAAC,MAAM;AACV,gBAAA,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS;gBACnE,CAAC;AACH,YAAA,IAAI,EACF,CAAC,IAAI,CAAC,MAAM;AACV,gBAAA,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,UAAU;gBACpE,CAAC;SACJ,CAAC;AAEF,QAAA,MAAM,QAAQ,GAAG;AACf,YAAA,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,YAAY;AAC5C,YAAA,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,OAAO,CAAC,WAAW;AACzC,YAAA,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,cAAc,CAAC,GAAG;AACnC,YAAA,MAAM,EAAE,KAAK,CAAC,MAAM,GAAG,cAAc,CAAC,GAAG;AACzC,YAAA,IAAI,EAAE,KAAK,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI;AACtC,YAAA,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,IAAI;SACzC,CAAC;AAEF,QAAA,IAAI,KAAK,EAAE;YACT,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC5C,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACxC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9C,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAA;AAED,QAAA,OAAO,QAAQ,CAAC;KACjB;AAED;;AAEE;AACQ,IAAA,iBAAiB,CACzB,WAAwB,EACxB,aAA0B,EAC1B,SAAiB,EACjB,YAAsB,EAAA;;AAEtB,QAAA,MAAM,CAAC,gBAAgB,GAAG,KAAK,EAAE,kBAAkB,GAAG,QAAQ,CAAC,GAC7D,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvB,MAAM,cAAc,GAAG,YAAY;cAC/B,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC;cAC/B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACtC,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAExD,QAAA,IAAI,cAAc,EAAE;YAClB,MAAM,SAAS,GAAG,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACvD,MAAM,YAAY,GAAG,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAC7D,MAAM,UAAU,GAAG,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACzD,MAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YAE3D,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,IAAI,YAAY,GAAG,CAAC,CAAC;AAErB,YAAA,QAAQ,gBAAgB;AACtB,gBAAA,KAAK,KAAK;oBACR,WAAW;AACT,wBAAA,cAAc,CAAC,GAAG;6BACjB,aAAa,CAAC,YAAY,GAAG,SAAS,GAAG,YAAY,CAAC,CAAC;oBAC1D,MAAM;AACR,gBAAA,KAAK,QAAQ;oBACX,WAAW,GAAG,cAAc,CAAC,GAAG,GAAG,cAAc,CAAC,MAAM,CAAC;oBACzD,MAAM;AACR,gBAAA,KAAK,MAAM;oBACT,YAAY;AACV,wBAAA,cAAc,CAAC,IAAI;6BAClB,aAAa,CAAC,WAAW,GAAG,UAAU,GAAG,WAAW,CAAC,CAAC;oBACzD,MAAM;AACR,gBAAA,KAAK,OAAO;oBACV,YAAY,GAAG,cAAc,CAAC,IAAI,GAAG,cAAc,CAAC,KAAK,CAAC;oBAC1D,MAAM;AACT,aAAA;AAED,YAAA,QAAQ,kBAAkB;AACxB,gBAAA,KAAK,KAAK;AACR,oBAAA,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC;oBACjC,MAAM;AACR,gBAAA,KAAK,QAAQ;oBACX,WAAW;AACT,wBAAA,cAAc,CAAC,GAAG;AAClB,4BAAA,cAAc,CAAC,MAAM;4BACrB,aAAa,CAAC,YAAY,CAAC;oBAC7B,MAAM;AACR,gBAAA,KAAK,MAAM;AACT,oBAAA,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC;oBACnC,MAAM;AACR,gBAAA,KAAK,OAAO;oBACV,YAAY;AACV,wBAAA,cAAc,CAAC,IAAI;AACnB,4BAAA,cAAc,CAAC,KAAK;4BACpB,aAAa,CAAC,WAAW,CAAC;oBAC5B,MAAM;AACR,gBAAA,KAAK,QAAQ;AACX,oBAAA,IAAI,gBAAgB,KAAK,KAAK,IAAI,gBAAgB,KAAK,QAAQ,EAAE;wBAC/D,YAAY;AACV,4BAAA,cAAc,CAAC,IAAI;gCACnB,cAAc,CAAC,KAAK,GAAG,CAAC;AACxB,gCAAA,aAAa,CAAC,WAAW,GAAG,CAAC,CAAC;AACjC,qBAAA;AAAM,yBAAA;wBACL,WAAW;AACT,4BAAA,cAAc,CAAC,GAAG;gCAClB,cAAc,CAAC,MAAM,GAAG,CAAC;AACzB,gCAAA,aAAa,CAAC,YAAY,GAAG,CAAC,CAAC;AAClC,qBAAA;oBACD,MAAM;AACT,aAAA;YAED,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,CAAa,UAAA,EAAA,IAAI,CAAC,KAAK,CACrD,YAAY,CACb,CAAA,IAAA,EAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC;;AAGrC,YAAA,MAAM,WAAW,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;AAC1D,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;AAC3C,YAAA,MAAM,YAAY,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,KAAI,IAAI,CAAC,YAAY,CAAC;AACnE,YAAA,MAAM,WAAW,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,KAAI,IAAI,CAAC,WAAW,CAAC;AAEhE,YAAA,QACE,WAAW,CAAC,IAAI,IAAI,CAAC;gBACrB,WAAW,CAAC,GAAG,IAAI,CAAC;gBACpB,WAAW,CAAC,KAAK,IAAI,WAAW;AAChC,gBAAA,WAAW,CAAC,MAAM,IAAI,YAAY,EAClC;AACH,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;;;AASK;AACL,IAAA,gBAAgB,CACd,WAAwB,EACxB,aAA0B,EAC1B,SAA0D,EAC1D,YAAsB,EAAA;AAEtB,QAAA,MAAM,aAAa,GAA2B,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;AACpE,cAAE,SAAS;cACR,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAA4B,CAAC;AAEzE,QAAA,IAAI,OAAO,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC;QAC/D,IAAI,OAAO,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;gBACrC,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;oBACrE,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,GAAsB,CAAC,CAAC;AAC5D,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;AAClC,QAAA,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AAC5B,QAAA,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AAChB,QAAA,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;QAEjB,IAAI,aAAa,GAAoB,MAAM,CAAC;QAC5C,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,KAAK,aAAa,IAAI,aAAa,EAAE;AACnC,YAAA,IACE,IAAI,CAAC,iBAAiB,CACpB,WAAW,EACX,aAAa,EACb,aAAa,EACb,YAAY,CACb,EACD;gBACA,YAAY,GAAG,IAAI,CAAC;gBACpB,MAAM;AACP,aAAA;AACF,SAAA;QAED,IAAI,CAAC,YAAY,EAAE;YACjB,IAAI,CAAC,iBAAiB,CACpB,WAAW,EACX,aAAa,EACb,aAAa,EACb,YAAY,CACb,CAAC;AACH,SAAA;AAED,QAAA,OAAO,aAAa,CAAC;KACtB;IAED,mBAAmB,CACjB,QAA0B,EAC1B,eAAyB,EAAA;AAEzB,QAAA,IAAI,aAAa,GAAG,CAAA,EAAG,QAAQ,IAAI,KAAK,EAAE,CAAC;AAC3C,QAAA,IAAI,eAAe,IAAI,aAAa,KAAK,MAAM,EAAE;AAC/C,YAAA,aAAa,GAAG,CAAA,EAAG,aAAa,CAAA,KAAA,CAAO,CAAC;AACzC,SAAA;AAED,QAAA,OAAO,aAAa,CAAC;KACtB;;+GAhUU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACzBD;;;;AAIG;MA8BU,gBAAgB,CAAA;AAsG3B;;AAEG;IAEH,WAAW,GAAA;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;KACnD;AAED;;;AAGG;AAEH,IAAA,YAAY,CAAC,KAAiB,EAAA;AAC5B,QAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;YACxE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACpD,SAAA;KACF;AAED;;AAEG;IAEH,aAAa,GAAA;QACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;KACrD;AAES,IAAA,kBAAkB,CAAC,KAAiB,EAAA;AAC5C,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC3E;AAES,IAAA,oBAAoB,CAAC,KAAiB,EAAA;AAC9C,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACjE;AAED;;AAEG;AACH,IAAA,KAAK,CAAC,KAAyC,EAAA;QAC7C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,KAAK,YAAY,UAAU,EAAE;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;AACzD,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC3D,SAAA;KACF;AAED;;;;AAIG;IACH,kBAAkB,GAAA;QAChB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC/C,IAAI,CAAC,MAAM,CAAC,YAAY,EACxB,QAAQ,EACR,MAAM,IAAI,CAAC,eAAe,EAAE,CAC7B,CAAC;KACH;AAED;;;AAGG;IACH,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAC1D,IAAI,CAAC,cAAc,CAAC,aAAa,EACjC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,EAC3C,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CACzC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,eAAe,CACrB,EACD,IAAI,CAAC,YAAY,CAClB,CAAC;AAEF,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AACvC,QAAA,IAAI,CAAC,SAAS,GAAG,CAAA,EAAG,IAAI,CAAC,WAAW,CAAA,CAAA,EAAI,IAAI,CAAC,YAAY,CAAA,OAAA,CAAS,CAAC;KACpE;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrB,YAAA,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;AACjC,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACvB,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS,EAAE;AACtC,YAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC7B,SAAA;QAED,IAAI,CAAC,SAAS,GAAG,CAAA,EAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAEvC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAK;YAClD,IAAI,CAAC,eAAe,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;AACrC,aAAA,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,YAAY,eAAe,CAAC,CAAC;aACzD,SAAS,CAAC,MAAK;YACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AACpD,SAAC,CAAC,CAAC;QAEL,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC3B,SAAA;KACF;AAED;;AAEG;AACH,IAAA,UAAU,CAAC,OAAkC,EAAA;QAC3C,OAAO,OAAO,YAAY,WAAW,CAAC;KACvC;AAED,IAAA,QAAQ,CAAC,OAAkC,EAAA;AACzC,QAAA,OAAO,EAAE,OAAO,YAAY,WAAW,CAAC,CAAC;KAC1C;IAED,kBAAkB,GAAA;QAChB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;AAC9B,SAAA;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AACnC,SAAA;QAED,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC9B,SAAA;KACF;IAED,WACY,CAAA,kBAAsC,EACtC,MAAiB,EACjB,kBAAqC,EACrC,QAAmB,EACnB,MAAc,EAAA;AAJd,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAmB;AACrC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AAjK1B;;AAEG;AACH,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;KA+JlB;;6GApPO,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAwC,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAxC,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAP,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,mOClC7B,qmBAmBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAM,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDea,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;+BACE,YAAY,EAAA,eAAA,EAEL,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,qmBAAA,EAAA,CAAA;6MAsGrB,SAAS,EAAA,CAAA;sBAAlC,WAAW;uBAAC,WAAW,CAAA;gBAMxB,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,CAAA;gBAUrB,YAAY,EAAA,CAAA;sBADX,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAW1C,aAAa,EAAA,CAAA;sBADZ,YAAY;uBAAC,gBAAgB,CAAA;;;AE9JhC;;;;AAIG;MASU,cAAc,CAAA;AACzB;;;AAGG;IACH,cAAc,CAAC,KAAmB,EAAE,YAAqB,EAAA;QACvD,IAAI,MAAM,GAAG,EAAE,CAAC;AAEhB,QAAA,IAAI,KAAK,KAAK,YAAY,CAAC,gBAAgB,IAAI,YAAY,EAAE;AAC3D,YAAA,MAAM,GAAG;AACP,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,KAAK,EAAE,IAAI;AACX,gBAAA,aAAa,EAAE,KAAK;AACpB,gBAAA,SAAS,EAAE,IAAI;aAChB,CAAC;AACH,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,iBAAiB,CACf,OAAmB,EACnB,WAAwB,EACxB,YAAsB,EAAA;QAEtB,IAAI,WAAW,IAAI,YAAY,EAAE;AAC/B,YAAA,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC/B,SAAA;KACF;;2GA5BU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA;2FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACZD;;;;AAIG;AAwBH;;AAEG;MAIU,gBAAgB,CAAA;AA0C3B;;;;;;;AAOG;AAGH,IAAA,WAAW,CAAC,KAAoB,EAAA;AAC9B,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,cAAc,EAAE,CAAC;AACxB,QAAA,IAAI,CAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,MAAM,MAAK,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;AACvD,SAAA;aAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC3D,SAAA;KACF;IAID,SAAS,GAAA;;AACP,QAAA,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAA,IAAI,IAAI,CAAC,MAAM,EAAE;YAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC3D,SAAA;KACF;IAGD,YAAY,GAAA;QACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;KACrD;AAGD,IAAA,WAAW,CAAC,KAAiB,EAAA;AAC3B,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,cAAc,EAAE,CAAC;AACxB,QAAA,IAAI,CAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,MAAM,MAAK,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC3C,SAAA;aAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;AACzD,SAAA;KACF;AAwBD;;AAEG;AACH,IAAA,IAAI,CAAC,KAAmB,EAAA;;QACtB,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAA,EAAE;AACnC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CACnD,KAAK,EACL,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,0CAAE,YAAY,KAAI,KAAK,CAC7C,CAAC;YACF,IAAI,CAAC,aAAa,EAAE,CAAC;AACrB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACzB,SAAA;KACF;AAED;;AAEG;IACH,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;AAED;;;AAGG;IACH,mBAAmB,GAAA;QACjB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAmB,KAAI;;YAClD,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC1C,gBAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClB,aAAA;YACD,IAAI,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAClD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACtD,aAAA;YACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAC3C,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,aAAA;YACD,IAAI,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACpD,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnC,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,EAChB,MAAA,IAAI,CAAC,gBAAgB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,CACpC,CAAC;AACH,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;IACH,aAAa,GAAA;;QACX,MAAM,gBAAgB,GACpB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,gBAAgB;AACnB,YAAA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;AAEvD,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AACzD,QAAA,IAAI,iBAAiB,EAAE;AACrB,YAAA,iBAAiB,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,YAAA,iBAAiB,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;AAChD,YAAA,iBAAiB,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;AAC1D,YAAA,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACjD,YAAA,iBAAiB,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACnD,iBAAiB,CAAC,QAAQ,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,SAAS,CAAC;YAC9D,iBAAiB,CAAC,WAAW,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC;YAC7D,iBAAiB,CAAC,YAAY,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,CAAC;AACrE,YAAA,iBAAiB,CAAC,gBAAgB;AAChC,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,gBAAgB,CAAC;AAC1C,YAAA,iBAAiB,CAAC,kBAAkB;AAClC,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,kBAAkB,CAAC;AAC5C,YAAA,iBAAiB,CAAC,eAAe;AAC/B,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,CAAC;AAEzC,YAAA,IAAI,MAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,EAAE;gBACvC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EACzB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAC7C,CAAC;AACH,aAAA;AAED,YAAA,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;AACzD,SAAA;KACF;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;AAED,IAAA,WAAA,CACY,OAAmB,EACnB,aAA+B,EAC/B,wBAAkD,EAClD,QAAmB,EACnB,iBAAoC,EACpC,cAA8B,EAC9B,MAAiB,EAAA;AANjB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;AACnB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;AAC/B,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;AAClD,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAhM7B;;AAEG;AACO,QAAA,IAAA,CAAA,WAAW,GAAuB,IAAI,YAAY,EAAE,CAAC;AAE/D;;AAEG;AACO,QAAA,IAAA,CAAA,YAAY,GAAuB,IAAI,YAAY,EAAE,CAAC;AAkBhE;;AAEG;AACH,QAAA,IAAA,CAAA,YAAY,GAA0B,IAAI,OAAO,EAAgB,CAAC;QA4CxD,IAAA,CAAA,iBAAiB,GAAmB;AAC5C,YAAA,YAAY,CAAC,IAAI;AACjB,YAAA,YAAY,CAAC,gBAAgB;SAC9B,CAAC;QAEQ,IAAA,CAAA,yBAAyB,GAAmB;AACpD,YAAA,YAAY,CAAC,gBAAgB;SAC9B,CAAC;QAEQ,IAAA,CAAA,kBAAkB,GAAmB;AAC7C,YAAA,YAAY,CAAC,YAAY;AACzB,YAAA,YAAY,CAAC,cAAc;AAC3B,YAAA,YAAY,CAAC,aAAa;AAC1B,YAAA,YAAY,CAAC,oBAAoB;AACjC,YAAA,YAAY,CAAC,kBAAkB;SAChC,CAAC;QAEQ,IAAA,CAAA,2BAA2B,GAAmB;AACtD,YAAA,YAAY,CAAC,cAAc;AAC3B,YAAA,YAAY,CAAC,oBAAoB;SAClC,CAAC;KAoGE;;6GA5MO,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA3C,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;iGAAhB,gBAAgB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,OAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,aAAa;iBACxB,CAAA;iRAKU,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAKG,gBAAgB,EAAA,CAAA;sBAAxB,KAAK;gBAKI,WAAW,EAAA,CAAA;sBAApB,MAAM;gBAKG,YAAY,EAAA,CAAA;sBAArB,MAAM;gBAiCP,WAAW,EAAA,CAAA;sBAFV,YAAY;uBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBACxC,YAAY;uBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAYzC,SAAS,EAAA,CAAA;sBAFR,YAAY;uBAAC,aAAa,CAAA;;sBAC1B,YAAY;uBAAC,mBAAmB,CAAA;gBAQjC,YAAY,EAAA,CAAA;sBADX,YAAY;uBAAC,gBAAgB,CAAA;gBAM9B,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AC5GnC;;;;AAIG;AAIH,MAAM,YAAY,GAAG,EAAE,CAAC;MAKX,YAAY,CAAA;AACvB;;AAEG;IACH,SAAS,CAAC,KAAa,EAAE,IAAwB,EAAA;QAC/C,IAAI,CAAC,IAAI,EAAE;AACT,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QAED,IAAI,KAAK,GAAG,KAAK,CAAC;QAElB,MAAM,KAAK,GACT,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtD,cAAE,IAAI,CAAC,CAAC,CAAC;cACP,YAAY,CAAC;AAEnB,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;AAC5C,YAAA,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,SAAA;QAED,OAAO,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;KACzE;;yGArBU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;uGAAZ,YAAY,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,CAAA;2FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,IAAI;AAAC,YAAA,IAAA,EAAA,CAAA;AACJ,oBAAA,IAAI,EAAE,YAAY;iBACnB,CAAA;;;ACZD;;;;AAIG;MASU,4BAA4B,CAAA;AALzC,IAAA,WAAA,GAAA;AAWE;;AAEG;AACM,QAAA,IAAe,CAAA,eAAA,GAAW,GAAG,CAAC;KAOxC;AAHC,IAAA,IAAI,WAAW,GAAA;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;KACpD;;yHAfU,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,4BAA4B,gKCbzC,4iBAwBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAc,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8B,gBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAnD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAoD,YAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDXa,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBALxC,SAAS;+BACE,0BAA0B,EAAA,eAAA,EAEnB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,4iBAAA,EAAA,CAAA;8BAMtC,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAKG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBAEG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;AExBR;;;;AAIG;MAiCU,aAAa,CAAA;;IAwCxB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;IAED,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IAED,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC7B;IAED,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;IAED,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;AAED,IAAA,YAAY,CAAC,MAAmC,EAAA;AAC9C,QAAA,OAAQ,MAAqB,CAAC,KAAK,KAAK,SAAS,CAAC;KACnD;AAED,IAAA,gBAAgB,CACd,MAAmC,EAAA;AAEnC,QAAA,OAAQ,MAAyB,CAAC,IAAI,KAAK,SAAS,CAAC;KACtD;AAED,IAAA,WAAA,GAAA;AA3EA,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AAGtB,QAAA,IAAA,CAAA,UAAU,GAAyB,IAAI,YAAY,EAAE,CAAC;AAEtD,QAAA,IAAA,CAAA,cAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;AAE1D,QAAA,IAAA,CAAA,QAAQ,GAAyB,IAAI,YAAY,EAAE,CAAC;AAEpD,QAAA,IAAA,CAAA,QAAQ,GAAyB,IAAI,YAAY,EAAE,CAAC;AAEpD,QAAA,IAAA,CAAA,UAAU,GAAyB,IAAI,YAAY,EAAE,CAAC;AAGtD,QAAA,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;AAGf,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAGjB,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAMlB,QAAA,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AAGvB,QAAA,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;AAGrB,QAAA,IAAe,CAAA,eAAA,GAAG,GAAG,CAAC;;KA6CrB;IAED,QAAQ,GAAA;;KAEP;;0GAlFU,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aAAa,kZCrC1B,4jJA4IA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA/B,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAgC,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAZ,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAa,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAN,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAO,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDvGa,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,SAAS;+BACE,SAAS,EAAA,QAAA,EAAA,4jJAAA,EAAA,CAAA;0EAOnB,UAAU,EAAA,CAAA;sBADT,MAAM;gBAGP,cAAc,EAAA,CAAA;sBADb,MAAM;gBAGP,QAAQ,EAAA,CAAA;sBADP,MAAM;gBAGP,QAAQ,EAAA,CAAA;sBADP,MAAM;gBAGP,UAAU,EAAA,CAAA;sBADT,MAAM;gBAIP,MAAM,EAAA,CAAA;sBADL,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,cAAc,EAAA,CAAA;sBADb,KAAK;gBAIN,YAAY,EAAA,CAAA;sBADX,KAAK;gBAIN,eAAe,EAAA,CAAA;sBADd,KAAK;gBAIN,KAAK,EAAA,CAAA;sBADJ,KAAK;;;AExER;;;;AAIG;MAeU,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,EAHT,YAAA,EAAA,CAAA,gBAAgB,EAAE,gBAAgB,aADvC,YAAY,EAAE,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAE3D,EAAA,OAAA,EAAA,CAAA,gBAAgB,EAAE,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAEjC,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAJd,YAAY,EAAE,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAI1D,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAAC;AACtE,oBAAA,YAAY,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;AAClD,oBAAA,OAAO,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;iBAC9C,CAAA;;;AClBD;;;;AAIG;MAcU,yBAAyB,CAAA;;sHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EAHrB,YAAA,EAAA,CAAA,4BAA4B,EAAE,YAAY,CAD/C,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,aAAa,CAEvC,EAAA,OAAA,EAAA,CAAA,4BAA4B,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;AAEzC,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EAJ1B,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,aAAa,CAAA,EAAA,CAAA,CAAA;2FAItC,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,CAAC;AAClD,oBAAA,YAAY,EAAE,CAAC,4BAA4B,EAAE,YAAY,CAAC;AAC1D,oBAAA,OAAO,EAAE,CAAC,4BAA4B,EAAE,YAAY,CAAC;iBACtD,CAAA;;;ACjBD;;;;AAIG;MASU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAHX,kBAAkB,CAAA,EAAA,OAAA,EAAA,CACvB,kBAAkB,CAAA,EAAA,CAAA,CAAA;6GAEjB,eAAe,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJ3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B,CAAA;;;ACZD;;;;AAIG;MAuBU,UAAU,CAAA;;uGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wGAAV,UAAU,EAAA,YAAA,EAAA,CAHN,aAAa,CAAA,EAAA,OAAA,EAAA,CAP1B,YAAY;QACZ,eAAe;QACf,UAAU;QACV,UAAU;QACV,yBAAyB;QACzB,mBAAmB,aAGX,aAAa,CAAA,EAAA,CAAA,CAAA;AAEZ,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,YAVnB,YAAY;QACZ,eAAe;QACf,UAAU;QACV,UAAU;QACV,yBAAyB;QACzB,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAKV,UAAU,EAAA,UAAA,EAAA,CAAA;kBAZtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,eAAe;wBACf,UAAU;wBACV,UAAU;wBACV,yBAAyB;wBACzB,mBAAmB;AACpB,qBAAA;oBACD,YAAY,EAAE,CAAC,aAAa,CAAC;oBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;iBACzB,CAAA;;;AC1BD;;;;AAIG;;ACJH;;;;AAIG;AAiDH;;;;;;;;AAQG;AACS,IAAA,qBAaX;AAbD,CAAA,UAAY,oBAAoB,EAAA;AAC9B;;;AAGG;AACH,IAAA,oBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf;;;;;AAKG;AACH,IAAA,oBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAbW,oBAAoB,KAApB,oBAAoB,GAa/B,EAAA,CAAA,CAAA;;AC3ED;;;;AAIG;AAYH;;;;;;;;;;;AAWG;MAIU,YAAY,CAAA;AAQvB,IAAA,WAAA,CAAsB,MAAc,EAAA;AAAd,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KAAI;AAExC;;;AAGG;AACH,IAAA,QAAQ,CACN,cAAuC,EACvC,MAAe,EACf,GAAY,EACZ,IAAa,EAAA;;QAEb,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO;AACR,SAAA;AAED,QAAA,MAAM,SAAS,GAAU,cAAc,CAAC,GAAG;AACzC,cAAE,cAAc;cACd,IAAI,CAAC,YAAY,CAAC,cAAgC,EAAE,MAAM,CAAC,CAAC;QAEhE,OAAO;AACL,YAAA,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAA,EAAA,GAAA,SAAS,KAAT,IAAA,IAAA,SAAS,uBAAT,SAAS,CAAE,GAAG,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC;AAClD,YAAA,GAAG,EAAE,GAAG,KAAH,IAAA,IAAA,GAAG,KAAH,KAAA,CAAA,GAAA,GAAG,GAAI,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,OAAO;AAC9B,YAAA,IAAI,EAAE,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,IAAI,GAAI,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,IAAI;YAC7B,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,CAAC;SACnD,CAAC;KACH;AAED;;;;AAIG;AACH,IAAA,IAAI,eAAe,GAAA;;AACjB,QAAA,QACG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAsB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,oBAAoB,MAClD,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,oBAAoB,CAAC,KAAK,EAC1B;KACH;AAED;;;;AAIG;AACH,IAAA,IAAc,aAAa,GAAA;;QACzB,MAAM,YAAY,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,CAAC;AAC/C,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,YAAY,EAAE;YACxC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;AAC5C,iBAAA,GAAG,CAAC,CAAC,GAAG,MAAM;AACb,gBAAA,IAAI,EAAE,GAAG;AACT,gBAAA,IAAI,EAAE,YAAY,CAAC,GAAG,CAAC;AACxB,aAAA,CAAC,CAAC;AACF,iBAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KACT,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CACrE,CAAC;AACL,SAAA;AACD,QAAA,OAAO,MAAA,IAAI,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC;KAClC;AAED;;AAEG;AACH,IAAA,IAAc,eAAe,GAAA;AAC3B,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAC1B,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;AAC9D,SAAA;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;AAED;;AAEG;IACO,YAAY,CAAC,KAAqB,EAAE,MAAe,EAAA;QAC3D,OAAO,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;KACjD;AAED;;;;AAIG;IACO,aAAa,CACrB,cAA8B,EAC9B,MAAe,EAAA;AAEf,QAAA,IAAI,MAAM,IAAI,cAAc,CAAC,MAAM,CAAC,EAAE;AACpC,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;AACD,QAAA,QACE,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EACxE;KACH;AAED;;AAEG;AACO,IAAA,iBAAiB,CACzB,KAA6B,EAAA;;QAE7B,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,MAAM,KACtC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAClC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC;KACT;AAED;;;;;;AAMG;IACO,aAAa,CACrB,KAA6B,EAC7B,SAAkB,EAAA;QAElB,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;;AAGD,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;AACjC,QAAA,MAAM,GAAG,GAAW,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;AACnE,QAAA,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;YACZ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,SAAA;QAED,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,KAAI;;YAC5C,MAAM,KAAK,GAAI,KAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,CAAC,KAAK,EAAE;AACX,gBAAA,IAAI,GAAG,EAAE;oBACP,GAAG,IAAI,IAAI,CAAC;AACb,iBAAA;gBACD,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAA,EAAA,GAAA,KAAK,CAAC,GAAG,mCAAI,EAAE,CAAC,IAChD,MAAM,CAAC,IAAI,CAAC,KACd,GAAG,CAAC;AACL,aAAA;AACD,YAAA,OAAO,GAAG,CAAC;SACZ,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,MAAM,KAAK,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC;KAC3C;AAED;;;;;;AAMG;AACO,IAAA,kBAAkB,CAAC,GAAW,EAAA;AACtC,QAAA,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AAC3D,cAAE,GAAG;AACL,cAAE,IAAI,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC;KAC7B;AAED;;;;;;;;;AASG;IACO,UAAU,GAAA;;AAClB,QAAA,QACE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MACnC,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MACjC,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EACF;KACH;;yGApLU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC9BD;;;;AAIG;MAoBU,cAAc,CAAA;AAmEzB,IAAA,WAAA,CAAsB,YAA0B,EAAA;AAA1B,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AArChD;;;AAGG;AACM,QAAA,IAAA,CAAA,OAAO,GAAgC,IAAI,CAAC,eAAe,CAAC;AAErE;;AAEG;AACO,QAAA,IAAA,CAAA,MAAM,GAA0B,IAAI,YAAY,EAAW,CAAC;AAQtE;;;AAGG;AACkC,QAAA,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;AAE3D;;;;AAIG;AAC8B,QAAA,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;AAElD;;;;AAIG;AAC8B,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;KAEC;IAEpD,WAAW,GAAA;QACT,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;AAED;;AAEG;IACO,MAAM,GAAA;;AACd,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CACrC,IAAI,CAAC,SAAS,YAAY,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EACpE,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,CACV,CAAC;QACF,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAA,EAAE;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,SAAA;KACF;AAED;;AAEG;IACH,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;AAED;;AAEG;AACH,IAAA,IAAI,eAAe,GAAA;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,KAAK,oBAAoB,CAAC,IAAI;cAClE,oBAAoB,CAAC,IAAI;cACzB,IAAI,CAAC;KACV;AAED;;;AAGG;IACH,YAAY,GAAA;QACV,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAES,aAAa,GAAA;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;;2GAxHU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,4VCxB3B,4PAUA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAjD,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDca,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,SAAS;+BACE,UAAU,EAAA,eAAA,EAEH,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,4PAAA,EAAA,CAAA;gGAStC,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAUG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAMG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBAKG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAMG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAKI,MAAM,EAAA,CAAA;sBAAf,MAAM;gBAY8B,aAAa,EAAA,CAAA;sBAAjD,WAAW;uBAAC,sBAAsB,CAAA;gBAOF,SAAS,EAAA,CAAA;sBAAzC,WAAW;uBAAC,kBAAkB,CAAA;gBAOE,SAAS,EAAA,CAAA;sBAAzC,WAAW;uBAAC,kBAAkB,CAAA;;;AEzFjC;;;;AAIG;MAWU,WAAW,CAAA;AACtB,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,WAAW;SACtB,CAAC;KACH;;wGALU,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAX,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EAHP,YAAA,EAAA,CAAA,cAAc,CADnB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,cAAc,CAAA,EAAA,CAAA,CAAA;AAEb,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,YAJZ,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,WAAW,EAAA,UAAA,EAAA,CAAA;kBALvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;iBAC1B,CAAA;;;ACdD;;;;AAIG;MAsBU,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,YAAA,EAAA,CAHV,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAP9B,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,WAAW;QACX,SAAS;QACT,UAAU,aAGF,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAEhB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAVvB,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,WAAW;QACX,SAAS;QACT,UAAU,CAAA,EAAA,CAAA,CAAA;2FAKD,cAAc,EAAA,UAAA,EAAA,CAAA;kBAZ1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,UAAU;wBACV,WAAW;wBACX,SAAS;wBACT,UAAU;AACX,qBAAA;oBACD,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;iBAC7B,CAAA;;;ACzBD;;;;AAIG;;ACJH;;;;AAIG;AAIH;;;;;;;;;;;AAWG;MAIU,iBAAiB,CAAA;AAC5B,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,OAAO,YAAY,CAAC;KACrB;AAED;;AAEG;AACH,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,WAAW;AACpB,aAAA,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC;AACzB,aAAA,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;AACzB,aAAA,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;KAC9B;AAED;;AAEG;IACH,aAAa,CAAC,IAAY,EAAE,OAAgB,EAAA;AAC1C,QAAA,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAP,OAAO,GAAI,IAAI,CAAC,OAAO,CAAA,CAAA,CAAG,CAAC,CAAC;AAChE,QAAA,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;AAED;;;;AAIG;AACH,IAAA,OAAO,CAAC,KAAa,EAAA;QACnB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;AACR,SAAA;AAED,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW;AAC/B,aAAA,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AACnB,aAAA,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;AACjB,aAAA,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;AACjB,aAAA,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhB,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAEzC,MAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAE3D,MAAM,CAAC,GAAG,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,GAAG,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,MAAM,CAAC,GAAG,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzC,QAAA,OAAO,IAAI,IAAI,CACb,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EACpB,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EACxB,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CACrB,CAAC;KACH;;8GApDU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACtBD;;;;AAIG;AAiBH;;;;;;;;AAQG;MAMU,mBAAmB,CAAA;IAC9B,WACY,CAAA,kBAAqC,EACrC,eAAgC,EAAA;AADhC,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAmB;AACrC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AAa5C;;AAEG;AACM,QAAA,IAAM,CAAA,MAAA,GAAG,YAAY,CAAC;AAkEL,QAAA,IAAI,CAAA,IAAA,GAAG,OAAO,CAAC;KAjFrC;IAuBJ,IACI,OAAO,CAAC,OAAoD,EAAA;QAC9D,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAExB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAE/D,IAAI,CAAC,cAAc,GAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,aAAa,CAAC,IAAI,CAC/C,SAAS,CAAC,EAAE,CAAC,EACb,GAAG,CAAC,MAAM,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC,EAC/B,GAAG,CAAC,CAAC,MAAM,KACT,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,OAAO,CAAC,CAC5D,CACF,CAAC;KACH;AAED,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,SAAS,GAAA;;AACP,QAAA,MAAM,OAAO,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAChD,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAI;gBAC/B,IAAI,CAAA,CAAC,KAAA,IAAA,IAAD,CAAC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAD,CAAC,CAAE,GAAG,MAAK,SAAS,EAAE;AACxB,oBAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AACxC,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AACD;;;;;;;AAOG;AACH,IAAA,oBAAoB,CAAC,YAAkB,EAAA;AACrC,QAAA,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,YAAY,GAAG,EAAE,CAAC;AAC1D,QAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAY,YAAY,CAAA,EAAK,IAAI,CAAC,iBAAiB,CAAG,CAAA;KACvD;AAED,IAAA,IAA0C,OAAO,GAAA;;AAC/C,QAAA,OAAO,MAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;KAC9B;AACD,IAAA,IAAwC,KAAK,GAAA;;AAC3C,QAAA,OAAO,MAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;KAC5B;AACD,IAAA,IAA0C,OAAO,GAAA;;AAC/C,QAAA,OAAO,MAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;KAC9B;AACD,IAAA,IAA6C,MAAM,GAAA;AACjD,QAAA,OAAO,EAAE,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KACxD;;gHApFU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,sWCnChC,sSASA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAc,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAd,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD0Ba,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,gBAAgB,EAAA,eAAA,EAET,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,sSAAA,EAAA,CAAA;sIAqBtC,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAMN,iBAAiB,EAAA,CAAA;sBADhB,KAAK;gBAIF,OAAO,EAAA,CAAA;sBADV,KAAK;gBA8CoC,OAAO,EAAA,CAAA;sBAAhD,WAAW;uBAAC,uBAAuB,CAAA;gBAGI,KAAK,EAAA,CAAA;sBAA5C,WAAW;uBAAC,qBAAqB,CAAA;gBAGQ,OAAO,EAAA,CAAA;sBAAhD,WAAW;uBAAC,uBAAuB,CAAA;gBAGS,MAAM,EAAA,CAAA;sBAAlD,WAAW;uBAAC,0BAA0B,CAAA;gBAGb,IAAI,EAAA,CAAA;sBAA7B,WAAW;uBAAC,WAAW,CAAA;;;AExH1B;;;;AAIG;AAMH;;;;;;;;;AASG;MAOU,mBAAmB,CAAA;AAC9B,IAAA,WAAA,CAAsB,OAA0B,EAAA;AAA1B,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAmB;AAMtC,QAAA,IAAA,CAAA,MAAM,GAAuB,IAAI,YAAY,EAAE,CAAC;KANN;IAQpD,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;AAED,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;KACjC;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;KAC7B;AAED;;;;AAIG;AAEH,IAAA,OAAO,CAAC,IAAa,EAAA;AACnB,QAAA,OAAO,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;KACpE;;gHA7BU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAkD,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,mKC1BhC,qdAmBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAlD,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,sEAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAmD,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAhB,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDOa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;+BACE,gBAAgB,EAAA,QAAA,EAAA,qdAAA,EAAA,CAAA;qGAOjB,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBACG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAEI,MAAM,EAAA,CAAA;sBAAf,MAAM;;;AEjCT;;;;AAIG;MAYU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,iBAHZ,mBAAmB,CAAA,EAAA,OAAA,EAAA,CADxB,YAAY,EAAE,UAAU,aAExB,mBAAmB,CAAA,EAAA,CAAA,CAAA;8GAElB,gBAAgB,EAAA,OAAA,EAAA,CAJjB,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAIvB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;oBACnC,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;ACfD;;;;AAIG;MAcU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAHZ,mBAAmB,CAAA,EAAA,OAAA,EAAA,CADxB,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAE/D,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAElB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAJjB,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAI9D,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,CAAC;oBAC1E,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;ACjBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAeH;;AAEG;MAcU,mBAAmB,CAAA;AAbhC,IAAA,WAAA,GAAA;AAcE;;AAEG;AACM,QAAA,IAAM,CAAA,MAAA,GAAuB,GAAG,CAAC;AAC1C;;AAEG;AACM,QAAA,IAAQ,CAAA,QAAA,GAAa,KAAK,CAAC;;;;;AAWpC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAmB,CAAC;;AAuBnC,QAAA,IAAgB,CAAA,gBAAA,GAAa,MAAK;;AAE5C,SAAC,CAAC;AACQ,QAAA,IAAiB,CAAA,iBAAA,GAAa,MAAK;;AAE7C,SAAC,CAAC;KAgBH;AAvCC,IAAA,UAAU,CAAC,MAAa,EAAA;;QACtB,MAAM,KAAK,GAAI,CAAA,EAAA,GAAA,MAAM,CAAC,MAA2B,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;AACzD,QAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;IAED,UAAU,GAAA;QACR,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;KACzC;AAED,IAAA,IAAI,aAAa,GAAA;AACf,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE;AACtC,YAAA,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACvD,SAAA;AACD,QAAA,OAAO,SAAS,CAAC;KAClB;AASD,IAAA,gBAAgB,CAAC,QAAkB,EAAA;AACjC,QAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;KAClC;AACD,IAAA,iBAAiB,CAAC,QAAkB,EAAA;AAClC,QAAA,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;KACnC;AACD,IAAA,gBAAgB,CAAC,QAAiB,EAAA;QAChC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAClD;AACD,IAAA,UAAU,CAAC,KAAU,EAAA;QACnB,IAAI,KAAK,YAAY,QAAQ,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;AAC5C,SAAA;KACF;;gHA7DU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,EAVnB,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;AAClD,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAgBa,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,cAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,WAAW,sKC/C3B,2pBA4BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArB,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAd,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDOa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAb/B,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,gBAAgB,EAEf,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAE,UAAU,CAAC,yBAAyB,CAAC;AAClD,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,2pBAAA,EAAA,CAAA;8BAQQ,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAIG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAIqB,YAAY,EAAA,CAAA;sBAAtC,YAAY;uBAAC,WAAW,CAAA;gBAOzB,MAAM,EAAA,CAAA;sBADL,MAAM;gBAIG,SAAS,EAAA,CAAA;sBADlB,SAAS;gBAAC,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;AExD1C;;;;AAIG;MAcU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAHZ,mBAAmB,CAAA,EAAA,OAAA,EAAA,CADxB,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAE/D,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAElB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAJjB,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAI9D,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,CAAC;oBAC1E,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;ACjBD;;;;AAIG;;ACJH;;;;AAIG;MAWU,iCAAiC,CAAA;AAL9C,IAAA,WAAA,GAAA;QAMY,IAAA,CAAA,SAAS,GAAuB;YACxC,IAAI,EAAE,SAAS,CAAC,SAAS;AACzB,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,SAAS,EAAE,iCAAiC;SAC7C,CAAC;QACQ,IAAA,CAAA,SAAS,GAAuB;YACxC,IAAI,EAAE,SAAS,CAAC,GAAG;AACnB,YAAA,SAAS,EAAE,UAAU;AACrB,YAAA,SAAS,EAAE,iCAAiC;SAC7C,CAAC;AAKF,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;KAUxB;AARC;;AAEG;IACH,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,KAAK;AACR,YAAA,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAClE,QAAA,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KAC9D;;8HAxBU,iCAAiC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjC,iCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iCAAiC,+GCf9C,oNASA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAoD,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAApD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDMa,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAL7C,SAAS;+BACE,+BAA+B,EAAA,eAAA,EAExB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,oNAAA,EAAA,CAAA;8BAe/C,YAAY,EAAA,CAAA;sBADX,KAAK;;;AE3BR;;;;AAIG;MASmB,UAAU,CAAA;;uGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAV,UAAU,EAAA,UAAA,EAHlB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,UAAU,EAAA,UAAA,EAAA,CAAA;kBAJ/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;ACZD;;;;AAIG;AAaH;;;AAGG;MAIU,iCAAiC,CAAA;IAG5C,WACY,CAAA,MAAiB,EACjB,MAAkB,EAClB,UAAsB,EACtB,gBAAkC,EAClC,iBAAoC,EAAA;AAJpC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;AAClB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AAClC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;KAC5C;IAEJ,eAAe,GAAA;;QACb,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,wBAAwB,EAAE;YAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,YAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;AACxC,SAAA;KACF;IAES,eAAe,GAAA;;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACrD,iCAAiC,CAClC,CAAC;QACF,SAAS,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;AAChE,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;KAClE;AAED;;AAEG;IACO,SAAS,GAAA;AACjB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;AAC5C,QAAA,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AAEhC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,2BAA2B,CAAC,CAAC;;QAGrE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACtC;;8HAxCU,iCAAiC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAqD,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kHAAjC,iCAAiC,EAAA,QAAA,EAAA,iDAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAjC,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAH7C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,+CAA+C;iBAC1D,CAAA;;;ACvBD;;;;AAIG;AAII,MAAM,iBAAiB,GAAe;AAC3C,IAAA,IAAI,EAAE;AACJ,QAAA,wBAAwB,EAAE,IAAI;AAC/B,KAAA;CACF;;ACZD;;;;AAIG;MAuBU,8BAA8B,CAAA;;2HAA9B,8BAA8B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,8BAA8B,iBARvC,iCAAiC;AACjC,QAAA,iCAAiC,aAJzB,YAAY,EAAE,UAAU,EAAE,UAAU,aAO5C,iCAAiC;QACjC,iCAAiC,CAAA,EAAA,CAAA,CAAA;AAGxB,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,8BAA8B,EAV9B,SAAA,EAAA,CAAC,oBAAoB,CAAa,iBAAiB,CAAC,CAAC,EAAA,OAAA,EAAA,CADtD,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAWnC,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAZ1C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC;AAC/C,oBAAA,SAAS,EAAE,CAAC,oBAAoB,CAAa,iBAAiB,CAAC,CAAC;AAChE,oBAAA,YAAY,EAAE;wBACZ,iCAAiC;wBACjC,iCAAiC;AAClC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,iCAAiC;wBACjC,iCAAiC;AAClC,qBAAA;iBACF,CAAA;;;AC1BD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAOU,2BAA2B,CAAA;AAHxC,IAAA,WAAA,GAAA;AAIE;;AAEG;AACO,QAAA,IAAmB,CAAA,mBAAA,GAAW,eAAe,CAAC;AAExD;;AAEG;AACO,QAAA,IAAqB,CAAA,qBAAA,GAAW,WAAW,CAAC;AAEtD;;AAEG;AACO,QAAA,IAAkB,CAAA,kBAAA,GAAW,QAAQ,CAAC;KAajD;AAXC;;AAEG;AACH,IAAA,aAAa,CAAC,GAAmB,EAAA;AAC/B,QAAA,QACE,OAAO,GAAG,KAAK,QAAQ;AACvB,aAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC;AACjC,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EACpC;KACH;;wHA1BU,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,cAF1B,MAAM,EAAA,CAAA,CAAA;2FAEP,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAHvC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACVD;;;;AAIG;AAkBH;;AAEG;MAKU,oBAAoB,CAAA;IAC/B,WACY,CAAA,MAAc,EACd,OAAoC,EAAA;AADpC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACd,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAA6B;AAGhD;;;;AAIG;AACgB,QAAA,IAAS,CAAA,SAAA,GAAG,eAAe,CAAC;AAE/C;;;;AAIG;AACO,QAAA,IAAU,CAAA,UAAA,GAAe,EAAE,CAAC;KAdlC;IAuBJ,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7C;AAED,IAAA,IAAI,GAAG,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC;KACrD;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;AAC/C,SAAA;KACF;AAED;;AAEG;AACH,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;KAC7B;AAED;;AAEG;AACH,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;KACpC;AAED;;AAEG;AACH,IAAA,IAAI,QAAQ,GAAA;;QACV,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,SAAS,CAAC;KAC9C;AAED;;AAEG;AACO,IAAA,WAAW,CAAC,GAAmB,EAAA;AACvC,QAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAa,CAAC,CAAC;AAChD,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,UAAU,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;AACjC,SAAA;KACF;AAED;;;;;AAKG;IACO,QAAQ,CAAC,MAAc,EAAE,EAAA;;AACjC,QAAA,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC5D,QAAA,MAAM,GAAG,IAAI,CAAC,GAAG,CAAA,EAAA,GAAA,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,GAAG,EAAE,CAAC,CAAC;;AAGrD,QAAA,OAAO,EAAE,IAAI,EAAE,CAAC,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAJ,IAAI,GAAI,EAAE,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;KACtD;AAED;;AAEG;AACO,IAAA,cAAc,CAAC,GAAW,EAAA;AAClC,QAAA,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;KAC9C;;iHA7FU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAvC,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAwC,2BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,gLC7BjC,k0BAkCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAxC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDLa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,k0BAAA,EAAA,CAAA;sIAuBlB,GAAG,EAAA,CAAA;sBAAX,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,EAAE,EAAA,CAAA;sBAAV,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEtDR;;;;AAIG;MAYU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,iBAHb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CADzB,YAAY,EAAE,YAAY,aAE1B,oBAAoB,CAAA,EAAA,CAAA,CAAA;+GAEnB,iBAAiB,EAAA,OAAA,EAAA,CAJlB,YAAY,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIzB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;oBACrC,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC,CAAA;;;ACfD;;;;AAIG;;ACJH;;;;AAIG;AAgBH;;;;AAIG;MASU,oBAAoB,CAAA;AARjC,IAAA,WAAA,GAAA;AAeE;;;AAGG;AACM,QAAA,IAAG,CAAA,GAAA,GAAG,CAAC,CAAC;AAOjB;;;;AAIG;AACM,QAAA,IAAI,CAAA,IAAA,GAAG,CAAC,CAAC;AAElB;;;;AAIG;AACM,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAE3B;;;;;AAKG;AACqC,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;KAuD1D;IA9CwB,WAAW,GAAA;AAChC,QAAA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KAClC;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACnC,SAAS,CAAC,CAAC,KAAK,KACf,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CACvE,CAAC;KACL;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,GAAG,EAAE;AACZ,YAAA,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AACxB,SAAA;KACF;IAED,SAAS,GAAA;;;AAGP,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAC5B;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAC5B;AAED;;;;;;AAMG;AACK,IAAA,aAAa,CAAC,KAAa,EAAA;AACjC,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;AACxD,YAAA,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAClB,SAAA;QACD,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE;AAChC,YAAA,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAClB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;;iHA5FU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,+WCjCjC,muBA6BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gHAAA,EAAA,MAAA,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gHAAA,EAAA,MAAA,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAd,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDIa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBARhC,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,muBAAA,EAAA,CAAA;8BAYlB,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAMG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBAKG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBAOG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAOG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAQkC,QAAQ,EAAA,CAAA;sBAA/C,WAAW;uBAAC,gBAAgB,CAAA;;sBAAG,KAAK;gBAEX,KAAK,EAAA,CAAA;sBAA9B,SAAS;uBAAC,KAAK,CAAA;gBAOO,WAAW,EAAA,CAAA;sBAAjC,YAAY;uBAAC,OAAO,CAAA;;;AEhFvB;;;;AAIG;MAaU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAHb,oBAAoB,CADzB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAE7C,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAEnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAJlB,OAAA,EAAA,CAAA,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAI5C,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAAC;oBACxD,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC,CAAA;;;AChBD;;;;AAIG;;ACJH;;;;AAIG;MAaU,qBAAqB,CAAA;IAQhC,WAAoB,CAAA,QAAmB,EAAU,UAAsB,EAAA;AAAnD,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AAAU,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;KAAI;IAE3E,eAAe,GAAA;;AACb,QAAA,MAAM,WAAW,GACf,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;AAEnE,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;QAChD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC;QACnD,MAAM,YAAY,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC,YAAY,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,SAAS,CAAC;AAEnE,QAAA,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;AAClE,SAAA;AAED,QAAA,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;AACxE,SAAA;KACF;;kHAzBU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sGAArB,qBAAqB,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;iBAC7B,CAAA;yHAOU,cAAc,EAAA,CAAA;sBAAtB,KAAK;;;ACvBR;;;;AAIG;MAgBU,gBAAgB,CAAA;AAiB3B,IAAA,WAAA,GAAA;AACE,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAU,CAAC;KACjD;AAED,IAAA,QAAQ,CAAC,QAAgB,EAAA;AACvB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnC;AAED,IAAA,IAAI,aAAa,GAAA;;QACf,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,QACE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,CAAC,MAC/D,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,mCAAI,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,0CAAG,IAAI,CAAC,cAAc,CAAC,EAClD;AACH,SAAA;KACF;;6GAhCU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,qRCpB7B,6eAeA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAc,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,aAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,cAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,eAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,SAAA,EAAA,YAAA,EAAA,cAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,wBAAA,EAAA,UAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,YAAA,EAAA,UAAA,EAAA,UAAA,EAAA,sBAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,QAAA,EAAA,OAAA,EAAA,aAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArB,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8D,qBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDKa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;+BACE,YAAY,EAAA,eAAA,EAEL,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,6eAAA,EAAA,CAAA;0EAI/C,WAAW,EAAA,CAAA;sBADV,KAAK;gBAGN,YAAY,EAAA,CAAA;sBADX,KAAK;gBAGN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAGN,cAAc,EAAA,CAAA;sBADb,KAAK;gBAGN,WAAW,EAAA,CAAA;sBADV,KAAK;gBAGN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,MAAM;;;AElCT;;;;AAIG;MASU,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAHd,qBAAqB,CAAA,EAAA,OAAA,EAAA,CAC1B,qBAAqB,CAAA,EAAA,CAAA,CAAA;gHAEpB,kBAAkB,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAJ9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;iBACjC,CAAA;;;ACZD;;;;AAIG;MAqBU,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2GAAb,aAAa,EAAA,YAAA,EAAA,CAHT,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAN7B,YAAY;QACZ,cAAc;QACd,WAAW;QACX,kBAAkB;QAClB,UAAU,aAGF,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAEf,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YATtB,YAAY;QACZ,cAAc;QACd,WAAW;QACX,kBAAkB;QAClB,UAAU,CAAA,EAAA,CAAA,CAAA;2FAKD,aAAa,EAAA,UAAA,EAAA,CAAA;kBAXzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc;wBACd,WAAW;wBACX,kBAAkB;wBAClB,UAAU;AACX,qBAAA;oBACD,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;iBAC5B,CAAA;;;ACxBD;;;;AAIG;;ACJH;;;;AAIG;AAIU,MAAA,uBAAuB,GAAqB;AACvD,IAAA,UAAU,EAAE;AACV,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,MAAM,EAAE,IAAI;AACb,KAAA;;;ACZH;;;;AAIG;MAUmB,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iHAAhB,gBAAgB,EAAA,UAAA,EAHxB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;ACbD;;;;AAIG;;ACJH;;;;AAIG;AAaH;;;AAGG;AACS,IAAA,mBASX;AATD,CAAA,UAAY,kBAAkB,EAAA;AAC5B,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EATW,kBAAkB,KAAlB,kBAAkB,GAS7B,EAAA,CAAA,CAAA,CAAA;AAmEW,IAAA,6BAIX;AAJD,CAAA,UAAY,4BAA4B,EAAA;AACtC,IAAA,4BAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,4BAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,4BAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAJW,4BAA4B,KAA5B,4BAA4B,GAIvC,EAAA,CAAA,CAAA;;ACrGD;;;;AAIG;AAWH,MAAM,2BAA2B,GAAsB;AACrD,IAAA,UAAU,EAAE,CAAC;AACb,IAAA,SAAS,EAAE,KAAK;AAChB,IAAA,UAAU,EAAE,GAAG;AACf,IAAA,aAAa,EAAE,GAAG;AAClB,IAAA,SAAS,EAAE,GAAG;AACd,IAAA,QAAQ,EAAE,GAAG;CACd,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;AAuBG;MAIU,iBAAiB,CAAA;AAC5B,IAAA,WAAA,CAAsB,gBAAkC,EAAA;AAAlC,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;KAAI;AAE5D;;;;;;;;;AASG;IACH,QAAQ,CAAC,SAAiB,EAAE,OAAe,EAAA;QACzC,MAAM,KAAK,GAAqB,EAAE,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,IAAI,SAAS,GAAG,CAAC,EAAE;AAC/B,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAE9C,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;AAOG;AACO,IAAA,QAAQ,CAChB,KAAuB,EACvB,SAAiB,EACjB,OAAe,EAAA;QAEf,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACvD,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;AAC1D,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACxD,YAAA,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAI;gBACtC,KAAK,CAAC,IAAI,CAAC;oBACT,MAAM,EAAE,CAAC,GAAG,KAAK;oBACjB,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;oBAC5B,IAAI,EAAE,kBAAkB,CAAC,IAAI;AAC9B,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;;;;;AAOG;IACO,OAAO,CAAC,KAAuB,EAAE,SAAiB,EAAA;AAC1D,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACxB,OAAO;AACR,SAAA;QAED,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;AAChD,QAAA,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;KACxD;AAED;;AAEG;AACO,IAAA,iBAAiB,CAAC,KAAuB,EAAA;QACjD,MAAM,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACxC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC/C,QAAA,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,GAAG,SAAS,EAAE;AAChE,YAAA,MAAM,KAAK,GACT,CAAC,IAAI,CAAC,MAAM,CAAC,6BAA6B;AAC1C,gBAAA,eAAe,KAAK,SAAS,GAAG,CAAC,CAAC;AACpC,YAAA,MAAM,aAAa,GACjB,IAAI,CAAC,MAAM,CAAC,QAAQ;gBACpB,IAAI,CAAC,MAAM,CAAC,6BAA6B;gBACzC,SAAS,KAAK,CAAC,CAAC;YAClB,MAAM,IAAI,GAAG,KAAK;kBACd,kBAAkB,CAAC,GAAG;AACxB,kBAAE,aAAa;sBACb,kBAAkB,CAAC,KAAK;AAC1B,sBAAE,kBAAkB,CAAC,IAAI,CAAC;YAC5B,OAAO;gBACL,MAAM,CAAC,MAAM,CACX;AACE,oBAAA,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;oBAC5D,IAAI;AACL,iBAAA,EACD,KAAK,GAAG,IAAI,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,CACrC;aACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;KACF;AAED;;AAEG;IACO,gBAAgB,CAAC,KAAuB,EAAE,SAAiB,EAAA;AACnE,QAAA,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;AAClD,QAAA,MAAM,cAAc,GAAG,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,SAAS,CAAC;AAC/D,QAAA,MAAM,IAAI,GAAG,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3D,QAAA,IAAI,cAAc,IAAI,cAAc,IAAI,IAAI,EAAE;AAC5C,YAAA,MAAM,aAAa,GACjB,IAAI,CAAC,MAAM,CAAC,OAAO;gBACnB,IAAI,CAAC,MAAM,CAAC,6BAA6B;gBACzC,cAAc,KAAK,IAAI,CAAC;YAC1B,MAAM,KAAK,GACT,cAAc;gBACd,SAAS;AACP,oBAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,6BAA6B,CAAC;AACjD,oBAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAEhC,MAAM,IAAI,GAAG,KAAK;kBACd,kBAAkB,CAAC,GAAG;AACxB,kBAAE,aAAa;sBACb,kBAAkB,CAAC,IAAI;AACzB,sBAAE,kBAAkB,CAAC,IAAI,CAAC;YAC5B,OAAO;gBACL,MAAM,CAAC,MAAM,CACX;AACE,oBAAA,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;oBACjE,IAAI;AACL,iBAAA,EACD,KAAK,GAAG,IAAI,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE,CAC1C;aACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;KACF;AAED;;;;;;AAMG;IACO,YAAY,CAAC,KAAuB,EAAE,SAAiB,EAAA;AAC/D,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACjD,KAAK,CAAC,OAAO,CAAC;AACZ,gBAAA,MAAM,EAAE,CAAC;AACT,gBAAA,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,kBAAkB,CAAC,KAAK;AAC/B,aAAA,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,IACE,IAAI,CAAC,MAAM,CAAC,OAAO;AACnB,YAAA,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,EAChD;YACA,KAAK,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,SAAS,GAAG,CAAC;AACrB,gBAAA,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC;gBACxB,IAAI,EAAE,kBAAkB,CAAC,IAAI;AAC9B,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;;;;;;;;;;;;AAcG;AACO,IAAA,aAAa,CACrB,KAAuB,EACvB,SAAiB,EACjB,OAAe,EAAA;QAEf,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACrD,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC3C,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,4BAA4B,CAAC,KAAK,EAAE;AACtD,YAAA,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC;AACzB,YAAA,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;AACtB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,GAAG,KAAK,4BAA4B,CAAC,MAAM,EAAE;gBAC/C,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC;AACpC,aAAA;AACD,YAAA,IAAI,GAAG,KAAK,4BAA4B,CAAC,KAAK,EAAE;gBAC9C,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC;AACjC,aAAA;AACF,SAAA;KACF;AAED;;AAEG;AACO,IAAA,cAAc,CAAC,OAAe,EAAA;QACtC,MAAM,IAAI,GAAG,EAAE,CAAC;AAEhB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACxB,MAAM,KAAK,GAAG,MAAK;gBACjB,OAAO,MAAM,CAAC,MAAM,CAClB;AACE,oBAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBAC7B,IAAI,EAAE,kBAAkB,CAAC,KAAK;AAC/B,iBAAA,EACD,OAAO,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CACnC,CAAC;AACJ,aAAC,CAAC;AACF,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACpB,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC3B,MAAM,QAAQ,GAAG,MAAK;gBACpB,OAAO,MAAM,CAAC,MAAM,CAClB;AACE,oBAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;oBAChC,IAAI,EAAE,kBAAkB,CAAC,QAAQ;AAClC,iBAAA,EACD,OAAO,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CAC7C,CAAC;AACJ,aAAC,CAAC;AACF,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACvB,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;AAEG;IACO,aAAa,CACrB,SAAiB,EACjB,OAAe,EAAA;QAEf,MAAM,IAAI,GAAG,EAAE,CAAC;AAEhB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACvB,MAAM,IAAI,GAAG,MAAK;gBAChB,OAAO,MAAM,CAAC,MAAM,CAClB;AACE,oBAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBAC5B,IAAI,EAAE,kBAAkB,CAAC,IAAI;iBAC9B,EACD,OAAO,GAAG,SAAS,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CACzD,CAAC;AACJ,aAAC,CAAC;AACF,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AACnB,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACtB,MAAM,GAAG,GAAG,MAAK;gBACf,OAAO,MAAM,CAAC,MAAM,CAClB;AACE,oBAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;oBAC3B,IAAI,EAAE,kBAAkB,CAAC,GAAG;iBAC7B,EACD,OAAO,GAAG,SAAS,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS,GAAG,CAAC,EAAE,GAAG,IAAI,CAC3D,CAAC;AACJ,aAAC,CAAC;AACF,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAClB,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AACD;;;;;;;AAOG;IACO,eAAe,CAAC,SAAiB,EAAE,OAAe,EAAA;AAC1D,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE;YACxC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;;YAEzC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;AAGpC,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,CAAC;;AAE9C,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;;YAGpD,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACrC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;;;;;;;;;;;;;;;;;;AAqBG;AACH,IAAA,IAAc,MAAM,GAAA;AAClB,QAAA,OAAO,MAAM,CAAC,MAAM,CAClB,2BAA2B,EAC3B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CACjC,CAAC;KACH;;8GAnUU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AClDD;;;;AAIG;AAcH;;;;AAIG;MAMU,mBAAmB,CAAA;AAc9B,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IACD,IAAa,UAAU,CAAC,KAAkC,EAAA;AACxD,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,YAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACpB,SAAA;KACF;IAMD,WACU,CAAA,iBAAoC,EACpC,cAA8B,EAAA;AAD9B,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;;AA5B/B,QAAA,IAAS,CAAA,SAAA,GAAW,GAAG,CAAC;AAsBvB,QAAA,IAAA,CAAA,aAAa,GAAyB,IAAI,YAAY,EAAU,CAAC;AAE3E,QAAA,IAAK,CAAA,KAAA,GAAqB,EAAE,CAAC;KAKzB;AAEM,IAAA,MAAM,CAAC,UAA2B,EAAA;;QAC1C,IAAI,CAAC,UAAU,EAAE;YACf,OAAO;AACR,SAAA;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC1C,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAC,EAC1B,CAAA,EAAA,GAAA,UAAU,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAC,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;IACH,YAAY,CAAC,KAAc,EAAE,IAAyB,EAAA;;AAEpD,QAAA,IAAI,GAAG,IAAI,KAAK,kBAAkB,CAAC,KAAK,GAAG,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC;AAC3E,QAAA,IAAI,GAAG,IAAI,KAAK,kBAAkB,CAAC,GAAG,GAAG,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;AACxE,QAAA,OAAO,IAAI,KAAK,kBAAkB,CAAC,IAAI;AACrC,cAAE,CAAA,EAAG,IAAI,CAAA,CAAA,EAAI,KAAK,CAAE,CAAA;cAClB,GAAG,IAAI,CAAA,CAAA,EAAI,kBAAkB,CAAC,IAAI,EAAE,CAAC;KAC1C;AAED;;;;;AAKG;AACH,IAAA,SAAS,CAAC,IAAoB,EAAA;AAC5B,QAAA,QACE,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,IAAI;YACrC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAC3C;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,UAAU,CAAC,IAAoB,EAAA;AAC7B,QAAA,QACE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAC3C;KACH;AAED,IAAA,cAAc,CAAC,IAAoB,EAAA;AACjC,QAAA,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAC/B,EAAE,EACF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CACzC,CAAC;QACF,IACE,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,MAAM,KAAK,SAAS;AACzB,YAAA,IAAI,CAAC,UAAU,CAAC,UAAU,KAAK,SAAS;AACxC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;AACxC,YAAA,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACrB;YACA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5C,SAAA;;;QAGD,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;AACrD,YAAA,OAAO,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACrC,SAAA;AACD,QAAA,OAAO,WAAW,CAAC;KACpB;AAED,IAAA,UAAU,CAAC,IAAoB,EAAA;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACtC;;gHAhHU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA1D,IAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,sNC5BhC,6XAaA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDea,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,eAAe,EAAA,eAAA,EAER,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,6XAAA,EAAA,CAAA;oIAItC,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAGG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAMG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAMO,UAAU,EAAA,CAAA;sBAAtB,KAAK;gBAOI,aAAa,EAAA,CAAA;sBAAtB,MAAM;;;AEpDT;;;;AAIG;MAeU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,iBAHZ,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAFxB,YAAY,EAAE,YAAY,aAG1B,mBAAmB,CAAA,EAAA,CAAA,CAAA;8GAElB,gBAAgB,EAAA,SAAA,EAJhB,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,CAAC,EAAA,OAAA,EAAA,CADhD,YAAY,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAKzB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAN5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;AACrC,oBAAA,SAAS,EAAE,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,CAAC;oBAC1D,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;AClBD;;;;AAIG;;ACJH;;;;AAIG;MAUU,cAAc,CAAA;AAGzB,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IACD,IAAa,UAAU,CAAC,eAA4C,EAAA;AAClE,QAAA,IAAI,CAAC,WAAW,GAAG,eAAe,aAAf,eAAe,KAAA,KAAA,CAAA,GAAf,eAAe,GAAI,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;KAC3D;AAED;;AAEK;AACL,IAAA,IAAI,WAAW,GAAA;;QACb,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;KAC1C;AAED,IAAA,IAAI,QAAQ,GAAA;;QACV,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;KACvC;AAED,IAAA,IAAI,YAAY,GAAA;;QACd,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;KAC3C;AAED,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;KAC7C;AAED,IAAA,IAAI,MAAM,GAAA;AACR,QAAA,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC;AACxD,QAAA,OAAO,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;KACpE;;2GAhCU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,sFCd3B,oSAQA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAc,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAd,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDMa,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,SAAS;+BACE,UAAU,EAAA,eAAA,EAEH,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,oSAAA,EAAA,CAAA;8BAQlC,UAAU,EAAA,CAAA;sBAAtB,KAAK;;;AEpBR;;;;AAIG;MAaU,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAX,WAAW,EAAA,YAAA,EAAA,CAHP,cAAc,CADnB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,WAAW,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAErC,cAAc,CAAA,EAAA,CAAA,CAAA;AAEb,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EAJZ,OAAA,EAAA,CAAA,YAAY,EAAE,WAAW,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAIpC,WAAW,EAAA,UAAA,EAAA,CAAA;kBALvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,CAAC;oBAChD,YAAY,EAAE,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;iBAC1B,CAAA;;;AChBD;;;;AAIG;;ACJH;;;;AAIG;MA0BU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,YAX7B,YAAY;QACZ,cAAc;QACd,WAAW;QACX,mBAAmB;QACnB,UAAU;QACV,gBAAgB;QAChB,aAAa;AACb,QAAA,WAAW,CAEH,EAAA,OAAA,EAAA,CAAA,gBAAgB,EAAE,mBAAmB,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;AAEpD,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,YAX7B,YAAY;QACZ,cAAc;QACd,WAAW;QACX,mBAAmB;QACnB,UAAU;QACV,gBAAgB;QAChB,aAAa;QACb,WAAW,CAAA,EAAA,CAAA,CAAA;2FAIF,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAbhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc;wBACd,WAAW;wBACX,mBAAmB;wBACnB,UAAU;wBACV,gBAAgB;wBAChB,aAAa;wBACb,WAAW;AACZ,qBAAA;AACD,oBAAA,OAAO,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,cAAc,CAAC;iBACjE,CAAA;;;AC7BD;;;;AAIG;;ACJH;;;;AAIG;AAMH;;;AAGG;MAKmB,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;4GAAX,WAAW,EAAA,UAAA,EAHnB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,WAAW,EAAA,UAAA,EAAA,CAAA;kBAJhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;ACjBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAOU,uBAAuB,CAAA;AAgBlC,IAAA,WAAA,GAAA;AAdA,QAAA,IAAS,CAAA,SAAA,GAAW,EAAE,CAAC;AAGvB,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;AAGnB,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;AAG1B,QAAA,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;AAGzB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAQ,CAAC;;KAIrC;;oHAlBU,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,+LCXpC,6ZAcA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAc,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAd,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDHa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAJnC,SAAS;+BACE,oBAAoB,EAAA,QAAA,EAAA,6ZAAA,EAAA,CAAA;0EAK9B,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIN,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,MAAM;;;AExBT;;;;AAIG;MAaU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,iBAHhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAD5B,YAAY,EAAE,UAAU,aAExB,uBAAuB,CAAA,EAAA,CAAA,CAAA;kHAEtB,oBAAoB,EAAA,OAAA,EAAA,CAJrB,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAIvB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;oBACnC,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC,CAAA;;;AChBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAOH;;;AAGG;MAEU,gBAAgB,CAAA;AAD7B,IAAA,WAAA,GAAA;AAEE;;;AAGG;AACH,QAAA,IAAe,CAAA,eAAA,GAAG,IAAI,CAAC;AAEb,QAAA,IAAc,CAAA,cAAA,GAAG,CAAC,CAAC;QAEnB,IAAA,CAAA,OAAO,GAAG,IAAI,eAAe,CAAmB,EAAE,CAAC,CAAC;KA6J/D;AA3JC;;;;AAIG;IACH,GAAG,CAAC,QAAgB,EAAE,YAA6B,EAAA;QACjD,MAAM,KAAK,iBACN,EAAE,MAAM,EAAE,QAAQ,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,EACzD,YAAY,CAChB,CAAC;AACF,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AACzB,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,eAAe,CAAC,cAAsB,EAAA;AACpC,QAAA,IAAI,cAAc,KAAK,IAAI,CAAC,cAAc,EAAE;AAC1C,YAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;KACF;AAED;;;AAGG;IACH,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CACtB,GAAG,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EACrC,oBAAoB,EAAE,CACvB,CAAC;KACH;AAED;;AAEG;AACH,IAAA,YAAY,CAAC,QAAgB,EAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CACtB,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC;;AAE/B,QAAA,MAAM,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAChC,CAAC;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,MAAM,CAAC,QAAgB,EAAA;QACrB,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;QAClD,IAAI,cAAc,IAAI,QAAQ,EAAE;AAC9B,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC5B,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;KAC/B;AAED;;;;;;;;;AASG;IACH,MAAM,CAAC,QAAgB,EAAE,SAAmB,EAAA;;AAE1C,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AACzB,YAAA,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,SAAS,KAAA,IAAA,IAAT,SAAS,KAAT,KAAA,CAAA,GAAA,SAAS,GAAI,KAAK,EAAE,CAAC,CAAC;AACpD,SAAA;;;AAID,QAAA,IACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AACpB,YAAA,SAAS,KAAK,SAAS;YACvB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,EAC5B;AACA,YAAA,QAAQ,EAAE,CAAC;AACZ,SAAA;QAED,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,KAAK,IAAI,CAAC,CAAC;KAChD;AAED;;AAEG;IACO,WAAW,CAAC,QAAiB,EAAE,IAAc,EAAA;QACrD,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,IAAI,KAAK,SAAS,IAAI,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;AACrD,YAAA,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;AAC/B,SAAA;AACD,QAAA,IAAI,WAAW,GACb,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAE5E,QAAA,IAAI,WAAW,KAAK,KAAK,CAAC,MAAM,EAAE;AAChC,YAAA,IAAI,QAAQ,EAAE;;;AAGZ,gBAAA,WAAW,GAAG,QAAQ,GAAG,CAAC,CAAC;AAC5B,aAAA;AAAM,iBAAA;AACL,gBAAA,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAChC,aAAA;AACF,SAAA;QAED,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,KAAI;AAC1B,YAAA,IAAI,IAAI,IAAI,GAAG,KAAK,QAAQ,EAAE;;AAE5B,gBAAA,IAAI,CAAC,MAAM;AACT,oBAAA,GAAG,GAAG,WAAW,IAAI,GAAG,GAAG,WAAW,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AACtE,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;AAED;;AAEG;AACO,IAAA,SAAS,CAAC,KAAuB,EAAA;;AAEzC,QAAA,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACjB,aAAA,OAAO,EAAE;aACT,SAAS,CAAC,CAAC,IAAoB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AACjD,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;AAEG;AACH,IAAA,IAAc,KAAK,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC3B;;6GArKU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iHAAhB,gBAAgB,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;;;ACfX;;;;AAIG;AAeH;;;;;;;;;;;;;;;;;;;;;AAqBG;MAOU,kBAAkB,CAAA;AAG7B;;;;;AAKG;IACH,IACI,QAAQ,CAAC,IAAa,EAAA;AACxB,QAAA,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC;KAC1C;AAWD,IAAA,WAAA,CACY,YAA8B,EAC9B,iBAAoC,EACpC,UAAsB,EAAA;AAFtB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAkB;AAC9B,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AAzB1B,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAa1C;;;;AAIG;AAGH,QAAA,IAAe,CAAA,eAAA,GAAG,CAAC,CAAC;KAMhB;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,YAAY;AACd,aAAA,aAAa,EAAE;AACf,aAAA,SAAS,CACR,CAAC,WAAmB,MAAM,IAAI,CAAC,eAAe,GAAG,WAAW,GAAG,CAAC,CAAC,CAClE,CACJ,CAAC;AACF,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,SAAS,CAAC,MAAK;YAChD,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACxD,CAAC,CACH,CAAC;KACH;AAED;;;AAGG;AACH,IAAA,IAAc,cAAc,GAAA;AAC1B,QAAA,OAAO,MAAM,CACX,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,gBAAgB,CAC9D,gBAAgB,CACjB,CACF,CAAC;KACH;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;+GA1DU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA2D,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,EAFlB,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,wBAAA,EAAA,sBAAA,EAAA,kBAAA,EAAA,sBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CAAC,gBAAgB,CAAC,0BC7C/B,6BACA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD8Ca,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAN9B,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,eAAe,mBAER,uBAAuB,CAAC,MAAM,EACpC,SAAA,EAAA,CAAC,gBAAgB,CAAC,EAAA,QAAA,EAAA,6BAAA,EAAA,CAAA;0JAYzB,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAYN,eAAe,EAAA,CAAA;sBAFd,WAAW;uBAAC,wBAAwB,CAAA;;sBACpC,WAAW;uBAAC,kBAAkB,CAAA;;;AEnEjC;;;;AAIG;AAkBH;;;;;;;;AAQG;MAMU,aAAa,CAAA;AAaxB;;;;;AAKG;IACH,IACI,MAAM,CAAC,MAAe,EAAA;AACxB,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KACrD;AAUD,IAAA,WAAA,CACY,YAA8B,EAC9B,UAAsB,EACtB,EAAqB,EAAA;AAFrB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAkB;AAC9B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;AA5BjC;;AAEG;AAC8B,QAAA,IAAW,CAAA,WAAA,GAAwB,IAAI,CAAC;AAczE;;AAEG;AAEH,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAQ9B;IAEJ,QAAQ,GAAA;AACN,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;AAEjD,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY;AAClC,aAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;;aAE/B,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACxE,aAAA,SAAS,CAAC,CAAC,IAAI,KAAI;YAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,YAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;KACN;AAED;;;;AAIG;AACH,IAAA,MAAM,CAAC,KAAe,EAAA;QACpB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;KACpD;AAED;;;;AAIG;AACH,IAAA,IAAc,YAAY,GAAA;QACxB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;AAC3D,SAAA;AACD,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC9B;AAED;;;AAGG;AACH,IAAA,IAAc,QAAQ,GAAA;QACpB,MAAM,QAAQ,GAAW,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;aACrE,gBAAgB,CAAC,0BAA0B,CAAC;AAC5C,aAAA,IAAI,EAAE,CAAC;QAEV,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;AAC/B,YAAA,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,SAAA;aAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACrC,YAAA,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC9C,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,GAAG,CAAC;AACZ,SAAA;KACF;AAED;;;AAGG;IACH,WAAW,GAAA;;QACT,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC5C,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;KAClC;;0GAtGU,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aAAa,+RCpC1B,6BACA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDmCa,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,SAAS;+BACE,SAAS,EAAA,eAAA,EAEF,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,6BAAA,EAAA,CAAA;6JAQ/C,QAAQ,EAAA,CAAA;sBAHP,KAAK;;sBACL,WAAW;uBAAC,eAAe,CAAA;;sBAC3B,WAAW;uBAAC,0BAA0B,CAAA;gBAMN,WAAW,EAAA,CAAA;sBAA3C,WAAW;uBAAC,kBAAkB,CAAA;gBAS3B,MAAM,EAAA,CAAA;sBADT,KAAK;gBAUN,YAAY,EAAA,CAAA;sBADX,MAAM;;;AEhET;;;;AAIG;AAQH;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;MAOU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAJX,kBAAkB,EAAE,aAAa,CAAA,EAAA,OAAA,EAAA,CACtC,YAAY,EAAE,YAAY,CAAA,EAAA,OAAA,EAAA,CAC1B,kBAAkB,EAAE,aAAa,CAAA,EAAA,CAAA,CAAA;6GAEhC,eAAe,EAAA,OAAA,EAAA,CAHhB,YAAY,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAGzB,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,kBAAkB,EAAE,aAAa,CAAC;AACjD,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;AACrC,oBAAA,OAAO,EAAE,CAAC,kBAAkB,EAAE,aAAa,CAAC;iBAC7C,CAAA;;;AC7CD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAeU,sBAAsB,CAAA;AAMjC,IAAA,WAAA,CAAsB,oBAA0C,EAAA;AAA1C,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AALhE,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AAGtB,QAAA,IAAW,CAAA,WAAA,GAA6B,iBAAiB,CAAC;KAEU;IAEpE,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC;KAClD;IAED,KAAK,CAAC,IAAuB,EAAE,KAAa,EAAA;QAC1C,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC/C;;mHAdU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,yDCnBnC,qqEA8EA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA3D,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkC,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAlC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD3Da,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAJlC,SAAS;+BACE,mBAAmB,EAAA,QAAA,EAAA,qqEAAA,EAAA,CAAA;;;AEhB/B;;;;AAIG;MAaU,4BAA4B,CAAA;;yHAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0HAA5B,4BAA4B,EAAA,YAAA,EAAA,CAHxB,sBAAsB,CAD3B,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAEpC,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAErB,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,EAJ7B,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAInC,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBALxC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC;oBAC/C,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC,CAAA;;;AChBD;;;;AAIG;;ACJH;;;;AAIG;MASU,gBAAgB,CAAA;AA8B3B,IAAA,WAAA,GAAA;AAhBA,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAGjB,QAAA,IAAoB,CAAA,oBAAA,GAAG,IAAI,CAAC;AAM5B,QAAA,IAAA,CAAA,YAAY,GAAuB,IAAI,YAAY,EAAE,CAAC;AAGtD,QAAA,IAAA,CAAA,YAAY,GAAuB,IAAI,YAAY,EAAE,CAAC;AAEtD,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;;KAIrB;AAED,IAAA,IAAI,uBAAuB,GAAA;QACzB,OAAO;AACL,YAAA,oBAAoB,EAClB,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,qBAAqB;AACvD,YAAA,iBAAiB,EAAE,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,aAAa;AAChE,YAAA,oBAAoB,EAAE,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,gBAAgB;AACtE,YAAA,mBAAmB,EAAE,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,cAAc;SACpE,CAAC;KACH;AAED,IAAA,IAAI,WAAW,GAAA;QACb,QAAQ,IAAI,CAAC,IAAI;YACf,KAAK,iBAAiB,CAAC,gBAAgB;gBACrC,OAAO,SAAS,CAAC,OAAO,CAAC;YAC3B,KAAK,iBAAiB,CAAC,cAAc;gBACnC,OAAO,SAAS,CAAC,KAAK,CAAC;YACzB,KAAK,iBAAiB,CAAC,aAAa;gBAClC,OAAO,SAAS,CAAC,IAAI,CAAC;AACxB,YAAA;gBACE,OAAO,SAAS,CAAC,OAAO,CAAC;AAC5B,SAAA;KACF;;6GAvDU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,yVCb7B,2qDAuDA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA6D,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA7D,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkC,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD1Ca,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,SAAS;+BACE,YAAY,EAAA,QAAA,EAAA,2qDAAA,EAAA,CAAA;0EAKtB,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,gBAAgB,EAAA,CAAA;sBADf,KAAK;gBAIN,mBAAmB,EAAA,CAAA;sBADlB,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,oBAAoB,EAAA,CAAA;sBADnB,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,YAAY,EAAA,CAAA;sBADX,MAAM;gBAIP,YAAY,EAAA,CAAA;sBADX,MAAM;;;AEtCT;;;;AAIG;MAcU,sBAAsB,CAAA;;mHAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oHAAtB,sBAAsB,EAAA,YAAA,EAAA,CAHlB,gBAAgB,CAAA,EAAA,OAAA,EAAA,CADrB,eAAe,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAErD,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAEf,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,YAJvB,eAAe,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAIpD,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC;oBAChE,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;iBAC5B,CAAA;;;ACjBD;;;;AAIG;;ACJH;;;;AAIG;MAUU,mBAAmB,CAAA;AAI9B,IAAA,WAAA,GAAA;;KAEC;;gHANU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,2FCdhC,gXAYA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArB,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDEa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,eAAe,EAAA,eAAA,EAER,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gXAAA,EAAA,CAAA;0EAI/C,UAAU,EAAA,CAAA;sBADT,KAAK;;;AEfR;;;;AAIG;MAWU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAHZ,YAAA,EAAA,CAAA,mBAAmB,CADxB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAElB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAJjB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;ACdD;;;;AAIG;;ACJH;;;;AAIG;AAES,IAAA,gBAGX;AAHD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHW,eAAe,KAAf,eAAe,GAG1B,EAAA,CAAA,CAAA;;ACTD;;;;AAIG;AAgBH,MAAM,MAAM,GAA8B;IACxC,CAAC,mBAAmB,GAAG,UAAU;IACjC,CAAC,mBAAmB,GAAG,UAAU;CAClC,CAAC;MAGW,2BAA2B,CAAA;AACtC,IAAA,WAAA,CAEY,aAAgE,EAClE,iBAAoC,EAClC,QAAkB,EAAA;AAFlB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAmD;AAClE,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AAClC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAC1B;AAEJ,IAAA,QAAQ,CAAC,OAAyB,EAAA;AAChC,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,SAAS,CAAC,CAAC,OAAyB,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAC1D,SAAS,CAAC,CAAC,KAAK,KACd,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAC3B,SAAS,CAAC,CAAC,GAAG,KAAI;YAChB,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,YAAA,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AACxB,gBAAA,SAAS,CAAC,IAAI,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACT,IAAI,CAAA,EAAA,EACP,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,IACrC,CAAC;AACJ,aAAA;AACD,YAAA,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;AACvB,SAAC,CAAC,CACH,CACF,CACF,CAAC;KACH;AAED,IAAA,aAAa,CAAC,OAAyB,EAAA;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,SAAS,CAAC,CAAC,OAAyB,KAAK,OAAO,CAAC,SAAS,EAAE,CAAC,CAC9D,CAAC;KACH;AAED,IAAA,QAAQ,CAAC,OAAyB,EAAA;AAChC,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,GAAG,CAAC,CAAC,GAAG,KAAI;AACV,YAAA,IAAI,GAAG,EAAE;AACP,gBAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,aAAA;SACF,CAAC,CACH,CAAC;KACH;IAED,SAAS,CAAC,KAAa,EAAE,OAAyB,EAAA;AAChD,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;AACrB,aAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,aAAA,SAAS,CAAC,CAAC,OAAO,KAAI;AACrB,YAAA,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC3B,SAAC,CAAC,CAAC;KACN;AAES,IAAA,UAAU,CAClB,OAAyB,EAAA;AAEzB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,GAAG,CAAC,CAAC,GAAuB,KAC1B,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,SAAS,CAC/C,EACD,MAAM,CAAC,cAAc,CAAC,CACvB,CAAC;KACH;AAES,IAAA,UAAU,CAClB,OAAyB,EAAA;AAEzB,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,OAAO,KAAK,eAAe,CAAC,QAAQ,EAAE;AACxC,gBAAA,OAAO,EAAE,CAAC,mBAAmB,CAAC,CAAC;AAChC,aAAA;AAAM,iBAAA,IAAI,OAAO,KAAK,eAAe,CAAC,QAAQ,EAAE;AAC/C,gBAAA,OAAO,EAAE,CAAC,mBAAmB,CAAC,CAAC;AAChC,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;AACpB,aAAA;AACF,SAAA;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC7B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAClC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,EAC3B,GAAG,CAAC,CAAC,GAAG,KAAI;AACV,gBAAA,QAAQ,GAAG;AACT,oBAAA,KAAK,UAAU;AACb,wBAAA,OAAO,mBAAmB,CAAC;AAC7B,oBAAA,KAAK,UAAU;AACb,wBAAA,OAAO,mBAAmB,CAAC;AAC7B,oBAAA;AACE,wBAAA,OAAO,GAAG,CAAC;AACd,iBAAA;aACF,CAAC,CACH,CAAC;AACH,SAAA;AACD,QAAA,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;KACtB;AAES,IAAA,kBAAkB,CAAC,OAAe,EAAA;AAC1C,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CACtB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAC/B,SAAS,CACV,CAAC;KACH;IAES,cAAc,CAAC,IAAS,EAAE,OAAgB,EAAA;AAClD,QAAA,QAAQ,OAAO;AACb,YAAA,KAAK,mBAAmB;gBACtB,OAAO,IAAI,CAAC,UAAU,CAAC;AACzB,YAAA,KAAK,mBAAmB;gBACtB,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;AAC1C,YAAA;gBACE,OAAO,IAAI,CAAC,OAAO,CAAC;AACvB,SAAA;KACF;;wHA5GU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAS,gBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;4HAA3B,2BAA2B,EAAA,CAAA,CAAA;2FAA3B,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBADvC,UAAU;;;8BAGN,QAAQ;;;;AC5Bb;;;;AAIG;MAcU,4BAA4B,CAAA;AASvC,IAAA,WAAA,CAAoB,gBAA6C,EAAA;AAA7C,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAA6B;AAPjE,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;KAO+C;AAErE,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACrD;AAED,IAAA,IAAI,WAAW,GAAA;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC1D;IAED,IAAI,MAAM,CAAC,KAAa,EAAA;QACtB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACtD;AAED,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACrD;;yHAzBU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA8D,2BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,4BAA4B,gGClBzC,+cAaA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA9D,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkC,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAlC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDKa,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBALxC,SAAS;+BACE,0BAA0B,EAAA,eAAA,EAEnB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,+cAAA,EAAA,CAAA;+GAStC,OAAO,EAAA,CAAA;sBAAf,KAAK;;;AEzBR;;;;AAIG;MAiBU,yBAAyB,CAAA;AAZtC,IAAA,WAAA,GAAA;AAaW,QAAA,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;KAC5C;;sHAFY,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,yBAAyB,EAV1B,QAAA,EAAA,+BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;AAOT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+D,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FAGU,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAZrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,+BAA+B;AACzC,oBAAA,QAAQ,EAAE,CAAA;;;;;;;AAOT,EAAA,CAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,CAAA;;;ACpBD;;;;AAIG;MA0CU,yBAAyB,CAAA;;sHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EAHrB,YAAA,EAAA,CAAA,4BAA4B,EAAE,yBAAyB,aArB5D,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,UAAU,CAsBzD,EAAA,OAAA,EAAA,CAAA,4BAA4B,EAAE,yBAAyB,CAAA,EAAA,CAAA,CAAA;AAEtD,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EAvBzB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,uBAAuB,EAAE;AACvB,oBAAA,SAAS,EAAE,4BAA4B;AACvC,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,2BAA2B;AACpC,4BAAA,QAAQ,EAAE,2BAA2B;AACrC,4BAAA,IAAI,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,QAAQ,CAAC;AACtD,yBAAA;AACF,qBAAA;AACF,iBAAA;AACD,gBAAA,yBAAyB,EAAE;AACzB,oBAAA,SAAS,EAAE,yBAAyB;AACrC,iBAAA;AACF,aAAA;SACF,CAAC;QACF,2BAA2B;AAC5B,KAAA,EAAA,OAAA,EAAA,CApBS,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAwBxD,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAzBrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,UAAU,CAAC;AACpE,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,uBAAuB,EAAE;AACvB,oCAAA,SAAS,EAAE,4BAA4B;AACvC,oCAAA,SAAS,EAAE;AACT,wCAAA;AACE,4CAAA,OAAO,EAAE,2BAA2B;AACpC,4CAAA,QAAQ,EAAE,2BAA2B;AACrC,4CAAA,IAAI,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,QAAQ,CAAC;AACtD,yCAAA;AACF,qCAAA;AACF,iCAAA;AACD,gCAAA,yBAAyB,EAAE;AACzB,oCAAA,SAAS,EAAE,yBAAyB;AACrC,iCAAA;AACF,6BAAA;yBACF,CAAC;wBACF,2BAA2B;AAC5B,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,4BAA4B,EAAE,yBAAyB,CAAC;AACvE,oBAAA,OAAO,EAAE,CAAC,4BAA4B,EAAE,yBAAyB,CAAC;iBACnE,CAAA;;;AC7CD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAaH;;;AAGG;MAMU,mBAAmB,CAAA;AALhC,IAAA,WAAA,GAAA;AAMY,QAAA,IAAW,CAAA,WAAA,GAAG,CAAC,CAAC;AAE1B,QAAA,IAAA,CAAA,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAEtB;;;;;AAKG;AACoC,QAAA,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;AAEvD;;;;AAIG;AAGH,QAAA,IAAA,CAAA,MAAM,GAAW,IAAI,CAAC,WAAW,CAAC;AAElC;;AAEG;;AAEO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAU,CAAC;KAyB/C;AAvBC,IAAA,OAAO,CAAC,KAAa,EAAA;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IAGD,KAAK,GAAA;;QACH,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;AACR,SAAA;QACD,IAAI,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;KACrC;AAED,IAAA,QAAQ,CAAC,MAAc,EAAA;QACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;AAC1B,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1B;;gHAlDU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,+QC1BhC,gVAWA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAjD,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkD,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAvE,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDea,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,gBAAgB,EAAA,eAAA,EAET,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gVAAA,EAAA,CAAA;8BAaR,QAAQ,EAAA,CAAA;sBAA9C,KAAK;;sBAAI,WAAW;uBAAC,eAAe,CAAA;gBASrC,MAAM,EAAA,CAAA;sBAFL,KAAK;;sBACL,WAAW;uBAAC,mBAAmB,CAAA;gBAOtB,MAAM,EAAA,CAAA;sBAAf,MAAM;gBAUP,KAAK,EAAA,CAAA;sBADJ,YAAY;uBAAC,UAAU,CAAA;;;AE7D1B;;;;AAIG;MAaU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAHZ,mBAAmB,CADxB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAEpC,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAElB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAJjB,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAInC,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC;oBAC/C,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;AChBD;;;;AAIG;;ACJH;;;;AAIG;MAWU,sBAAsB,CAAA;AACjC,IAAA,WAAA,CAAsB,MAAmD,EAAA;AAAnD,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAA6C;KAAI;AAE7E,IAAA,IACI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;AAED,IAAA,IAAc,KAAK,GAAA;;AACjB,QAAA,OAAO,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;KAC7B;AAED,IAAA,IAAc,KAAK,GAAA;;QACjB,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC;KACrC;;mHAdU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAwE,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,gHAHvB,CAAA,WAAA,CAAa,EAAA,QAAA,EAAA,IAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FAGZ,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,QAAQ,EAAE,CAAa,WAAA,CAAA;oBACvB,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,CAAA;qGAKK,KAAK,EAAA,CAAA;sBADR,WAAW;uBAAC,YAAY,CAAA;;;AClB3B;;;;AAIG;MAeU,wBAAwB,CAAA;AACnC,IAAA,WAAA,CAAsB,MAAmD,EAAA;AAAnD,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAA6C;KAAI;AAE7E;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;;QACR,IAAI,QAAO,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAA,KAAK,QAAQ,EAAE;AAChD,YAAA,OAAe,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,SAAA;KACF;AAED;;;;;;;;;AASG;AACH,IAAA,IAAI,eAAe,GAAA;;QACjB,QACG,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO;YAClD,CAAG,EAAA,IAAI,CAAC,QAAQ,CAAA,CAAA,EAAI,IAAI,CAAC,KAAK,CAAE,CAAA,EAChC;KACH;AAED,IAAA,IAAc,YAAY,GAAA;;AACxB,QAAA,OAAO,MAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAC,QAAQ,0CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3D;AAED,IAAA,IAAc,KAAK,GAAA;;QACjB,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC;KACrC;AAED,IAAA,IAAc,IAAI,GAAA;;QAChB,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC;KACpC;AAED,IAAA,IAAc,QAAQ,GAAA;;QACpB,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,SAAS,CAAC;KACxC;;qHA3CU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,4DAHzB,CAAiD,+CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAjE,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FAGhD,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,QAAQ,EAAE,CAAiD,+CAAA,CAAA;oBAC3D,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,CAAA;;;AClBD;;;;AAIG;AAMU,MAAA,kBAAkB,GAAgB;AAC7C,IAAA,YAAY,EAAE;AACZ,QAAA,eAAe,EAAE,wBAAwB;AACzC,QAAA,aAAa,EAAE,sBAAsB;AACtC,KAAA;;;ACdH;;;;AAIG;AAOH;;;;;;;AAOG;MAKmB,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;4GAAX,WAAW,EAAA,UAAA,EAHnB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,WAAW,EAAA,UAAA,EAAA,CAAA;kBAJhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;ACtBD;;;;AAIG;MAUU,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAFf,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAD3B,YAAY,CAAA,EAAA,CAAA,CAAA;AAGX,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAHpB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAGX,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,sBAAsB,CAAC;iBACvC,CAAA;;;ACbD;;;;AAIG;MAWU,qBAAqB,CAAA;;kHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAFjB,YAAA,EAAA,CAAA,wBAAwB,CAD7B,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;mHAGvB,qBAAqB,EAAA,OAAA,EAAA,CAHtB,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAGvB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;oBACnC,YAAY,EAAE,CAAC,wBAAwB,CAAC;iBACzC,CAAA;;;ACdD;;;;AAIG;AAYH;;;;;;;;AAQG;MAIU,oBAAoB,CAAA;AAI/B,IAAA,WAAA,CACY,aAA4B,EAC5B,wBAAkD,EAClD,MAAmB,EAAA;AAFnB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;AAC5B,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;AAClD,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAa;;AALrB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;KAM7B;AAEJ;;AAEG;AACH,IAAA,GAAG,CAAC,SAAyB,EAAA;;AAC3B,QAAA,CAAA,EAAA,GAAA,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,CAAC,KAAK,KAAI;YAClC,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC5D,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC3D,gBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;AAC9B,aAAA;YACD,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1D,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;AAC9B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAES,MAAM,CAAC,SAAiB,EAAE,QAAmB,EAAA;QACrD,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAClC,OAAO;AACR,SAAA;QACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACrC,MAAM,QAAQ,GACZ,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,EAAO,QAAQ,CAAC,CAAC;KAClD;AAED;;AAEG;IACO,iBAAiB,CACzB,SAAyB,EACzB,KAAa,EAAA;;AAEb,QAAA,QACE,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,SAAS,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,KAAK,CAAC,0CAAE,eAAe;AAClD,aAAA,CAAA,EAAA,GAAA,SAAS,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,CAAA;aAClC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,eAAe,CAAA,EACzC;KACH;AAED;;AAEG;IACO,eAAe,CACvB,SAAyB,EACzB,KAAa,EAAA;;AAEb,QAAA,QACE,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,SAAS,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,KAAK,CAAC,0CAAE,aAAa;AAChD,aAAA,CAAA,EAAA,GAAA,SAAS,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAA;aAChC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAA,EACvC;KACH;AAED;;;;;AAKG;IACH,kBAAkB,CAAC,IAAY,EAAE,KAAa,EAAA;AAC5C,QAAA,OAAO,CAAS,MAAA,EAAA,IAAI,CAAW,QAAA,EAAA,KAAK,EAAE,CAAC;KACxC;AAED;;AAEG;AACH,IAAA,sBAAsB,CACpB,IAAY,EACZ,OAAiC,EACjC,QAAgB,EAChB,KAAa,EAAA;QAEb,OAAO;AACL,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,SAAS,EAAE,QAAQ;SACpB,CAAC;KACH;AAED;;;;;AAKG;IACH,gBAAgB,CAAC,IAAY,EAAE,KAAa,EAAA;AAC1C,QAAA,OAAO,CAAS,MAAA,EAAA,IAAI,CAAS,MAAA,EAAA,KAAK,EAAE,CAAC;KACtC;AAED;;AAEG;IACH,oBAAoB,CAClB,IAAY,EACZ,OAAiC,EACjC,QAAgB,EAChB,KAAa,EACb,IAAS,EAAA;AAET,QAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,IAAI,CACP,EAAA,EAAA,KAAK,EAAE,IAAI,EACX,QAAQ,EAAE,OAAO,EACjB,MAAM,EAAE,KAAK,EACb,SAAS,EAAE,QAAQ,EACnB,CAAA,CAAA;KACH;;iHAxHU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAb,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA+E,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC3BD;;;;AAIG;AA6EH;;AAEG;AACS,IAAA,YAiBX;AAjBD,CAAA,UAAY,WAAW,EAAA;AACrB;;;;AAIG;IACH,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAY,CAAA;AAEZ;;AAEG;IACH,WAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAgB,CAAA;AAEhB;;AAEG;IACH,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAU,CAAA;AACZ,CAAC,EAjBW,WAAW,KAAX,WAAW,GAiBtB,EAAA,CAAA,CAAA;;ACrGD;;;;AAIG;AAoBH;;;;;;;;;;;;;;;;;;;;;;;AAuBG;MAMU,cAAc,CAAA;IAOzB,IAAa,SAAS,CAAC,SAAyB,EAAA;AAC9C,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;AACD,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;AAoBD,IAAA,WAAA,CAAsB,eAAqC,EAAA;AAArC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAsB;AAFjD,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;KAEyB;IAE/D,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,QAAQ,CAAC;QAC3E,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,gBAAgB,CAAC;QAC1E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,UAAU,CAAC;QAE/D,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzC,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;AAED,IAAA,UAAU,CAAC,IAAS,EAAA;AAClB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;AAED;;;;;AAKG;AACH,IAAA,aAAa,CAAC,IAAS,EAAA;;QACrB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAChD,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QACD,OAAO,CAAA,MAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,OAAK,IAAI,KAAJ,IAAA,IAAA,IAAI,uBAAJ,IAAI,CAAG,MAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,CAAA,CAAC;KACvE;AAED;;AAEG;AACH,IAAA,kBAAkB,CAAC,KAAa,EAAA;AAC9B,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAClE;AAED;;AAEG;AACH,IAAA,sBAAsB,CAAC,KAAa,EAAA;QAClC,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAChD,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb,KAAK,CACN,CAAC;KACH;AAED;;AAEG;AACH,IAAA,gBAAgB,CAAC,KAAa,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAChE;AAED;;AAEG;IACH,oBAAoB,CAAC,KAAa,EAAE,IAAS,EAAA;QAC3C,OAAO,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAC9C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb,KAAK,EACL,IAAI,CACL,CAAC;KACH;IAED,SAAS,CAAC,EAAU,EAAE,IAAS,EAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC7B;AAED;;;AAGG;IACO,iBAAiB,GAAA;AACzB,QAAA,IAAI,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;AAC5B,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,SAAA;KACF;AAED;;AAEG;AACH,IAAA,IAAY,MAAM,GAAA;;QAChB,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC;KACxC;AAED;;AAEG;AACH,IAAA,IAAY,IAAI,GAAA;;AACd,QAAA,OAAO,MAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC;KAC7B;AAED,IAAA,IAAY,OAAO,GAAA;;AACjB,QAAA,OAAO,MAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;KAChC;;2GAnIU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,qYCrD3B,6+EAoFA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAnE,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAW,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD/Ba,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,SAAS;+BACE,UAAU,EAAA,eAAA,EAEH,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,6+EAAA,EAAA,CAAA;wGAGV,SAAS,EAAA,CAAA;sBAA7C,WAAW;uBAAC,sBAAsB,CAAA;gBACF,gBAAgB,EAAA,CAAA;sBAAhD,WAAW;uBAAC,kBAAkB,CAAA;gBACA,cAAc,EAAA,CAAA;sBAA5C,WAAW;uBAAC,gBAAgB,CAAA;gBACU,qBAAqB,EAAA,CAAA;sBAA3D,WAAW;uBAAC,wBAAwB,CAAA;gBAGxB,SAAS,EAAA,CAAA;sBAArB,KAAK;gBAQG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAMG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAQG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAEI,MAAM,EAAA,CAAA;sBAAf,MAAM;;;AEpFT;;;;AAIG;AAWH;;AAEG;MAYU,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAX,WAAW,EAAA,YAAA,EAAA,CAJP,cAAc,CAAA,EAAA,OAAA,EAAA,CAL3B,YAAY;QACZ,YAAY;QACZ,qBAAqB;QACrB,mBAAmB,aAGX,cAAc,CAAA,EAAA,CAAA,CAAA;yGAGb,WAAW,EAAA,SAAA,EAFX,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC,YAPnD,YAAY;QACZ,YAAY;QACZ,qBAAqB;QACrB,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAMV,WAAW,EAAA,UAAA,EAAA,CAAA;kBAXvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,qBAAqB;wBACrB,mBAAmB;AACpB,qBAAA;oBACD,YAAY,EAAE,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;AACzB,oBAAA,SAAS,EAAE,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;iBACtD,CAAA;;;AC5BD;;;;AAIG;AAaH;;;;;;;;;;;AAWG;MAIU,YAAY,CAAA;IACvB,WACY,CAAA,iBAAoC,EACpC,MAAmB,EAAA;AADnB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAa;KAC3B;AAEJ;;;;;;AAMG;IACH,cAAc,CACZ,SAAiB,EACjB,gBAA+C,EAAA;AAE/C,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YAClC,OAAO,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AACnE,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;AAC7C,SAAA;KACF;AAED;;;;;;AAMG;IACO,wBAAwB,CAChC,IAAY,EACZ,gBAA+C,EAAA;AAE/C,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAC5C,GAAG,CAAC,CAAC,UAAU,MACV,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAC1D,EAAA,EAAA,IAAI,EACJ,CAAA,CAAA,CAAC,CACJ,CAAC;KACH;AAED;;;;;;;AAOG;AACO,IAAA,cAAc,CACtB,IAAY,EACZ,UAAsB,EACtB,gBAA+C,EAAA;;AAE/C,QAAA,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,KAAK,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,CAAA,EAAE;AAC9B,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;AAE1D,QAAA,MAAM,iBAAiB,GAAG,CAAC,GAAG,QAAQ,CAAC;AACpC,aAAA,OAAO,EAAE;AACT,aAAA,IAAI,CAAC,CAAC,EAAE,KAAI,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,CAAC,OAAA,CAAC,EAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,IAAI,CAAA,CAAE,EAAE,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAA,CAAA,EAAA,CAAC,CAAC;QACxD,MAAM,KAAK,GACT,CAAC,iBAAiB;AAChB,aAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAA;YACnD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK;AAC7B,aAAA,gBAAgB,aAAhB,gBAAgB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhB,gBAAgB,CAAE,KAAK,CAAA,CAAC;;QAG1B,IAAI,OAAO,mCACN,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAE,OAAO,CAAA,EACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CACnC,CAAC;;;AAIF,QAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,KAAI;;AACtB,YAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACP,EAAA,CAAA,EAAA,GAAA,gBAAgB,KAAhB,IAAA,IAAA,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,EAAE,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAC/B,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,KAAK,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,EAAE,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAC5C,CAAC;AACJ,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;KAC3B;AAED;;AAEG;IACO,sBAAsB,CAC9B,IAAY,EACZ,KAAsB,EAAA;QAEtB,IAAI,CAAC,UAAU,CACb,CAAA,wDAAA,EAA2D,IAAI,CAA4B,yBAAA,EAAA,IAAI,CAAmD,iDAAA,CAAA,CACnJ,CAAC;QACF,OAAO,KAAK,CAAC,IAAI,CACf,GAAG,CAAC,CAAC,IAAW,KAAI;YAClB,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;AACvD,YAAA,OAAO,EAAE,IAAI,EAAE,KAAK,EAAoB,CAAC;SAC1C,CAAC,CACH,CAAC;KACH;AAED;;;AAGG;AACO,IAAA,oBAAoB,CAAC,IAAY,EAAA;AACzC,QAAA,IAAI,CAAC,UAAU,CACb,0BAA0B,IAAI,CAAA,+DAAA,CAAiE,CAChG,CAAC;AACF,QAAA,OAAO,EAAE,CAAC;YACR,IAAI;YACJ,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC/D,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;AACO,IAAA,uBAAuB,CAAC,UAAsB,EAAA;AACtD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACvE,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;KACjE;AAED;;AAEG;AACO,IAAA,cAAc,CAAC,SAAiB,EAAA;;AACxC,QAAA,OAAO,CAAC,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,SAAS,CAAC,CAAA,CAAC;KACzC;AAED;;;;AAIG;AACK,IAAA,UAAU,CAAC,OAAe,EAAA;QAChC,IAAI,SAAS,EAAE,EAAE;AACf,YAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvB,SAAA;KACF;;yGArJU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAyD,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAF,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC/BD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAQU,mBAAmB,CAAA;AAHhC,IAAA,WAAA,GAAA;AAIE,QAAA,IAAa,CAAA,aAAA,GAAG,OAAO,CAAC;AACxB,QAAA,IAAe,CAAA,eAAA,GAAW,2BAA2B,CAAC;KAuEvD;AArEC;;;;;;AAMG;AACH,IAAA,OAAO,CAAC,OAAgB,EAAA;QACtB,OAAO,CAAC,OAAwB,KAA6B;YAC3D,MAAM,MAAM,GAAqB,EAAE,CAAC;AACpC,YAAA,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE;gBAC5B,MAAM,KAAK,GAAW,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAI;;AAC/B,oBAAA,IAAI,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE;wBACvC,MAAM,YAAY,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAM,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;wBACzD,MAAM,CAAC,QAAQ,GAAG;4BAChB,OAAO;AACP,4BAAA,YAAY,EAAE,CAAC,GAAG,YAAY,EAAE,IAAI,CAAC;yBACtC,CAAC;AACH,qBAAA;AACH,iBAAC,CAAC,CAAC;AACJ,aAAA;AACD,YAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC;AAC1D,SAAC,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,UAAU,CAAC,UAAmB,EAAA;QAC5B,OAAO,CAAC,OAAwB,KAA6B;YAC3D,MAAM,MAAM,GAAqB,EAAE,CAAC;AACpC,YAAA,IAAI,UAAU,IAAI,OAAO,CAAC,KAAK,EAAE;gBAC/B,MAAM,KAAK,GAAW,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChD,gBAAA,IAAI,KAAK,CAAC,MAAM,GAAG,UAAU,EAAE;AAC7B,oBAAA,MAAM,CAAC,cAAc,GAAG,EAAE,UAAU,EAAE,CAAC;AACxC,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC;AAC1D,SAAC,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,YAAY,CAAC,YAA4B,EAAA;QACvC,OAAO,CAAC,OAAwB,KAA6B;;YAC3D,MAAM,MAAM,GAAqB,EAAE,CAAC;AACpC,YAAA,IAAI,YAAY,IAAI,OAAO,CAAC,KAAK,EAAE;gBACjC,MAAM,KAAK,GAAW,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChD,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAChC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAC9D,CAAC;AACH,aAAA;YACD,OAAO,MAAM,CAAC,CAAA,EAAA,GAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;AAC1D,SAAC,CAAC;KACH;AAES,IAAA,YAAY,CAAC,QAAiB,EAAA;QACtC,OAAO,CAAC,CAAA,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,KAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;KAC/D;;gHAxEU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACXD;;;;AAIG;MAUU,eAAe,CAAA;AAJ5B,IAAA,WAAA,GAAA;AAME,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;KAQvB;AANC,IAAA,WAAW,CAAC,MAAc,EAAA;AACxB,QAAA,OAAO,MAAM;aACV,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;aAC1B,IAAI,CAAC,EAAE,CAAC,CAAC;KACb;;4GATU,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,eAAe,iFCd5B,gbAgBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAApD,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkD,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDFa,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJ3B,SAAS;+BACE,WAAW,EAAA,QAAA,EAAA,gbAAA,EAAA,CAAA;8BAIZ,OAAO,EAAA,CAAA;sBAAf,KAAK;;;AEfR;;;;AAIG;MA2BU,kBAAkB,CAAA;AA4B7B,IAAA,IAAI,kBAAkB,GAAA;;AACpB,QAAA,QACE,CAAC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,KAAI,IAAI,CAAC,oBAAoB;AACpE,aAAC,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,CAAC,CAAC,EAC9C;KACH;AAED,IAAA,IAAI,OAAO,GAAA;;AACT,QAAA,QACE,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,sBAAsB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,KAAI,IAAI,CAAC,QAAQ,EACvE;KACH;AAED,IAAA,IAAI,UAAU,GAAA;;QACZ,QACE,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,sBAAsB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU;YACzD,IAAI,CAAC,WAAW,EAChB;KACH;AAED,IAAA,IAAI,YAAY,GAAA;;AACd,QAAA,OAAO,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,sBAAsB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,KAAI,EAAE,CAAC;KAC1E;IAED,WACY,CAAA,SAAoB,EACpB,mBAAwC,EAAA;AADxC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;AACpB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AAlD3C,QAAA,IAAa,CAAA,aAAA,GAAa,IAAI,CAAC;AAG9B,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAG7B,CAAC;AAEK,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,YAAY,EAI3C,CAAC;AAEL,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AAGtB,QAAA,IAAoB,CAAA,oBAAA,GAAW,IAAI,CAAC;AACpC,QAAA,IAAQ,CAAA,QAAA,GAAW,EAAE,CAAC;AACtB,QAAA,IAAW,CAAA,WAAA,GAAW,CAAC,CAAC;AACxB,QAAA,IAAU,CAAA,UAAA,GAAW,sBAAsB,CAAC;AAE5C,QAAA,IAAgB,CAAA,gBAAA,GAAY,IAAI,CAAC;KA6B7B;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAED,kBAAkB,GAAA;QAChB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,YAAY,EAAE,CAAC;AACrB,aAAA;AACF,SAAA;KACF;IAED,MAAM,GAAA;;AACJ,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,KAAK,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK;gBACnC,OAAO,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK;AACzC,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AAClB,QAAA,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,CAAC;KACvC;AAED,IAAA,eAAe,CACb,WAA+B,EAC/B,YAAgC,EAChC,QAA4B,EAAA;AAE5B,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;AAC3B,YAAA,WAAW,EAAE,WAAW;AACxB,YAAA,YAAY,EAAE,YAAY;AAC1B,YAAA,QAAQ,EAAE,QAAQ;AACnB,SAAA,CAAC,CAAC;KACJ;IAES,SAAS,GAAA;;AACjB,QAAA,MAAM,IAAI,GAAG,IAAI,gBAAgB,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CACb,SAAS,EACT,IAAI,kBAAkB,CAAC,EAAE,EAAE;AACzB,YAAA,UAAU,CAAC,QAAQ;AACnB,YAAA,UAAU,CAAC,SAAS,CAClB,CAAA,MAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,KAAI,IAAI,CAAC,oBAAoB,CACpE;AACF,SAAA,CAAC,CACH,CAAC;QACF,IAAI,CAAC,UAAU,CACb,MAAM,EACN,IAAI,kBAAkB,CAAC,EAAE,EAAE;YACzB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;AACzD,SAAA,CAAC,CACH,CAAC;AACF,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;AAED,IAAA,cAAc,CAAC,KAAc,EAAA;QAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;AAEvB,QAAA,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;QAEF,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAA,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,gBAAA,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACpB,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnC,aAAA;AACF,SAAA;KACF;AAED,IAAA,kBAAkB,CAAC,KAAc,EAAA;AAC/B,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE;YAC/B,OAAO;AACR,SAAA;QAED,KAAK,CAAC,cAAc,EAAE,CAAC;AAEvB,QAAA,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;QAEF,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,YAAY,GAAG,CAAC,EAAE;gBACpB,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACrC,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnC,aAAA;AACF,SAAA;KACF;IAES,aAAa,GAAA;AACrB,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;AACtE,QAAA,IAAI,OAAO,EAAE;YACX,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,CAAC,OAAO,KAAI;AACpD,gBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC7D,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;AAC5D,aAAC,CAAC,CAAC;AACH,YAAA,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,SAAA;KACF;IAES,cAAc,CAAC,OAAgB,EAAE,oBAA4B,EAAA;AACrE,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE;AAC5C,YAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,MAAM,CAAC;AACd,gBAAA,GAAG,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,YAAY;AAC1B,gBAAA,QAAQ,EAAE,MAAM;AACjB,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAES,IAAA,aAAa,CAAC,oBAA4B,EAAA;AAClD,QAAA,OAAO,IAAI,CAAC,mBAAmB,KAAK,oBAAoB,CAAC;KAC1D;IAES,YAAY,GAAA;AACpB,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;AAC5E,QAAA,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,MAAK;AAC7C,YAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,cAAc,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;AAC5D,YAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAChC,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,SAAA;KACF;IAEO,iBAAiB,GAAA;AACvB,QAAA,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAC9D,CAAC;KACH;IAEO,eAAe,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACnE;IAEO,iBAAiB,GAAA;AACvB,QAAA,OAAoB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC;KAC3D;;+GA3MU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGAAlB,kBAAkB,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAClB,mBAAmB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EChChC,u3IAmIA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA1E,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA6D,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAc,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,eAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDpGa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAJ9B,SAAS;+BACE,cAAc,EAAA,QAAA,EAAA,u3IAAA,EAAA,CAAA;+HAIQ,mBAAmB,EAAA,CAAA;sBAAlD,SAAS;uBAAC,mBAAmB,CAAA;gBAErB,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,gBAAgB,EAAA,CAAA;sBAAxB,KAAK;gBAEI,IAAI,EAAA,CAAA;sBAAb,MAAM;gBAKG,kBAAkB,EAAA,CAAA;sBAA3B,MAAM;;;AE3CT;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAwBU,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAHf,YAAA,EAAA,CAAA,eAAe,EAAE,kBAAkB,aARhD,YAAY;QACZ,UAAU;QACV,UAAU;QACV,WAAW;QACX,mBAAmB;QACnB,gBAAgB;QAChB,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAGR,eAAe,EAAE,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAElC,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAX5B,YAAY;QACZ,UAAU;QACV,UAAU;QACV,WAAW;QACX,mBAAmB;QACnB,gBAAgB;QAChB,gBAAgB,CAAA,EAAA,CAAA,CAAA;2FAKP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAb/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,UAAU;wBACV,UAAU;wBACV,WAAW;wBACX,mBAAmB;wBACnB,gBAAgB;wBAChB,gBAAgB;AACjB,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,eAAe,EAAE,kBAAkB,CAAC;AACnD,oBAAA,OAAO,EAAE,CAAC,eAAe,EAAE,kBAAkB,CAAC;iBAC/C,CAAA;;;AC3BD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAuBU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAHhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAV5B,YAAY,EAAE,mBAAmB,EAAE,cAAc,EAAE,WAAW,CAAA,EAAA,OAAA,EAAA,CAW9D,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAEtB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAZpB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAC;AACnB,YAAA,aAAa,EAAE;AACb,gBAAA,uBAAuB,EAAE;AACvB,oBAAA,SAAS,EAAE,uBAAuB;AACnC,iBAAA;AACF,aAAA;SACW,CAAC;AAChB,KAAA,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,mBAAmB,EAAE,cAAc,EAAE,WAAW,CAAA,EAAA,CAAA,CAAA;2FAa7D,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAdhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,cAAc,EAAE,WAAW,CAAC;AACzE,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAC;AACnB,4BAAA,aAAa,EAAE;AACb,gCAAA,uBAAuB,EAAE;AACvB,oCAAA,SAAS,EAAE,uBAAuB;AACnC,iCAAA;AACF,6BAAA;yBACW,CAAC;AAChB,qBAAA;oBACD,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC,CAAA;;;AC1BD;;;;AAIG;MAoBU,eAAe,CAAA;AAY1B,IAAA,WAAA,CACY,SAA+C,EAC/C,UAA+B,EAC/B,UAAsB,EAAA;AAFtB,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAsC;AAC/C,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAqB;AAC/B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AAVlC,QAAA,IAAA,CAAA,KAAK,GAAmC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,IAAI,KAAI;AACX,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACzB,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACvC,CAAC,CACH,CAAC;KAME;AAEJ;;;AAGG;AACH,IAAA,SAAS,CAAC,IAAwB,EAAA;AAChC,QAAA,OAAO,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC;KAC7E;AAES,IAAA,aAAa,CAAC,IAAwB,EAAA;QAC9C,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;AAChC,SAAA;aAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC3B,YAAA,IAAI,CAAC,UAAU;AACZ,iBAAA,OAAO,CAAC;gBACP,EAAE,EAAE,IAAI,CAAC,WAAW;gBACpB,IAAI,EAAE,QAAQ,CAAC,YAAY;aAC5B,CAAC;AACD,iBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,iBAAA,SAAS,CAAC,CAAC,IAAI,KAAI;gBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,KAAK,CAAC;AAChC,aAAC,CAAC,CAAC;AACN,SAAA;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AAC1C,gBAAA,OAAO,EAAE,SAAS;AAClB,gBAAA,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;AAC/B,aAAA,CAAC,CAAC;AACJ,SAAA;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AAC1C,gBAAA,OAAO,EAAE,UAAU;AACnB,gBAAA,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;AAChC,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,IAAwB,EAAA;QAC/B,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;gBACvB,OAAO,IAAI,CAAC,KAAc,CAAC;AAC5B,aAAA;AAAM,iBAAA;gBACL,OAAO,IAAI,CAAC,KAAmB,CAAC;AACjC,aAAA;AACF,SAAA;KACF;;4GA5DU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAjD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,eAAe,yGCxB5B,2aAWA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAyE,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDaa,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,SAAS;+BACE,WAAW,EAAA,eAAA,EAEJ,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,2aAAA,EAAA,CAAA;+JAKzB,YAAY,EAAA,CAAA;sBAAjC,WAAW;uBAAC,OAAO,CAAA;;;AE3BtB;;;;AAIG;MA8BU,YAAY,CAAA;;yGAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0GAAZ,YAAY,EAAA,YAAA,EAAA,CAHR,eAAe,CAAA,EAAA,OAAA,EAAA,CAhBpB,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,CAAA,EAAA,OAAA,EAAA,CAiB1D,eAAe,CAAA,EAAA,CAAA,CAAA;AAEd,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,EAlBZ,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,+BAA+B,EAAE;AAC/B,oBAAA,SAAS,EAAE,eAAe;AAC3B,iBAAA;AACD,gBAAA,eAAe,EAAE;AACf,oBAAA,SAAS,EAAE,eAAe;AAC3B,iBAAA;AACD,gBAAA,qBAAqB,EAAE;AACrB,oBAAA,SAAS,EAAE,eAAe;AAC3B,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EAAA,OAAA,EAAA,CAfS,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,CAAA,EAAA,CAAA,CAAA;2FAmBzD,YAAY,EAAA,UAAA,EAAA,CAAA;kBApBxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,CAAC;AACrE,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,+BAA+B,EAAE;AAC/B,oCAAA,SAAS,EAAE,eAAe;AAC3B,iCAAA;AACD,gCAAA,eAAe,EAAE;AACf,oCAAA,SAAS,EAAE,eAAe;AAC3B,iCAAA;AACD,gCAAA,qBAAqB,EAAE;AACrB,oCAAA,SAAS,EAAE,eAAe;AAC3B,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,eAAe,CAAC;oBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;iBAC3B,CAAA;;;ACjCD;;;;AAIG;MAaU,aAAa,CAAA;AAOxB,IAAA,WAAA,CAAsB,SAA6C,EAAA;AAA7C,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAoC;AAJnE,QAAA,IAAK,CAAA,KAAA,GAAiC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAC7D,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,YAAY,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,YAAY,CAAC,CAAC,CACxD,CAAC;KAEqE;AAEvE;;;AAGG;AACH,IAAA,SAAS,CAAC,IAAsB,EAAA;AAC9B,QAAA,OAAO,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC;KACzE;;0GAfU,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnD,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aAAa,uGCjB1B,mMAOA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAvB,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA2E,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA3E,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDUa,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,SAAS;+BACE,SAAS,EAAA,eAAA,EAEF,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,mMAAA,EAAA,CAAA;oGAGzB,YAAY,EAAA,CAAA;sBAAjC,WAAW;uBAAC,OAAO,CAAA;;;AElBtB;;;;AAIG;MAqBU,UAAU,CAAA;;uGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wGAAV,UAAU,EAAA,YAAA,EAAA,CAHN,aAAa,CARlB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAS7C,aAAa,CAAA,EAAA,CAAA,CAAA;AAEZ,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EAVV,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,gBAAgB,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE;AAC/C,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAPS,YAAY,EAAE,YAAY,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA;2FAW5C,UAAU,EAAA,UAAA,EAAA,CAAA;kBAZtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,iBAAiB,CAAC;AACxD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,gBAAgB,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE;AAC/C,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,aAAa,CAAC;oBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;iBACzB,CAAA;;;ACxBD;;;;AAIG;AAKH;;;;;;;;;;AAUG;MAEU,yBAAyB,CAAA;IACpC,WAAsB,CAAA,QAAmB,EAAY,MAAiB,EAAA;AAAhD,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AAAY,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;KAAI;AAEhE,IAAA,OAAO,CAAC,QAAgB,EAAA;;AAChC,QAAA,MAAM,yBAAyB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,0CAAE,OAAO,CAClE,MAAM,EACN,EAAE,CACH,CAAC;AACF,QAAA,OAAO,CAAG,EAAA,yBAAyB,CAAG,EAAA,QAAQ,EAAE,CAAC;KAClD;IAEM,SAAS,CAAC,OAAe,EAAE,EAAA;QAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACzD,QAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACjC,MAAM,SAAS,GACb,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAEzC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,IAAuB,KAAI;YACxD,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACvC,YAAA,IAAI,CAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,EAAE;AAC5B,gBAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7D,aAAA;AACH,SAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC,SAAS,CAAC;KAC3B;;sHAxBU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;oHAAzB,yBAAyB,EAAA,IAAA,EAAA,yBAAA,EAAA,CAAA,CAAA;2FAAzB,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBADrC,IAAI;mBAAC,EAAE,IAAI,EAAE,yBAAyB,EAAE,CAAA;;;ACpBzC;;;;AAIG;MAgBU,kBAAkB,CAAA;AAEtB,IAAA,WAAW,CAAC,KAAY,EAAA;AAC7B,QAAA,IAAI,KAAK,CAAC,MAAM,YAAY,iBAAiB,EAAE;AAC7C,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,MAA2B,CAAC;AAClD,YAAA,MAAM,IAAI,GAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,YAAY,CAAC,MAAM,CAAC,CAAC;YAE3C,MAAM,YAAY,GAChB,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;AAG1D,YAAA,IAAI,IAAI,IAAI,YAAY,KAAK,OAAO,CAAC,IAAI,EAAE;gBACzC,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,gBAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACjC,aAAA;AACF,SAAA;KACF;IAED,WACS,CAAA,SAAkD,EAC/C,MAAc,EAAA;AADjB,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAyC;AAC/C,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KACtB;;+GArBO,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAuB,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,6GCpB/B,8HAIA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA4E,yBAAA,EAAA,IAAA,EAAA,yBAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDgBa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,cAAc,EAAA,eAAA,EAEP,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,8HAAA,EAAA,CAAA;2HAIxC,WAAW,EAAA,CAAA;sBADjB,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AErBnC;;;;AAIG;MASU,2BAA2B,CAAA;;wHAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yHAA3B,2BAA2B,EAAA,YAAA,EAAA,CAHvB,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAC9B,yBAAyB,CAAA,EAAA,CAAA,CAAA;yHAExB,2BAA2B,EAAA,CAAA,CAAA;2FAA3B,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAJvC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE,CAAC,yBAAyB,CAAC;iBACrC,CAAA;;;ACZD;;;;AAIG;MA0BU,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAHd,kBAAkB,CAbvB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAcvD,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAEjB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAflB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,qBAAqB,EAAE;AACrB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACD,gBAAA,wBAAwB,EAAE;AACxB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAZS,YAAY,EAAE,YAAY,EAAE,2BAA2B,CAAA,EAAA,CAAA,CAAA;2FAgBtD,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAjB9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,2BAA2B,CAAC;AAClE,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,qBAAqB,EAAE;AACrB,oCAAA,SAAS,EAAE,kBAAkB;AAC9B,iCAAA;AACD,gCAAA,wBAAwB,EAAE;AACxB,oCAAA,SAAS,EAAE,kBAAkB;AAC9B,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B,CAAA;;;AC7BD;;;;AAIG;MAcU,YAAY,CAAA;IAUvB,WACY,CAAA,SAAoD,EACpD,YAA0B,EAAA;AAD1B,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAA2C;AACpD,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAVtC,QAAA,IAAA,CAAA,KAAK,GAAwC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CACpE,GAAG,CAAC,CAAC,IAAI,KAAI;;YACX,IAAI,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,EAAE;AACtB,gBAAA,IAAI,CAAC,GAAG,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC;AAC1D,aAAA;SACF,CAAC,CACH,CAAC;KAKE;AAEJ,IAAA,eAAe,CAAC,KAAc,EAAA;QAC5B,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;AACD,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;AAC/B,QAAA,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,CAAG,EAAA,SAAS,MAAM,CAAC;KACpE;;yGArBU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAArD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAsD,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAY,8CClBzB,0dAgBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAlF,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA6D,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDEa,YAAY,EAAA,UAAA,EAAA,CAAA;kBALxB,SAAS;+BACE,QAAQ,EAAA,eAAA,EAED,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0dAAA,EAAA,CAAA;;;AEhBjD;;;;AAIG;MAsBU,SAAS,CAAA;;sGAAT,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uGAAT,SAAS,EAAA,YAAA,EAAA,CAHL,YAAY,CAVjB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAWpC,YAAY,CAAA,EAAA,CAAA,CAAA;AAEX,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,EAZT,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,oBAAoB,EAAE;AACpB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAanC,SAAS,EAAA,UAAA,EAAA,CAAA;kBAdrB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC;AAC/C,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,oBAAoB,EAAE;AACpB,oCAAA,SAAS,EAAE,YAAY;AACxB,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,YAAY,CAAC;oBAC5B,OAAO,EAAE,CAAC,YAAY,CAAC;iBACxB,CAAA;;;ACzBD;;;;AAIG;MAyBU,8BAA8B,CAAA;AASzC,IAAA,WAAA,CACS,aAAyD,EACtD,UAAsB,EACtB,MAAiB,EAAA;AAFpB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAA4C;AACtD,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAX7B,QAAA,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;AAMjB,QAAA,IAAc,CAAA,cAAA,GAA+B,EAAE,CAAC;QAQhD,IAAA,CAAA,WAAW,GAAsB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAC5D,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAA,CAAC,aAAD,CAAC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAD,CAAC,CAAE,UAAU,OAAK,CAAC,KAAA,IAAA,IAAD,CAAC,KAAD,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAC,CAAE,UAAU,CAAA,CAAC,EAC/D,GAAG,CAAC,CAAC,IAA8B,KAAI;AACrC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAA,EAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,GAAG,CAAA,wBAAA,CAA0B,CAAC;AAC1D,SAAC,CAAC,EACF,SAAS,CAAC,CAAC,IAAI,KAAI;;YACjB,OAAA,aAAa,CACX,CAAC,CAAA,EAAA,GAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,uBAAJ,IAAI,CAAE,UAAU,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,KAChD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAM,SAAS,CAAC,CAAC,IAAI,CACnD,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,GAAG,KAAI;gBACV,IAAI,CAAC,GAAG,EAAE;AACR,oBAAA,OAAO,SAAS,CAAC;AAClB,iBAAA;AAED,gBAAA,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;oBACjB,GAAG,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,GAAG,CACN,EAAA,EAAA,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAA,CACvB,CAAC;AACH,iBAAA;AAED,gBAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,GAAG,CAAA,EAAA,EACN,KAAK,EAAE,CAAG,EAAA,IAAI,CAAC,GAAG,CAAS,MAAA,EAAA,GAAG,CAAC,GAAG,EAAE,EACpC,CAAA,CAAA;AACJ,aAAC,CAAC,CACH,CACF,CACF,CAAA;AAAA,SAAA,CACF,CACF,CAAC;KAjCE;IAmCJ,MAAM,CAAC,MAAc,EAAE,KAAkB,EAAA;;AACvC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,KAAK,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QAC/D,IAAI,KAAK,KAAI,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAA,EAAE;AAC1B,YAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;AAC3C,YAAA,MAAM,UAAU,GAAG,MAAM,CAAC,UAAyB,CAAC;YACpD,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC;AAClC,gBAAA,IAAI,EAAE,CAAC;gBACP,GAAG,EAAE,UAAU,CAAC,SAAS;AACzB,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;IAED,QAAQ,GAAA;;AACN,QAAA,IAAI,CAAC,YAAY;AACf,YAAA,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,0CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,SAAS,mCAAI,IAAI,CAAC,YAAY,CAAC;KAC7E;IAED,eAAe,GAAA;;;AAGb,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5B,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,SAAA;KACF;AAED,IAAA,aAAa,CAAC,YAAiB,EAAA;QAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;KAChE;AAES,IAAA,cAAc,CAAC,QAA8C,EAAA;AACrE,QAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;;AACxB,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,QAAQ,CAAC,0CAAE,QAAQ,CAAC,cAAc,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC,CAAC;AAC5E,SAAC,CAAC,CAAC;KACJ;;2HAlFU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAjC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;+GAA9B,8BAA8B,EAAA,QAAA,EAAA,4BAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,UAAA,EAAA,SAAA,EAI3B,yBAAyB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECjCzC,0sCAsCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAoC,yBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA9E,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDTa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAL1C,SAAS;+BACE,4BAA4B,EAAA,eAAA,EAErB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0sCAAA,EAAA,CAAA;qJAO/C,QAAQ,EAAA,CAAA;sBADP,YAAY;uBAAC,yBAAyB,CAAA;;;AEjCzC;;;;AAIG;MAuBU,2BAA2B,CAAA;;wHAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yHAA3B,2BAA2B,EAAA,YAAA,EAAA,CAHvB,8BAA8B,CAAA,EAAA,OAAA,EAAA,CAVnC,YAAY,EAAE,mBAAmB,EAAE,YAAY,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAW3D,8BAA8B,CAAA,EAAA,CAAA,CAAA;AAE7B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,EAZ3B,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,wBAAwB,EAAE;AACxB,oBAAA,SAAS,EAAE,8BAA8B;AAC1C,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,mBAAmB,EAAE,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAa1D,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAdvC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,YAAY,EAAE,UAAU,CAAC;AACtE,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,wBAAwB,EAAE;AACxB,oCAAA,SAAS,EAAE,8BAA8B;AAC1C,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,8BAA8B,CAAC;oBAC9C,OAAO,EAAE,CAAC,8BAA8B,CAAC;iBAC1C,CAAA;;;AC1BD;;;;AAIG;MA6BU,cAAc,CAAA;IAoBzB,WACY,CAAA,SAA8C,EAC9C,YAA0B,EAC1B,UAA+B,EAC/B,UAAsB,EACtB,EAAqB,EAAA;AAJrB,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAqC;AAC9C,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAC1B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAqB;AAC/B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;AAfjC,QAAA,IAAA,CAAA,KAAK,GAAkC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAC9D,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,IAAI,KAAI;AACX,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACtC,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACvB,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvB,CAAC,CACH,CAAC;KAQE;AAEM,IAAA,QAAQ,CAAC,IAAuB,EAAA;;QACxC,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC;AAC3D,SAAA;AAED,QAAA,IACE,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,mBAAmB;AACvB,YAAA,0BAA0B,CAAC,uBAAuB;AACpD,aAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,UAAU,CAAA,EAChB;AACA,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CACzC,IAAI,CAAC,UAA4B,CAClC,CAAC;AACH,SAAA;aAAM,IACL,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,iBAAiB,MAAK,0BAA0B,CAAC,gBAAgB;AACvE,aAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,SAAS,CAAA,EACf;AACA,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CACzC,IAAI,CAAC,SAA2B,CACjC,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B,SAAA;KACF;AAES,IAAA,WAAW,CAAC,IAAuB,EAAA;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AACjC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,SAAS,CAAC;KACxD;AAES,IAAA,UAAU,CAAC,IAAuB,EAAA;QAC1C,IAAI,IAAI,CAAC,GAAG,EAAE;AACZ,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC;AAC5B,SAAA;aAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC3B,YAAA,IAAI,CAAC,UAAU;AACZ,iBAAA,OAAO,CAAC;gBACP,EAAE,EAAE,IAAI,CAAC,WAAW;gBACpB,IAAI,EAAE,QAAQ,CAAC,YAAY;aAC5B,CAAC;AACD,iBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,iBAAA,SAAS,CAAC,CAAC,IAAI,KAAI;gBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,KAAK,CAAC;AAC9B,gBAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACzB,aAAC,CAAC,CAAC;AACN,SAAA;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AAC1C,gBAAA,OAAO,EAAE,SAAS;AAClB,gBAAA,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;AAC/B,aAAA,CAAC,CAAC;AACJ,SAAA;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AAC1C,gBAAA,OAAO,EAAE,UAAU;AACnB,gBAAA,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;AAChC,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;;2GApFU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAuB,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAsD,YAAA,EAAA,EAAA,EAAA,KAAA,EAAApF,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,wGCjC3B,omBAwBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAqB,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAuB,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA5C,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA1C,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDSa,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,SAAS;+BACE,UAAU,EAAA,eAAA,EAEH,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,omBAAA,EAAA,CAAA;uNAGzB,YAAY,EAAA,CAAA;sBAAjC,WAAW;uBAAC,OAAO,CAAA;;;AElCtB;;;;AAIG;MAgCU,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAX,WAAW,EAAA,YAAA,EAAA,CAHP,cAAc,CAAA,EAAA,OAAA,EAAA,CAhB3B,YAAY;QACZ,YAAY;QACZ,iBAAiB;QACjB,WAAW;QACX,UAAU;QACV,aAAa,aAYL,cAAc,CAAA,EAAA,CAAA,CAAA;AAEb,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EAZX,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE;AACd,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAfC,YAAY;QACZ,YAAY;QACZ,iBAAiB;QACjB,WAAW;QACX,UAAU;QACV,aAAa,CAAA,EAAA,CAAA,CAAA;2FAcJ,WAAW,EAAA,UAAA,EAAA,CAAA;kBArBvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,iBAAiB;wBACjB,WAAW;wBACX,UAAU;wBACV,aAAa;AACd,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,cAAc,EAAE;AACd,oCAAA,SAAS,EAAE,cAAc;AAC1B,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;iBAC1B,CAAA;;;ACnCD;;;;AAIG;;ACJH;;;;;AAKG;AAIH;;AAEG;SACa,iBAAiB,CAC/B,OAAgB,EAChB,SAAiB,EACjB,UAAkB,EAAA;AAElB,IAAA,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,KAAK,EAAE;AACtC,QAAA,IAAI,OAAO,CAAC,SAAS,KAAK,OAAO,CAAC,KAAK,EAAE;AACvC,YAAA,OAAO,UAAU,GAAG,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC;AAC9C,SAAA;AACD,QAAA,OAAO,CAAG,EAAA,SAAS,CAAK,EAAA,EAAA,OAAO,CAAC,KAAK,CAAK,EAAA,EAAA,UAAU,CAAK,EAAA,EAAA,OAAO,CAAC,SAAS,EAAE,CAAC;AAC9E,KAAA;IAED,IAAI,OAAO,CAAC,SAAS,EAAE;AACrB,QAAA,OAAO,UAAU,GAAG,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC;AAC9C,KAAA;IAED,IAAI,OAAO,CAAC,KAAK,EAAE;AACjB,QAAA,OAAO,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;AACzC,KAAA;AAED,IAAA,OAAO,SAAS,CAAC;AACnB;;ACjCA;;;;AAIG;MASU,2BAA2B,CAAA;AACtC,IAAA,WAAA,CAAsB,kBAAsC,EAAA;AAAtC,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;KAAI;IAEhE,YAAY,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KAC/C;IAED,wBAAwB,GAAA;AACtB,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;KACtD;IAED,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;KACzC;AAED,IAAA,cAAc,CAAC,OAAgB,EAAA;AAC7B,QAAA,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KACjD;IAED,iBAAiB,CAAC,SAAiB,EAAE,OAAgB,EAAA;QACnD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAC/D;AACD,IAAA,mBAAmB,CAAC,SAAiB,EAAA;AACnC,QAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;KACxD;AAED,IAAA,iBAAiB,CAAC,SAAiB,EAAA;AACjC,QAAA,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;KACtD;;wHA5BU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,cAF1B,MAAM,EAAA,CAAA,CAAA;2FAEP,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAHvC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACZD;;;;AAIG;AAIU,MAAA,WAAW,GAA+B;AACrD,IAAA,EAAE,EAAE,CAAC;AACL,IAAA,GAAG,EAAE,CAAC;AACN,IAAA,IAAI,EAAE,CAAC;AACP,IAAA,EAAE,EAAE,CAAC;AACL,IAAA,EAAE,EAAE,CAAC;AACL,IAAA,GAAG,EAAE,CAAC;EACN;AAEc,SAAA,UAAU,CAAC,MAAa,EAAE,MAAa,EAAA;AACrD,IAAA,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AAC9B,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAC1D,YAAA,OAAO,CAAC,CAAC;AACV,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC5D,SAAA;AACF,KAAA;AACD,IAAA,OAAO,CAAC,CAAC;AACX;;AC1BA;;;;AAIG;MASmB,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;+GAAd,cAAc,EAAA,UAAA,EAHtB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,cAAc,EAAA,UAAA,EAAA,CAAA;kBAJnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;MAKqB,QAAQ,CAAA;AAK7B,CAAA;AAEW,IAAA,uBAGX;AAHD,CAAA,UAAY,sBAAsB,EAAA;AAChC,IAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,sBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAHW,sBAAsB,KAAtB,sBAAsB,GAGjC,EAAA,CAAA,CAAA;;AC3BD;;;;AAIG;MAUU,eAAe,CAAA;IAG1B,WACY,CAAA,MAAsB,EACtB,oBAA0C,EAAA;AAD1C,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAgB;AACtB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAJ9C,IAAA,CAAA,UAAU,GAAG,IAAI,eAAe,CAAa,EAAE,CAAC,CAAC;KAKrD;IAEJ,YAAY,GAAA;QACV,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,GAAG,CAAC,GAAW,EAAE,MAAmB,EAAA;;QAClC,MAAM,KAAK,GAAyB,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAC7D,CAAC,QAAQ,KAAK,QAAQ,CAAC,GAAG,KAAK,GAAG,CACnC,CAAC;AAEF,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,MAAM,QAAQ,GAAe,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACnD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACpD,MAAM;gBACN,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,GAAG;AACJ,aAAA,CAAC,CAAC;AACH,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChC,SAAA;KACF;AAED,IAAA,MAAM,CAAC,GAAW,EAAA;;QAChB,MAAM,KAAK,GAAyB,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAC7D,CAAC,QAAQ,KAAK,QAAQ,CAAC,GAAG,KAAK,GAAG,CACnC,CAAC;AAEF,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,QAAQ,GAAe,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AACjD,YAAA,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;AAC/D,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChC,SAAA;KACF;AAED,IAAA,cAAc,CAAC,QAAkB,EAAA;;AAC/B,QAAA,MAAM,MAAM,GACV,QAAQ,CAAC,MAAM,YAAY,WAAW;cAClC,QAAQ,CAAC,MAAM;AACjB,cAAG,CAAA,EAAA,GAAA,QAAQ,CAAC,MAA8B,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC;;AAG9D,QAAA,MAAM,cAAc,GAClB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;;AAGjE,QAAA,MAAM,WAAW,GAAG,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAE,YAAY,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,EAAE;YAChB,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAE,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAChD,SAAA;AAED,QAAA,cAAc,aAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAE,KAAK,EAAE,CAAC;;QAGxB,IAAI,CAAC,WAAW,EAAE;YAChB,cAAc,KAAA,IAAA,IAAd,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAc,CAAE,eAAe,CAAC,UAAU,CAAC,CAAC;AAC7C,SAAA;KACF;AAES,IAAA,uBAAuB,CAAC,GAAW,EAAA;;QAC3C,IAAI,KAAK,GACP,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,GAAG,KAAK,GAAG,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;QAE5E,OAAO,KAAK,GAAG,CAAC,EAAE;AAChB,YAAA,KAAK,EAAE,CAAC;YACR,MAAM,QAAQ,GAAyB,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,KAAK,CAAC,CAAC;AACtE,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,MAAM,QAAQ,GAAe,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AACnD,gBAAA,MAAM,KAAK,GAAW,QAAQ,CAAC,SAAS,CACtC,CAAC,QAAQ,KAAK,QAAQ,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAC5C,CAAC;AACF,gBAAA,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;oBACd,OAAO,KAAK,GAAG,CAAC,CAAC;AAClB,iBAAA;AACF,aAAA;AACF,SAAA;AACD,QAAA,OAAO,CAAC,CAAC;KACV;;4GAnFU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAuF,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA;2FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACbD;;;;AAIG;MAYU,iBAAiB,CAAA;AAG5B,IAAA,WAAA,CAAoB,eAAgC,EAAA;AAAhC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;QAFpD,IAAA,CAAA,UAAU,GAA2B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;KAEjB;AAExD,IAAA,cAAc,CAAC,QAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KAC/C;;8GAPU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,oDChB9B,2PAMA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAlF,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAmF,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAnF,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAmC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDUa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;+BACE,cAAc,EAAA,eAAA,EAEP,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,2PAAA,EAAA,CAAA;;;AEdjD;;;;AAIG;AAIU,MAAA,qBAAqB,GAAmB;AACnD,IAAA,SAAS,EAAE;AACT,QAAA;AACE,YAAA,GAAG,EAAE,WAAW;AAChB,YAAA,OAAO,EAAE,wBAAwB;AAClC,SAAA;AACD,QAAA;AACE,YAAA,GAAG,EAAE,SAAS;AACd,YAAA,OAAO,EAAE,sBAAsB;AAChC,SAAA;AACD,QAAA,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,wBAAwB,EAAE;AACxD,KAAA;;;ACnBH;;;;AAIG;;ACJH;;;;AAIG;MAQU,iBAAiB,CAAA;IAG5B,WACY,CAAA,UAAmC,EACnC,eAAgC,EAAA;AADhC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAyB;AACnC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;KACxC;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;KAC1E;IAED,WAAW,GAAA;QACT,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC9C;;8GAdU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA+C,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAjB,iBAAiB,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,cAAc;iBACzB,CAAA;4HAEU,UAAU,EAAA,CAAA;sBAAlB,KAAK;;;ACbR;;;;AAIG;MAuCU,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAZV,YAAA,EAAA,CAAA,iBAAiB,EAAE,iBAAiB,aALjD,YAAY;AACZ,QAAA,UAAU,EAAA,EAAA,CAAA,YAAA,EAEV,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGX,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAWhB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAVd,SAAA,EAAA;QACT,oBAAoB,CAAC,qBAAqB,CAAC;AAC3C,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,UAAU,EAAE,eAAe;AAC3B,YAAA,IAAI,EAAE,CAAC,wBAAwB,EAAE,aAAa,CAAC;AAC/C,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;KACF,EAAA,OAAA,EAAA,CAfC,YAAY;QACZ,UAAU;AACV,QAAA,YAAY,CAAC,UAAU,CAAC,qBAAqB,CAAC;QAC9C,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAcV,cAAc,EAAA,UAAA,EAAA,CAAA;kBAnB1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,UAAU;AACV,wBAAA,YAAY,CAAC,UAAU,CAAC,qBAAqB,CAAC;wBAC9C,mBAAmB;AACpB,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;oBACpD,OAAO,EAAE,CAAC,iBAAiB,CAAC;AAC5B,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,qBAAqB,CAAC;AAC3C,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,UAAU,EAAE,eAAe;AAC3B,4BAAA,IAAI,EAAE,CAAC,wBAAwB,EAAE,aAAa,CAAC;AAC/C,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;iBACF,CAAA;;AAGD;;AAEG;AACa,SAAA,eAAe,CAC7B,wBAAkD,EAClD,aAA4B,EAAA;IAE5B,MAAM,OAAO,GAAG,MAAK;QACnB,MAAM,OAAO,GACX,wBAAwB,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QACtE,aAAa,CAAC,GAAG,CAAC,eAAe,EAAO,OAAO,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;AAC1E,KAAC,CAAC;AACF,IAAA,OAAO,OAAO,CAAC;AACjB;;AC1DA;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAIU,MAAA,mBAAmB,GAAiB;AAC/C,IAAA,WAAW,EAAE;AACX,QAAA,EAAE,EAAE,GAAG;AACP,QAAA,EAAE,EAAE,GAAG;AACP,QAAA,EAAE,EAAE,GAAG;AACP,QAAA,EAAE,EAAE,IAAI;AACR,QAAA,EAAE,EAAE;AACF,YAAA,GAAG,EAAE,IAAI;AACV,SAAA;AACF,KAAA;;;ACjBH;;;;AAIG;;ACJH;;;;AAIG;AAMH;;;;;;;;;;;;;AAaG;MAKmB,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;gHAAf,eAAe,EAAA,UAAA,EAHvB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJpC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;AC3BD;;;;AAIG;AAKI,MAAM,sBAAsB,GAAoB;AACrD,IAAA,SAAS,EAAE;AACT,QAAA,MAAM,EAAE,IAAI;QACZ,OAAO,EAAE,aAAa,CAAC,GAAG;;;;AAI1B,QAAA,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAC3B,KAAA;CACF;;AClBD;;;;AAIG;AAaH;;;;;;;;;AASG;MAIU,gBAAgB,CAAA;AAM3B,IAAA,WAAA,CACY,UAAoC,EACpC,eAAgC,EAChC,MAAiB,EAAA;AAFjB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAA0B;AACpC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AAChC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAPnB,QAAA,IAAe,CAAA,eAAA,GAAG,KAAK,CAAC;AAExB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAMxC;AAEJ;;AAEG;IACH,UAAU,GAAA;QACR,OAAO,IAAI,CAAC,UAAU;aACnB,SAAS,CAAC,WAAW,CAAC;AACtB,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,MAAuB,KAAI;;YAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,SAAS,CAAC;AAChC,YAAA,IAAI,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,EAAE;gBACvB,IAAI,CAAC,MAAM,EAAE,CAAC;AACf,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,EACpC,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CACrB,CAAC;AACH,aAAA;AACH,SAAC,CAAC,CACH;AACA,aAAA,SAAS,EAAE,CAAC;KAChB;AAED;;;AAGG;IACO,MAAM,GAAA;QACd,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,eAAe;AACjB,aAAA,SAAS,EAAE;aACX,SAAS,CAAC,CAAC,OAAe,KACzB,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,EACpC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAC3B,CACF,CACJ,CAAC;AACF,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC7B;AAED;;;AAGG;IACH,YAAY,CAAC,EAAe,EAAE,SAAoC,EAAA;AAChE,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AACnC,SAAA;AAAM,aAAA;AACL,YAAA,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAC3B,SAAA;KACF;AAED;;;;;;AAMG;AACH,IAAA,YAAY,CAAC,QAAiB,EAAA;;AAC5B,QAAA,IAAI,QAAQ,KAAI,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,0CAAE,QAAQ,CAAC,QAAQ,CAAC,CAAA,EAAE;YAC7D,OAAO,aAAa,CAAC,GAAG,CAAC;AAC1B,SAAA;AACD,QAAA,IAAI,QAAQ,KAAI,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,0CAAE,QAAQ,CAAC,QAAQ,CAAC,CAAA,EAAE;YAC7D,OAAO,aAAa,CAAC,GAAG,CAAC;AAC1B,SAAA;AACD,QAAA,OAAO,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;KAC7B;IAED,WAAW,GAAA;;AAET,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;6GAvFU,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC7BD;;;;AAIG;AAOa,SAAA,oBAAoB,CAClC,gBAAkC,EAClC,oBAA0C,EAAA;IAE1C,MAAM,MAAM,GAAG,MAAK;AAClB,QAAA,IAAI,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACvC,YAAA,OAAO,gBAAgB,CAAC,UAAU,EAAE,CAAC;AACtC,SAAA;AACH,KAAC,CAAC;AACF,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;AAEG;MAYU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAVf,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,UAAU,EAAE,oBAAoB;AAChC,YAAA,IAAI,EAAE,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;AAC/C,SAAA;QACD,oBAAoB,CAAC,sBAAsB,CAAC;AAC7C,KAAA,EAAA,CAAA,CAAA;2FAEU,eAAe,EAAA,UAAA,EAAA,CAAA;kBAX3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,KAAK,EAAE,IAAI;AACX,4BAAA,UAAU,EAAE,oBAAoB;AAChC,4BAAA,IAAI,EAAE,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;AAC/C,yBAAA;wBACD,oBAAoB,CAAC,sBAAsB,CAAC;AAC7C,qBAAA;iBACF,CAAA;;;ACpCD;;;;AAIG;;ACJH;;;;AAIG;MAUU,oBAAoB,CAAA;AAG/B,IAAA,WAAA,CAAY,MAAc,EAAA;QAF1B,IAAA,CAAA,UAAU,GAA6B,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AAGzE,QAAA,MAAM,CAAC,MAAM;AACV,aAAA,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,YAAY,eAAe,CAAC,CAAC;aACzD,SAAS,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpB,SAAC,CAAC,CAAC;KACN;AAED;;AAEG;AACH,IAAA,MAAM,CAAC,aAAuB,EAAA;AAC5B,QAAA,IAAI,aAAa,EAAE;AACjB,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC9C,SAAA;KACF;;iHApBU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAApE,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACbD;;;;AAIG;MAWU,sBAAsB,CAAA;AACjC,IAAA,WAAA,CAAoB,oBAA0C,EAAA;AAA1C,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;KAAI;IAElE,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;KACpC;AAED,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;KAC7C;;mHATU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAsE,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,yDCfnC,uWAaA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAApF,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDEa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;+BACE,mBAAmB,EAAA,eAAA,EAEZ,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,uWAAA,EAAA,CAAA;;;AEbjD;;;;AAIG;MAqBU,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,iBAHf,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAV3B,YAAY,EAAE,UAAU,aAWxB,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAErB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAZnB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,sBAAsB,EAAE;AACtB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EATS,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAavB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAd/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;AACnC,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,sBAAsB,EAAE;AACtB,oCAAA,SAAS,EAAE,sBAAsB;AAClC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC,CAAA;;;ACxBD;;;;AAIG;;ACJH;;;;AAIG;MAWU,YAAY,CAAA;IAKvB,WACY,CAAA,MAAyB,EACzB,eAAiC,EAAA;AADjC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAmB;AACzB,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;KACzC;AAEJ;;;AAGG;AACH,IAAA,IAAI,CAAC,aAAgC,EAAA;;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAChE,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;;;;AAInC,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,OAAO,0CAAG,gBAAgB,CAAC,0CAAG,CAAC,CAAC,CAAC,CAAC;KAC7D;AAED,IAAA,QAAQ,CAAC,KAAyB,EAAA;AAChC,QAAA,IAAI,KAAK,EAAE;YACT,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC;;YAE1D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;;YAEvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACvC,YAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC5B,SAAA;KACF;;yGAhCU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cADC,MAAM,EAAA,CAAA,CAAA;2FACnB,YAAY,EAAA,UAAA,EAAA,CAAA;kBADxB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ACdlC;;;;AAIG;AAKG,SAAU,SAAS,CAAC,YAA0B,EAAA;AAClD,IAAA,MAAM,MAAM,GAAG,CAAC,SAA4B,KAAK,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9E,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;MAYY,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAX,WAAW,EAAA,CAAA,CAAA;AAAX,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EATX,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,UAAU,EAAE,SAAS;YACrB,IAAI,EAAE,CAAC,YAAY,CAAC;AACrB,SAAA;AACF,KAAA,EAAA,CAAA,CAAA;2FAEU,WAAW,EAAA,UAAA,EAAA,CAAA;kBAVvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,KAAK,EAAE,IAAI;AACX,4BAAA,UAAU,EAAE,SAAS;4BACrB,IAAI,EAAE,CAAC,YAAY,CAAC;AACrB,yBAAA;AACF,qBAAA;iBACF,CAAA;;;ACvBD;;;;AAIG;MAoBU,YAAY,CAAA;;yGAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0GAAZ,YAAY,EAAA,OAAA,EAAA,CARrB,eAAe,EAAA4F,kBAAA,EAEf,eAAe;QACf,WAAW,aAGH,eAAe,CAAA,EAAA,CAAA,CAAA;0GAEd,YAAY,EAAA,SAAA,EAHZ,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC,YALpD,eAAe;QACf,kBAAkB,CAAC,OAAO,EAAE;QAC5B,eAAe;AACf,QAAA,WAAW,EAGH,eAAe,CAAA,EAAA,CAAA,CAAA;2FAEd,YAAY,EAAA,UAAA,EAAA,CAAA;kBAVxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,eAAe;wBACf,kBAAkB,CAAC,OAAO,EAAE;wBAC5B,eAAe;wBACf,WAAW;AACZ,qBAAA;AACD,oBAAA,SAAS,EAAE,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;oBACtD,OAAO,EAAE,CAAC,eAAe,CAAC;iBAC3B,CAAA;;;ACvBD;;;;AAIG;;ACJH;;;;AAIG;AAES,IAAA,kBAEX;AAFD,CAAA,UAAY,iBAAiB,EAAA;AAC3B,IAAA,iBAAA,CAAA,YAAA,CAAA,GAAA,eAA4B,CAAA;AAC9B,CAAC,EAFW,iBAAiB,KAAjB,iBAAiB,GAE5B,EAAA,CAAA,CAAA;;ACRD;;;;AAIG;MAyBU,mBAAmB,CAAA;AAqB9B,IAAA,YAAY,CAAC,KAAoB,EAAA;AAC/B,QAAA,IAAI,CAAC,oBAAoB,CAAC,YAAY,CACpC,IAAI,CAAC,UAAU,CAAC,aAAa,EAC7B,IAAI,CAAC,mBAAmB,EACxB,KAAK,CACN,CAAC;KACH;AAED,IAAA,WAAA,CACU,oBAA0C,EAC1C,cAA8B,EAC5B,UAAmC,EACnC,oBAA0C,EAAA;AAH5C,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC5B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAyB;AACnC,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QA/BtD,IAAA,CAAA,WAAW,GAAwB,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;AAE/D,QAAA,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;AAIrB,QAAA,IAAI,CAAA,IAAA,GAAG,cAAc,CAAC;;AAGvB,QAAA,IAAQ,CAAA,QAAA,GAAG,GAAG,CAAC;QAIhC,IAAA,CAAA,mBAAmB,GAAgB;AACzC,YAAA,aAAa,EAAE,IAAI;AACnB,YAAA,mBAAmB,EAAE,IAAI;SAC1B,CAAC;KAgBE;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc;AAC5C,aAAA,YAAY,EAAE;AACd,aAAA,SAAS,CAAC,CAAC,GAAG,KAAI;AACjB,YAAA,IAAI,CAAC,eAAe,GAAG,GAAG,KAAK,IAAI,CAAC;AACpC,YAAA,IAAI,CAAC,cAAc,GAAG,GAAG,KAAK,KAAK,CAAC;AACtC,SAAC,CAAC,CAAC;KACN;AAED,IAAA,0BAA0B,CAAC,KAAU,EAAA;AACnC,QAAA,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;AAC7B,QAAA,IACE,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,QAAQ;AAC3C,YAAA,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,EACzC;YACA,IAAI,CAAC,YAAY,EAAE,CAAC;AACrB,SAAA;KACF;IAED,YAAY,GAAA;AACV,QAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACxC;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC7B,YAAA,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;AACzC,SAAA;KACF;;gHA/DU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAApF,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAsF,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oGAAnB,mBAAmB,EAAA,QAAA,EAAA,eAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,wBAAA,EAAA,sBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,eAAA,EAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAanB,iBAAiB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC1C9B,2jCA8BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAnD,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAoD,sBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,iBAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,iBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDDa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,SAAS;+BACE,eAAe,EAAA,QAAA,EAAA,2jCAAA,EAAA,CAAA;8LASc,eAAe,EAAA,CAAA;sBAArD,WAAW;uBAAC,wBAAwB,CAAA;gBACC,cAAc,EAAA,CAAA;sBAAnD,WAAW;uBAAC,uBAAuB,CAAA;gBACV,IAAI,EAAA,CAAA;sBAA7B,WAAW;uBAAC,WAAW,CAAA;gBAGC,QAAQ,EAAA,CAAA;sBAAhC,WAAW;uBAAC,UAAU,CAAA;gBAEO,KAAK,EAAA,CAAA;sBAAlC,SAAS;uBAAC,iBAAiB,CAAA;gBAQ5B,YAAY,EAAA,CAAA;sBADX,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AEjD5C;;;;AAIG;MA6BU,yBAAyB,CAAA;;sHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAzB,yBAAyB,EAAA,YAAA,EAAA,CAHrB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAVhC,YAAY;QACZ,YAAY;QACZ,4BAA4B;QAC5B,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,cAAc;QACd,mBAAmB;QACnB,cAAc,aAGN,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAElB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,YAblC,YAAY;QACZ,YAAY;QACZ,4BAA4B;QAC5B,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,cAAc;QACd,mBAAmB;QACnB,cAAc,CAAA,EAAA,CAAA,CAAA;2FAKL,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAfrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,4BAA4B;wBAC5B,YAAY;wBACZ,eAAe;wBACf,gBAAgB;wBAChB,cAAc;wBACd,mBAAmB;wBACnB,cAAc;AACf,qBAAA;oBACD,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;AChCD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAyCU,oBAAoB,CAAA;IAsD/B,WACY,CAAA,EAAsB,EACtB,WAAwB,EACxB,kBAAsC,EACtC,oBAA0C,EAC1C,WAA+B,EAC/B,mBAAwC,EAAA;AALxC,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAoB;AACtB,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AACxB,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AAC/B,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QAxDpD,IAAA,CAAA,gBAAgB,GAA4B,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;AAa5E,QAAA,IAAiB,CAAA,iBAAA,GAAG,IAAI,CAAC;AAMzB,QAAA,IAAa,CAAA,aAAA,GAAG,IAAI,CAAC;AAGrB,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AAGxC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AAIxC,QAAA,IAAA,CAAA,YAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;QAEhD,IAAA,CAAA,WAAW,GAAqB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AAC5C,YAAA,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AACrB,gBAAA,OAAO,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;aACrC,CAAC;YACF,SAAS,EAAE,CAAC,EAAE,CAAC;AACf,YAAA,SAAS,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AACpC,YAAA,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AACnC,YAAA,KAAK,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,CAAC;AACX,YAAA,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AAC/B,YAAA,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AACpB,gBAAA,OAAO,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;aACrC,CAAC;AACF,YAAA,UAAU,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AACrC,YAAA,KAAK,EAAE,EAAE;AACT,YAAA,SAAS,EAAE,EAAE;YACb,cAAc,EAAE,CAAC,KAAK,CAAC;AACxB,SAAA,CAAC,CAAC;KASC;IAEJ,QAAQ,GAAA;;AAEN,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC,IAAI,CACnE,GAAG,CAAC,CAAC,SAAoB,KAAI;YAC3B,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACvC,gBAAA,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;AACjD,aAAA;SACF,CAAC,CACH,CAAC;;AAGF,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;;AAGhC,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACxC,SAAS,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EACnE,GAAG,CAAC,CAAC,OAAiB,KAAI;YACxB,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC7D,YAAA,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,gBAAA,aAAa,aAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,MAAM,EAAE,CAAC;AACzB,aAAA;AAAM,iBAAA;AACL,gBAAA,aAAa,aAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,OAAO,EAAE,CAAC;AAC1B,aAAA;SACF,CAAC,CACH,CAAC;AAEF,QAAA,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE9C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC/C,YAAA,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC9C,aAAA;AACF,SAAA;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KAC1D;IAED,SAAS,GAAA;AACP,QAAA,OAAO,aAAa,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0BAA0B,CAAC;AACtD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;AAC7B,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,KAAI;YAC9B,MAAM,SAAS,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;AACpD,YAAA,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACxB,YAAA,OAAO,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,CAAC;SAC/B,CAAC,CACH,CAAC;KACH;AAES,IAAA,gCAAgC,CAAC,OAA0B,EAAA;;AACnE,QAAA,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACjD,SAAA;AAAM,aAAA,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;;YAExC,IACE,CAAA,EAAA,GAAA,OAAO,CAAC,MAAM,0CAAE,MAAM,CAAC,IAAI,CACzB,CAAC,KAAiB,KAAK,KAAK,CAAC,OAAO,KAAK,WAAW,CACrD,EACD;AACA,gBAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,2BAA2B,EAAE,EACpC,iBAAiB,CAAC,cAAc,CACjC,CAAC;AACH,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,4BAA4B,EAAE,EACrC,iBAAiB,CAAC,cAAc,CACjC,CAAC;AACH,aAAA;AACF,SAAA;AAAM,aAAA,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACxC,YAAA,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;AACpC,SAAA;KACF;AAED,IAAA,eAAe,CAAC,OAA4B,EAAA;;QAC1C,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,OAAO,CAAC,CAAC;AAC5E,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,OAAO,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC,CAAC;KACpD;AAED,IAAA,cAAc,CAAC,MAAc,EAAA;;QAC3B,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,SAAS,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC1E;IAED,oBAAoB,GAAA;AAClB,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,QAAQ,CAClD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,CACtC,CAAC;KACH;IAED,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC3B;IAED,aAAa,GAAA;;AACX,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAC1B,YAAA,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,OAAO,EAAE;AACjD,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,KAAI;AAChD,oBAAA,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CACtB,CAAC,MAAM,KACL,MAAM,CAAC,OAAO;AACd,wBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,OAAO,CACpD,CAAC;oBACF,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE;AAC3C,wBAAA,YAAY,EAAE,GAAG,KAAA,IAAA,IAAH,GAAG,KAAH,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAG,CAAE,YAAY;AAChC,qBAAA,CAAC,CAAC;AACL,iBAAC,CAAC,CAAC;AACJ,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,kBAAkB;AACpB,qBAAA,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACrC,qBAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACnB,oBAAA,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC,CAAC;iBAC9C,CAAC,CACL,CAAC;AACH,aAAA;AAAM,iBAAA;;;AAGL,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;AACrC,SAAA;KACF;AAED,IAAA,oBAAoB,CAAC,OAA0B,EAAA;AAC7C,QAAA,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,gEAE7C,IAAI,CAAC,OAAO,EACZ;AACE,YAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YACtC,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;AAC/C,SAAA,CACF,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,mBAAmB,CAAC,WAAW;AACjC,aAAA,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACzC,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AACpB,YAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC9B,gBAAA,MAAM,OAAO,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACR,MAAM,CAAA,EAAA,EACT,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAC3C,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EACnC,QAAQ,EAAE,IAAI,EAAA,CACf,CAAC;AACF,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClC,aAAA;SACF,CAAC,CACL,CAAC;KACH;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;iHA3NU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAhF,IAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA+F,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,2bC7CjC,45PAoPA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAxC,qBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA1C,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,uGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkC,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,aAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,cAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,eAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,SAAA,EAAA,YAAA,EAAA,cAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,wBAAA,EAAA,UAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,YAAA,EAAA,UAAA,EAAA,UAAA,EAAA,sBAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,QAAA,EAAA,OAAA,EAAA,aAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAuB,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAf,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAxD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDvMa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;+BACE,iBAAiB,EAAA,eAAA,EAEV,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,45PAAA,EAAA,CAAA;yQAU/C,WAAW,EAAA,CAAA;sBADV,KAAK;gBAIN,cAAc,EAAA,CAAA;sBADb,KAAK;gBAIN,cAAc,EAAA,CAAA;sBADb,KAAK;gBAIN,iBAAiB,EAAA,CAAA;sBADhB,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,MAAM;gBAIP,aAAa,EAAA,CAAA;sBADZ,MAAM;gBAGc,OAAO,EAAA,CAAA;sBAA3B,SAAS;uBAAC,QAAQ,CAAA;;;AE5ErB;;;;AAIG;MAmBU,oBAAoB,CAAA;AAU/B,IAAA,WAAA,CACS,OAAoC,EACjC,WAA+B,EAC/B,oBAA0C,EAAA;AAF7C,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAA6B;AACjC,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AAC/B,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAPtD,QAAA,IAAkB,CAAA,kBAAA,GAAG,KAAK,CAAC;AAC3B,QAAA,IAAmB,CAAA,mBAAA,GAAG,KAAK,CAAC;KAOxB;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,EAAE,CAAC;AACtE,QAAA,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;KAC9B;IAED,sBAAsB,GAAA;AACpB,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;AACjC,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;KAChC;AAED,IAAA,uBAAuB,CAAC,OAAgB,EAAA;AACtC,QAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAChC,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAChC,QAAA,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;KAC/B;AAED,IAAA,gBAAgB,CAAC,OAAgB,EAAA;AAC/B,QAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAChC,QAAA,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KACtC;IAED,gBAAgB,GAAA;AACd,QAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;KACjC;AAED,IAAA,iBAAiB,CAAC,OAAgB,EAAA;AAChC,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AACxC,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;AACpE,SAAA;KACF;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;KAClC;AAED,IAAA,cAAc,CAAC,OAAgB,EAAA;AAC7B,QAAA,OAAO,aAAa,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,CAAC;AACjD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0BAA0B,CAAC;AACtD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC;AAC3C,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC;AACzC,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uCAAuC,CAAC;AACnE,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,yBAAyB,CAAC;AACrD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0BAA0B,CAAC;SACvD,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,WAAW,EACX,gBAAgB,EAChB,UAAU,EACV,QAAQ,EACR,mBAAmB,EACnB,SAAS,EACT,UAAU,EACX,KAAI;;YACH,IAAI,MAAM,GAAG,EAAE,CAAC;YAEhB,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;gBAC5C,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AACxC,aAAA;YAED,MAAM,OAAO,GAAsC,EAAE,CAAC;AACtD,YAAA,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AAC3B,gBAAA,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AAC5D,aAAA;AACD,YAAA,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;AAChD,YAAA,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YAEpD,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;YAElE,OAAO;AACL,gBAAA,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ;AACpD,gBAAA,IAAI,EAAE;AACJ,oBAAA,OAAO,CAAC,KAAK;AACb,oBAAA,OAAO,CAAC,KAAK;AACb,oBAAA,OAAO,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,IAAG,CAAA,EAAA,GAAA,OAAO,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAA;AACvD,oBAAA,OAAO,CAAC,UAAU;oBAClB,OAAO;AACR,iBAAA;AACD,gBAAA,OAAO,EAAE,OAAO;AAChB,gBAAA,MAAM,EAAE,OAAO,CAAC,cAAc,GAAG,CAAA,EAAA,EAAK,WAAW,CAAA,CAAE,GAAG,EAAE;AACxD,gBAAA,SAAS,EAAE,mBAAmB;gBAC9B,KAAK,EAAE,OAAO,CAAC,cAAc;AAC3B,sBAAE,oCAAoC;AACtC,sBAAE,uCAAuC;aACpC,CAAC;SACX,CACF,CACF,CAAC;KACH;AAED,IAAA,mBAAmB,CAAC,OAAgB,EAAA;;AAClC,QAAA,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA,EAAA,GAAA,OAAO,CAAC,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;AACE,YAAA,GAAG,EAAE,0CAA0C;AAC/C,YAAA,MAAM,EAAE,EAAE,aAAa,EAAE,OAAO,CAAC,KAAK,EAAE;AACzC,SAAA,EACD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;KACH;AAED,IAAA,aAAa,CAAC,SAAiB,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;KAC3C;AAED,IAAA,OAAO,CAAC,SAAiB,EAAA;AACvB,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AAC/B,YAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC3B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC/B,SAAA;KACF;IAED,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;;iHAvIU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAgG,2BAAA,EAAA,EAAA,EAAA,KAAA,EAAAhG,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,uDCvBjC,s1FA2FA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAiG,aAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAnB,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA/E,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDpEa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,s1FAAA,EAAA,CAAA;;;AEpB7B;;;;AAIG;MASmB,UAAU,CAAA;;uGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAV,UAAU,EAAA,UAAA,EAHlB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,UAAU,EAAA,UAAA,EAAA,CAAA;kBAJ/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;ACZD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAOU,mBAAmB,CAAA;AAC9B;;;;;;AAMG;IACH,QAAQ,CAAC,GAAW,EAAE,QAAiB,EAAA;QACrC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAEzC,QAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAG,EAAA,QAAQ,CAAE,CAAA,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;AACjC,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC;;gHAjBU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACVD;;;;AAIG;MASU,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CAAsB,mBAAwC,EAAA;AAAxC,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAAI;AAClE;;;;;;AAMG;IACO,OAAO,CAAC,YAAwB,EAAE,SAAiB,EAAA;QAC3D,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC,SAAiB,EAAE,GAAa,KAAI;YAC9D,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,MAAM,KAAI;AAC9C,gBAAA,WAAW,IAAI,WAAW,KAAK,EAAE,GAAG,SAAS,GAAG,EAAE,CAAC;AACnD,gBAAA,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,MAAM,CAAA,CAAA,CAAG,GAAG,MAAM,CAAC;AACjE,gBAAA,OAAO,CAAG,EAAA,WAAW,CAAG,EAAA,IAAI,EAAE,CAAC;aAChC,EAAE,EAAE,CAAC,CAAC;AACP,YAAA,OAAO,CAAG,EAAA,SAAS,CAAG,EAAA,IAAI,MAAM,CAAC;SAClC,EAAE,EAAE,CAAC,CAAC;KACR;AAED;;;;;;AAMG;AACH,IAAA,QAAQ,CACN,YAAwB,EACxB,SAAiB,EACjB,WAA8B,EAAA;QAE9B,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC;QAClD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;AAC1D,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/C,MAAM,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AAEtC,QAAA,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAA,EAAG,QAAQ,CAAA,CAAA,EAAI,SAAS,CAAA,CAAE,CAAC,CAAC;KACpE;;iHAtCU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAmG,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACZD;;;;AAIG;MAQU,iBAAiB,CAAA;AAC5B;;;;;AAKG;AACH,IAAA,YAAY,CAAC,IAAU,EAAA;AACrB,QAAA,OAAO,IAAI,UAAU,CAAC,CAAC,QAA0B,KAAI;AACnD,YAAA,MAAM,UAAU,GAAe,IAAI,UAAU,EAAE,CAAC;AAChD,YAAA,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5B,YAAA,UAAU,CAAC,MAAM,GAAG,MAAK;AACvB,gBAAA,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAgB,CAAC,CAAC;gBAC3C,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACtB,aAAC,CAAC;AACF,YAAA,UAAU,CAAC,OAAO,GAAG,CAAC,KAAK,KAAI;gBAC7B,UAAU,CAAC,KAAK,EAAE,CAAC;AACnB,gBAAA,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACxB,aAAC,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;;8GApBU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACXD;;;;AAIG;MAYU,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CAAsB,iBAAoC,EAAA;AAApC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;KAAI;AAC9D;;;;;;AAMG;IACH,QAAQ,CAAC,IAAU,EAAE,SAAiB,EAAA;QACpC,OAAO,IAAI,CAAC,iBAAiB;aAC1B,YAAY,CAAC,IAAI,CAAC;AAClB,aAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,GAAa,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;KAC7D;AAED;;;;;;;;AAQG;IACH,YAAY,CACV,IAAU,EACV,EACE,SAAS,EACT,cAAc,EACd,UAAU,GAKX,EAAA;QAED,MAAM,gBAAgB,GAA4B,EAAE,CAAC;AACrD,QAAA,OACE,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CACzC,CAAC,IAAI,CACJ,GAAG,CAAC,CAAC,IAAY,KAAI;AACnB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;SAC5C,CAAC,EACF,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,EACxC,GAAG,CAAC,CAAC,IAAgB,KAAI;YACvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;YACjE,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,gBAAgB,EAAE,UAAU,CAAC,CAAC;AAClE,SAAC,CAAC,EACF,UAAU,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,EAClC,GAAG,CAAC,MACF,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,gBAAgB,CACrE,CACF,CAAC;KACH;AAED;;;;;;;AAOG;AACO,IAAA,KAAK,CACb,SAAiB,EACjB,SAAiB,EACjB,YAAY,GAAG,IAAI,EAAA;AAEnB,QAAA,OAAO,SAAS;aACb,KAAK,CAAC,IAAI,CAAC;AACX,aAAA,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;aACxE,MAAM,CACL,CAAC,KAAK,EAAE,KAAK,KAAK,EAAE,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CACpE,CAAC;KACL;IAES,aAAa,CAAC,IAAY,EAAE,MAAwB,EAAA;QAC5D,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,YAAA,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB,YAAA,MAAM,MAAM,CAAC;AACd,SAAA;KACF;AAES,IAAA,sBAAsB,CAC9B,IAAgB,EAChB,MAAwB,EACxB,UAAmB,EAAA;AAEnB,QAAA,IAAI,UAAU,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE;AAC1C,YAAA,MAAM,CAAC,cAAc,GAAG,EAAE,UAAU,EAAE,CAAC;AACvC,YAAA,MAAM,MAAM,CAAC;AACd,SAAA;KACF;AAES,IAAA,mBAAmB,CAC3B,IAAgB,EAChB,MAAwB,EACxB,cAA8C,EAAA;AAE9C,QAAA,IAAI,cAAc,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAC3C,YAAA,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;AAC1B,YAAA,MAAM,MAAM,CAAC;AACd,SAAA;KACF;;iHAvGU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACfD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAUU,oBAAoB,CAAA;AAC/B;;;;;;;;;AASG;IACH,OAAO,cAAc,CAAC,OAAwB,EAAA;AAC5C,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAe,CAAC;AAEtC,QAAA,OAAO,KAAK,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC3D,cAAE,IAAI;AACN,cAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;KAC9B;AAED;;;;;;;;;AASG;IACH,OAAO,iBAAiB,CAAC,OAAwB,EAAA;AAC/C,QAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAe,CAAC;AAEzC,QAAA,OAAO,QAAQ,KAAK,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACvE,cAAE,IAAI;AACN,cAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;KACjC;AAED;;;;;;;;;AASG;IACH,OAAO,eAAe,CAAC,OAAwB,EAAA;AAC7C,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,KAAe,CAAC;AAEvC,QAAA,OAAO,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;KACxE;AAED;;;;;;;;;;AAUG;AACH,IAAA,OAAO,kBAAkB,CACvB,QAAgB,EAChB,oBAA4B,EAAA;AAE5B,QAAA,MAAM,SAAS,GAAG,CAAC,SAA2B,KAC5C,iBAAiB,CACf,SAAS,EACT,QAAQ,EACR,oBAAoB,EACpB,sBAAsB,CACvB,CAAC;AAEJ,QAAA,OAAO,SAAS,CAAC;KAClB;AAED;;;;;;;;;;AAUG;AACH,IAAA,OAAO,eAAe,CAAC,KAAa,EAAE,iBAAyB,EAAA;AAC7D,QAAA,MAAM,SAAS,GAAG,CAAC,SAA2B,KAC5C,iBAAiB,CACf,SAAS,EACT,KAAK,EACL,iBAAiB,EACjB,mBAAmB,CACpB,CAAC;AAEJ,QAAA,OAAO,SAAS,CAAC;KAClB;AAED;;;;;;;;;AASG;IACH,OAAO,cAAc,CAAC,OAAwB,EAAA;AAC5C,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,KAAe,CAAC;AAEvC,QAAA,OAAO,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC;KACxD;AAED;;;;;;;;;AASG;IACH,OAAO,mBAAmB,CACxB,OAAwB,EAAA;AAExB,QAAA,MAAM,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClC,QAAA,MAAM,oBAAoB,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,KACpD,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CACnB,CAAC;AAEF,QAAA,OAAO,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC;KAC7E;AAED;;;;;;;;;AASG;IACH,OAAO,iBAAiB,CACtB,aAAwC,EAAA;AAExC,QAAA,MAAM,SAAS,GAAG,CAAC,OAAwB,KAA6B;YACtE,MAAM,MAAM,GAAqB,EAAE,CAAC;YACpC,IACE,OAAO,CAAC,KAAK;gBACb,OAAO,CAAC,KAAK,KAAK,EAAE;AACpB,gBAAA,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,EAC7B;AACA,gBAAA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AACvB,aAAA;AACD,YAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC;AAC1D,SAAC,CAAC;AACF,QAAA,OAAO,SAAS,CAAC;KAClB;AAED;;;;;;;;;;;AAWG;AACH,IAAA,OAAO,SAAS,CACd,YAAoB,EACpB,UAAkB,EAClB,OAA4C,EAAA;QAE5C,OAAO,CAAC,SAA2B,KAA6B;;YAC9D,MAAM,gBAAgB,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC1D,MAAM,cAAc,GAAG,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACtD,MAAM,SAAS,GAAG,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,SAAS,IAAI,OAAO,EAAE;gBACxB,IAAI,EAAC,CAAA,EAAA,GAAA,gBAAgB,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAA,EAAE;oBACrC,IAAI,SAAS,GAAG,OAAO,EAAE;wBACvB,gBAAgB,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AAC3C,qBAAA;AACF,iBAAA;gBACD,IAAI,EAAC,CAAA,EAAA,GAAA,cAAc,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAA,EAAE;oBACnC,IAAI,OAAO,GAAG,SAAS,EAAE;wBACvB,cAAc,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AACzC,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AACd,SAAC,CAAC;KACH;AACF,CAAA;AAED;;;;;;;AAOG;AACG,SAAU,iBAAiB,CAC/B,SAA2B,EAC3B,gBAAwB,EACxB,iBAAyB,EACzB,SAAiB,EAAA;IAEjB,MAAM,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC1D,MAAM,aAAa,GAAG,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAE5D,IAAI,aAAa,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;QAC5D,OAAO;AACR,KAAA;IAED,aAAa,CAAC,SAAS,CACrB,YAAY,CAAC,KAAK,KAAK,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC,SAAS,GAAG,IAAI,EAAE,GAAG,IAAI,CAC1E,CAAC;AACJ;;ACpPA;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAmBU,+BAA+B,CAAA;AAc1C,IAAA,WAAW,CAAC,KAAc,EAAA;AACxB,QAAA,IAAK,KAAK,CAAC,MAAc,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE;AACnE,YAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAChC,SAAA;KACF;IAED,WACY,CAAA,mBAAwC,EACxC,EAAc,EAAA;AADd,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;AArB1B,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;QACtB,IAAA,CAAA,WAAW,GAAgB;AACzB,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,SAAS,EAAE,QAAQ;AACnB,YAAA,aAAa,EAAE,IAAI;SACpB,CAAC;QAIF,IAAA,CAAA,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;KAYnC;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;KAC7E;AAED,IAAA,UAAU,CAAC,MAAY,EAAA;AACrB,QAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC9C;AAED,IAAA,kBAAkB,CAAC,IAGlB,EAAA;;QACC,IAAI,CAAC,eAAe,GAAG,CAAA,MAAA,IAAI,CAAC,kBAAkB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM;AACpD,cAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC5B,cAAE,IAAI,CAAC,cAAc,CAAC;AACxB,QAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACnC;;4HAzCU,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAArG,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,+BAA+B,8HCvB5C,srJAgIA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,8FAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8C,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAzC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAgD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDzGa,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,SAAS;+BACE,+BAA+B,EAAA,eAAA,EAExB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,srJAAA,EAAA,CAAA;gIAgB/C,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AEpCnC;;;;AAIG;MA+BU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAHb,YAAA,EAAA,CAAA,oBAAoB,EAAE,+BAA+B,aAXlE,kBAAkB;QAClB,YAAY;QACZ,mBAAmB;QACnB,WAAW;QACX,YAAY;QACZ,cAAc;QACd,UAAU;QACV,UAAU;QACV,gBAAgB;QAChB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGX,oBAAoB,EAAE,+BAA+B,CAAA,EAAA,CAAA,CAAA;AAEpD,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAd1B,kBAAkB;QAClB,YAAY;QACZ,mBAAmB;QACnB,WAAW;QACX,YAAY;QACZ,cAAc;QACd,UAAU;QACV,UAAU;QACV,gBAAgB;QAChB,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAKV,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAhB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,kBAAkB;wBAClB,YAAY;wBACZ,mBAAmB;wBACnB,WAAW;wBACX,YAAY;wBACZ,cAAc;wBACd,UAAU;wBACV,UAAU;wBACV,gBAAgB;wBAChB,mBAAmB;AACpB,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,oBAAoB,EAAE,+BAA+B,CAAC;AACrE,oBAAA,OAAO,EAAE,CAAC,oBAAoB,EAAE,+BAA+B,CAAC;iBACjE,CAAA;;;AClCD;;;;AAIG;AAKI,MAAM,2CAA2C,GAAiB;AACvE,IAAA,MAAM,EAAE;AACN,QAAA,mBAAmB,EAAE;AACnB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,SAAS,EAAE,+BAA+B;YAC1C,UAAU,EAAE,WAAW,CAAC,MAAM;AAC/B,SAAA;AACF,KAAA;CACF;;ACjBD;;;;AAIG;MAwCU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAfb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CANjC,YAAY;QACZ,UAAU;QACV,iBAAiB;QACjB,aAAa;QACb,UAAU,aAGF,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAcnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAbjB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,2BAA2B,EAAE;AAC3B,oBAAA,SAAS,EAAE,oBAAoB;oBAC/B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;AACF,aAAA;SACF,CAAC;QACF,oBAAoB,CAAC,2CAA2C,CAAC;QACjE,kBAAkB;KACnB,EAAA,OAAA,EAAA,CAnBC,YAAY;QACZ,UAAU;QACV,iBAAiB;QACjB,aAAa;QACb,UAAU,CAAA,EAAA,CAAA,CAAA;2FAiBD,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAvB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,UAAU;wBACV,iBAAiB;wBACjB,aAAa;wBACb,UAAU;AACX,qBAAA;oBACD,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAC/B,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,2BAA2B,EAAE;AAC3B,oCAAA,SAAS,EAAE,oBAAoB;oCAC/B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iCAAA;AACF,6BAAA;yBACF,CAAC;wBACF,oBAAoB,CAAC,2CAA2C,CAAC;wBACjE,kBAAkB;AACnB,qBAAA;iBACF,CAAA;;;AC3CD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAcU,yBAAyB,CAAA;IAWpC,WACY,CAAA,cAA8B,EAC9B,WAA+B,EAAA;AAD/B,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AALxB,QAAA,IAAS,CAAA,SAAA,GAAG,YAAY,CAAC;AACzB,QAAA,IAAoB,CAAA,oBAAA,GAAG,sBAAsB,CAAC;KAK7D;AAEJ,IAAA,gBAAgB,CAAC,MAAsB,EAAA;AACrC,QAAA,IAAI,CAAC,cAAc,CAAC,EAAE,CACpB;AACE,YAAA,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;SACjD,EACD;AACE,YAAA,WAAW,EAAE;gBACX,UAAU,EAAE,MAAM,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CACF,CAAC;KACH;AAEO,IAAA,gBAAgB,CAAC,MAAsB,EAAA;QAC7C,OAAO,MAAM,CAAC,qBAAqB;cAC/B,IAAI,CAAC,SAAS;AAChB,cAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC;KAClE;IAED,aAAa,GAAA;AAMX,QAAA,OAAO,aAAa,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,wBAAwB,CAAC;AACpD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,yBAAyB,CAAC;AACrD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC;AAClD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uBAAuB,CAAC;AACpD,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,kBAAkB,EAClB,mBAAmB,EACnB,gBAAgB,EAChB,iBAAiB,EAClB,KAAI;YACH,OAAO;AACL,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,eAAe,EAAE,mBAAmB;AACpC,gBAAA,YAAY,EAAE,gBAAgB;AAC9B,gBAAA,aAAa,EAAE,iBAAiB;aACjC,CAAC;SACH,CACF,CACF,CAAC;KACH;;sHAhEU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,cAFxB,MAAM,EAAA,CAAA,CAAA;2FAEP,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAHrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACjBD;;;;AAIG;MAuBU,mBAAmB,CAAA;AAY9B,IAAA,WAAA,CACY,yBAAoD,EACpD,mBAAwC,EACxC,GAAqB,EAAA;AAFrB,QAAA,IAAyB,CAAA,yBAAA,GAAzB,yBAAyB,CAA2B;AACpD,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AAVjC,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,YAAY,EAGlC,CAAC;KAQD;IAEJ,oBAAoB,GAAA;;AAClB,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;YAC5B,QAAQ,EAAE,MAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,mCAAI,EAAE;AACpC,YAAA,YAAY,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc;AAC1C,SAAA,CAAC,CAAC;KACJ;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAA,QAAA,6BAEhD,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,GAAG,EACR,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CACxB,CAAC;AAEF,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;AAClC,SAAA;KACF;IAED,YAAY,GAAA;QACV,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9D;;gHAxCU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAqD,yBAAA,EAAA,EAAA,EAAA,KAAA,EAAAnH,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,2SC3BhC,siEA2DA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAiD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDhCa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,gBAAgB,EAAA,eAAA,EAET,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,siEAAA,EAAA,CAAA;2KAGtC,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,0BAA0B,EAAA,CAAA;sBAAlC,KAAK;gBAGN,mBAAmB,EAAA,CAAA;sBADlB,MAAM;gBAMe,OAAO,EAAA,CAAA;sBAA5B,SAAS;uBAAC,SAAS,CAAA;;;AErCtB;;;;AAIG;MAiBU,kBAAkB,CAAA;IA6C7B,WACY,CAAA,aAAoC,EACpC,yBAAoD,EAAA;AADpD,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAuB;AACpC,QAAA,IAAyB,CAAA,yBAAA,GAAzB,yBAAyB,CAA2B;AA1ChE,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AAEd,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;AAEnC,QAAA,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;QACf,IAAA,CAAA,WAAW,GAA8B;AAC/C,YAAA,cAAc,EAAE,eAAe;AAC/B,YAAA,eAAe,EAAE,gBAAgB;AACjC,YAAA,YAAY,EAAE,aAAa;AAC3B,YAAA,aAAa,EAAE,cAAc;SAC9B,CAAC;AACF,QAAA,IAAI,CAAA,IAAA,GAAG,gBAAgB,CAAC;QAExB,IAAA,CAAA,WAAW,GAAG;AACZ,YAAA;AACE,gBAAA,IAAI,EAAE,gBAAgB;AACtB,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,iBAAiB;AACvB,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,cAAc;AACpB,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,eAAe;AACrB,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA;SACF,CAAC;KAaE;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa;AACpC,aAAA,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;AAClC,aAAA,IAAI,CACH,GAAG,CACD,CAAC,OAAO,KAAI;;AACV,YAAA,QAAC,IAAI,CAAC,UAAU,GAAG;AACjB,gBAAA,WAAW,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,UAAU,0CAAE,IAAI;AACrC,gBAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,UAAU,0CAAE,KAAK;AACnC,gBAAA,UAAU,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,UAAU,0CAAE,UAAU;AAC1C,gBAAA,YAAY,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,UAAU,0CAAE,UAAU;gBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;AAChB,aAAA,EAAC;AAAA,SAAA,CACL,CACF,CAAC;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,EAAE,CAAC;AACtE,QAAA,IAAI,CAAC,0BAA0B,GAAG,aAAa,CAAC;AAC9C,YAAA,IAAI,CAAC,aAAa,CAAC,uCAAuC,EAAE;AAC5D,YAAA,IAAI,CAAC,aAAa,CAAC,yCAAyC,EAAE;AAC/D,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,aAAa,CAAC,KAAK,WAAW,IAAI,aAAa,CAAC,CACpE,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,CAAC;AAEjE,QAAA,IAAI,CAAC,aAAa;aACf,GAAG,CACF,IAAI,CAAC,aAAa;AACf,aAAA,qCAAqC,EAAE;AACvC,aAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACnB,YAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAC,CAAC,CACL;aACA,GAAG,CACF,IAAI,CAAC,aAAa;AACf,aAAA,uCAAuC,EAAE;AACzC,aAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACnB,YAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B,CAAC,CACL,CAAC;KACL;AAEO,IAAA,gBAAgB,CAAC,KAAc,EAAA;AACrC,QAAA,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxD,SAAA;KACF;AAED,IAAA,UAAU,CAAC,IAAY,EAAA;AACrB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CACpC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,CAAC,WAAW,EAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CACvB,CAAC;KACH;AAED,IAAA,UAAU,CAAC,IAAY,EAAA;QACrB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CACpC,IAAI,CAAC,SAAS,EACd,IAAI,EACJ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAC5B,CAAC;KACH;AAED,IAAA,kBAAkB,CAAC,EACjB,QAAQ,EACR,YAAY,GAIb,EAAA;AACC,QAAA,IAAI,YAAY,EAAE;AAChB,YAAA,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;AACtD,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AACxD,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;;+GAnIU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAmE,yBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,qDCrB/B,60HAiHA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA/C,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAd,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8D,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,cAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,4BAAA,CAAA,EAAA,OAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD5Fa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAJ9B,SAAS;+BACE,eAAe,EAAA,QAAA,EAAA,60HAAA,EAAA,CAAA;;;AElB3B;;;;AAIG;MAoBU,qBAAqB,CAAA;AAahC,IAAA,WAAW,CAAC,KAAc,EAAA;AACxB,QAAA,IAAK,KAAK,CAAC,MAAc,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE;AACnE,YAAA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC3B,SAAA;KACF;IAED,WACY,CAAA,mBAAwC,EACxC,EAAc,EAAA;AADd,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;AApBlB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAC1C,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;QAGtB,IAAA,CAAA,WAAW,GAAgB;AACzB,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,SAAS,EAAE,QAAQ;AACnB,YAAA,aAAa,EAAE,IAAI;SACpB,CAAC;KAYE;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AAChD,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,CAAC,CACH,CAAC;KACH;IAED,WAAW,GAAA;;AACT,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;KAClC;AAED,IAAA,KAAK,CAAC,MAAY,EAAA;AAChB,QAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC9C;;kHAtCU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA3G,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,iHCxBlC,qxDAsDA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAiE,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAmB,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAhD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAqB,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD9Ba,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,kBAAkB,EAAA,eAAA,EAEX,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,qxDAAA,EAAA,CAAA;gIAe/C,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AEpCnC;;;;AAIG;MAeU,oBAAoB,CAAA;AAG/B,IAAA,WAAA,CACY,aAAoC,EACpC,cAA8B,EAC9B,cAAoC,EAAA;AAFpC,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAuB;AACpC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAsB;KAC5C;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,cAAc;AAChB,aAAA,cAAc,EAAE;AAChB,aAAA,SAAS,CAAC,CAAC,CAAC,KAAI;YACf,MAAM,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7C,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;AACnD,gBAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa;AACnC,qBAAA,mCAAmC,EAAE;AACrC,qBAAA,SAAS,CAAC,CAAC,OAAO,KAAI;AACrB,oBAAA,IAAI,OAAO,EAAE;AACX,wBAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CACrB,EAAE,GAAG,EAAE,+BAA+B,EAAE,EACxC,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;AACH,qBAAA;oBACD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;AACjD,iBAAC,CAAC,CAAC;AACN,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;AACjD,aAAA;AACH,SAAC,CAAC;AACD,aAAA,WAAW,EAAE,CAAC;KAClB;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,YAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AACjC,SAAA;KACF;;iHAtCU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,uDAHrB,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FAGD,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,EAAE;AACZ,oBAAA,QAAQ,EAAE,iBAAiB;iBAC5B,CAAA;;;AClBD;;;;AAIG;AAKI,MAAM,yBAAyB,GAAiB;AACrD,IAAA,MAAM,EAAE;AACN,QAAA,MAAM,EAAE;AACN,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,SAAS,EAAE,qBAAqB;YAChC,UAAU,EAAE,WAAW,CAAC,MAAM;AAC/B,SAAA;AACF,KAAA;CACF;;ACjBD;;;;AAIG;MAqEU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,iBAtBxB,kBAAkB;QAClB,mBAAmB;QACnB,qBAAqB;AACrB,QAAA,oBAAoB,aAvBpB,YAAY;QACZ,UAAU;QACV,aAAa;QACb,UAAU;QACV,YAAY;QACZ,SAAS;QACT,UAAU;AACV,QAAA,oBAAoB,EAUpB1C,IAAA,CAAA,YAAA,EAAA,mBAAmB,CAuBX,EAAA,OAAA,EAAA,CAAA,kBAAkB,EAAE,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAEvC,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAjBf,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,kBAAkB,EAAE;AAClB,oBAAA,SAAS,EAAE,kBAAkB;oBAC7B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;AACD,gBAAA,oBAAoB,EAAE;AACpB,oBAAA,SAAS,EAAE,oBAAoB;oBAC/B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;AACF,aAAA;SACF,CAAC;QACF,oBAAoB,CAAC,yBAAyB,CAAC;KAChD,EAAA,OAAA,EAAA,CAvCC,YAAY;QACZ,UAAU;QACV,aAAa;QACb,UAAU;QACV,YAAY;QACZ,SAAS;QACT,UAAU;QACV,oBAAoB;QACpB,YAAY,CAAC,QAAQ,CAAC;AACpB,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,WAAW,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AACtC,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE;AACjC,aAAA;SACF,CAAC;QACF,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAyBV,eAAe,EAAA,UAAA,EAAA,CAAA;kBA5C3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,UAAU;wBACV,aAAa;wBACb,UAAU;wBACV,YAAY;wBACZ,SAAS;wBACT,UAAU;wBACV,oBAAoB;wBACpB,YAAY,CAAC,QAAQ,CAAC;AACpB,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;AACV,gCAAA,WAAW,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AACtC,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE;AACjC,6BAAA;yBACF,CAAC;wBACF,mBAAmB;AACpB,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,kBAAkB;wBAClB,mBAAmB;wBACnB,qBAAqB;wBACrB,oBAAoB;AACrB,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,kBAAkB,EAAE;AAClB,oCAAA,SAAS,EAAE,kBAAkB;oCAC7B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iCAAA;AACD,gCAAA,oBAAoB,EAAE;AACpB,oCAAA,SAAS,EAAE,oBAAoB;oCAC/B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iCAAA;AACF,6BAAA;yBACF,CAAC;wBACF,oBAAoB,CAAC,yBAAyB,CAAC;AAChD,qBAAA;AACD,oBAAA,OAAO,EAAE,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;iBACpD,CAAA;;;ACxED;;;;AAIG;;ACJH;;;;AAIG;MAkCU,oBAAoB,CAAA;AA0B/B,IAAA,WAAA,CACU,sBAA4C,EAC5C,kBAAsC,EACtC,cAA8B,EAC9B,oBAA0C,EAAA;AAH1C,QAAA,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAsB;AAC5C,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AA7B5C,QAAA,IAAiB,CAAA,iBAAA,GAAG,EAAE,CAAC;QACvB,IAAA,CAAA,WAAW,GAA8B;AAC/C,YAAA,SAAS,EAAE,UAAU;AACrB,YAAA,UAAU,EAAE,WAAW;SACxB,CAAC;AACM,QAAA,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;AAE5B,QAAA,IAAI,CAAA,IAAA,GAAG,WAAW,CAAC;QACnB,IAAA,CAAA,WAAW,GAAG;AACZ,YAAA;AACE,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,YAAY;AAClB,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA;SACF,CAAC;KAaE;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB;AAC1C,aAAA,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,CAAC;AAClD,aAAA,IAAI,CACH,GAAG,CACD,CAAC,SAAS,KAAI;;AACZ,YAAA,QAAC,IAAI,CAAC,UAAU,GAAG;AACjB,gBAAA,WAAW,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,UAAU,0CAAE,IAAI;AACvC,gBAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,UAAU,0CAAE,KAAK;AACrC,gBAAA,UAAU,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,UAAU,0CAAE,UAAU;AAC5C,gBAAA,YAAY,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,UAAU,0CAAE,UAAU;AAC9C,gBAAA,IAAI,EAAE,WAAW;AAClB,aAAA,EAAC;AAAA,SAAA,CACL,EACD,GAAG,CAAC,MAAK;;YACP,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,gBAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,oBAAoB,0CAAE,GAAG,CAC5B,EAAE,GAAG,EAAE,yBAAyB,EAAE,EAClC,iBAAiB,CAAC,kBAAkB,EACpC,GAAG,CACJ,CAAC;AACH,aAAA;AACH,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,QAAQ,MAAK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACb,QAAQ,CACX,EAAA,EAAA,OAAO,EAAE,QAAQ,CAAC,OAAO;kBACrB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,sCACvB,MAAM,CAAA,EAAA,EACT,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAA,CAAA,CACjC,CAAC;AACL,kBAAE,QAAQ,CAAC,OAAO,EACpB,CAAA,CAAA,CAAC,CACJ,CAAC;AAEJ,QAAA,IAAI,CAAC,oBAAoB;AACvB,YAAA,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,EAAE,CAAC;AAC1D,QAAA,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;AACrC,YAAA,IAAI,CAAC,oBAAoB;AACzB,YAAA,IAAI,CAAC,sBAAsB,CAAC,8BAA8B,EAAE;AAC7D,SAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,KAAK,UAAU,IAAI,aAAa,CAAC,CAAC,CAAC;AAE3E,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;KACxC;IAEO,aAAa,GAAA;AAInB,QAAA,OAAO,aAAa,CAAC;AACnB,YAAA,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,+BAA+B,CAAC;AAClE,YAAA,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,gCAAgC,CAAC;AACpE,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAI;YAClB,OAAO;AACL,gBAAA,SAAS,EAAE,GAAG;AACd,gBAAA,UAAU,EAAE,IAAI;aACjB,CAAC;SACH,CAAC,CACH,CAAC;KACH;AAEO,IAAA,UAAU,CAChB,QAAsC,EAAA;;QAEtC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAC5B,CAAA,EAAA,GAAA,MAAA,QAAQ,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,mCAAI,EAAE,uCAE7B,CAAC;KACH;AAED,IAAA,cAAc,CACZ,QAEC,EAAA;AAED,QAAA,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC;YAC/C,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,oBAAoB,EAAE,QAAQ,CAAC,oBAAoB;AACpD,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,IAAY,EAAA;AACrB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,QAAA,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAC9C,IAAI,CAAC,iBAAiB,EACtB,CAAC,EACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CACvB,CAAC;KACH;AAED,IAAA,UAAU,CAAC,IAAY,EAAA;QACrB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAC9C,IAAI,CAAC,iBAAiB,EACtB,IAAI,EACJ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAC5B,CAAC;KACH;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAC;AACpD,QAAA,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,EAAE,CAAC;KACxD;;iHAxIU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,uDCtCjC,sqTAiQA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAgC,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA6D,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,cAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD3Na,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;+BACE,iBAAiB,EAAA,eAAA,EAEV,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,sqTAAA,EAAA,CAAA;;;AEpCjD;;;;AAIG;MAqDU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAhCb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAEjC,eAAe;QACf,YAAY;QACZ,UAAU;QACV,oBAAoB;QACpB,UAAU;QACV,SAAS;QACT,WAAW;AACX,QAAA,aAAa,gCAqBL,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAEnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAZjB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,oBAAoB,EAAE;AACpB,oBAAA,SAAS,EAAE,oBAAoB;oBAC/B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CA3BC,eAAe;QACf,YAAY;QACZ,UAAU;QACV,oBAAoB;QACpB,UAAU;QACV,SAAS;QACT,WAAW;QACX,aAAa;QACb,YAAY,CAAC,QAAQ,CAAC;AACpB,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,WAAW,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AACtC,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE;AACjC,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAcO,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAjC7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;AACpC,oBAAA,OAAO,EAAE;wBACP,eAAe;wBACf,YAAY;wBACZ,UAAU;wBACV,oBAAoB;wBACpB,UAAU;wBACV,SAAS;wBACT,WAAW;wBACX,aAAa;wBACb,YAAY,CAAC,QAAQ,CAAC;AACpB,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;AACV,gCAAA,WAAW,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AACtC,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE;AACjC,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,oBAAoB,EAAE;AACpB,oCAAA,SAAS,EAAE,oBAAoB;oCAC/B,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC,CAAA;;;ACxDD;;;;AAIG;MAeU,+BAA+B,CAAA;AAM1C,IAAA,WAAA,CACU,6BAAgE,EAAA;AAAhE,QAAA,IAA6B,CAAA,6BAAA,GAA7B,6BAA6B,CAAmC;AAHhE,QAAA,IAAW,CAAA,WAAA,GAA6B,EAAE,CAAC;KAIjD;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,6BAA6B,CAAC,4BAA4B,EAAE,CAAC;AAClE,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,6BAA6B;AACnD,aAAA,cAAc,EAAE;AAChB,aAAA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,MAAM,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AAChE,QAAA,IAAI,CAAC,6BAA6B,CAAC,eAAe,EAAE,CAAC;AAErD,QAAA,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;AAC9B,YAAA,IAAI,CAAC,6BAA6B,CAAC,qBAAqB,EAAE;AAC1D,YAAA,IAAI,CAAC,6BAA6B,CAAC,iCAAiC,EAAE;AACvE,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,aAAa,CAAC,KAAK,YAAY,IAAI,aAAa,CAAC,CACtE,CAAC;KACH;AAED,IAAA,gBAAgB,CAAC,UAAkC,EAAA;QACjD,MAAM,kBAAkB,GAA6B,EAAE,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAI;AAC7B,YAAA,IAAI,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE;AACpC,gBAAA,kBAAkB,CAAC,IAAI,CAClB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAC,CACJ,EAAA,EAAA,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,EAAA,CAAA,CACnB,CAAC;AACJ,aAAA;AAAM,iBAAA;AACL,gBAAA,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;KAC1E;;4HAtCU,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iCAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,+BAA+B,kECnB5C,6kDA0CA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA/G,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAsC,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAtC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDvBa,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,SAAS;+BACE,4BAA4B,EAAA,eAAA,EAErB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,6kDAAA,EAAA,CAAA;;;AEjBjD;;;;AAIG;MA4CU,4BAA4B,CAAA;;yHAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0HAA5B,4BAA4B,EAAA,YAAA,EAAA,CA3BxB,+BAA+B,CAAA,EAAA,OAAA,EAAA,CAE5C,YAAY;QACZ,aAAa;AACb,QAAA,UAAU,gCAqBF,+BAA+B,CAAA,EAAA,CAAA,CAAA;AAE9B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,EAZ5B,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,+BAA+B,EAAE;AAC/B,oBAAA,SAAS,EAAE,+BAA+B;oBAC1C,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAtBC,YAAY;QACZ,aAAa;QACb,UAAU;QACV,YAAY,CAAC,QAAQ,CAAC;AACpB,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,WAAW,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AACtC,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,wBAAwB,EAAE;AAC5C,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAcO,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBA5BxC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,+BAA+B,CAAC;AAC/C,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,aAAa;wBACb,UAAU;wBACV,YAAY,CAAC,QAAQ,CAAC;AACpB,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;AACV,gCAAA,WAAW,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AACtC,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,wBAAwB,EAAE;AAC5C,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,+BAA+B,EAAE;AAC/B,oCAAA,SAAS,EAAE,+BAA+B;oCAC1C,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,OAAO,EAAE,CAAC,+BAA+B,CAAC;iBAC3C,CAAA;;;AC/CD;;;;AAIG;;ACJH;;;;AAIG;MAmBU,uBAAuB,CAAA;AAMlC,IAAA,WAAA,CACU,kBAAsC,EACtC,WAA+B,EAC7B,oBAA2C,EAAA;AAF7C,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;AAC7B,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAuB;AANvD,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;KAOlB;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,IAAI,CACrE,GAAG,CAAC,CAAC,cAAc,KAAI;;AAErB,YAAA,IACE,cAAc,CAAC,MAAM,GAAG,CAAC;AACzB,gBAAA,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,aAAa,KAAK,aAAa,CAAC,cAAc,CAAC,EACrE;gBACA,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,aAAA;SACF,CAAC,CACH,CAAC;AAEF,QAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;AACnE,QAAA,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;KAC9C;AAED,IAAA,cAAc,CAAC,EACb,cAAc,EACd,iBAAiB,EACjB,WAAW,EACX,UAAU,EACV,UAAU,EACV,QAAQ,GACO,EAAA;AACf,QAAA,OAAO,aAAa,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0BAA0B,CAAC;AACtD,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC;AAC3C,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,gCAAgC,CAAC;AAC5D,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE;AAChD,gBAAA,KAAK,EAAE,WAAW;AAClB,gBAAA,IAAI,EAAE,UAAU;aACjB,CAAC;AACF,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,kCAAkC,CAAC;AAC/D,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,gBAAgB,EAChB,UAAU,EACV,sBAAsB,EACtB,WAAW,EACX,wBAAwB,EACzB,KAAI;;YACH,MAAM,OAAO,GAAsC,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,EAAE;AACnB,gBAAA,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AAC5D,aAAA;AACD,YAAA,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;AAClD,YAAA,MAAM,IAAI,GAAS;AACjB,gBAAA,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,cAAc,GAAG,wBAAwB,GAAG,SAAS;AAC7D,gBAAA,QAAQ,EAAE,iBAAiB;gBAC3B,IAAI,EAAE,CAAC,UAAU,KAAV,IAAA,IAAA,UAAU,KAAV,KAAA,CAAA,GAAA,UAAU,GAAI,EAAE,EAAE,WAAW,CAAC;gBACrC,OAAO;AACP,gBAAA,SAAS,EAAE,sBAAsB;AACjC,gBAAA,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA,EAAA,GAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC;AAC3C,gBAAA,KAAK,EAAE,cAAc;AACnB,sBAAE,iCAAiC;AACnC,sBAAE,oCAAoC;aACzC,CAAC;AAEF,YAAA,OAAO,IAAI,CAAC;SACb,CACF,CACF,CAAC;KACH;AAED,IAAA,mBAAmB,CAAC,aAA6B,EAAA;QAC/C,IAAI,aAAa,CAAC,EAAE,EAAE;YACpB,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAC9D,YAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC3B,SAAA;KACF;AAED,IAAA,OAAO,CAAC,aAA6B,EAAA;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,EAAE,CAAC;KAClC;IAED,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;KAC3B;AAED,IAAA,uBAAuB,CAAC,aAA6B,EAAA;;AACnD,QAAA,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,CAAA,EAAA,GAAA,aAAa,CAAC,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC,CAAC;AAC1E,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,oBAAoB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,CAC5B,EAAE,GAAG,EAAE,0CAA0C,EAAE,EACnD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;KACH;AAED,IAAA,WAAW,CAAC,IAAY,EAAA;AACtB,QAAA,IAAI,MAAc,CAAC;QACnB,IAAI,IAAI,KAAK,MAAM,EAAE;AACnB,YAAA,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC9B,SAAA;AAAM,aAAA,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,qBAAqB,EAAE;AAC9D,YAAA,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,SAAA;aAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;AAC5B,YAAA,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,SAAA;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AAC1B,YAAA,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC9B,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACf;;oHAtHU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,0DCvBpC,6hDA4CA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAgH,aAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAT,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAvG,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDrBa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAJnC,SAAS;+BACE,oBAAoB,EAAA,QAAA,EAAA,6hDAAA,EAAA,CAAA;;;AEpBhC;;;;AAIG;MA6BU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAHhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAX5B,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAYnD,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAEtB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAbpB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,8BAA8B,EAAE;AAC9B,oBAAA,SAAS,EAAE,uBAAuB;oBAClC,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EAAA,OAAA,EAAA,CAVS,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAclD,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAfhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC;AAC9D,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,8BAA8B,EAAE;AAC9B,oCAAA,SAAS,EAAE,uBAAuB;oCAClC,MAAM,EAAE,CAAC,SAAS,CAAC;AACpB,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC,CAAA;;;AChCD;;;;AAIG;;ACJH;;;;AAIG;MAsBU,kBAAkB,CAAA;IAI7B,WACS,CAAA,SAAkD,EAC/C,eAAgC,EAAA;AADnC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAyC;AAC/C,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;KACxC;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;KAClC;IAEO,QAAQ,GAAA;AACd,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAC/C,MAAM,CAAC,aAAa,CAAC,EACrB,GAAG,CAAC,CAAC,IAAI,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,OAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAA,EAAA,CAAC,CAClD,CAAC;KACH;;+GAtBU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAuB,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,qDC1B/B,8DACA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDyBa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,eAAe,EAAA,eAAA,EAER,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,8DAAA,EAAA,CAAA;;;AExBjD;;;;AAIG;AAkBG,MAAO,mBAAoB,SAAQ,kBAAkB,CAAA;AAGzD,IAAA,WAAA,CACS,SAAoD,EACjD,eAAgC,EAClC,WAA+B,EAAA;AAEvC,QAAA,KAAK,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAJ3B,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAA2C;AACjD,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AAClC,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;KAGxC;IAED,QAAQ,GAAA;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,SAAS,GAAA;AACf,QAAA,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;AAC3B,YAAA,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;AAC9B,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC;SAC1C,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,KACnB,CAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,WAAW,IAAG,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CACxE,CACF,CAAC;KACH;;gHAzBU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAuB,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,4ECtBhC,kqBAkBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAmC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAnC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDIa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,eAAe,EAAA,eAAA,EAER,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,kqBAAA,EAAA,CAAA;;;AEpBjD;;;;AAIG;MA2BU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAHZ,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAVxB,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAWtD,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAElB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAZhB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,mBAAmB,EAAE;AACnB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAarD,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAd5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,CAAC;AACjE,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,mBAAmB,EAAE;AACnB,oCAAA,SAAS,EAAE,mBAAmB;AAC/B,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B,CAAA;;;AC9BD;;;;AAIG;MAgBU,iBAAiB,CAAA;IAC5B,WACY,CAAA,UAAsB,EACtB,mBAAwC,EAAA;AADxC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAChD;AAEG,IAAA,gBAAgB,CACrB,KAAyC,EAAA;QAEzC,OAAO,aAAa,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAI;YAClB,OAAO;gBACL,KAAK,EAAE,IAAI,CAAC,IAAI;gBAChB,QAAQ,EAAE,CAAC,GAAG,CAAC;aAChB,CAAC;SACH,CAAC,CACH,CAAC;KACH;AAED;;;;AAIG;AACI,IAAA,iBAAiB,CACtB,KAAyC,EAAA;QAEzC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,EAAE,EAAE,CAAC;AACb,SAAA;QACD,OAAO,KAAK,CAAC,IAAI,CACf,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,EACxB,SAAS,CAAC,CAAC,IAAI,KAAI;;AACjB,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YACpE,OAAO,IAAI,CAAC,UAAU;AACnB,iBAAA,uBAAuB,CAAC,CAAA,EAAA,GAAA,UAAU,CAAC,GAAG,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC;AAC7C,iBAAA,IAAI,CACH,GAAG,CAAC,CAAC,KAAK,KAAI;;gBACZ,IAAI,KAAK,KAAK,SAAS,EAAE;AACvB,oBAAA,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;oBAChD,OAAO;AACR,iBAAA;;gBAED,MAAM,aAAa,GAGb,EAAE,CAAC;gBACT,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;AAChE,gBAAA,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAC1C,CAAC,GAAG,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAA,EAAA,CAC9B,CAAC;gBACF,MAAM,YAAY,GAAG,aAAa,CAAC,MAAM,CACvC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAChD,CAAC;AACF,gBAAA,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3B,oBAAA,IAAI,CAAC,UAAU,CAAC,mBAAmB,CACjC,CAAA,EAAA,GAAA,UAAU,CAAC,GAAG,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EACpB,YAAY,CACb,CAAC;AACH,iBAAA;AACH,aAAC,CAAC,EACF,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,KAAK,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAA,EAAA,GAAA,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,KAAK,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAA,EAAA,CAAC,CACrE,CAAC;SACL,CAAC,CACH,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,wBAAwB,CAC9B,QAA2B,EAC3B,IAAa,EACb,YAAyE,EAAE,EAAA;QAE3E,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,KAAI;gBACjC,SAAS,CAAC,IAAI,CAAC;oBACb,SAAS,EAAE,KAAK,CAAC,aAAa;oBAC9B,EAAE,EAAE,KAAK,CAAC,MAAM;AACjB,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAC9B,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CACvD,CAAC;AACH,SAAA;AAED,QAAA,IAAI,IAAI,IAAI,QAAQ,CAAC,GAAG,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAC9D,SAAA;KACF;AAED;;;;AAIG;IACK,sBAAsB,CAC5B,QAAa,EACb,KAAU,EAAA;;QAEV,MAAM,IAAI,GAAmB,EAAE,CAAC;QAEhC,IAAI,QAAQ,CAAC,KAAK,EAAE;;;AAGlB,YAAA,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC7B,SAAA;;QAGD,IAAI,QAAQ,CAAC,YAAY,EAAE;AACzB,YAAA,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;AAC3C,SAAA;;QAED,IAAI,QAAQ,CAAC,eAAe,EAAE;AAC5B,YAAA,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC;AACjD,SAAA;QAED,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACnD,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACrD,SAAA;QAED,IAAI,CAAA,MAAA,QAAQ,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,EAAE;AACjC,YAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ;AAC/B,iBAAA,GAAG,CAAC,CAAC,KAAU,KAAK,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC9D,MAAM,CAAC,OAAO,CAAC,CAAC;AACnB,YAAA,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACvB,gBAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,aAAA;AACF,SAAA;;AAGD,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;KACrD;AAED;;AAEG;AACK,IAAA,YAAY,CAAC,IAAoB,EAAE,KAAU,EAAE,KAAU,EAAA;AAC/D,QAAA,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAA,CAAA,EAAI,KAAK,CAAC,aAAa,CAAA,CAAE,CAAC,CAAC;;AAG7D,QAAA,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,kBAAkB,EAAE;AACjD,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACf,gBAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC5B,aAAA;YACD,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAE/B,YAAA,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE;AACrB,gBAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;;gBAGf,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AAClD,oBAAA,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AACxB,iBAAA;AACF,aAAA;;YAED,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,gBAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACvC,aAAA;;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,gBAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AAC7C,aAAA;AACF,SAAA;KACF;AAED;;;;;AAKG;AACO,IAAA,OAAO,CAAC,IAAS,EAAA;QACzB,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,OAAO,IAAI,CAAC,GAAG,CAAC;AACjB,SAAA;aAAM,IAAI,IAAI,CAAC,oBAAoB,EAAE;YACpC,OAAO,IAAI,CAAC,oBAAoB,CAAC;AAClC,SAAA;aAAM,IAAI,IAAI,CAAC,YAAY,EAAE;AAC5B,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;AACxC,gBAAA,OAAO,EAAE,UAAU;AACnB,gBAAA,MAAM,EAAE;oBACN,IAAI,EAAE,IAAI,CAAC,YAAY;oBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;AAChB,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;aAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC3B,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;AACxC,gBAAA,OAAO,EAAE,SAAS;AAClB,gBAAA,MAAM,EAAE;oBACN,IAAI,EAAE,IAAI,CAAC,WAAW;oBACtB,IAAI,EAAE,IAAI,CAAC,IAAI;AAChB,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;;8GA1MU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACnBD;;;;AAIG;MA2BU,qBAAqB,CAAA;IAqChC,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;IAED,WACU,CAAA,MAAc,EACd,QAAmB,EACnB,OAAmB,EACjB,oBAA0C,EAC1C,MAAiB,EAAA;AAJnB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACd,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;AACjB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AA7B7B;;;AAGG;AACH,QAAA,IAAQ,CAAA,QAAA,GAAG,SAAS,CAAC;AAErB;;;;AAIG;AACmC,QAAA,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;AAEb,QAAA,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;AAE9C,QAAA,IAAS,CAAA,SAAA,GAAkB,EAAE,CAAC;AAC9B,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;AACnC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAclC,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,MAAM,CAAC,MAAM;AACf,aAAA,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,YAAY,aAAa,CAAC,CAAC;aACvD,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,CACjC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;YAChD,IAAI,CAAC,8BAA8B,EAAE,CAAC;SACvC,CAAC,CACH,CAAC;KACH;AAED;;AAEG;IACH,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC5B,SAAA;KACF;AAED;;;AAGG;IACH,mBAAmB,GAAA;;QACjB,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,MAAA,IAAI,CAAC,oBAAoB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAClC,IAAI,CAAC,oBAAoB,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAC5C,CAAA,SAAS,CAAC,MAAK;YACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB,CAAC,CACL,CAAC;KACH;AAED,IAAA,yBAAyB,CAAC,OAAuB,EAAA;;AAC/C,QAAA,IACE,OAAO,OAAO,CAAC,GAAG,KAAK,QAAQ;AAC/B,aAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,YAAY,0CAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA,EAC7D;YACA,IAAI,CAAC,OAAO,CAAC,aAAa;iBACvB,gBAAgB,CAAC,qCAAqC,CAAC;AACvD,iBAAA,OAAO,CAAC,CAAC,EAAO,KAAI;gBACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;AAC7C,aAAC,CAAC,CAAC;YACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxB,YAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;AACpC,SAAA;KACF;AAED;;AAEG;IACH,gBAAgB,GAAA;;QACd,IAAI,CAAA,MAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;AAClE,SAAA;KACF;IAES,iBAAiB,GAAA;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,UAAU,KAAI;AACpC,YAAA,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AAC5B,iBAAA,MAAM,CAAC,CAAC,SAAS,KAAK,CAAA,SAAS,KAAT,IAAA,IAAA,SAAS,uBAAT,SAAS,CAAE,OAAO,MAAK,QAAQ,CAAC;AACtD,iBAAA,OAAO,CAAC,CAAC,SAAS,KAAI;gBACrB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;AAClE,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,KAAc,EAAA;AACvB,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;YAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;AACxB,SAAA;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,MAAM,IAAI,GAAgB,KAAK,CAAC,aAAa,CAAC;AAC9C,QAAA,MAAM,UAAU,GAAgB,IAAI,CAAC,UAAU,CAAC;QAChD,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AACvC,YAAA,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;AACb,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,UAAU,CAAC,CAAC;gBAChE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AAClD,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;AAC3D,SAAA;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjC,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;IAED,IAAI,GAAA;AACF,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EACzC,SAAS,CACV,CAAC;AACF,YAAA,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,SAAA;KACF;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED,IAAA,YAAY,CAAC,KAAiB,EAAA;AAC5B,QAAA,IAAI,CAAC,6BAA6B,CAAc,KAAK,CAAC,aAAa,CAAC,CAAC;AACrE,QAAA,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;KACvC;AAED,IAAA,aAAa,CAAC,IAAoB,EAAE,KAAK,GAAG,CAAC,EAAA;QAC3C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,YAAA,OAAO,IAAI,CAAC,GAAG,CACb,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAC9D,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;KACF;AAED,IAAA,cAAc,CAAC,MAAc,EAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC;KACxD;AAED,IAAA,yBAAyB,CAAC,KAAiB,EAAA;;AACzC,QAAA,MAAM,MAAM,KACT,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,EACrC,CAAC;QACF,IACE,CAAA,CAAA,EAAA,GAAA,MAAM,CAAC,aAAa,CAAC,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAC,eAAe,CAAC;aAC5D,CAAA,EAAA,GAAA,MAAM,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,SAAS,CAAC,CAAA,EACxC;YACA,MAAM,CAAC,KAAK,EAAE,CAAC;AAChB,SAAA;QACD,OAAO,MAAM,CAAC,aAAa,CAAC;KAC7B;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;AAClC,SAAA;KACF;AAEO,IAAA,6BAA6B,CAAC,IAAiB,EAAA;QACrD,MAAM,OAAO,GAAgB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC5D,MAAM,IAAI,GAAgB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC/C,QAAA,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AAClD,YAAA,IACE,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW;AACxC,gBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,EAClC;AACA,gBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,OAAO,EACP,aAAa,EACb,GAAG,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAA,EAAA,CAAI,CAC9C,CAAC;AACH,aAAA;AACF,SAAA;KACF;IAEO,8BAA8B,GAAA;QACpC,MAAM,IAAI,GAAmB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC;AACnE,QAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aACb,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC;AACvC,aAAA,OAAO,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,6BAA6B,CAAc,GAAG,CAAC,CAAC,CAAC;KAC3E;IAEO,aAAa,GAAA;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;YACjC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5C,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBAC7C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACzC,aAAA;AACH,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KACzC;;kHA3OU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAmG,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAxH,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,yVC/BlC,qwFAuFA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+E,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA1H,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDxDa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,kBAAkB,EAAA,eAAA,EAEX,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,qwFAAA,EAAA,CAAA;wMAMtC,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAKG,gBAAgB,EAAA,CAAA;sBAAxB,KAAK;gBAEG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAYgC,MAAM,EAAA,CAAA;sBAA3C,KAAK;;sBAAI,WAAW;uBAAC,cAAc,CAAA;gBAEG,MAAM,EAAA,CAAA;sBAA5C,KAAK;;sBAAI,WAAW;uBAAC,eAAe,CAAA;gBAOrC,QAAQ,EAAA,CAAA;sBADP,YAAY;uBAAC,eAAe,CAAA;;;AEnE/B;;;;AAIG;MAcU,2BAA2B,CAAA;IAOtC,WACY,CAAA,aAAuD,EACvD,OAA0B,EAAA;AAD1B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAA0C;AACvD,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAmB;AARtC,QAAA,IAAA,CAAA,KAAK,GAA+B,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAChE,IAAI,CAAC,aAAa,CAAC,KAAK,CACzB,CAAC;QAEF,IAAA,CAAA,KAAK,GAAuC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;KAKjE;;wHAVO,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA8B,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA6F,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,8DClBxC,8SAQA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,cAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA7D,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDUa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,wBAAwB,EAAA,eAAA,EAEjB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,8SAAA,EAAA,CAAA;;;AEhBjD;;;;AAIG;MAeU,mBAAmB,CAAA;IAa9B,WACY,CAAA,aAAuD,EACvD,OAA0B,EAAA;AAD1B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAA0C;AACvD,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAmB;AAdtC,QAAA,IAAA,CAAA,KAAK,GAA+B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC/D,IAAI,CAAC,aAAa,CAAC,KAAK,CACzB,CAAC;AAEF,QAAA,IAAK,CAAA,KAAA,GAAmC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACnE,GAAG,CAAC,CAAC,CAAC,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,CAAC,KAAA,IAAA,IAAD,CAAC,KAAD,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAC,CAAE,cAAc,0CAAE,KAAK,CAAA,EAAA,CAAC,CACrC,CAAC;QAEF,IAAW,CAAA,WAAA,GAAmC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACzE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAD,IAAA,IAAA,CAAC,KAAD,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAC,CAAE,UAAU,CAAC,CAC1B,CAAC;KAKE;;gHAhBO,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAjC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA6F,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,qDCnBhC,0JAMA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,cAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDaa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,eAAe,EAAA,eAAA,EAER,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0JAAA,EAAA,CAAA;;;AEjBjD;;;;AAIG;MA+BU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAHZ,YAAA,EAAA,CAAA,mBAAmB,EAAE,qBAAqB,aAfvD,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,iBAAiB;QACjB,UAAU,CAAA,EAAA,OAAA,EAAA,CAYF,mBAAmB,EAAE,qBAAqB,CAAA,EAAA,CAAA,CAAA;AAEzC,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAZhB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,mBAAmB,EAAE;AACnB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAdC,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,iBAAiB;QACjB,UAAU,CAAA,EAAA,CAAA,CAAA;2FAcD,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBApB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,UAAU;wBACV,iBAAiB;wBACjB,UAAU;AACX,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,mBAAmB,EAAE;AACnB,oCAAA,SAAS,EAAE,mBAAmB;AAC/B,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;AAC1D,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;iBACtD,CAAA;;;AClCD;;;;AAIG;MAyBU,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;sHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAHpB,2BAA2B,CAbhC,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,gBAAgB,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAc1C,2BAA2B,CAAA,EAAA,CAAA,CAAA;AAE1B,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAfxB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,2BAA2B,EAAE;AAC3B,oBAAA,SAAS,EAAE,2BAA2B;AACtC,oBAAA,IAAI,EAAE;AACJ,wBAAA,gBAAgB,EAAE,IAAI;AACvB,qBAAA;AACF,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAZS,YAAY,EAAE,gBAAgB,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAgBzC,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAjBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,UAAU,CAAC;AACrD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,2BAA2B,EAAE;AAC3B,oCAAA,SAAS,EAAE,2BAA2B;AACtC,oCAAA,IAAI,EAAE;AACJ,wCAAA,gBAAgB,EAAE,IAAI;AACvB,qCAAA;AACF,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,2BAA2B,CAAC;oBAC3C,OAAO,EAAE,CAAC,2BAA2B,CAAC;iBACvC,CAAA;;;AC5BD;;;;AAIG;MAeU,yBAAyB,CAAA;IASpC,WACY,CAAA,aAAuD,EACvD,OAA0B,EAAA;AAD1B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAA0C;AACvD,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAmB;AAVtC,QAAA,IAAA,CAAA,KAAK,GAA+B,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAChE,IAAI,CAAC,aAAa,CAAC,KAAK,CACzB,CAAC;QAEF,IAAW,CAAA,WAAA,GAAmC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACzE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAD,IAAA,IAAA,CAAC,KAAD,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAC,CAAE,UAAU,CAAC,CAC1B,CAAC;KAKE;;sHAZO,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA9F,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA6F,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,yBAAyB,4DCnBtC,oOAOA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,cAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA7D,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDYa,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,SAAS;+BACE,sBAAsB,EAAA,eAAA,EAEf,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,oOAAA,EAAA,CAAA;;;AEjBjD;;;;AAIG;MA8BU,sBAAsB,CAAA;;mHAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oHAAtB,sBAAsB,EAAA,YAAA,EAAA,CAHlB,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAftC,YAAY;QACZ,YAAY;QACZ,gBAAgB;QAChB,iBAAiB;QACjB,UAAU,aAYF,yBAAyB,CAAA,EAAA,CAAA,CAAA;AAExB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,EAZtB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,yBAAyB,EAAE;AACzB,oBAAA,SAAS,EAAE,yBAAyB;AACrC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAdC,YAAY;QACZ,YAAY;QACZ,gBAAgB;QAChB,iBAAiB;QACjB,UAAU,CAAA,EAAA,CAAA,CAAA;2FAcD,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBApBlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,gBAAgB;wBAChB,iBAAiB;wBACjB,UAAU;AACX,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,yBAAyB,EAAE;AACzB,oCAAA,SAAS,EAAE,yBAAyB;AACrC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE,CAAC,yBAAyB,CAAC;iBACrC,CAAA;;;ACjCD;;;;AAIG;MA0BU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAHX,kBAAkB,CAVvB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,cAAc,CAAA,EAAA,OAAA,EAAA,CAW1C,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAEjB,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAZf,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,kBAAkB,EAAE;AAClB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,YAAY,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;2FAazC,eAAe,EAAA,UAAA,EAAA,CAAA;kBAd3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC;AACrD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,kBAAkB,EAAE;AAClB,oCAAA,SAAS,EAAE,kBAAkB;AAC9B,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B,CAAA;;;AC7BD;;;;AAIG;MAKU,aAAa,CAAA;IACxB,SAAS,CAAC,IAAY,EAAE,KAAc,EAAA;QACpC,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,OAAO,CACjB,KAAK,CAAC,IAAI,EAAE,EACZ,CAAA,wBAAA,EAA2B,KAAK,CAAC,IAAI,EAAE,CAAA,OAAA,CAAS,CACjD,CAAC;KACH;;0GATU,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;wGAAb,aAAa,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,CAAA;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,IAAI;mBAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAA;;;ACR7B;;;;AAIG;AAIH;;AAEG;AACG,MAAO,gCAAiC,SAAQ,OAAO,CAAA;;AAC3D;;AAEG;AACa,gCAAI,CAAA,IAAA,GAAG,kCAAkC,CAAC;AAM5D;;AAEG;AACG,MAAO,6BAA8B,SAAQ,OAAO,CAAA;;AACxD;;AAEG;AACa,6BAAI,CAAA,IAAA,GAAG,+BAA+B;;AC5BxD;;;;AAIG;AAoBH,MAAM,uBAAuB,GAAG,uBAAuB,CAAC;MAK3C,yBAAyB,CAAA;IACpC,WACS,CAAA,aAA+B,EAC5B,cAA8B,EAC9B,kBAAsC,EACtC,MAAiB,EACjB,YAA0B,EAAA;AAJ7B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;AAC5B,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;KAClC;AAEJ;;;;AAIG;IACH,MAAM,CAAC,KAAa,EAAE,MAAuB,EAAA;AAC3C,QAAA,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,OAAO;AACR,SAAA;QAED,IACE,MAAM,CAAC,0BAA0B;AACjC,YAAA,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,0BAA0B,EAChD;YACA,OAAO;AACR,SAAA;QAED,IAAI,MAAM,CAAC,eAAe,EAAE;AAC1B,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC/B,QAAQ,EAAE,MAAM,CAAC,WAAW;AAC7B,aAAA,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,MAAM,CAAC,kBAAkB,EAAE;AAC7B,YAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAK,EAAE;gBAC1C,QAAQ,EAAE,MAAM,CAAC,cAAc;AAChC,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,UAAU,CAAC,MAAuB,EAAA;AAChC,QAAA,OAAO,aAAa,CAAC;AACnB,YAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC9B,YAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;AAClC,YAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;AAC9B,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,CAAC,KAAI;YAC7C,OAAO;gBACL,QAAQ,EAAE,cAAc,GAAG,cAAc,CAAC,QAAQ,GAAG,SAAS;gBAC9D,WAAW;gBACX,OAAO;aACR,CAAC;SACH,CAAC,EACF,GAAG,CAAC,CAAC,OAAO,KACV,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CACxE,CACF,CAAC;KACH;AAED;;;AAGG;IACH,YAAY,GAAA;AACV,QAAA,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;AAClC,QAAA,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;KACtD;AAED,IAAA,YAAY,CAAC,SAAiB,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAChE;IAED,eAAe,CAAC,SAAiB,EAAE,GAAa,EAAA;QAC9C,IAAI,GAAG,KAAK,SAAS,EAAE;AACrB,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACvD,SAAA;AAAM,aAAA;YACL,GAAG;AACD,kBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;AACpD,kBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC3D,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,4BAA4B,CAAC,SAAwC,EAAA;AACnE,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CACxB;YACE,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,WAAW,EAAE,SAAS,CAAC,WAAW;SACnC,EACD,6BAA6B,CAC9B,CAAC;KACH;AAED;;;;AAIG;AACH,IAAA,+BAA+B,CAC7B,SAA2C,EAAA;AAE3C,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CACxB;YACE,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,kBAAkB,EAAE,SAAS,CAAC,kBAAkB;YAChD,iBAAiB,EAAE,SAAS,CAAC,iBAAiB;SAC/C,EACD,gCAAgC,CACjC,CAAC;KACH;AAED;;;;;;;AAOG;AACO,IAAA,UAAU,CAAC,OAAsB,EAAA;AACzC,QAAA,QACE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;AAClD,aAAC,CAAC,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;AACzD,YAAA,CAAC,CAAC,OAAO,CAAC,OAAO,EACjB;KACH;AAED;;;AAGG;AACO,IAAA,iBAAiB,CACzB,MAAuB,EAAA;QAEvB,IAAI,MAAM,CAAC,eAAe,EAAE;AAC1B,YAAA,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;AACxC,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACf,SAAA;KACF;AAED;;;AAGG;AACO,IAAA,qBAAqB,CAC7B,MAAuB,EAAA;AAEvB,QAAA,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AAC9B,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACf,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC,IAAI,CACnD,GAAG,CAAC,CAAC,GAAG,KACN,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CACjE,EACD,SAAS,CAAC,CAAC,WAAW,KAAI;AACxB,gBAAA,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,oBAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,IAAI,CACzC,GAAG,CAAC,CAAC,KAAK,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CACvC,CAAC;AACH,iBAAA;AAAM,qBAAA;AACL,oBAAA,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;AACxB,iBAAA;aACF,CAAC,CACH,CAAC;AACH,SAAA;KACF;AAED;;;AAGG;AACO,IAAA,kBAAkB,CAC1B,MAAuB,EAAA;AAEvB,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CACxC,SAAS,CAAC,CAAC,aAAa,KAAI;YAC1B,OAAO,aAAa,CAAC,QAAQ,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;AAChE,kBAAE,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,EAAE;oBACjD,IAAI,EAAE,aAAa,CAAC,cAAc;iBACnC,CAAC;AACJ,kBAAE,EAAE,CAAC,SAAS,CAAC,CAAC;SACnB,CAAC,CACH,CAAC;KACH;AAED;;;AAGG;AACO,IAAA,gBAAgB,CACxB,MAAuB,EAAA;AAEvB,QAAA,OAAO,aAAa,CAAC;AACnB,YAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC9B,YAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;AACnC,SAAA,CAAC,CAAC,IAAI,CACL,SAAS,CAAC,CAAC,CAAC,aAAa,EAAE,WAAW,CAAC,KAAI;AACzC,YAAA,IACE,aAAa;AACb,gBAAA,aAAa,CAAC,QAAQ;AACtB,gBAAA,aAAa,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;gBACnC,WAAW;AACX,gBAAA,WAAW,CAAC,MAAM,KAAK,CAAC,EACxB;AACA,gBAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;AACxD,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;AACtB,aAAA;SACF,CAAC,CACH,CAAC;KACH;AAED;;AAEG;AACH,IAAA,gBAAgB,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;AACrB,YAAA,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,EAAE,KAAK,EAAE;AAClB,SAAA,CAAC,CAAC;KACJ;IAEO,gBAAgB,CACtB,cAAsB,EACtB,OAAa,EAAA;QAEb,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;KACnE;;sHA7OU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,cAFxB,MAAM,EAAA,CAAA,CAAA;2FAEP,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAHrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC5BD;;;;AAIG;AA2BH,MAAM,yBAAyB,GAAoB;AACjD,IAAA,0BAA0B,EAAE,CAAC;AAC7B,IAAA,eAAe,EAAE,IAAI;AACrB,IAAA,kBAAkB,EAAE,IAAI;AACxB,IAAA,WAAW,EAAE,CAAC;AACd,IAAA,cAAc,EAAE,CAAC;AACjB,IAAA,oBAAoB,EAAE,IAAI;CAC3B,CAAC;AACF,MAAM,mBAAmB,GAAG,qBAAqB,CAAC;MAOrC,kBAAkB,CAAA;AAG7B;;AAEG;IACH,IACI,SAAS,CAAC,KAAa,EAAA;AACzB,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACpB,SAAA;KACF;AAYD,IAAA,WAAA,CACY,yBAAoD,EAEpD,aAAsD,EACtD,MAAiB,EACjB,cAA8B,EAAA;;AAJ9B,QAAA,IAAyB,CAAA,yBAAA,GAAzB,yBAAyB,CAA2B;AAEpD,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAyC;AACtD,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAf1C,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AAEtB;;;AAGG;AACK,QAAA,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;AACjC,QAAA,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;AAWhB;;;;AAIG;QACO,IAAO,CAAA,OAAA,GAAgC,CAC/C,CAAA,MAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,KAAI,EAAE,CAAC,EAAS,CAAC,EAC1C,IAAI,CACJ,GAAG,CAAC,CAAC,MAAM,KAAI;AACb,YAAA,MAAM,MAAM,GAAG,CAAC,GAAoB,EAAE,IAAY,KAChD,GAAG,CAAC,IAA6B,CAAC,KAAK,OAAO;AAC9C,gBAAA,GAAG,CAAC,IAA6B,CAAC,KAAK,KAAK,CAAC;AAE/C,YAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,yBAAyB,CAAA,EACzB,MAAM,CAAA,EAAA,EACT,eAAe,EAAE,MAAM,CAAC,MAAM,EAAE,iBAAiB,CAAC,EAClD,oBAAoB,EAAE,MAAM,CAAC,MAAM,EAAE,sBAAsB,CAAC,EAC5D,kBAAkB,EAAE,MAAM,CAAC,MAAM,EAAE,oBAAoB,CAAC,EAAA,CAAA,EAGrD,IAAI,CAAC,MAAM,CACd,CAAA;AACJ,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,MAAM,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CACxC,CAAC;QAEF,IAAQ,CAAA,QAAA,GAA8B,IAAI,CAAC,OAAO,CAAC,IAAI,CACrD,SAAS,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CACzE,CAAC;KA/BE;IAiCJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc;AACpC,aAAA,cAAc,EAAE;AAChB,aAAA,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACvC,aAAA,SAAS,CAAC,CAAC,IAAI,KAAI;;AAClB,YAAA,IACE,EACE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,EAAE,MAAK,QAAQ;AACnC,gBAAA,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,MAAK,QAAQ,CAAC,YAAY,CACnD,EACD;AACA,gBAAA,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACtB,aAAA;AACH,SAAC,CAAC,CAAC;KACN;AAED;;AAEG;AACH,IAAA,MAAM,CAAC,KAAa,EAAA;QAClB,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;QAE1D,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;AAED;;AAEG;IACH,IAAI,GAAA;QACF,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;KAC3E;AAED;;;;AAIG;AACH,IAAA,uBAAuB,CAAC,SAA2C,EAAA;AACjE,QAAA,IAAI,CAAC,yBAAyB,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC;KAC3E;AAED;;;;AAIG;AACH,IAAA,oBAAoB,CAAC,SAAwC,EAAA;AAC3D,QAAA,IAAI,CAAC,yBAAyB,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;KACxE;AAED;;AAEG;IACH,KAAK,CAAC,KAAc,EAAE,KAAe,EAAA;;QAEnC,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,KAAK,EAAE;AACnE,gBAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC3B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAES,IAAA,aAAa,CAAC,KAAc,EAAA;QACpC,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;AAC3E,QAAA,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;AACX,YAAA,KAAK,CAAC,MAAO,CAAC,IAAI,EAAE,CAAC;AACpC,SAAA;KACF;;IAGO,kBAAkB,GAAA;AACxB,QAAA,QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,4BAA4B,CAAC;AAC9D,gBAAA,IAAI,CAAC,iBAAiB,EAAE,EAC1B;KACH;AAED;;;AAGK;AACL,IAAA,WAAW,CAAC,KAAc,EAAA;QACxB,IAAI,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,mBAAmB,CAAC,EAAE;AACpE,YAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;AACxB,SAAA;KACF;;IAGO,iBAAiB,GAAA;AACvB,QAAA,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CACnC,uCAAuC,CACxC,CACF,CAAC;KACH;;IAGO,iBAAiB,GAAA;AACvB,QAAA,OAAoB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;KACxD;AAED,IAAA,gBAAgB,CAAC,UAAkB,EAAA;AACjC,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAEO,eAAe,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACnE;;AAGD,IAAA,kBAAkB,CAAC,KAAc,EAAA;AAC/B,QAAA,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;;QAEF,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,YAAY,GAAG,CAAC,EAAE;gBACpB,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACrC,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnC,aAAA;AACF,SAAA;KACF;;AAGD,IAAA,cAAc,CAAC,KAAc,EAAA;QAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAA,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;;QAEF,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAA,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,gBAAA,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACpB,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnC,aAAA;AACF,SAAA;KACF;AAED;;;;AAIG;IACH,kBAAkB,CAAC,KAAc,EAAE,KAAa,EAAA;QAC9C,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClB,QAAA,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACxD;AAED;;AAEG;IACH,YAAY,GAAA;AACV,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;AAED,IAAA,cAAc,CAAC,EAAW,EAAA;QACxB,EAAE,CAAC,cAAc,EAAE,CAAC;KACrB;AAED;;AAEG;AACH,IAAA,KAAK,CAAC,EAAoB,EAAA;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,QAAA,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;AACd,QAAA,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;;QAG9C,UAAU,CAAC,MAAK;;YAEd,EAAE,CAAC,KAAK,EAAE,CAAC;AACX,YAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAChC,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;;AACT,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;KAClC;;+GA1PU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA8D,yBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA9H,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,0GC9C/B,orJAyJA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAqB,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAqD,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAW,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAArF,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA1C,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAgI,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD3Ga,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,cAAc,EAAA,eAAA,EAEP,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,orJAAA,EAAA,CAAA;;;8BA2B5C,QAAQ;;yBAxBF,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAMF,SAAS,EAAA,CAAA;sBADZ,KAAK;uBAAC,WAAW,CAAA;;;AEpDpB;;;;AAIG;MAqCU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAHX,YAAA,EAAA,CAAA,kBAAkB,EAAE,aAAa,aAhB9C,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,UAAU;QACV,SAAS;QACT,UAAU,CAAA,EAAA,OAAA,EAAA,CAYF,kBAAkB,EAAE,aAAa,CAAA,EAAA,CAAA,CAAA;AAEhC,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAZf,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,kBAAkB,EAAE;AAClB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAfC,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,UAAU;QACV,SAAS;QACT,UAAU,CAAA,EAAA,CAAA,CAAA;2FAcD,eAAe,EAAA,UAAA,EAAA,CAAA;kBArB3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,WAAW;wBACX,UAAU;wBACV,SAAS;wBACT,UAAU;AACX,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,kBAAkB,EAAE;AAClB,oCAAA,SAAS,EAAE,kBAAkB;AAC9B,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,kBAAkB,EAAE,aAAa,CAAC;AACjD,oBAAA,OAAO,EAAE,CAAC,kBAAkB,EAAE,aAAa,CAAC;iBAC7C,CAAA;;;ACxCD;;;;AAIG;;ACJH;;;;AAIG;MAwBU,oBAAoB,CAAA;IAW/B,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC;AAC5D,SAAA;KACF;AAED,IAAA,WAAA,CACY,MAAiB,EACjB,aAAwD,EACxD,kBAAsC,EAAA;;AAFtC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAA2C;AACxD,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AAnBlD,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;QAKZ,IAAA,CAAA,MAAM,GAAuB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;AACtD,QAAA,IAAA,CAAA,cAAc,GAAmB,cAAc,CAAC,MAAM,CAAC;AACvD,QAAA,IAAA,CAAA,gBAAgB,GAAW,CAAC,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,IAAI,CAAC,CAAC;KAavE;IAEJ,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAES,SAAS,GAAA;AACjB,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;;YACxD,IAAI,CAAC,cAAc,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC;YACjE,IAAI,CAAC,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,CAAC;AACzE,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;IACH,WAAW,GAAA;;;QAET,CAAA,EAAA,GAAA,IAAI,CAAC,kBAAkB;AACpB,aAAA,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,MAC/D,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAE,CAAC;AAEZ,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC;AACpB,YAAA,GAAG,EAAE,CAAC;YACN,QAAQ,EAAE,IAAI,CAAC,cAAc;AAC9B,SAAA,CAAC,CAAC;KACJ;;iHA/CU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAF,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,uKC5BjC,iRASA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA/H,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDmBa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;+BACE,kBAAkB,EAAA,eAAA,EAEX,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,iRAAA,EAAA,CAAA;0JAM/C,OAAO,EAAA,CAAA;sBADN,WAAW;uBAAC,eAAe,CAAA;gBAQ5B,QAAQ,EAAA,CAAA;sBADP,YAAY;uBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AEtC3C;;;;AAIG;MAsBU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAHb,oBAAoB,CAVzB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAWpC,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAEnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAZjB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,oBAAoB,EAAE;AACpB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,UAAU,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAanC,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAd7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC;AAC/C,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,oBAAoB,EAAE;AACpB,oCAAA,SAAS,EAAE,oBAAoB;AAChC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC,CAAA;;;ACzBD;;;;AAIG;;ACJH;;;;AAIG;MAgBU,sBAAsB,CAAA;IACjC,WACY,CAAA,cAA8B,EAC9B,mBAAwC,EAAA;AADxC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAChD;AAEJ;;AAEG;AACH,IAAA,WAAW,CAAC,IAAY,EAAA;AACtB,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CACvC,MAAM,CAAC,cAAc,CAAC,EACtB,GAAG,CAAC,CAAC,OAAgB,KAAK,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CACxD,CAAC;KACH;AAED;;AAEG;IACK,cAAc,CACpB,MAAe,EACf,YAAY,GAAG,IAAI,EACnB,oBAAoB,GAAG,IAAI,EAAA;QAE3B,MAAM,IAAI,GAAwB,EAAE,CAAC;AACrC,QAAA,IAAI,YAAY,EAAE;AAChB,YAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;AAC1B,SAAA;QACD,IAAI,oBAAoB,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE;YACvE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC;AAC1C,SAAA;QACD,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;YAC1C,IAAI,CAAC,KAAK,GAAG;AACX,gBAAA,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO;AAChC,gBAAA,MAAM,EAAE,SAAS;aAClB,CAAC;AACH,SAAA;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;AAC9C,YAAA,OAAO,EAAE,SAAS;AAClB,YAAA,MAAM,EAAE,MAAM;AACf,SAAA,CAAC,CAAC;AACH,QAAA,OAAO,IAAI,CAAC;KACb;;mHA1CU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACnBD;;;;AAIG;AAyBH;;;;;;;AAOG;MAEU,2BAA2B,CAAA;AAGtC,IAAA,WAAA,CACY,oBAA0C,EAC1C,OAAuB,EACvB,cAA8B,EAC9B,eAAgC,EAChC,eAAgC,EAChC,MAAc,EACd,MAAkB,EAAA;AANlB,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;AACvB,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AAChC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AAChC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACd,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;AATX,QAAA,IAAuB,CAAA,uBAAA,GAAG,2BAA2B,CAAC;AAYzE;;;;;AAKG;AACO,QAAA,IAAc,CAAA,cAAA,GACtB,IAAI,CAAC,oBAAoB;AACtB,aAAA,UAAU,EAAE;aACZ,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,KAAK,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAE1E;;;;;AAKG;AACO,QAAA,IAAgB,CAAA,gBAAA,GACxB,aAAa,CAAC;AACZ,YAAA,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,IAAI,CAChC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAI;;;gBAG5B,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;AACrC,aAAC,CAAC,CACH;YACD,GAAG,IAAI,CAAC,WAAW;AACpB,SAAA,CAAC,CAAC,IAAI,CACL,YAAY,CAAC,CAAC,CAAC,EACf,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,KAAM,WAA2B,CAAC,KAAK,CAAC,EACvE,GAAG,CAAC,CAAC,KAAmC,KAAI;AAC1C,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CACxC,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,WAAW,CAClB,CAAC;AACF,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACvB,CAAC,CACH,CAAC;AAEJ;;;;;;;;AAQG;AACM,QAAA,IAAA,CAAA,MAAM,GAAkC,KAAK,CACpD,MAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,EACvC,MAAM,IAAI,CAAC,cAAc,CAC1B,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;KArDnD;AAuDJ;;;;;AAKG;IACO,oBAAoB,CAC5B,WAAmC,EACnC,WAA2B,EAAA;;QAE3B,OAAO;YACL,KAAK,EAAE,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC;AACrE,YAAA,QAAQ,EAAE,WAAW,CAAC,QAAQ,KAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,CAAA;YACnE,WAAW,EAAE,WAAW,CAAC,WAAW;YACpC,QAAQ,EAAE,WAAW,CAAC,QAAQ;SAC/B,CAAC;KACH;AAED;;AAEG;AACO,IAAA,uBAAuB,CAAC,EAChC,KAAK,EACL,YAAY,EACZ,SAAS,GACc,EAAA;AACvB,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACD,QAAA,IAAI,YAAY,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC;AACpD,SAAA;;;AAID,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,OAAO,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;AACjD,SAAA;KACF;AAED;;;;AAIG;AACO,IAAA,MAAM,CAAC,QAAwB,EAAA;AACvC,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;AACzC,QAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACnC,QAAA,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAE/B,QAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAC9B,QAAQ,CAAC,KAAK;;QAEd,MAAM,CAAC,MAAM,CACX,EAAE,EACF,WAAW,IAAI,EAAE,WAAW,EAAE,EAC9B,QAAQ,IAAI,EAAE,QAAQ,EAAE,EACxB,IAAI,IAAI,EAAE,IAAI,EAAE,CACjB,CACF,CAAC;KACH;AAED;;AAEG;AACH,IAAA,YAAY,CAAC,UAAkB,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO;AACT,aAAA,cAAc,EAAE;AAChB,aAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACnB,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAC7C,KAAK,CAAC,KAAK,CAAC,MAAM,EAClB,KAAK,CAAC,KAAK,CAAC,WAAW,CACxB,CAAC;YACF,MAAM,QAAQ,mCACT,aAAa,CAAA,EAAA,EAChB,WAAW,EAAE,UAAU,GACxB,CAAC;AACF,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACxB,SAAC,CAAC;AACD,aAAA,WAAW,EAAE,CAAC;KAClB;AAED;;AAEG;AACH,IAAA,IAAI,CAAC,QAAgB,EAAA;AACnB,QAAA,IAAI,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;KAC1B;AAED;;;;;AAKG;AACO,IAAA,KAAK,CAAC,WAA2B,EAAA;AACzC,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,WAAW;AACX,YAAA,mBAAmB,EAAE,OAAO;YAC5B,UAAU,EAAE,IAAI,CAAC,cAAc;AAChC,SAAA,CAAC,CAAC;KACJ;AAED;;;;;;AAMG;AACH,IAAA,IAAY,WAAW,GAAA;;;;AAKrB,QAAA,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;KAC7E;;wHAtLU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA2H,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,cADd,MAAM,EAAA,CAAA,CAAA;2FACnB,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBADvC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ACrClC;;;;AAIG;AAWS,IAAA,UAGX;AAHD,CAAA,UAAY,SAAS,EAAA;AACnB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHW,SAAS,KAAT,SAAS,GAGpB,EAAA,CAAA,CAAA,CAAA;MAOY,oBAAoB,CAAA;AALjC,IAAA,WAAA,GAAA;AAME,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AAItB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAa,CAAC;KAuB5C;AArBC,IAAA,IAAI,WAAW,GAAA;;QACb,MAAM,QAAQ,GAAW,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAE,CAAC;QACtD,OAAO,CAAA,WAAA,EAAc,QAAQ,CAAA,CAAE,CAAC;KACjC;AAED;;;AAGG;AACH,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;AACxB,YAAA,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC5B,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC5B;IAED,UAAU,GAAA;QACR,MAAM,OAAO,GACX,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AACjE,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC/B;;iHA3BU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,wHCzBjC,qiBAsBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA7G,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkD,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAvE,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDGa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;+BACE,iBAAiB,EAAA,eAAA,EAEV,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,qiBAAA,EAAA,CAAA;8BAK/C,IAAI,EAAA,CAAA;sBADH,KAAK;gBAGN,UAAU,EAAA,CAAA;sBADT,MAAM;;;AE7BT;;;;AAIG;AAES,IAAA,qBAKX;AALD,CAAA,UAAY,oBAAoB,EAAA;AAC9B,IAAA,oBAAA,CAAA,OAAA,CAAA,GAAA,WAAmB,CAAA;AACnB,IAAA,oBAAA,CAAA,OAAA,CAAA,GAAA,WAAmB,CAAA;AACnB,IAAA,oBAAA,CAAA,OAAA,CAAA,GAAA,WAAmB,CAAA;AACnB,IAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,aAAuB,CAAA;AACzB,CAAC,EALW,oBAAoB,KAApB,oBAAoB,GAK/B,EAAA,CAAA,CAAA,CAAA;AACW,IAAA,mBAGX;AAHD,CAAA,UAAY,kBAAkB,EAAA;AAC5B,IAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,8BAA6C,CAAA;AAC7C,IAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,8BAA6C,CAAA;AAC/C,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,GAG7B,EAAA,CAAA,CAAA;;ACfD;;;;AAIG;AAMH;;AAEG;MAEmB,sBAAsB,CAAA;;mHAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;uHAAtB,sBAAsB,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAD3C,UAAU;;;ACbX;;;;AAIG;AAOH;;;;AAIG;AAEG,MAAO,4BAA6B,SAAQ,sBAAsB,CAAA;AADxE,IAAA,WAAA,GAAA;;QAEW,IAAA,CAAA,QAAQ,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;KACnD;;yHAFY,4BAA4B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;6HAA5B,4BAA4B,EAAA,CAAA,CAAA;2FAA5B,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBADxC,UAAU;;;AChBX;;;;AAIG;MAyBU,wBAAwB,CAAA;AAInC,IAAA,WAAA,CACY,4BAA0D,EAAA;AAA1D,QAAA,IAA4B,CAAA,4BAAA,GAA5B,4BAA4B,CAA8B;AAJ7D,QAAA,IAAkB,CAAA,kBAAA,GAAG,kBAAkB,CAAC;KAK7C;AAEJ,IAAA,WAAW,CAAC,OAAuB,EAAA;AACjC,QAAA,IAAI,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,OAAO,EAAE;YACpB,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/D,SAAA;KACF;;qHAZU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAmI,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,EARxB,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA;QACT,4BAA4B;AAC5B,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,4BAA4B;AAC1C,SAAA;KACF,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC3BH,m0DA0DA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA5H,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA6H,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArH,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAsH,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA9E,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+E,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAhB,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD7Ba,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAZpC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sBAAsB,EAEf,eAAA,EAAA,uBAAuB,CAAC,MAAM,EACpC,SAAA,EAAA;wBACT,4BAA4B;AAC5B,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,4BAA4B;AAC1C,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,m0DAAA,EAAA,CAAA;gHAIQ,OAAO,EAAA,CAAA;sBAAf,KAAK;;;AE/BR;;;;AAIG;MAyBU,wBAAwB,CAAA;AAInC,IAAA,WAAA,CACY,4BAA0D,EAAA;AAA1D,QAAA,IAA4B,CAAA,4BAAA,GAA5B,4BAA4B,CAA8B;AAJ7D,QAAA,IAAkB,CAAA,kBAAA,GAAG,kBAAkB,CAAC;KAK7C;AAEJ,IAAA,WAAW,CAAC,OAAuB,EAAA;AACjC,QAAA,IAAI,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,OAAO,EAAE;YACpB,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/D,SAAA;KACF;;qHAZU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAa,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,EARxB,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA;QACT,4BAA4B;AAC5B,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,4BAA4B;AAC1C,SAAA;KACF,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC3BH,6pCAyCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA5H,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA6H,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArH,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAsH,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA9E,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+E,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAhB,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDZa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAZpC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sBAAsB,EAEf,eAAA,EAAA,uBAAuB,CAAC,MAAM,EACpC,SAAA,EAAA;wBACT,4BAA4B;AAC5B,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,4BAA4B;AAC1C,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,6pCAAA,EAAA,CAAA;gHAIQ,OAAO,EAAA,CAAA;sBAAf,KAAK;;;AE/BR;;;;AAIG;MAaU,sBAAsB,CAAA;IAGjC,IACI,SAAS,CAAC,WAAuB,EAAA;AACnC,QAAA,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC;KAC9C;IAGD,IACI,QAAQ,CAAC,UAA6B,EAAA;AACxC,QAAA,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;KAC3C;IAGD,IACI,WAAW,CAAC,aAAwB,EAAA;AACtC,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;;;QAGnC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAClC,SAAA;AAAM,aAAA;;;AAGL,YAAA,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;AAC/B,SAAA;KACF;IAaD,WACU,CAAA,2BAAwD,EACxD,GAAsB,EAAA;AADtB,QAAA,IAA2B,CAAA,2BAAA,GAA3B,2BAA2B,CAA6B;AACxD,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAmB;AAzCxB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAgC1C,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AACtB,QAAA,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AACvB,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAClB,QAAA,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;AACtB,QAAA,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AACnB,QAAA,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;KAKZ;AAEJ,IAAA,UAAU,CAAC,UAAkB,EAAA;AAC3B,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KAC3D;AAED,IAAA,YAAY,CAAC,UAAkB,EAAA;AAC7B,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC3B,QAAA,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC7B;IAED,WAAW,GAAA;AACT,QAAA,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACrB;AAEO,IAAA,0BAA0B,CAAC,YAAwB,EAAA;;QACzD,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,YAAY,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,cAAc,CAAC;QACnE,MAAM,kBAAkB,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,YAAY,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,CAAC;;;AAI3E,QAAA,IAAI,CAAC,YAAY,GAAG,QAAQ,GAAG,CAAC,GAAG,kBAAkB,CAAC;KACvD;AAEO,IAAA,wBAAwB,CAAC,UAA6B,EAAA;;QAC5D,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACL,UAAU,CAAA,EAAA,EACb,QAAQ,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,CAAA,EAAA,GAAA,UAAU,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC,EAAA,CACjE,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;AACxB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;AACtC,SAAA;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KACzB;IAEO,yBAAyB,GAAA;QAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;KAClD;;IAGO,aAAa,GAAA;;AACnB,QAAA,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;AAExE,QAAA,IAAI,CAAC,UAAU;AACb,YAAA,CAAA,MAAA,IAAI,CAAC,KAAK,CAAC,UAAU,0CAAE,WAAW;AAClC,gBAAA,CAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,IAAI,CAAC,CAAC;AAE/C,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACvB,YAAA,IAAI,CAAC,aAAa;gBAChB,IAAI,CAAC,YAAY,KAAK,SAAS;oBAC/B,IAAI,CAAC,YAAY,KAAK,CAAC;AACvB,oBAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC,CAAC;;YAGxD,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,gBAAA,IAAI,CAAC,WAAW;AACd,oBAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC,CAAC;AACzD,aAAA;AACF,SAAA;;;AAID,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,aAAa,EAAE;AACxC,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;AACpC,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;mHA1HU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAiB,2BAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,+LCjBnC,+yFAyFA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAhI,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,6DAAA,EAAA,MAAA,EAAA,CAAA,wBAAA,EAAA,0BAAA,EAAA,wBAAA,EAAA,wBAAA,EAAA,yBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8G,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0B,wBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDxEa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAJlC,SAAS;+BACE,mBAAmB,EAAA,QAAA,EAAA,+yFAAA,EAAA,CAAA;+IAOzB,SAAS,EAAA,CAAA;sBADZ,KAAK;uBAAC,cAAc,CAAA;gBAOjB,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,OAAO,CAAA;gBAOV,WAAW,EAAA,CAAA;sBADd,KAAK;uBAAC,eAAe,CAAA;;;AEhCxB;;;;AAIG;MAmBU,oBAAoB,CAAA;AAW/B,IAAA,WAAA,CACU,iBAAoC,EACpC,2BAAwD,EACxD,oBAA0C,EAC3C,YAAwB,EAAA;AAHvB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAA2B,CAAA,2BAAA,GAA3B,2BAA2B,CAA6B;AACxD,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC3C,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAY;AAdzB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAI1C,IAAA,CAAA,MAAM,GACJ,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC;QAE1C,IAAS,CAAA,SAAA,GAAG,IAAI,eAAe,CAAY,SAAS,CAAC,IAAI,CAAC,CAAC;AAC3D,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;KAOlB;IAEJ,QAAQ,GAAA;;AACN,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,YAAY,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAC;QAEvE,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,iBAAiB,CAAC,aAAa;AACjC,aAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,aAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACtB,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,QAAQ,KAAK,yBAAyB;kBAClC,SAAS,CAAC,IAAI;AAChB,kBAAE,SAAS,CAAC,IAAI,CACnB,CAAC;SACH,CAAC,CACL,CAAC;AAEF,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACzC,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAC7C;aACA,SAAS,CAAC,MACT,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,yBAAyB,EAAE,EAClC,iBAAiB,CAAC,kBAAkB,EACpC,GAAG,CACJ,CACF,CACJ,CAAC;KACH;AAED,IAAA,QAAQ,CAAC,QAAgB,EAAA;AACvB,QAAA,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;AAED,IAAA,WAAW,CAAC,IAAe,EAAA;AACzB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;iHA3DU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAzH,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA0H,2BAAA,EAAA,EAAA,EAAA,KAAA,EAAA3I,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA4I,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,uDCvBjC,gwJAwHA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA7E,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8E,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,cAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,OAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAnF,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA/D,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDjGa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,gwJAAA,EAAA,CAAA;;;AEpB7B;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAiCS,IAAA,yBAGX;AAHD,CAAA,UAAY,wBAAwB,EAAA;AAClC,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAHW,wBAAwB,KAAxB,wBAAwB,GAGnC,EAAA,CAAA,CAAA;;ACxCD;;;;AAIG;AAgBH;;AAEG;MAIU,mBAAmB,CAAA;IAC9B,WACY,CAAA,OAAuB,EACvB,2BAAwD,EAAA;AADxD,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;AACvB,QAAA,IAA2B,CAAA,2BAAA,GAA3B,2BAA2B,CAA6B;AAGjD,QAAA,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC,OAAO;AAC1C,aAAA,cAAc,EAAE;AAChB,aAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAExB;;AAEG;QACgB,IAAa,CAAA,aAAA,GAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,SAAS,CAAC,CAAC,KAAK,KACd,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,IAAI,CAC1C,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EACjD,GAAG,CAAC,CAAC,IAAI,KAAI;;YAAC,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACT,IAAI,CAAA,EAAA,EACP,WAAW,EAAE,IAAI,CAAC,iBAAiB,CACjC,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,WAAW,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EACvB,KAAK,CAAC,MAAM,CACb,EAAA,CAAA,EACD;SAAA,CAAC,CACJ,CACF,CACF,CAAC;AAEJ;;;AAGG;AACM,QAAA,IAAA,CAAA,UAAU,GAA0B,IAAI,CAAC,aAAa,CAAC,IAAI,CAClE,GAAG,CACD,CAAC,MAAyB,MACvB;YACC,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,YAAY,EAAE,MAAM,CAAC,WAAW;SACnB,CAAA,CAClB,CACF,CAAC;KArCE;AAuCJ;;;AAGG;IACO,aAAa,CACrB,KAAmC,EACnC,IAAuB,EAAA;;AAEvB,QAAA,IAAI,EAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAA,EAAE;AACpC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,aAAa,EAAE;YACjD,QACE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CACnC,iBAAiB,KAAK,CAAC,OAAO,CAAC,EAAE,CAAA,CAAE,CACpC,GAAG,CAAC,CAAC,EACN;AACH,SAAA;QAED,IACE,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,YAAY;AAC5C,YAAA,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,QAAQ,EAC7B;AACA,YAAA,OAAO,IAAI,CAAC,cAAc,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;AAMG;IACO,iBAAiB,CACzB,WAAyB,EACzB,MAAc,EAAA;AAEd,QAAA,OAAO,WAAW;AAChB,cAAE,WAAW,CAAC,MAAM,CAChB,CAAC,UAAU,KACT,EACE,UAAU,CAAC,SAAS,KAAK,eAAe;AACxC,iBAAC,UAAU,CAAC,cAAc,KAAK,MAAM,CAAC,YAAY;oBAChD,UAAU,CAAC,cAAc,KAAK,MAAM,CAAC,SAAS,CAAC,CAClD,CACJ;cACD,EAAE,CAAC;KACR;;gHA5FU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA2I,2BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACzBD;;;;AAIG;AAcH;;;;AAIG;MAIU,YAAY,CAAA;AAQvB,IAAA,WAAA,CAAsB,mBAAwC,EAAA;AAAxC,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AAP9D;;AAEG;AACO,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,EAA+C,CAAC;AAE3D,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAItD;;;;;;AAMG;AACH,QAAA,IAAA,CAAA,UAAU,GAA0B,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAC1E,GAAG,CAAC,CAAC,SAAS,KAAI;;AAChB,YAAA,CAAA,EAAA,GAAA,SAAS,CAAC,MAAM,0CAAE,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAC9D,CAAC,CACH,CAAC;KAbgE;AAelE;;;;AAIG;AACH,IAAA,QAAQ,CAAC,KAAY,EAAA;;AACnB,QAAA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACvB,QAAA,OAAO,KAAK,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;KACxE;AAED;;;;AAIG;AACO,IAAA,gBAAgB,CAAC,KAAY,EAAA;QACrC,OAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAyC,CAAC,KAAK,CAAC;KAC5E;AAED;;;;;;AAMG;IACH,MAAM,CAAC,KAAY,EAAE,UAAmB,EAAA;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAE3C,QAAA,MAAM,YAAY,GAAG;AACnB,YAAA,OAAO,EAAE,UAAU;kBACf,wBAAwB,CAAC,SAAS;kBAClC,wBAAwB,CAAC,QAAQ;SAChB,CAAC;AAExB,QAAA,IAAI,YAAY,CAAC,OAAO,KAAK,wBAAwB,CAAC,SAAS,EAAE;AAC/D,YAAA,YAAY,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AAC5C,SAAA;AAED,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;KACvC;AAED;;AAEG;AACH,IAAA,qBAAqB,CAAC,KAAY,EAAA;;AAChC,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,CAAA,EAAA,GAAA,KAAK,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,EAAE,CAAC,CAAC;KAC/D;AAED;;;;;AAKG;AACH,IAAA,qBAAqB,CAAC,KAAY,EAAA;AAChC,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;KAC9D;AAED;;;AAGG;AACO,IAAA,UAAU,CAAC,KAAY,EAAA;;QAC/B,MAAM,SAAS,GACb,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC;cAC1C,KAAK,CAAC,aAAa;cACnB,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,CAAC,CAAC;QAChC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACvC,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,KAAK,CAAC,IAAI,EACV,IAAI,eAAe,CAAC;AAClB,gBAAA,UAAU,EAAE,SAAS;AACrB,gBAAA,UAAU,EAAE,SAAS;AACA,aAAA,CAAC,CACzB,CAAC;AACH,SAAA;KACF;AAED;;AAEG;IACO,WAAW,CAAC,KAAY,EAAE,QAA4B,EAAA;;QAC9D,MAAM,KAAK,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA,EAAK,QAAQ,CAAE,CAAC;QAC/D,IAAI,KAAK,CAAC,IAAI,EAAE;AACd,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,SAAA;KACF;AAES,IAAA,QAAQ,CAAC,KAAY,EAAA;QAC7B,IAAI,KAAK,CAAC,IAAI,EAAE;YACd,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxC,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,aAAa,CAAC,KAAa,EAAA;QACzB,OAAO;;;;YAIL,KAAK,EAAE,IAAI,CAAC,KAAK;AACd,iBAAA,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;AAC/C,iBAAA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;SACvB,CAAC;KACH;AAES,IAAA,sBAAsB,CAAC,KAAa,EAAA;QAC5C,OAAO,KAAK,CAAC,OAAO,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;KACrD;;yGApIU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAQ,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACzBD;;;;AAIG;AAcH;;;AAGG;MAMU,qBAAqB,CAAA;AAWhC,IAAA,WAAA,CAAsB,YAA0B,EAAA;AAA1B,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAVtB,QAAA,IAAI,CAAA,IAAA,GAAG,OAAO,CAAC;AACJ,QAAA,IAAU,CAAA,UAAA,GAC7C,4BAA4B,CAAC;;QAG/B,IAAA,CAAA,UAAU,GAA0B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;;AAGxD,QAAA,IAAA,CAAA,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;KAEe;AAEpD,IAAA,aAAa,CAAC,KAAiB,EAAA;;AAC7B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CACpC,MAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAK,CAAC,WAAW,0CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CACtC,CAAC;KACH;AAED;;;;;;;AAOG;IACH,WAAW,CAAC,SAAoB,EAAE,KAAiB,EAAA;;AACjD,QAAA,OAAO,CAAA,CAAA,EAAA,GAAA,SAAS,CAAC,MAAM,0CAAE,IAAI,CAAC,CAAC,CAAC,KAAI,EAAA,IAAA,EAAA,CAAA,CAClC,OAAA,CAAA,EAAA,GAAA,CAAC,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,cAAc,CAAC,CAAA,EAAA,CAC3D;AACC,cAAE,EAAE;AACJ,cAAE,KAAK,CAAC,cAAc,CAAC;KAC1B;AAED;;;;;AAKG;AACH,IAAA,wBAAwB,CAAC,KAAa,EAAA;;QACpC,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,cAAc,EAAE,CAAC;QACxB,CAAA,EAAA,GAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;KAC7E;;kHA5CU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,2LC3BlC,qwBAuBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA7I,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8C,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAzC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAgD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,OAAA,EAAA,CAAA,CAAA;2FDIa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,kBAAkB,EAAA,eAAA,EAEX,uBAAuB,CAAC,OAAO,EAAA,QAAA,EAAA,qwBAAA,EAAA,CAAA;gGAGtB,IAAI,EAAA,CAAA;sBAA7B,WAAW;uBAAC,WAAW,CAAA;gBACa,UAAU,EAAA,CAAA;sBAA9C,WAAW;uBAAC,sBAAsB,CAAA;gBAO1B,SAAS,EAAA,CAAA;sBAAjB,KAAK;;;AEpCR;;;;AAIG;MAqBU,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAHd,qBAAqB,CAAA,EAAA,OAAA,EAAA,CANlC,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,UAAU;QACV,mBAAmB,aAGX,qBAAqB,CAAA,EAAA,CAAA,CAAA;AAEpB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YAT3B,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,UAAU;QACV,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAKV,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAX9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,UAAU;wBACV,UAAU;wBACV,mBAAmB;AACpB,qBAAA;oBACD,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;iBACjC,CAAA;;;ACxBD;;;;AAIG;;ACJH;;;;AAIG;MAyBU,cAAc,CAAA;IAezB,IACI,KAAK,CAAC,KAAY,EAAA;AACpB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACjD;AAED,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;AAED,IAAA,WAAA,CACY,YAA0B,EAC1B,UAAmC,EACnC,EAAqB,EAAA;AAFrB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAC1B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAyB;AACnC,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;;AAvBxB,QAAA,IAAA,CAAA,UAAU,GAAc,SAAS,CAAC,MAAM,CAAC;AACzC,QAAA,IAAA,CAAA,YAAY,GAAc,SAAS,CAAC,QAAQ,CAAC;KAuBlD;AAEJ;;;;AAIG;AACH,IAAA,WAAW,CAAC,KAAc,EAAA;;AACxB,QAAA,MAAM,IAAI,GAAgB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACxD,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC;AAE9C,QAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAEtD,QAAA,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,KAAK,EAAE,CAAC;;;YAGb,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;KACF;AAED,IAAA,IAAI,UAAU,GAAA;;AACZ,QAAA,OAAO,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC,YAAY,MAAK,IAAI,CAAC;KAChE;AAED,IAAA,QAAQ,CAAC,KAAoB,EAAA;AAC1B,QAAA,KAAK,CAAC,MAAsB,CAAC,KAAK,EAAE,CAAC;QACtC,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;AAED;;;AAGG;IACH,qBAAqB,GAAA;QACnB,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrD;AAED;;;AAGG;IACH,qBAAqB,GAAA;QACnB,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrD;AAED,IAAA,aAAa,CAAC,KAAiB,EAAA;;AAC7B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAK,CAAC,KAAK,0CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC,CAAC;KACzE;;2GA9EU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA6F,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;+FAAd,cAAc,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,cAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,eAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAad,cAAc,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,QAAA,EAAA,SAAA,EAAA,CAAA,YAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC1C3B,0jGAmGA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA/F,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAnD,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8C,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAO,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAmF,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDtEa,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,SAAS;+BACE,UAAU,EAAA,eAAA,EAEH,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0jGAAA,EAAA,CAAA;yJAQtC,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAE6B,aAAa,EAAA,CAAA;sBAA/C,WAAW;uBAAC,oBAAoB,CAAA;gBAEL,MAAM,EAAA,CAAA;sBAAjC,YAAY;uBAAC,YAAY,CAAA;gBAEC,aAAa,EAAA,CAAA;sBAAvC,SAAS;uBAAC,cAAc,CAAA;gBAGrB,KAAK,EAAA,CAAA;sBADR,KAAK;;;AE5CR;;;;AAIG;MA0BU,kBAAkB,CAAA;AAE7B;;AAEG;IACH,IACI,QAAQ,CAAC,KAAc,EAAA;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACrD,SAAA;KACF;AAED,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAiBsB,WAAW,GAAA;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;AAED,IAAA,WAAA,CACY,YAA0B,EAC1B,UAAsB,EACtB,QAAmB,EAAA;AAFnB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAC1B,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;;AArBrB,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;;QAGzC,IAAA,CAAA,UAAU,GAA0B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;AAEjE,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;QAEtB,IAAA,CAAA,iBAAiB,GAAgB;AAC/B,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,aAAa,EAAE,IAAI;AACnB,YAAA,SAAS,EAAE,UAAU;SACtB,CAAC;KAUE;AAEJ;;AAEG;IACH,gBAAgB,CAAC,KAAY,EAAE,GAAmB,EAAA;AAChD,QAAA,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;AACjD,SAAA;KACF;AAED;;AAEG;AACH,IAAA,UAAU,CAAC,KAAY,EAAA;QACrB,OAAO,IAAI,CAAC,YAAY;aACrB,QAAQ,CAAC,KAAK,CAAC;AACf,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,KAAK,wBAAwB,CAAC,QAAQ,CAAC,CACpE,CAAC;KACL;AAED;;AAEG;AACH,IAAA,WAAW,CAAC,KAAY,EAAA;QACtB,OAAO,IAAI,CAAC,YAAY;aACrB,QAAQ,CAAC,KAAK,CAAC;AACf,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,KAAK,wBAAwB,CAAC,SAAS,CAAC,CACrE,CAAC;KACL;AAED,IAAA,KAAK,CAAC,KAAe,EAAA;QACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;AAED,IAAA,KAAK,CAAC,KAAkB,EAAA;AACtB,QAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,eAAe,EAAE,CAAC;KAC1B;;+GAhFU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAU,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,+KC9B/B,kvCA4CA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA7I,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAkC,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA4G,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArG,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAzC,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAgD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDda,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,eAAe,EAAA,eAAA,EAER,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,kvCAAA,EAAA,CAAA;iJAQ3C,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAaI,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAcgB,WAAW,EAAA,CAAA;sBAAjC,YAAY;uBAAC,OAAO,CAAA;;;AE9DvB;;;;AAIG;MAuBU,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAX,WAAW,EAAA,YAAA,EAAA,CAHP,cAAc,CAAA,EAAA,OAAA,EAAA,CAR3B,eAAe;QACf,YAAY;QACZ,UAAU;QACV,UAAU;QACV,mBAAmB;QACnB,YAAY;QACZ,SAAS,aAGD,cAAc,CAAA,EAAA,CAAA,CAAA;AAEb,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,YAXpB,eAAe;QACf,YAAY;QACZ,UAAU;QACV,UAAU;QACV,mBAAmB;QACnB,YAAY;QACZ,SAAS,CAAA,EAAA,CAAA,CAAA;2FAKA,WAAW,EAAA,UAAA,EAAA,CAAA;kBAbvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,eAAe;wBACf,YAAY;wBACZ,UAAU;wBACV,UAAU;wBACV,mBAAmB;wBACnB,YAAY;wBACZ,SAAS;AACV,qBAAA;oBACD,YAAY,EAAE,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;iBAC1B,CAAA;;;AC1BD;;;;AAIG;MAqBU,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAHX,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAN/B,YAAY;QACZ,UAAU;QACV,UAAU;QACV,WAAW;QACX,mBAAmB,aAGX,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAEjB,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YATxB,YAAY;QACZ,UAAU;QACV,UAAU;QACV,WAAW;QACX,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAKV,eAAe,EAAA,UAAA,EAAA,CAAA;kBAX3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,UAAU;wBACV,UAAU;wBACV,WAAW;wBACX,mBAAmB;AACpB,qBAAA;oBACD,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B,CAAA;;;ACxBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAkBU,+BAA+B,CAAA;AAgD1C,IAAA,WAAA,CAAsB,iBAAoC,EAAA;AAApC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AA/C1D,QAAA,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;AAEtB;;;;AAIG;AACO,QAAA,IAAW,CAAA,WAAA,GAAG,GAAG,CAAC;QAUlB,IAAA,CAAA,KAAK,GAAG,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AAE7C;;;;;;;;AAQG;QACH,IAAA,CAAA,OAAO,GAAwB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI;;;QAGpE,SAAS,CAAC,aAAa,CAAC,EACxB,SAAS,CAAC,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAC1D,SAAS,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CACnE,CAAC;AAEF;;;;AAIG;AACH,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;;;AAGzB,QAAA,SAAS,CAAC,aAAa,CAAC,CACzB,CAAC;KAE4D;IAE9D,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvB,QAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACpC;AAED;;;;AAIG;AACH,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,KAAK,IAAI,CAAC;KACzD;;4HAlEU,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAoB,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,+BAA+B,uKCtB5C,wcAkBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAApE,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+I,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA9B,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAlH,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAgD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDIa,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,SAAS;+BACE,6BAA6B,EAAA,eAAA,EAEtB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,wcAAA,EAAA,CAAA;qGAkBzB,OAAO,EAAA,CAAA;sBAA5B,SAAS;uBAAC,SAAS,CAAA;;;AEtCtB;;;;AAIG;MA2BU,4BAA4B,CAAA;;yHAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0HAA5B,4BAA4B,EAAA,YAAA,EAAA,CAHxB,+BAA+B,CAAA,EAAA,OAAA,EAAA,CAb5C,YAAY;QACZ,eAAe;QACf,kBAAkB;QAClB,UAAU;AACV,QAAA,UAAU,8BAUF,+BAA+B,CAAA,EAAA,CAAA,CAAA;AAE9B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,YAhBrC,YAAY;QACZ,eAAe;QACf,kBAAkB;QAClB,UAAU;QACV,UAAU;QACV,YAAY,CAAC,UAAU,CAAY;AACjC,YAAA,aAAa,EAAE;AACb,gBAAA,0BAA0B,EAAE;AAC1B,oBAAA,SAAS,EAAE,+BAA+B;AAC3C,iBAAA;AACF,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAKO,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAlBxC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,eAAe;wBACf,kBAAkB;wBAClB,UAAU;wBACV,UAAU;wBACV,YAAY,CAAC,UAAU,CAAY;AACjC,4BAAA,aAAa,EAAE;AACb,gCAAA,0BAA0B,EAAE;AAC1B,oCAAA,SAAS,EAAE,+BAA+B;AAC3C,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,+BAA+B,CAAC;oBAC/C,OAAO,EAAE,CAAC,+BAA+B,CAAC;iBAC3C,CAAA;;;AC9BD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAIU,MAAA,iBAAiB,GAAe;AAC3C,IAAA,IAAI,EAAE;AACJ,QAAA,eAAe,EAAE,EAAE;AACnB,QAAA,cAAc,EAAE;AACd,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,YAAY,EAAE,CAAC;AACf,YAAA,cAAc,EAAE,KAAK;AACtB,SAAA;AACF,KAAA;;;AChBH;;;;AAIG;MAgGU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,iBAd1B,oBAAoB;QACpB,wBAAwB;QACxB,wBAAwB;QACxB,oBAAoB;AACpB,QAAA,sBAAsB,aApDtB,eAAe;QACf,YAAY;QACZ,oBAAoB;QACpB,UAAU;QACV,UAAU;QACV,oBAAoB;QACpB,iBAAiB;QACjB,oBAAoB;QACpB,WAAW;QACX,YAAY;QACZ,mBAAmB;QACnB,YAAY;QACZ,aAAa;QACb,gBAAgB;AAChB,QAAA,SAAS,aAyCT,oBAAoB;QACpB,wBAAwB;QACxB,wBAAwB;QACxB,oBAAoB;QACpB,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAGb,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EA9CjB,SAAA,EAAA;QACT,oBAAoB,CAAa,iBAAiB,CAAC;AACnD,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,uBAAuB,EAAE;AACvB,oBAAA,SAAS,EAAE,oBAAoB;AAC/B,oBAAA,IAAI,EAAE;AACJ,wBAAA,WAAW,EAAE;4BACX,KAAK,EAAE,CAAC,2BAA2B,CAAC;AACrC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACD,gBAAA,oBAAoB,EAAE;AACpB,oBAAA,SAAS,EAAE,oBAAoB;AAC/B,oBAAA,IAAI,EAAE;AACJ,wBAAA,WAAW,EAAE;4BACX,KAAK,EAAE,CAAC,2BAA2B,CAAC;AACrC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACD,gBAAA,0BAA0B,EAAE;AAC1B,oBAAA,SAAS,EAAE,oBAAoB;AAC/B,oBAAA,IAAI,EAAE;AACJ,wBAAA,WAAW,EAAE;4BACX,KAAK,EAAE,CAAC,2BAA2B,CAAC;AACrC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CA9CC,eAAe;QACf,YAAY;QACZ,oBAAoB;QACpB,UAAU;QACV,UAAU;QACV,oBAAoB;QACpB,iBAAiB;QACjB,oBAAoB;QACpB,WAAW;QACX,YAAY;QACZ,mBAAmB;QACnB,YAAY;QACZ,aAAa;QACb,gBAAgB;QAChB,SAAS,CAAA,EAAA,CAAA,CAAA;2FAgDA,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAhE7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,eAAe;wBACf,YAAY;wBACZ,oBAAoB;wBACpB,UAAU;wBACV,UAAU;wBACV,oBAAoB;wBACpB,iBAAiB;wBACjB,oBAAoB;wBACpB,WAAW;wBACX,YAAY;wBACZ,mBAAmB;wBACnB,YAAY;wBACZ,aAAa;wBACb,gBAAgB;wBAChB,SAAS;AACV,qBAAA;AACD,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAa,iBAAiB,CAAC;AACnD,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,uBAAuB,EAAE;AACvB,oCAAA,SAAS,EAAE,oBAAoB;AAC/B,oCAAA,IAAI,EAAE;AACJ,wCAAA,WAAW,EAAE;4CACX,KAAK,EAAE,CAAC,2BAA2B,CAAC;AACrC,yCAAA;AACF,qCAAA;AACF,iCAAA;AACD,gCAAA,oBAAoB,EAAE;AACpB,oCAAA,SAAS,EAAE,oBAAoB;AAC/B,oCAAA,IAAI,EAAE;AACJ,wCAAA,WAAW,EAAE;4CACX,KAAK,EAAE,CAAC,2BAA2B,CAAC;AACrC,yCAAA;AACF,qCAAA;AACF,iCAAA;AACD,gCAAA,0BAA0B,EAAE;AAC1B,oCAAA,SAAS,EAAE,oBAAoB;AAC/B,oCAAA,IAAI,EAAE;AACJ,wCAAA,WAAW,EAAE;4CACX,KAAK,EAAE,CAAC,2BAA2B,CAAC;AACrC,yCAAA;AACF,qCAAA;AACF,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,oBAAoB;wBACpB,wBAAwB;wBACxB,wBAAwB;wBACxB,oBAAoB;wBACpB,sBAAsB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,oBAAoB;wBACpB,wBAAwB;wBACxB,wBAAwB;wBACxB,oBAAoB;wBACpB,sBAAsB;AACvB,qBAAA;iBACF,CAAA;;;ACnGD;;;;AAIG;;ACJH;;;;AAIG;MA2BU,4BAA4B,CAAA;AAGvC,IAAA,WAAA,CACY,4BAA0D,EAAA;AAA1D,QAAA,IAA4B,CAAA,4BAAA,GAA5B,4BAA4B,CAA8B;KAClE;AAEJ,IAAA,WAAW,CAAC,OAAuB,EAAA;AACjC,QAAA,IAAI,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,IAAI,EAAE;YACjB,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5D,SAAA;KACF;;yHAXU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA4E,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,4BAA4B,EAT5B,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA;QACT,4BAA4B;AAC5B,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,4BAA4B;AAC1C,SAAA;AACF,KAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC5BH,ybAgBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAqB,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAxJ,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAyJ,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA1F,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDea,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAZxC,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,0BAA0B,EAEzB,SAAA,EAAA;wBACT,4BAA4B;AAC5B,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,4BAA4B;AAC1C,yBAAA;qBACF,EACgB,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,ybAAA,EAAA,CAAA;gHAGtC,IAAI,EAAA,CAAA;sBAAZ,KAAK;;;AEhCR;;;;AAIG;MAkBU,wBAAwB,CAAA;IAiCnC,WACY,CAAA,aAAsC,EACtC,cAA8B,EAAA;AAD9B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAyB;AACtC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAlCvB,IAAA,CAAA,aAAa,GAAG;;;;SAIlC,CAAC;QAEM,IAAc,CAAA,cAAA,GAAsB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACvE,MAAM,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAChC,CAAC;AAEF;;AAEG;QACH,IAAA,CAAA,MAAM,GAAmC,IAAI,CAAC,cAAc,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,CAC1B,CAAC;AAEF;;;;AAIG;AACH,QAAA,IAAA,CAAA,MAAM,GACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,GAAG,CAAC,CAAC,IAAI,KAAI,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,IAAI,EAAA,CAAG,KAAK,CAAC,GAAG,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAA,EAAA,CAAC,EACzD,GAAG,CAAC,CAAC,KAAK,KACR,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KACb,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CACvD,CACF,CACF,CAAC;KAKA;;qHApCO,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAjC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvB,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,2DCtBrC,0bAgBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAmJ,iBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAApJ,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDMa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;+BACE,qBAAqB,EAAA,eAAA,EAEd,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0bAAA,EAAA,CAAA;;;AEpBjD;;;;AAIG;MAyCU,qBAAqB,CAAA;;kHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAHjB,YAAA,EAAA,CAAA,wBAAwB,EAAE,4BAA4B,aAjBnE,YAAY;QACZ,cAAc;QACd,WAAW;QACX,YAAY;QACZ,SAAS;QACT,UAAU;QACV,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAYX,wBAAwB,EAAE,4BAA4B,CAAA,EAAA,CAAA,CAAA;AAErD,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAZrB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,wBAAwB,EAAE;AACxB,oBAAA,SAAS,EAAE,wBAAwB;AACpC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAhBC,YAAY;QACZ,cAAc;QACd,WAAW;QACX,YAAY;QACZ,SAAS;QACT,UAAU;QACV,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAcV,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAtBjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc;wBACd,WAAW;wBACX,YAAY;wBACZ,SAAS;wBACT,UAAU;wBACV,mBAAmB;AACpB,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,wBAAwB,EAAE;AACxB,oCAAA,SAAS,EAAE,wBAAwB;AACpC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,wBAAwB,EAAE,4BAA4B,CAAC;AACtE,oBAAA,OAAO,EAAE,CAAC,wBAAwB,EAAE,4BAA4B,CAAC;iBAClE,CAAA;;;AC5CD;;;;AAIG;MAoBU,0BAA0B,CAAA;AACrC,IAAA,WAAA,CACY,gBAAiE,EACjE,qBAA4C,EAC5C,uBAAgD,EAAA;AAFhD,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAiD;AACjE,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AAC5C,QAAA,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;AAyB5D;;;;AAIG;AACH,QAAA,IAAA,CAAA,MAAM,GACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,EACnC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,KACtB,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,CAChD,WAAW,EACX,IAAI,CAAC,qBAAqB,CAC3B,CACF,EACD,SAAS,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,KAC5B,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC,CAAA,EAAA,CACzE,CACF,CAAC;KAzCA;AAEJ,IAAA,IAAc,cAAc,GAAA;QAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC1E;AAED;;AAEG;AACH,IAAA,IAAc,YAAY,GAAA;QACxB,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,IAAI,CACjD,MAAM,CAAC,aAAa,CAAC,EACrB,GAAG,CAAC,CAAC,OAAO,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,mCAAI,EAAE,CAAA,EAAA,CAAC,EACpC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC,CAC3D,CAAC;KACH;AAED;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC;KAC7D;AAqBD;;AAEG;IACK,oBAAoB,CAC1B,IAAY,EACZ,aAAqB,EAAA;QAErB,OAAO,IAAI,CAAC,uBAAuB;AAChC,aAAA,oBAAoB,CAAC,IAAI,EAAE,aAAa,CAAC;AACzC,aAAA,IAAI,CACH,MAAM,CAAC,CAAC,UAAU,KAAK,OAAO,CAAC,UAAU,CAAC,CAAC,EAC3C,GAAG,CAAC,CAAC,UAA8B,KACjC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CACpD,CACF,CAAC;KACL;;uHA/DU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAuB,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA8H,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAA5J,EAAA,CAAA,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,6DCxBvC,yeAeA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,iBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAwE,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAsB,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAhG,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA1C,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDSa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,uBAAuB,EAAA,eAAA,EAEhB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,yeAAA,EAAA,CAAA;;;AEtBjD;;;;AAIG;MAwBU,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAHnB,YAAA,EAAA,CAAA,0BAA0B,CAV/B,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,cAAc,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,aAWlE,0BAA0B,CAAA,EAAA,CAAA,CAAA;AAEzB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAZvB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,0BAA0B,EAAE;AAC1B,oBAAA,SAAS,EAAE,0BAA0B;AACtC,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EATS,OAAA,EAAA,CAAA,YAAY,EAAE,cAAc,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAA,EAAA,CAAA,CAAA;2FAajE,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAdnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC;AAC7E,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,0BAA0B,EAAE;AAC1B,oCAAA,SAAS,EAAE,0BAA0B;AACtC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;iBACtC,CAAA;;;AC3BD;;;;AAIG;;ACJH;;;;AAIG;MAaU,sBAAsB,CAAA;AAsBjC,IAAA,WAAA,CAAsB,qBAA4C,EAAA;AAA5C,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QArBxD,IAAA,CAAA,kBAAkB,GAAG,IAAI,eAAe,CAAM,IAAI,CAAC,CAAC;AAEpD,QAAA,IAAQ,CAAA,QAAA,GAAwB,IAAI,CAAC,qBAAqB;AACjE,aAAA,UAAU,EAAE;AACZ,aAAA,IAAI,CACH,MAAM,CAAC,aAAa,CAAC,EACrB,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,CAAU,KAAI;;YACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAA,CAAA,EAAA,GAAA,CAAC,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;SACzE,CAAC,CACH,CAAC;QAEJ,IAAO,CAAA,OAAA,GAAsB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC7C,GAAG,CAAC,CAAC,CAAU,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAC1C,CAAC;AAEF,QAAA,IAAU,CAAA,UAAA,GAAoB,aAAa,CAAC;AAC1C,YAAA,IAAI,CAAC,QAAQ;AACb,YAAA,IAAI,CAAC,kBAAkB;AACxB,SAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;KAE2B;AAEtE,IAAA,SAAS,CAAC,IAAS,EAAA;AACjB,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACpC;AAED,IAAA,QAAQ,CAAC,SAAqB,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACjC,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,SAAc,KAAI;YACrB,QACE,SAAS,CAAC,IAAI;gBACd,SAAS,CAAC,IAAI,CAAC,GAAG;AAClB,gBAAA,SAAS,CAAC,IAAI;gBACd,SAAS,CAAC,IAAI,CAAC,GAAG;gBAClB,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,GAAG,EACzC;SACH,CAAC,CACH,CAAC;KACH;;AAGD,IAAA,SAAS,CAAC,MAAa,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACjC,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,SAAc,KAAI;AACrB,YAAA,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CACzB,CAAC,CAAC,KACA,CAAC,CAAC,KAAK;AACP,gBAAA,SAAS,CAAC,IAAI;gBACd,CAAC,CAAC,KAAK,CAAC,SAAS;AACjB,gBAAA,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI;AACtB,gBAAA,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,GAAG,CACpD,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAChC,CAAC,CACH,CAAC;KACH;AAED;;;AAGG;AACK,IAAA,YAAY,CAAC,OAAgB,EAAA;QACnC,IACE,CAAC,OAAO,CAAC,MAAM;AACf,YAAA,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO;YACvB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EACjC;AACA,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;QAED,OAAe,OAAO,CAAC,MAAM,CAAC,OAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACzE;;mHA3EU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA6J,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,yDCjBnC,gpBAyBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAtJ,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA6H,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAsB,iBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAnJ,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDRa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;+BACE,mBAAmB,EAAA,eAAA,EAEZ,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gpBAAA,EAAA,CAAA;;;AEfjD;;;;AAIG;MA+BU,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAHf,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAfnC,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,cAAc,aAYN,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAErB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAZnB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,sBAAsB,EAAE;AACtB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAdC,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,cAAc,CAAA,EAAA,CAAA,CAAA;2FAcL,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBApB/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,WAAW;wBACX,YAAY;wBACZ,cAAc;AACf,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,sBAAsB,EAAE;AACtB,oCAAA,SAAS,EAAE,sBAAsB;AAClC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC,CAAA;;;AClCD;;;;AAIG;MAsBU,qBAAqB,CAAA;AA0BhC,IAAA,WAAA,CACY,qBAA4C,EAC5C,kBAAsC,EACtC,MAAiB,EACjB,YAA0B,EAAA;AAH1B,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AAC5C,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QA7BtC,IAAA,CAAA,QAAQ,GACN,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;AAE1C;;AAEG;QACH,IAAA,CAAA,oBAAoB,GAAwB,KAAK;;AAE/C,QAAA,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;;AAG7C,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAC9C,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,kBAAkB,CAAC,EACvD,KAAK,CAAC,IAAI,CAAC,CACZ,EACD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAC/C,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,kBAAkB,CAAC,EACvD,KAAK,CAAC,KAAK,CAAC,CACb,CACF,CAAC;AAEQ,QAAA,IAAkB,CAAA,kBAAA,GAAG,4BAA4B,CAAC;QAElD,IAAA,CAAA,qBAAqB,GAAG,CAAA,uBAAA,EAA0B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAOlF;AAEJ;;AAEG;IACH,WAAW,GAAA;;AAET,QAAA,IAAI,CAAC,kBAAkB;AACpB,aAAA,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC;AACrC,aAAA,SAAS,CAAC,CAAC,eAAe,KAAI;AAC7B,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC9C,YAAA,MAAM,UAAU,GACd,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAEtE,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;gBACpC,UAAU,CAAC,MAAK;oBACd,UAAU,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;oBAClD,UAAU,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5C,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC;AACD,aAAA,WAAW,EAAE,CAAC;KAClB;;;AAID;;AAEG;IACO,mBAAmB,GAAA;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;KACjE;AAED;;AAEG;IACK,gBAAgB,GAAA;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC;KACzE;AAED;;;;AAIG;AACK,IAAA,kBAAkB,CAAC,GAAgB,EAAA;QACzC,IACE,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACjC,YAAA,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EACjC;YACA,GAAG,CAAC,KAAK,EAAE,CAAC;AACb,SAAA;KACF;AAED;;;;;AAKG;IACK,aAAa,CACnB,KAAa,EACb,aAA0B,EAAA;;;QAI1B,MAAM,WAAW,GACf,aAAa,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;;QAG/C,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,KAChD,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CACxC,CAAC;KACH;;kHAzGU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAsJ,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAtJ,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,wDC1BlC,09BA6BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAuJ,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAvJ,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDHa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,kBAAkB,EAAA,eAAA,EAEX,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,09BAAA,EAAA,CAAA;;;AExBjD;;;;AAIG;MAsBU,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAHd,qBAAqB,CAV1B,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAW1C,qBAAqB,CAAA,EAAA,CAAA,CAAA;AAEpB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAZlB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,qBAAqB,EAAE;AACrB,oBAAA,SAAS,EAAE,qBAAqB;AACjC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,UAAU,EAAE,gBAAgB,CAAA,EAAA,CAAA,CAAA;2FAazC,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAd9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,gBAAgB,CAAC;AACrD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,qBAAqB,EAAE;AACrB,oCAAA,SAAS,EAAE,qBAAqB;AACjC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;iBACjC,CAAA;;;ACzBD;;;;AAIG;MAaU,uBAAuB,CAAA;AAQlC,IAAA,WAAA,CAAsB,qBAA4C,EAAA;AAA5C,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AAPlE,QAAA,IAAO,CAAA,OAAA,GAAG,oBAAoB,CAAC;QAE/B,IAAA,CAAA,QAAQ,GAA+B,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;;;AAG5E,SAAA,CAAC,CAAC;KAEmE;;oHAR3D,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAsJ,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,0DCjBpC,01BA6BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAtJ,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAW,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAX,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAmC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDZa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,oBAAoB,EAAA,eAAA,EAEb,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,01BAAA,EAAA,CAAA;;;AEfjD;;;;AAIG;MAsBU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAHhB,uBAAuB,CAV5B,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,UAAU,CAAA,EAAA,OAAA,EAAA,CAWtC,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAEtB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAZpB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,uBAAuB,EAAE;AACvB,oBAAA,SAAS,EAAE,uBAAuB;AACnC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAarC,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAdhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,CAAC;AACjD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,uBAAuB,EAAE;AACvB,oCAAA,SAAS,EAAE,uBAAuB;AACnC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC,CAAA;;;ACzBD;;;;AAIG;MAYU,0BAA0B,CAAA;AAKrC,IAAA,WAAA,CAAsB,qBAA4C,EAAA;AAA5C,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AAJlE,QAAA,IAAA,CAAA,QAAQ,GAA+B,IAAI,CAAC,qBAAqB,CAAC,UAAU,4CAE3E,CAAC;KAEoE;;uHAL3D,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAmH,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,6DChBvC,k9BA8BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAtJ,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDda,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,uBAAuB,EAAA,eAAA,EAEhB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,k9BAAA,EAAA,CAAA;;;AEdjD;;;;AAIG;MAsBU,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,iBAHnB,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAV/B,YAAY,EAAE,UAAU,aAWxB,0BAA0B,CAAA,EAAA,CAAA,CAAA;AAEzB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAZvB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,wBAAwB,EAAE;AACxB,oBAAA,SAAS,EAAE,0BAA0B;AACtC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EATS,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,CAAA,EAAA,CAAA,CAAA;2FAavB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAdnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;AACnC,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,wBAAwB,EAAE;AACxB,oCAAA,SAAS,EAAE,0BAA0B;AACtC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;iBACtC,CAAA;;;ACzBD;;;;AAIG;MAcU,0BAA0B,CAAA;AAGrC,IAAA,WAAA,CACY,qBAA4C,EAC5C,aAAyD,EACzD,UAAsB,EAAA;AAFtB,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AAC5C,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAA4C;AACzD,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AAElC,QAAA,IAAS,CAAA,SAAA,GAAsB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAC1D,SAAS,CAAC,CAAC,IAAI,KAAI;;YACjB,OAAA,aAAa,CACX,CAAC,CAAA,EAAA,GAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,uBAAJ,IAAI,CAAE,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,KAC9C,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAM,SAAS,CAAC,CAAC,IAAI,CACnD,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,KAAK,KAAI;gBACZ,IAAI,CAAC,KAAK,EAAE;AACV,oBAAA,OAAO,SAAS,CAAC;AAClB,iBAAA;AACD,gBAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACnB,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACA,KAAK,CACR,EAAA,EAAA,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAA,CACzB,CAAC;AACH,iBAAA;AAED,gBAAA,OAAO,KAAK,CAAC;AACf,aAAC,CAAC,CACH,CACF,CACF,CAAA;AAAA,SAAA,CACF,CACF,CAAC;KAxBE;IA0BJ,QAAQ,GAAA;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;KACzD;;uHAnCU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA6J,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAA/B,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA9H,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,8DClBvC,sjBAcA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA1B,yBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+E,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAArD,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDIa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,wBAAwB,EAAA,eAAA,EAEjB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,sjBAAA,EAAA,CAAA;;;AEhBjD;;;;AAIG;MAuBU,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;qHAAvB,uBAAuB,EAAA,YAAA,EAAA,CAHnB,0BAA0B,CAV/B,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,mBAAmB,EAAE,YAAY,CAAA,EAAA,OAAA,EAAA,CAW/C,0BAA0B,CAAA,EAAA,CAAA,CAAA;AAEzB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAZvB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,0BAA0B,EAAE;AAC1B,oBAAA,SAAS,EAAE,0BAA0B;AACtC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CATS,YAAY,EAAE,mBAAmB,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAa9C,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAdnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,YAAY,CAAC;AAC1D,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,0BAA0B,EAAE;AAC1B,oCAAA,SAAS,EAAE,0BAA0B;AACtC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;iBACtC,CAAA;;;AC1BD;;;;AAIG;MAoCU,uBAAuB,CAAA;AA4BlC,IAAA,WAAA,CACY,aAAmC,EACnC,qBAA4C,EAC9C,EAAsB,EACpB,EAAqB,EAAA;AAHrB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAsB;AACnC,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AAC9C,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAoB;AACpB,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;AA3BjC,QAAA,IAAe,CAAA,eAAA,GAAG,KAAK,CAAC;;AAGxB,QAAA,IAAmB,CAAA,mBAAA,GAAG,CAAC,CAAC;QAIxB,IAAA,CAAA,QAAQ,GACN,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;QAE1C,IAAQ,CAAA,QAAA,GAAyB,IAAI,CAAC,QAAQ,CAAC,IAAI,CACjD,MAAM,CAAC,aAAa,CAAC,EACrB,GAAG,CAAC,CAAC,CAAC,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,CAAC,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAA,EAAA,CAAC,EACxB,oBAAoB,EAAE,EACtB,SAAS,CAAC,CAAC,WAAW,KACpB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CACjD,EACD,GAAG,CAAC,MAAK;YACP,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC;SAC9C,CAAC,CACH,CAAC;KAOE;IAEJ,mBAAmB,GAAA;AACjB,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAE5B,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;AACpD,YAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACvC,SAAA;KACF;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;AAEvB,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE;AAClE,YAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC9C,SAAA;KACF;AAED,IAAA,SAAS,CAAC,MAAc,EAAA;QACtB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAClD;AAED,IAAA,YAAY,CAAC,OAAgB,EAAA;AAC3B,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;AACzB,YAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACzB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;AACpC,SAAA;KACF;AAED,IAAA,SAAS,CAAC,OAAgB,EAAA;;AACxB,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AACpD,QAAA,MAAM,MAAM,GAAW;AACrB,YAAA,QAAQ,EAAE,kBAAkB,CAAC,KAAK,CAAC,KAAK;AACxC,YAAA,OAAO,EAAE,kBAAkB,CAAC,OAAO,CAAC,KAAK;AACzC,YAAA,MAAM,EAAE,kBAAkB,CAAC,MAAM,CAAC,KAAK;AACvC,YAAA,KAAK,EAAE,kBAAkB,CAAC,YAAY,CAAC,KAAK;SAC7C,CAAC;AAEF,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,EAAE,MAAM,CAAC,CAAC;AAEnD,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;AAEvB,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE;AAClE,YAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC9C,SAAA;KACF;IAEO,eAAe,GAAA;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AAC9B,YAAA,KAAK,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AAChC,YAAA,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AAClC,YAAA,MAAM,EAAE,CAAC,IAAI,EAAE,oBAAoB,CAAC,eAAe,CAAC;AACpD,YAAA,YAAY,EAAE,EAAE;AACjB,SAAA,CAAC,CAAC;KACJ;;oHAhGU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAkH,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAA5J,IAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,6QCxCpC,+vJA+IA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA0C,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA1C,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+J,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAtH,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDvGa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,oBAAoB,EAAA,eAAA,EAEb,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,+vJAAA,EAAA,CAAA;+MAGH,UAAU,EAAA,CAAA;sBAArD,SAAS;gBAAC,IAAA,EAAA,CAAA,YAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;gBAE1C,iBAAiB,EAAA,CAAA;sBADhB,SAAS;gBAAC,IAAA,EAAA,CAAA,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;;;AE1CnD;;;;AAIG;MA+BU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAHhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAhBpC,YAAY;QACZ,mBAAmB;QACnB,WAAW;QACX,UAAU;QACV,gBAAgB;QAChB,gBAAgB,aAYR,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAEtB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAZpB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,0BAA0B,EAAE;AAC1B,oBAAA,SAAS,EAAE,uBAAuB;AACnC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAfC,YAAY;QACZ,mBAAmB;QACnB,WAAW;QACX,UAAU;QACV,gBAAgB;QAChB,gBAAgB,CAAA,EAAA,CAAA,CAAA;2FAcP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBArBhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;wBACnB,WAAW;wBACX,UAAU;wBACV,gBAAgB;wBAChB,gBAAgB;AACjB,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,0BAA0B,EAAE;AAC1B,oCAAA,SAAS,EAAE,uBAAuB;AACnC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;oBACD,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC,CAAA;;;AClCD;;;;AAIG;MAcU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAL1B,uBAAuB;QACvB,uBAAuB;QACvB,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAGX,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAL1B,uBAAuB;QACvB,uBAAuB;QACvB,oBAAoB,CAAA,EAAA,CAAA,CAAA;2FAGX,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAP7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,uBAAuB;wBACvB,uBAAuB;wBACvB,oBAAoB;AACrB,qBAAA;iBACF,CAAA;;;ACjBD;;;;AAIG;;ACJH;;;;AAIG;MAoBU,gCAAgC,CAAA;AAc3C,IAAA,WAAW,CAAC,KAAc,EAAA;AACxB,QAAA,IAAK,KAAK,CAAC,MAAc,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE;AACnE,YAAA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC3B,SAAA;KACF;AAED,IAAA,WAAA,CACU,gBAAsC,EACpC,mBAAwC,EACxC,EAAc,EAAA;AAFhB,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAsB;AACpC,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;AAtBlB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAG1C,QAAA,IAAY,CAAA,YAAA,GAA6B,EAAE,CAAC;QAE5C,IAAA,CAAA,WAAW,GAAgB;AACzB,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,SAAS,EAAE,QAAQ;AACnB,YAAA,aAAa,EAAE,IAAI;SACpB,CAAC;KAaE;AAEJ,IAAA,KAAK,CAAC,MAAY,EAAA;AAChB,QAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC9C;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;YAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SACtD,CAAC,CACH,CAAC;KACH;IAED,IAAI,CACF,iBAAsC,EACtC,YAAsC,EAAA;AAEtC,QAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC3C,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,YAAA,IAAI,CAAC,iBAAiB;AACnB,iBAAA,SAAS,CAAC,CAAC,OAAO,KAAI;AACrB,gBAAA,IAAI,OAAO,EAAE;AACX,oBAAA,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;AAC/C,iBAAA;AACH,aAAC,CAAC;AACD,iBAAA,WAAW,EAAE,CAAC;AAClB,SAAA;AAED,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;6HA1DU,gCAAgC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAjD,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhC,gCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gCAAgC,6HCxB7C,k9HA4HA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAiD,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAvC,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8J,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDpGa,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAL5C,SAAS;+BACE,8BAA8B,EAAA,eAAA,EAEvB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,k9HAAA,EAAA,CAAA;mKAgB/C,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AErCnC;;;;AAIG;MAmCU,0BAA0B,CAAA;AAcrC,IAAA,WAAA,CACU,qBAA4C,EAC5C,oBAA0C,EAC1C,kBAAsC,EACtC,gBAAsC,EACtC,uBAA0D,EAC1D,aAA4B,EAC1B,mBAAwC,EACxC,GAAqB,EAAA;AAPvB,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AAC5C,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAC1C,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AACtC,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAsB;AACtC,QAAA,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAmC;AAC1D,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;AAC1B,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;AAjBjC,QAAA,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;AAET,QAAA,IAAY,CAAA,YAAA,GAA6B,EAAE,CAAC;AAG5C,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;KAavC;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;AAC/B,YAAA,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACnE,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;AAC/B,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,KAAI;;YACxB,IAAI,CAAC,WAAW,GAAG,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;YACtC,IAAI,MAAM,KAAK,qBAAqB,EAAE;AACpC,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,gBAAA,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;AAC/C,gBAAA,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CACxC,SAAS,EACT,SAAS,EACT,SAAS,EACT,OAAO,CAAC,IAAI,EACZ,gBAAgB,CAAC,aAAa,CAC/B,CAAC;AACH,aAAA;SACF,CAAC,EACF,GAAG,CACD,CAAC,CAAC,OAAO,CAAoB,KAC3B,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,KAAK,YAAY,CACrE,CACF,CAAC;AAEF,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB;AAC9C,aAAA,mBAAmB,EAAE;aACrB,IAAI,CACH,GAAG,CACD,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CACrE,CACF,CAAC;AACJ,QAAA,IAAI,CAAC,iBAAiB;AACpB,YAAA,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC;AACvD,QAAA,IAAI,CAAC,wBAAwB;AAC3B,YAAA,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,CAAC;AACzD,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB;AAC9C,aAAA,qBAAqB,EAAE;AACvB,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,KAAK,MAAM,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,EAC3C,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CACjC,CAAC;AAEJ,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AACrE,YAAA,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC9B,aAAA;SACF,CAAC,CACH,CAAC;AACF,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,gBAAgB;AAClB,aAAA,8BAA8B,EAAE;AAChC,aAAA,SAAS,CAAC,CAAC,OAAO,KAAI;AACrB,YAAA,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAClC,aAAA;SACF,CAAC,CACL,CAAC;KACH;IAED,SAAS,GAAA;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,QAAA,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CACtC,IAAI,CAAC,WAAW,EAChB,gBAAgB,CAAC,aAAa,CAC/B,CAAC;KACH;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CACxC;AACE,YAAA,OAAO,EAAE;gBACP,IAAI,EAAE,IAAI,CAAC,WAAW;AACvB,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA;oBACE,YAAY,EAAE,gBAAgB,CAAC,aAAa;AAC7C,iBAAA;AACF,aAAA;SACF,EACD,IAAI,CACL,CAAC;KACH;IAEO,yBAAyB,GAAA;AAC/B,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,kBAAkB;aACpB,SAAS,CAAC,sCAAsC,CAAC;aACjD,IAAI,CAAC,KAAK,EAAE,CAAC;aACb,SAAS,CAAC,CAAC,IAAI,KACd,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,iBAAiB,CAAC,aAAa,CAAC,CACrE,CACJ,CAAC;AACF,QAAA,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC;KAClD;IAEO,qBAAqB,GAAA;AAC3B,QAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;AACxD,QAAA,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;KAC/C;IAEO,UAAU,GAAA;AAChB,QAAA,MAAM,iBAAiB,GAAG;YACxB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAEhD,oBAAA,yCAAA,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,GAAG,EACR,iBAAiB,CAClB,CAAC;AAEF,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;AAClC,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;AAC9C,QAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,CAAC;KACjD;;uHArJU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAJ,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAtJ,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,iCAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA+F,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,iKCvCvC,m8EAwEA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA5D,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAqB,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAuB,gBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA5C,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAnC,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDjCa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,uBAAuB,EAAA,eAAA,EAEhB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,m8EAAA,EAAA,CAAA;0VAczB,OAAO,EAAA,CAAA;sBAA5B,SAAS;uBAAC,SAAS,CAAA;;;AEnDtB;;;;AAIG;AAMI,MAAM,oCAAoC,GAAiB;AAChE,IAAA,MAAM,EAAE;AACN,QAAA,kBAAkB,EAAE;AAClB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,SAAS,EAAE,gCAAgC;YAC3C,UAAU,EAAE,WAAW,CAAC,MAAM;AAC/B,SAAA;AACF,KAAA;CACF;;AClBD;;;;AAIG;MAuCU,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EArBnB,YAAA,EAAA,CAAA,0BAA0B,EAAE,gCAAgC,aAEzE,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,aAAa;QACb,SAAS;QACT,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAYX,0BAA0B,EAAE,gCAAgC,CAAA,EAAA,CAAA,CAAA;AAE3D,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAZvB,SAAA,EAAA;QACT,oBAAoB,CAAC,oCAAoC,CAAC;AAC1D,QAAA,oBAAoB,CAAY;AAC9B,YAAA,aAAa,EAAE;AACb,gBAAA,0BAA0B,EAAE;AAC1B,oBAAA,SAAS,EAAE,0BAA0B;AACtC,iBAAA;AACF,aAAA;SACF,CAAC;KACH,EAAA,OAAA,EAAA,CAhBC,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,aAAa;QACb,SAAS;QACT,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAcV,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAtBnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,0BAA0B,EAAE,gCAAgC,CAAC;AAC5E,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,UAAU;wBACV,aAAa;wBACb,SAAS;wBACT,mBAAmB;AACpB,qBAAA;AACD,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,oCAAoC,CAAC;AAC1D,wBAAA,oBAAoB,CAAY;AAC9B,4BAAA,aAAa,EAAE;AACb,gCAAA,0BAA0B,EAAE;AAC1B,oCAAA,SAAS,EAAE,0BAA0B;AACtC,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,OAAO,EAAE,CAAC,0BAA0B,EAAE,gCAAgC,CAAC;iBACxE,CAAA;;;AC1CD;;;;AAIG;;ACJH;;;;AAIG;AAcH;;;;;AAKG;MAIU,UAAU,CAAA;AACrB,IAAA,WAAA,CACY,WAAwB,EACxB,iBAAoC,EACpC,YAA0B,EAAA;AAF1B,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AACxB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AACpC,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;KAClC;IAEJ,WAAW,CACT,KAA6B,EAC7B,KAA0B,EAAA;AAE1B,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,IAAI,CAC3C,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,CAAC,cAAc,KAAI;AAC3B,YAAA,IACE,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE;AACnC,gBAAA,SAAS,CAAC,yBAAyB;AACrC,gBAAA,cAAc,EACd;gBACA,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACpD,aAAA;AAAM,iBAAA;;gBAEL,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;gBACxD,IAAI,CAAC,UAAU,EAAE;AACf,oBAAA,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AAClB,iBAAA;AACD,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;SACF,CAAC,CACH,CAAC;KACH;;uGA9BU,UAAU,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA2J,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAV,UAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,cAFT,MAAM,EAAA,CAAA,CAAA;2FAEP,UAAU,EAAA,UAAA,EAAA,CAAA;kBAHtB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC1BD;;;;AAIG;AAUH;;;;;;AAMG;MAeU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAZzB,gBAAgB,EAAA7I,IAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AAYP,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAZzB,gBAAgB;QAChB,YAAY,CAAC,QAAQ,CAAC;AACpB,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,CAAC,UAAU,CAAC;AACzB,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3B,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAGO,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAd5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,gBAAgB;wBAChB,YAAY,CAAC,QAAQ,CAAC;AACpB,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;gCACV,WAAW,EAAE,CAAC,UAAU,CAAC;AACzB,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3B,6BAAA;yBACF,CAAC;AACH,qBAAA;iBACF,CAAA;;;AClCD;;;;AAIG;AAcH;;;;;;AAMG;MAIU,WAAW,CAAA;IACtB,WACY,CAAA,IAAiB,EACjB,GAAe,EACf,mBAAwC,EACxC,eAAuC,EACvC,MAAc,EAAA;AAJd,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAa;AACjB,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAY;AACf,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AACxC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAwB;AACvC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KACtB;IAEJ,WAAW,GAAA;AACT;;;AAGG;AACH,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAC7B,SAAS,CAAC,MAAK;;YACb,OAAO,IAAI,CAAC,GAAG;AACZ,iBAAA,OAAO,CAAC;gBACP,EAAE,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE;gBAChD,IAAI,EAAE,QAAQ,CAAC,YAAY;aAC5B,CAAC;AACD,iBAAA,IAAI,CACH,GAAG,CAAC,CAAC,OAAO,KAAI;gBACd,IAAI,CAAC,OAAO,EAAE;AACZ,oBAAA,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;AAC9B,iBAAA;;AAED,gBAAA,OAAO,OAAO,CAAC;aAChB,CAAC,CACH,CAAC;SACL,CAAC,CACH,CAAC;KACH;IAES,MAAM,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;KAC/B;AAED;;;;;;AAMG;IACO,cAAc,GAAA;;AACtB,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,OAAO,GAAG,MAAM,CAAC;AACtE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAA,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC,CAAC;KAC1E;;wGAhDU,WAAW,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAX,WAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,cAFV,MAAM,EAAA,CAAA,CAAA;2FAEP,WAAW,EAAA,UAAA,EAAA,CAAA;kBAHvB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;AC3BD;;;;AAIG;MAyBU,YAAY,CAAA;;yGAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,YAZrB,gBAAgB,EAAAc,IAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AAYP,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,YAZrB,gBAAgB;QAChB,YAAY,CAAC,QAAQ,CAAC;AACpB,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,WAAW,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;AACxC,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC5B,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAGO,YAAY,EAAA,UAAA,EAAA,CAAA;kBAdxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,gBAAgB;wBAChB,YAAY,CAAC,QAAQ,CAAC;AACpB,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;AACV,gCAAA,WAAW,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;AACxC,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC5B,6BAAA;yBACF,CAAC;AACH,qBAAA;iBACF,CAAA;;;AC5BD;;;;AAIG;MAkBU,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAP5B,YAAY;QACZ,gBAAgB;QAChB,mBAAmB;QACnB,YAAY;QACZ,SAAS,CAAA,EAAA,CAAA,CAAA;AAGA,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAP5B,YAAY;QACZ,gBAAgB;QAChB,mBAAmB;QACnB,YAAY;QACZ,SAAS,CAAA,EAAA,CAAA,CAAA;2FAGA,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAT/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,gBAAgB;wBAChB,mBAAmB;wBACnB,YAAY;wBACZ,SAAS;AACV,qBAAA;iBACF,CAAA;;;ACrBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAWa,SAAA,kCAAkC,CAChD,OAA0B,EAC1B,qBAAwC,EAAA;AAExC,IAAA,MAAM,OAAO,GAAG,CAAC,KAAY,KAAI;AAC/B,QAAA,MAAM,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACpD,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;AAC3C,YAAA,MAAM,EAAE,GAAG;AACX,YAAA,SAAS,EAAE,aAAa;AACzB,SAAA,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACjE,KAAC,CAAC;AACF,IAAA,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;;;;;;;;;;AAUG;MACU,2BAA2B,GACtC,IAAI,cAAc,CAAoB,6BAA6B,EAAE;AACnE,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,OAAO,EAAE,MACP,kCAAkC,CAChC,MAAM,CAAC,iBAAiB,CAAC,EACzB,MAAM,CAAC,mBAAmB,CAAC,CAC5B;AACJ,CAAA;;ACjDH;;;;AAIG;MAiCU,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;sHAAxB,wBAAwB,EAAA,OAAA,EAAA,CAAAA,IAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAZxB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAgB;AAClC,YAAA,OAAO,EAAE;AACP,gBAAA,MAAM,EAAE;AACN,oBAAA,OAAO,EAAE;wBACP,QAAQ,EAAE,CAAC,2BAA2B,CAAC;AACxC,qBAAA;AACF,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EApBC,OAAA,EAAA,CAAA,YAAY,CAAC,QAAQ,CAAC;AACpB,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;AAC7B,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAcO,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAxBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY,CAAC,QAAQ,CAAC;AACpB,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;gCACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;AAC7B,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAgB;AAClC,4BAAA,OAAO,EAAE;AACP,gCAAA,MAAM,EAAE;AACN,oCAAA,OAAO,EAAE;wCACP,QAAQ,EAAE,CAAC,2BAA2B,CAAC;AACxC,qCAAA;AACF,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;iBACF,CAAA;;;ACpCD;;;;AAIG;;ACJH;;;;AAIG;AAWa,SAAA,kCAAkC,CAChD,OAA0B,EAC1B,qBAAwC,EAAA;AAExC,IAAA,MAAM,OAAO,GAAG,CAAC,KAAY,KAAI;AAC/B,QAAA,MAAM,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACpD,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;AAC3C,YAAA,MAAM,EAAE,GAAG;AACX,YAAA,SAAS,EAAE,cAAc;AAC1B,SAAA,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACjE,KAAC,CAAC;AACF,IAAA,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;;;;;;;;;;AAUG;MACU,2BAA2B,GACtC,IAAI,cAAc,CAAoB,6BAA6B,EAAE;AACnE,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,OAAO,EAAE,MACP,kCAAkC,CAChC,MAAM,CAAC,iBAAiB,CAAC,EACzB,MAAM,CAAC,mBAAmB,CAAC,CAC5B;AACJ,CAAA;;ACjDH;;;;AAIG;MAgDU,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;sHAAxB,wBAAwB,EAAA,OAAA,EAAA,CAAAA,IAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAZxB,SAAA,EAAA;AACT,QAAA,oBAAoB,CAAgB;AAClC,YAAA,OAAO,EAAE;AACP,gBAAA,MAAM,EAAE;AACN,oBAAA,QAAQ,EAAE;wBACR,QAAQ,EAAE,CAAC,2BAA2B,CAAC;AACxC,qBAAA;AACF,iBAAA;AACF,aAAA;SACF,CAAC;AACH,KAAA,EApCC,OAAA,EAAA,CAAA,YAAY,CAAC,QAAQ,CAAC;AACpB,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gBAAA,SAAS,EAAE,mBAAmB;gBAC9B,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;AACjD,aAAA;AACD,YAAA;;AAEE,gBAAA,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3B,aAAA;AACD,YAAA;;;;AAIE,gBAAA,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gBAAA,SAAS,EAAE,mBAAmB;AAC9B,gBAAA,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE;AAC9B,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAcO,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAxCpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY,CAAC,QAAQ,CAAC;AACpB,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;gCACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gCAAA,SAAS,EAAE,mBAAmB;gCAC9B,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;AACjD,6BAAA;AACD,4BAAA;;AAEE,gCAAA,IAAI,EAAE,IAAI;gCACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3B,6BAAA;AACD,4BAAA;;;;AAIE,gCAAA,IAAI,EAAE,IAAI;gCACV,WAAW,EAAE,CAAC,YAAY,CAAC;AAC3B,gCAAA,SAAS,EAAE,mBAAmB;AAC9B,gCAAA,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE;AAC9B,6BAAA;yBACF,CAAC;AACH,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,oBAAoB,CAAgB;AAClC,4BAAA,OAAO,EAAE;AACP,gCAAA,MAAM,EAAE;AACN,oCAAA,QAAQ,EAAE;wCACR,QAAQ,EAAE,CAAC,2BAA2B,CAAC;AACxC,qCAAA;AACF,iCAAA;AACF,6BAAA;yBACF,CAAC;AACH,qBAAA;iBACF,CAAA;;;ACnDD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AASH;;;AAGG;MAEU,qBAAqB,CAAA;IAChC,WACY,CAAA,sBAA8C,EAC9C,QAAyB,EAAA;AADzB,QAAA,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;AAC9C,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAiB;AAGrC;;;;;AAKG;AACgB,QAAA,IAAA,CAAA,oBAAoB,GAEnC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAC1C,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC,CAAC,EAC1D,WAAW,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAC/C,CAAC;KAbE;AAeJ;;;AAGG;AACO,IAAA,4BAA4B,CACpC,MAAgC,EAAA;AAEhC,QAAA,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAA,EAAA,GAAA,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,CAAA,EAAA,CAAC,CAAC,CAAC;KAC5E;AAED;;;;;AAKG;AACH,IAAA,GAAG,CAAI,YAA0B,EAAA;QAC/B,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACnC,SAAS,CAAC,CAAC,cAAc,KAAI;YAC3B,MAAM,aAAa,GAAG,cAAc,KAAd,IAAA,IAAA,cAAc,uBAAd,cAAc,CAAG,YAAY,CAAC,CAAC;YACrD,OAAO,CAAC,CAAC,aAAa;kBAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAI,aAAa,CAAC;AACrC,kBAAE,EAAE,CAAC,SAAS,CAAC,CAAC;SACnB,CAAC,CACH,CAAC;KACH;;kHA5CU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cADR,MAAM,EAAA,CAAA,CAAA;2FACnB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ACjBlC;;;;AAIG;AAQH;;AAEG;MAEU,cAAc,CAAA;AACzB,IAAA,WAAA,CAAsB,qBAA4C,EAAA;AAA5C,QAAA,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;KAAI;AAEtE;;AAEG;AACH,IAAA,GAAG,CAAI,YAA0B,EAAA;QAC/B,OAAO,IAAI,CAAC,cAAc,CAAI,YAAY,CAAC,CAAC,IAAI,CAC9C,oBAAoB,EAAE,EACtB,WAAW,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAC/C,CAAC;KACH;AAED;;AAEG;AACO,IAAA,cAAc,CACtB,YAA0B,EAAA;QAE1B,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;KACrD;;2GApBU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA8I,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cADD,MAAM,EAAA,CAAA,CAAA;2FACnB,cAAc,EAAA,UAAA,EAAA,CAAA;kBAD1B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ACflC;;;;AAIG;;ACJH;;;;AAIG;AAKH;;AAEG;AACG,MAAO,eAAgB,SAAQ,OAAO,CAAA;;AAC1C;;AAEG;AACa,eAAI,CAAA,IAAA,GAAG,iBAAiB;;AChB1C;;;;AAIG;AAKH;;AAEG;AACG,MAAgB,SAAU,SAAQ,OAAO,CAAA;AAK9C;;ACjBD;;;;AAIG;AAIH;;AAEG;AACG,MAAO,aAAc,SAAQ,SAAS,CAAA;;AAC1C;AACgB,aAAI,CAAA,IAAA,GAAG,eAAe;;ACbxC;;;;AAIG;MAYU,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CAAsB,YAA0B,EAAA;AAA1B,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAES,QAAQ,GAAA;AAChB,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;KACtE;IAES,kBAAkB,GAAA;AAC1B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,CAAC,eAAe,KAAK,eAAe,CAAC,aAAa,KAAK,MAAM,CAAC,EACrE,GAAG,CAAC,CAAC,eAAe,KAClB,UAAU,CAAC,aAAa,EAAE;AACxB,YAAA,UAAU,EAAE,eAAe;SAC5B,CAAC,CACH,CACF,CAAC;KACH;;iHAlBU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACfD;;;;AAIG;MAMU,mBAAmB,CAAA;AAC9B,IAAA,WAAA,CAAY,qBAA2C,EAAA;;KAEtD;;gHAHU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,CAAA,CAAA;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B,QAAQ;mBAAC,EAAE,CAAA;;;ACTZ;;;;AAIG;;ACJH;;;;AAIG;AAeH;;AAEG;MAIU,sBAAsB,CAAA;IACjC,WACY,CAAA,OAAuB,EACvB,YAA0B,EAAA;AAD1B,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;AACvB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAEpC,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;AAED;;AAEG;IACO,QAAQ,GAAA;AAChB,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;KAC1E;AAED;;AAEG;IACO,oBAAoB,GAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAClC,GAAG,CAAC,CAAC,KAAK,KACR,UAAU,CAAC,eAAe,EAAE;YAC1B,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,aAAa,EAAE,KAAK,CAAC,aAAa;YAClC,GAAG,EAAE,KAAK,CAAC,GAAG;YACd,MAAM,EAAE,KAAK,CAAC,MAAM;SACrB,CAAC,CACH,CACF,CAAC;KACH;IAEO,iBAAiB,GAAA;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CACtB,MAAM,CACJ,gBAAgB,CACjB,EACD,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAC1C,CAAC;KACH;;mHAtCU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA/I,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACxBD;;;;AAIG;MAMU,qBAAqB,CAAA;AAChC,IAAA,WAAA,CAAY,uBAA+C,EAAA;;KAE1D;;kHAHU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA8J,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;mHAArB,qBAAqB,EAAA,CAAA,CAAA;mHAArB,qBAAqB,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,QAAQ;mBAAC,EAAE,CAAA;;;ACTZ;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAKH;;AAEG;AACG,MAAO,uBAAwB,SAAQ,SAAS,CAAA;;AACpD;AACgB,uBAAI,CAAA,IAAA,GAAG,yBAAyB,CAAC;AAOnD;;AAEG;AACG,MAAO,wBAAyB,SAAQ,SAAS,CAAA;;AACrD;AACgB,wBAAI,CAAA,IAAA,GAAG,0BAA0B,CAAC;AAMpD;;;AAGG;AACG,MAAO,sBAAuB,SAAQ,SAAS,CAAA;;AACnD;AACgB,sBAAI,CAAA,IAAA,GAAG,wBAAwB;;ACtCjD;;;;AAIG;MAqBU,uBAAuB,CAAA;AAClC,IAAA,WAAA,CACY,YAA0B,EAC1B,cAA8B,EAC9B,oBAA0C,EAAA;AAF1C,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AAC1B,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAEpD,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAES,QAAQ,GAAA;AAChB,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CACxB,sBAAsB,EACtB,IAAI,CAAC,2BAA2B,EAAE,CACnC,CAAC;AACF,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CACxB,uBAAuB,EACvB,IAAI,CAAC,4BAA4B,EAAE,CACpC,CAAC;AACF,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CACxB,wBAAwB,EACxB,IAAI,CAAC,6BAA6B,EAAE,CACrC,CAAC;KACH;IAES,4BAA4B,GAAA;AACpC,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,CAAC,eAAe,KAAK,eAAe,CAAC,aAAa,KAAK,SAAS,CAAC,EACxE,SAAS,CAAC,CAAC,eAAe,KACxB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CACtD,MAAM,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO,CAAC,CAAC,EACrC,IAAI,CAAC,CAAC,CAAC,EACP,GAAG,CAAC,CAAC,OAAO,KACV,UAAU,CAAC,uBAAuB,EAAE;AAClC,YAAA,UAAU,EAAE,eAAe;AAC3B,YAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,YAAA,IAAI,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,IAAI;AACnB,YAAA,IAAI,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,IAAI;AACnB,YAAA,KAAK,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,KAAK;AACtB,SAAA,CAAC,CACH,CACF,CACF,CACF,CAAC;KACH;IAES,6BAA6B,GAAA;QACrC,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,IAAI;;AAEhE,QAAA,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;AAEF,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAChD,SAAS,CAAC,CAAC,eAAe,KAAI;YAC5B,IAAI,CAAA,eAAe,KAAA,IAAA,IAAf,eAAe,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAf,eAAe,CAAE,aAAa,MAAK,UAAU,EAAE;AACjD,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;YAED,OAAO,cAAc,CAAC,IAAI,CACxB,GAAG,CAAC,CAAC,aAAa,KAAI;;AACpB,gBAAA,OAAA,UAAU,CAAC,wBAAwB,kBACjC,UAAU,EAAE,eAAe,EACxB,EAAA;oBACD,YAAY,EAAE,CAAA,EAAA,GAAA,eAAe,KAAf,IAAA,IAAA,eAAe,uBAAf,eAAe,CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,EAAE;AAC1C,oBAAA,eAAe,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,aAAa,KAAb,IAAA,IAAA,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,mCAAI,CAAC;oBAC7D,YAAY,EAAE,MAAA,aAAa,CAAC,WAAW,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,EAAE,cAAc;AAC5D,iBAAA,CAAA,CACD,CAAA;AAAA,aAAA,CACH,CACF,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAES,2BAA2B,GAAA;QACnC,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,IAAI;;AAEhE,QAAA,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;AAEF,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAChD,SAAS,CAAC,CAAC,eAAe,KAAI;YAC5B,IAAI,CAAA,eAAe,KAAA,IAAA,IAAf,eAAe,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAf,eAAe,CAAE,aAAa,MAAK,QAAQ,EAAE;AAC/C,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;YAED,OAAO,cAAc,CAAC,IAAI,CACxB,GAAG,CAAC,CAAC,aAAa,KAAI;;AACpB,gBAAA,OAAA,UAAU,CAAC,sBAAsB,kBAC/B,UAAU,EAAE,eAAe,EACxB,EAAA;oBACD,UAAU,EAAE,CAAA,EAAA,GAAA,aAAa,KAAb,IAAA,IAAA,aAAa,uBAAb,aAAa,CAAE,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE;AAC/C,oBAAA,eAAe,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,aAAa,KAAb,IAAA,IAAA,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,mCAAI,CAAC;AAC9D,iBAAA,CAAA,CACD,CAAA;AAAA,aAAA,CACH,CACF,CAAC;SACH,CAAC,CACH,CAAC;KACH;;oHAlGU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cAFtB,MAAM,EAAA,CAAA,CAAA;2FAEP,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAHnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACxBD;;;;AAIG;MAMU,sBAAsB,CAAA;AACjC,IAAA,WAAA,CAAY,wBAAiD,EAAA;;KAE5D;;mHAHU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oHAAtB,sBAAsB,EAAA,CAAA,CAAA;oHAAtB,sBAAsB,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBADlC,QAAQ;mBAAC,EAAE,CAAA;;;ACTZ;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAIU,MAAA,WAAW,GAAgB;AACtC,IAAA,YAAY,EAAE;AACZ,QAAA,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;AACtB,QAAA,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;AACtB,QAAA,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;AACxB,QAAA,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;;AAE3B,QAAA,QAAQ,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;AACvB,QAAA,SAAS,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;AACxB,QAAA,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;AACvB,QAAA,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;AACrB,KAAA;;;ACnBH;;;;AAIG;AAIH;;;;;;;;;;;AAWG;AACU,MAAA,YAAY,GAAiB;;;;;AAKxC,IAAA,WAAW,EAAE;AACX,QAAA,MAAM,EAAE;AACN,YAAA,EAAE,EAAE;AACF,gBAAA,KAAK,EAAE;oBACL,WAAW;oBACX,aAAa;oBACb,WAAW;oBACX,UAAU;oBACV,WAAW;oBACX,WAAW;oBACX,UAAU;oBACV,eAAe;AAChB,iBAAA;AACF,aAAA;YACD,KAAK,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC;AAC1D,SAAA;AACD,QAAA,UAAU,EAAE;AACV,YAAA,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACjB,KAAK,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE,aAAa,EAAE,WAAW,CAAC;AAClE,SAAA;AACD,QAAA,MAAM,EAAE;YACN,KAAK,EAAE,CAAC,QAAQ,CAAC;AAClB,SAAA;AACD,QAAA,oBAAoB,EAAE;AACpB,YAAA,QAAQ,EAAE,WAAW;AACrB,YAAA,KAAK,EAAE;gBACL,UAAU;gBACV,WAAW;gBACX,WAAW;gBACX,WAAW;gBACX,UAAU;gBACV,UAAU;gBACV,UAAU;AACX,aAAA;AACF,SAAA;AACD,QAAA,oBAAoB,EAAE;AACpB,YAAA,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;AAClC,SAAA;AACD,QAAA,oBAAoB,EAAE;AACpB,YAAA,QAAQ,EAAE,UAAU;AACpB,YAAA,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;AAC5C,SAAA;AACD,QAAA,uBAAuB,EAAE;AACvB,YAAA,KAAK,EAAE,CAAC,wBAAwB,EAAE,iBAAiB,CAAC;AACrD,SAAA;AACD,QAAA,uBAAuB,EAAE;AACvB,YAAA,KAAK,EAAE,CAAC,wBAAwB,EAAE,iBAAiB,CAAC;AACrD,SAAA;AACD,QAAA,6BAA6B,EAAE;AAC7B,YAAA,KAAK,EAAE;gBACL,UAAU;gBACV,wBAAwB;gBACxB,uBAAuB;gBACvB,UAAU;AACX,aAAA;AACF,SAAA;AACD,QAAA,6BAA6B,EAAE;AAC7B,YAAA,KAAK,EAAE;gBACL,UAAU;gBACV,wBAAwB;gBACxB,uBAAuB;gBACvB,UAAU;AACX,aAAA;AACF,SAAA;AACD,QAAA,0BAA0B,EAAE;AAC1B,YAAA,EAAE,EAAE;AACF,gBAAA,QAAQ,EAAE,WAAW;AACtB,aAAA;AACD,YAAA,QAAQ,EAAE,SAAS;AACnB,YAAA,KAAK,EAAE;gBACL,SAAS;gBACT,WAAW;gBACX,cAAc;gBACd,MAAM;gBACN,wBAAwB;AACzB,aAAA;AACF,SAAA;AACD,QAAA,gBAAgB,EAAE;AAChB,YAAA,KAAK,EAAE,CAAC,YAAY,EAAE,wBAAwB,EAAE,wBAAwB,CAAC;AAC1E,SAAA;AACD,QAAA,mBAAmB,EAAE;AACnB,YAAA,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;AACtC,SAAA;AACD,QAAA,iBAAiB,EAAE;AACjB,YAAA,KAAK,EAAE,CAAC,iBAAiB,EAAE,kBAAkB,CAAC;AAC/C,SAAA;AACD,QAAA,iBAAiB,EAAE;AACjB,YAAA,KAAK,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,CAAC;AACxD,SAAA;AACD,QAAA,6BAA6B,EAAE;AAC7B,YAAA,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;AACtC,SAAA;AACD,QAAA,oCAAoC,EAAE;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,CAAC;AACrE,SAAA;AACD,QAAA,yBAAyB,EAAE;YACzB,KAAK,EAAE,CAAC,kBAAkB,CAAC;AAC5B,SAAA;AACF,KAAA;;;AC3HH;;;;AAIG;AAKU,MAAA,0BAA0B,GAAoB;AACzD,IAAA,mBAAmB,CAAC;AAClB,QAAA,WAAW,EAAE,wBAAwB;AACrC,QAAA,gBAAgB,EAAE,WAAW;KAC9B,CAAC;AACF,IAAA,mBAAmB,CAAC;AAClB,QAAA,WAAW,EAAE,gBAAgB;AAC7B,QAAA,gBAAgB,EAAE,WAAW;KAC9B,CAAC;;;ACjBJ;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAIU,MAAA,uBAAuB,GAAqB;AACvD,IAAA,yBAAyB,EAAE;AACzB,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,iBAAiB,EAAE,KAAK;AACxB,QAAA,YAAY,EAAE,EAAE;AACjB,KAAA;;;ACbH;;;;AAIG;MASmB,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iHAAhB,gBAAgB,EAAA,UAAA,EAHxB,MAAM,EAAA,WAAA,EACL,MAAM,EAAA,CAAA,CAAA;2FAEC,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AAClB,oBAAA,WAAW,EAAE,MAAM;iBACpB,CAAA;;;ACZD;;;;AAIG;;MCiBU,iBAAiB,CAAA;AAG5B,IAAA,IAAI,aAAa,GAAA;;AACf,QAAA,OAAO,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,CAAC;KAC3D;AAED,IAAA,WAAA,CACY,MAAwB,EACxB,MAAc,EACd,gBAAkC,EAClC,QAAkB,EAAA;AAHlB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAkB;AACxB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACd,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AAClC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAC1B;AAEJ;;AAEG;IACH,oBAAoB,GAAA;;QAClB,IAAI,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,yBAAyB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,EAAE;YAClD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;AAC3E,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,sBAAsB,CAAC,MAAe,EAAA;;AACpC,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;AAEjC,QAAA,IAAI,MAAM,EAAE;;AAEV,YAAA,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;AAE5D,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;AACnC,iBAAA,IAAI,CACH,MAAM,CAAC,CAAC,KAAK,KAAsB,KAAK,YAAY,MAAM,CAAC,EAC3D,QAAQ,EAAE,CACX;AACA,iBAAA,SAAS,CAAC,CAAC,KAAK,KAAI;;AACnB,gBAAA,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,gBAAA,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAE9B,gBAAA,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;AACvC,gBAAA,IAAI,QAAQ,EAAE;;AAEZ,oBAAA,UAAU,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpE,iBAAA;AAAM,qBAAA;oBACL,IACE,CAAA,MAAA,IAAI,CAAC,MAAM,CAAC,yBAAyB,0CAAE,iBAAiB;AACxD,wBAAA,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,YAAY,CAAC,EAC7C;wBACA,OAAO;AACR,qBAAA;AAED,oBAAA,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;wBACnC,OAAO;AACR,qBAAA;AAED,oBAAA,UAAU,CACR,MAAM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACpD,GAAG,CACJ,CAAC;AACH,iBAAA;gBAED,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC,KAAK,EAAE,CAAC;AACtD,aAAC,CAAC,CAAC;AACN,SAAA;KACF;AAED;;;;;AAKG;AACK,IAAA,YAAY,CAAC,KAAa,EAAA;;AAChC,QAAA,QACE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,yBAAyB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,CAAC,WAAW,KACpE,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CACrE,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,KAAK,EACV;KACH;AAED;;;;;;AAMG;IACK,WAAW,CAAC,aAAqB,EAAE,YAAoB,EAAA;AAC7D,QAAA,QACE,aAAa,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD,YAAA,YAAY,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACxD;KACH;;8GAjGU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAhK,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACpBD;;;;AAIG;MAyBU,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,OAAA,EAAA,CAAAc,IAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAVhB,SAAA,EAAA;QACT,oBAAoB,CAAC,uBAAuB,CAAC;AAC7C,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,UAAU,EAAE,iBAAiB;YAC7B,IAAI,EAAE,CAAC,iBAAiB,CAAC;AACzB,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;KACF,EAAA,OAAA,EAAA,CAbC,YAAY,CAAC,OAAO,CAAC,EAAE,EAAE;AACvB,YAAA,eAAe,EAAE,SAAS;AAC1B,YAAA,iBAAiB,EAAE,iBAAiB;SACrC,CAAC,CAAA,EAAA,CAAA,CAAA;2FAYO,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAjB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;AACP,wBAAA,YAAY,CAAC,OAAO,CAAC,EAAE,EAAE;AACvB,4BAAA,eAAe,EAAE,SAAS;AAC1B,4BAAA,iBAAiB,EAAE,iBAAiB;yBACrC,CAAC;AACH,qBAAA;AACD,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,uBAAuB,CAAC;AAC7C,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,UAAU,EAAE,iBAAiB;4BAC7B,IAAI,EAAE,CAAC,iBAAiB,CAAC;AACzB,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;iBACF,CAAA;;AAGK,SAAU,iBAAiB,CAC/B,iBAAoC,EAAA;IAEpC,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;AAC/D,IAAA,OAAO,OAAO,CAAC;AACjB;;ACpCA;;;;AAIG;;ACJH;;;;AAIG;AAQH;;AAEG;AACc,IAAA,UAqChB;AArCD,CAAA,UAAiB,SAAS,EAAA;AACxB;;;;;;;;;;;;;;;AAeG;AACH,IAAA,SAAgB,0BAA0B,CACxC,OAAwB,EACxB,UAAmC,EAAE,EAAA;QAErC,IACE,OAAO,YAAY,gBAAgB;YACnC,OAAO,YAAY,gBAAgB,EACnC;AACA,YAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CACrC,CAAC,YAA6B,KAAI;AAChC,gBAAA,0BAA0B,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AACpD,aAAC,CACF,CAAC;AACH,SAAA;QAED,OAAO,CAAC,sBAAsB,CAAC;AAC7B,YAAA,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,OAAO,CAAC,SAAS;AAC7B,SAAA,CAAC,CAAC;KACJ;AAnBe,IAAA,SAAA,CAAA,0BAA0B,6BAmBzC,CAAA;AACH,CAAC,EArCgB,SAAS,KAAT,SAAS,GAqCzB,EAAA,CAAA,CAAA;;ACpDD;;;;AAIG;;ACJH;;;;AAIG;MA0CU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,+BAnB7B,YAAY;QACZ,4BAA4B;QAC5B,YAAY;QACZ,eAAe;QACf,SAAS;QACT,gBAAgB;AAChB,QAAA,SAAS,uBAET,cAAc;QACd,cAAc;QACd,mBAAmB;QACnB,YAAY,EAIZmJ,aAAA,EAAAC,WAAA,EAAAC,YAAA,EAAA,yBAAyB,CAEjB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,yBAAyB,CAAA,EAAA,CAAA,CAAA;AAEtC,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EApB7B,OAAA,EAAA,CAAA,cAAc,CAAC,OAAO,EAAE;QACxB,YAAY;QACZ,4BAA4B;QAC5B,YAAY;QACZ,eAAe;QACf,SAAS;QACT,gBAAgB;QAChB,SAAS;QACT,mBAAmB,CAAC,OAAO,EAAE;QAC7B,cAAc;QACd,cAAc;QACd,mBAAmB;QACnB,YAAY;QACZ,aAAa,CAAC,OAAO,EAAE;QACvB,WAAW,CAAC,OAAO,EAAE;QACrB,YAAY,CAAC,OAAO,EAAE;AACtB,QAAA,yBAAyB,EAEjB,YAAY,EAAE,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAEtC,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAtBhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,cAAc,CAAC,OAAO,EAAE;wBACxB,YAAY;wBACZ,4BAA4B;wBAC5B,YAAY;wBACZ,eAAe;wBACf,SAAS;wBACT,gBAAgB;wBAChB,SAAS;wBACT,mBAAmB,CAAC,OAAO,EAAE;wBAC7B,cAAc;wBACd,cAAc;wBACd,mBAAmB;wBACnB,YAAY;wBACZ,aAAa,CAAC,OAAO,EAAE;wBACvB,WAAW,CAAC,OAAO,EAAE;wBACrB,YAAY,CAAC,OAAO,EAAE;wBACtB,yBAAyB;AAC1B,qBAAA;AACD,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,yBAAyB,CAAC;iBACnD,CAAA;;;AC7CD;;;;AAIG;AAsBH;;AC1BA;;AAEG;;;;"}