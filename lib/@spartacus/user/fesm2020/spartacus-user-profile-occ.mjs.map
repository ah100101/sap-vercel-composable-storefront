{"version":3,"file":"spartacus-user-profile-occ.mjs","sources":["../../../feature-libs/user/profile/occ/adapters/config/default-occ-user-profile-endpoint.config.ts","../../../feature-libs/user/profile/occ/adapters/config/occ-user-profile-endpoint.model.ts","../../../feature-libs/user/profile/occ/adapters/config/index.ts","../../../feature-libs/user/profile/occ/adapters/occ-user-profile.adapter.ts","../../../feature-libs/user/profile/occ/adapters/index.ts","../../../feature-libs/user/profile/occ/user-profile-occ.module.ts","../../../feature-libs/user/profile/occ/public_api.ts","../../../feature-libs/user/profile/occ/spartacus-user-profile-occ.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '@spartacus/core';\n\nexport const defaultOccUserProfileConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        userRegister: 'users',\n        userForgotPassword: 'forgottenpasswordtokens',\n        userResetPassword: 'resetpassword',\n        userUpdateLoginId: 'users/${userId}/login',\n        userUpdatePassword: 'users/${userId}/password',\n        titles: 'titles',\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccEndpoint } from '@spartacus/core';\n\nexport interface UserProfileOccEndpoints {\n  /**\n   * Titles used for user's personal info.\n   */\n  titles?: string | OccEndpoint;\n\n  /**\n   * Register a new user.\n   */\n  userRegister?: string | OccEndpoint;\n\n  /**\n   * Request an email to reset the password\n   */\n  userForgotPassword?: string | OccEndpoint;\n\n  /**\n   * Reset the password once the email is received.\n   */\n  userResetPassword?: string | OccEndpoint;\n\n  /**\n   * Update the user id with which the user authenticates.\n   */\n  userUpdateLoginId?: string | OccEndpoint;\n\n  /**\n   * Update the user's password\n   */\n  userUpdatePassword?: string | OccEndpoint;\n\n  /**\n   * Update the user's profile\n   */\n  userUpdateProfile?: string | OccEndpoint;\n\n  /**\n   * Close user account\n   */\n  userCloseAccount?: string | OccEndpoint;\n}\ndeclare module '@spartacus/core' {\n  interface OccEndpoints extends UserProfileOccEndpoints {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-occ-user-profile-endpoint.config';\nexport * from './occ-user-profile-endpoint.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ConverterService,\n  InterceptorUtil,\n  normalizeHttpError,\n  Occ,\n  OccEndpointsService,\n  USE_CLIENT_TOKEN,\n} from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport {\n  TITLE_NORMALIZER,\n  UserProfileAdapter,\n  USER_PROFILE_NORMALIZER,\n  USER_PROFILE_SERIALIZER,\n  USER_SIGN_UP_SERIALIZER,\n} from '@spartacus/user/profile/core';\nimport { Title, UserSignUp } from '@spartacus/user/profile/root';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nconst CONTENT_TYPE_JSON_HEADER = { 'Content-Type': 'application/json' };\nconst CONTENT_TYPE_URLENCODED_HEADER = {\n  'Content-Type': 'application/x-www-form-urlencoded',\n};\n\n@Injectable()\nexport class OccUserProfileAdapter implements UserProfileAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  update(userId: string, user: User): Observable<unknown> {\n    const endpoint = this.occEndpoints.isConfigured('userUpdateProfile')\n      ? 'userUpdateProfile'\n      : 'user';\n    const url = this.occEndpoints.buildUrl(endpoint, { urlParams: { userId } });\n    user = this.converter.convert(user, USER_PROFILE_SERIALIZER);\n    return this.http\n      .patch(url, user)\n      .pipe(catchError((error) => throwError(normalizeHttpError(error))));\n  }\n\n  register(user: UserSignUp): Observable<User> {\n    const url: string = this.occEndpoints.buildUrl('userRegister');\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    user = this.converter.convert(user, USER_SIGN_UP_SERIALIZER);\n\n    return this.http.post<User>(url, user, { headers }).pipe(\n      catchError((error) => throwError(normalizeHttpError(error))),\n      this.converter.pipeable(USER_PROFILE_NORMALIZER)\n    );\n  }\n\n  registerGuest(guid: string, password: string): Observable<User> {\n    const url: string = this.occEndpoints.buildUrl('userRegister');\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER,\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n\n    const httpParams: HttpParams = new HttpParams()\n      .set('guid', guid)\n      .set('password', password);\n\n    return this.http.post<User>(url, httpParams, { headers }).pipe(\n      catchError((error) => throwError(normalizeHttpError(error))),\n      this.converter.pipeable(USER_PROFILE_NORMALIZER)\n    );\n  }\n\n  requestForgotPasswordEmail(userEmailAddress: string): Observable<unknown> {\n    const url = this.occEndpoints.buildUrl('userForgotPassword');\n    const httpParams: HttpParams = new HttpParams().set(\n      'userId',\n      userEmailAddress\n    );\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER,\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    return this.http\n      .post(url, httpParams, { headers })\n      .pipe(catchError((error) => throwError(normalizeHttpError(error))));\n  }\n\n  resetPassword(token: string, newPassword: string): Observable<unknown> {\n    const url = this.occEndpoints.buildUrl('userResetPassword');\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER,\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n\n    return this.http\n      .post(url, { token, newPassword }, { headers })\n      .pipe(catchError((error) => throwError(normalizeHttpError(error))));\n  }\n\n  updateEmail(\n    userId: string,\n    currentPassword: string,\n    newUserId: string\n  ): Observable<unknown> {\n    const url = this.occEndpoints.buildUrl('userUpdateLoginId', {\n      urlParams: { userId },\n    });\n    const httpParams: HttpParams = new HttpParams()\n      .set('password', currentPassword)\n      .set('newLogin', newUserId);\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER,\n    });\n    return this.http\n      .put(url, httpParams, { headers })\n      .pipe(catchError((error) => throwError(normalizeHttpError(error))));\n  }\n\n  updatePassword(\n    userId: string,\n    oldPassword: string,\n    newPassword: string\n  ): Observable<unknown> {\n    const url = this.occEndpoints.buildUrl('userUpdatePassword', {\n      urlParams: { userId },\n    });\n    const httpParams: HttpParams = new HttpParams()\n      .set('old', oldPassword)\n      .set('new', newPassword);\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER,\n    });\n    return this.http\n      .put(url, httpParams, { headers })\n      .pipe(catchError((error) => throwError(normalizeHttpError(error))));\n  }\n\n  close(userId: string): Observable<unknown> {\n    const endpoint = this.occEndpoints.isConfigured('userCloseAccount')\n      ? 'userCloseAccount'\n      : 'user';\n    const url = this.occEndpoints.buildUrl(endpoint, { urlParams: { userId } });\n    return this.http\n      .delete<User>(url)\n      .pipe(catchError((error) => throwError(normalizeHttpError(error))));\n  }\n\n  loadTitles(): Observable<Title[]> {\n    const url = this.occEndpoints.buildUrl('titles');\n    return this.http.get<Occ.TitleList>(url).pipe(\n      catchError((error) => throwError(normalizeHttpError(error))),\n      map((titleList) => titleList.titles ?? []),\n      this.converter.pipeableMany(TITLE_NORMALIZER)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/index';\nexport * from './occ-user-profile.adapter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { UserProfileAdapter } from '@spartacus/user/profile/core';\nimport { defaultOccUserProfileConfig } from './adapters/config/default-occ-user-profile-endpoint.config';\nimport { OccUserProfileAdapter } from './adapters/occ-user-profile.adapter';\n\n@NgModule({\n  providers: [\n    provideDefaultConfig(defaultOccUserProfileConfig),\n    { provide: UserProfileAdapter, useClass: OccUserProfileAdapter },\n  ],\n})\nexport class UserProfileOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './adapters/index';\nexport * from './user-profile-occ.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}