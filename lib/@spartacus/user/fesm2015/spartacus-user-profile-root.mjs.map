{"version":3,"file":"spartacus-user-profile-root.mjs","sources":["../../../feature-libs/user/profile/root/feature-name.ts","../../../feature-libs/user/profile/root/facade/user-profile.facade.ts","../../../feature-libs/user/profile/root/user-profile-root.module.ts","../../../feature-libs/user/profile/root/facade/user-email.facade.ts","../../../feature-libs/user/profile/root/facade/user-password.facade.ts","../../../feature-libs/user/profile/root/facade/user-register.facade.ts","../../../feature-libs/user/profile/root/facade/index.ts","../../../feature-libs/user/profile/root/model/augmented.model.ts","../../../feature-libs/user/profile/root/model/index.ts","../../../feature-libs/user/profile/root/public_api.ts","../../../feature-libs/user/profile/root/spartacus-user-profile-root.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const USER_PROFILE_FEATURE = 'userProfile';\nexport const USER_PROFILE_CORE_FEATURE = 'userProfileCore';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { Title } from '../model/user-profile.model';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: UserProfileFacade,\n      feature: USER_PROFILE_CORE_FEATURE,\n      methods: ['get', 'update', 'close', 'getTitles'],\n    }),\n})\nexport abstract class UserProfileFacade {\n  abstract get(): Observable<User | undefined>;\n\n  /**\n   * Updates the user's details.\n   *\n   * @param details User details to be updated.\n   */\n  abstract update(details: User): Observable<unknown>;\n\n  /**\n   * Closes the user account.\n   */\n  abstract close(): Observable<unknown>;\n\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  abstract getTitles(): Observable<Title[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  provideDefaultConfigFactory,\n  UserProfileFacadeTransitionalToken,\n} from '@spartacus/core';\nimport { UserProfileFacade } from './facade/user-profile.facade';\nimport {\n  USER_PROFILE_CORE_FEATURE,\n  USER_PROFILE_FEATURE,\n} from './feature-name';\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nexport function defaultUserProfileComponentsConfig(): CmsConfig {\n  const config: CmsConfig = {\n    featureModules: {\n      [USER_PROFILE_FEATURE]: {\n        cmsComponents: [\n          'RegisterCustomerComponent',\n          'UpdateProfileComponent',\n          'UpdateEmailComponent',\n          'UpdatePasswordComponent',\n          'ForgotPasswordComponent',\n          'ResetPasswordComponent',\n          'CloseAccountComponent',\n        ],\n      },\n      // by default core is bundled together with components\n      [USER_PROFILE_CORE_FEATURE]: USER_PROFILE_FEATURE,\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  providers: [\n    provideDefaultConfigFactory(defaultUserProfileComponentsConfig),\n    {\n      provide: UserProfileFacadeTransitionalToken,\n      useExisting: UserProfileFacade,\n    },\n  ],\n})\nexport class UserProfileRootModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: UserEmailFacade,\n      feature: USER_PROFILE_CORE_FEATURE,\n      methods: ['update'],\n    }),\n})\nexport abstract class UserEmailFacade {\n  /**\n   * Updates the user's email.\n   *\n   * @param password to users password to confirm the users\n   * @param newUid the new proposed email address.\n   */\n  abstract update(password: string, newUid: string): Observable<unknown>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: UserPasswordFacade,\n      feature: USER_PROFILE_CORE_FEATURE,\n      methods: ['update', 'reset', 'requestForgotPasswordEmail'],\n    }),\n})\nexport abstract class UserPasswordFacade {\n  /**\n   * Updates the password for the user\n   *\n   * The method returns an observable with `LoaderState` information, including the\n   * actual user data.\n   *\n   * @param oldPassword the current password that will be changed\n   * @param newPassword the new password\n   */\n  abstract update(\n    oldPassword: string,\n    newPassword: string\n  ): Observable<unknown>;\n\n  /**\n   * Reset new password. Part of the forgot password flow.\n   *\n   * @param token\n   * @param password\n   */\n  abstract reset(token: string, password: string): Observable<unknown>;\n\n  /*\n   * Request an email to reset a forgotten password.\n   */\n  abstract requestForgotPasswordEmail(email: string): Observable<unknown>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { Title, UserSignUp } from '../model/user-profile.model';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: UserRegisterFacade,\n      feature: USER_PROFILE_CORE_FEATURE,\n      methods: ['register', 'registerGuest', 'getTitles'],\n    }),\n})\nexport abstract class UserRegisterFacade {\n  /**\n   * Register a new user.\n   *\n   * @param submitFormData as UserRegisterFormData\n   */\n  abstract register(user: UserSignUp): Observable<User>;\n\n  /**\n   * Register a new user from guest.\n   *\n   * @param guid\n   * @param password\n   */\n  abstract registerGuest(guid: string, password: string): Observable<User>;\n\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  abstract getTitles(): Observable<Title[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-email.facade';\nexport * from './user-password.facade';\nexport * from './user-profile.facade';\nexport * from './user-register.facade';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@spartacus/storefront';\n\ndeclare module '@spartacus/storefront' {\n  const enum LAUNCH_CALLER {\n    CLOSE_ACCOUNT = 'CLOSE_ACCOUNT',\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-profile.model';\nexport * from './augmented.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-profile-root.module';\nexport * from './feature-name';\nexport * from './facade/index';\nexport * from './model/index';\n\n/** AUGMENTABLE_TYPES_START */\nexport { Title, UserSignUp } from './model/user-profile.model';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}