{"version":3,"file":"spartacus-user-account-core.mjs","sources":["../../../feature-libs/user/account/core/connectors/converters.ts","../../../feature-libs/user/account/core/connectors/user-account.adapter.ts","../../../feature-libs/user/account/core/connectors/user-account.connector.ts","../../../feature-libs/user/account/core/connectors/index.ts","../../../feature-libs/user/account/core/facade/user-account.service.ts","../../../feature-libs/user/account/core/facade/index.ts","../../../feature-libs/user/account/core/facade/facade-providers.ts","../../../feature-libs/user/account/core/user-account-core.module.ts","../../../feature-libs/user/account/core/public_api.ts","../../../feature-libs/user/account/core/spartacus-user-account-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\n\nexport const USER_ACCOUNT_NORMALIZER = new InjectionToken<Converter<any, User>>(\n  'UserAccountNormalizer'\n);\n\nexport const USER_ACCOUNT_SERIALIZER = new InjectionToken<Converter<User, any>>(\n  'UserAccountSerializer'\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { User } from '@spartacus/user/account/root';\n\nexport abstract class UserAccountAdapter {\n  abstract load(userId: string): Observable<User>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '@spartacus/user/account/root';\nimport { UserAccountAdapter } from './user-account.adapter';\n\n@Injectable()\nexport class UserAccountConnector {\n  constructor(protected adapter: UserAccountAdapter) {}\n\n  get(userId: string): Observable<User> {\n    return this.adapter.load(userId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\nexport * from './user-account.adapter';\nexport * from './user-account.connector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  User,\n  UserAccountChangedEvent,\n  UserAccountFacade,\n} from '@spartacus/user/account/root';\nimport {\n  LoginEvent,\n  LogoutEvent,\n  Query,\n  QueryService,\n  UserIdService,\n} from '@spartacus/core';\nimport { switchMap } from 'rxjs/operators';\nimport { UserAccountConnector } from '../connectors/user-account.connector';\n\n@Injectable()\nexport class UserAccountService implements UserAccountFacade {\n  protected userQuery: Query<User> = this.query.create(\n    () =>\n      this.userIdService\n        .takeUserId(true)\n        .pipe(switchMap((userId) => this.userAccountConnector.get(userId))),\n    {\n      reloadOn: [UserAccountChangedEvent],\n      resetOn: [LoginEvent, LogoutEvent],\n    }\n  );\n\n  constructor(\n    protected userAccountConnector: UserAccountConnector,\n    protected userIdService: UserIdService,\n    protected query: QueryService\n  ) {}\n\n  /**\n   * Returns the current user.\n   */\n  get(): Observable<User | undefined> {\n    return this.userQuery.get();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-account.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { UserAccountService } from './user-account.service';\nimport { UserAccountFacade } from '@spartacus/user/account/root';\nimport { Provider } from '@angular/core';\n\nexport const facadeProviders: Provider[] = [\n  UserAccountService,\n  {\n    provide: UserAccountFacade,\n    useExisting: UserAccountService,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { UserAccountConnector } from './connectors/index';\nimport { facadeProviders } from './facade/facade-providers';\n\n@NgModule({\n  providers: [UserAccountConnector, ...facadeProviders],\n})\nexport class UserAccountCoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\nexport * from './facade/index';\nexport * from './user-account-core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.UserAccountAdapter","i1.UserAccountConnector"],"mappings":"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"}