/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { CartOutlets, } from '@spartacus/cart/base/root';
import { deliveryAddressCard, deliveryModeCard } from '@spartacus/order/root';
import { ICON_TYPE } from '@spartacus/storefront';
import { combineLatest } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/cart/base/root";
import * as i2 from "@spartacus/checkout/base/root";
import * as i3 from "@spartacus/core";
import * as i4 from "../../services/checkout-step.service";
import * as i5 from "@angular/common";
import * as i6 from "@spartacus/storefront";
import * as i7 from "@angular/router";
export class CheckoutReviewShippingComponent {
    constructor(activeCartFacade, checkoutDeliveryModesFacade, checkoutDeliveryAddressFacade, translationService, checkoutStepService) {
        this.activeCartFacade = activeCartFacade;
        this.checkoutDeliveryModesFacade = checkoutDeliveryModesFacade;
        this.checkoutDeliveryAddressFacade = checkoutDeliveryAddressFacade;
        this.translationService = translationService;
        this.checkoutStepService = checkoutStepService;
        this.cartOutlets = CartOutlets;
        this.iconTypes = ICON_TYPE;
        this.deliveryAddressStepRoute = this.checkoutStepService.getCheckoutStepRoute("deliveryAddress" /* CheckoutStepType.DELIVERY_ADDRESS */);
        this.deliveryModeStepRoute = this.checkoutStepService.getCheckoutStepRoute("deliveryMode" /* CheckoutStepType.DELIVERY_MODE */);
        this.entries$ = this.activeCartFacade.getDeliveryEntries();
        this.deliveryAddress$ = this.checkoutDeliveryAddressFacade.getDeliveryAddressState().pipe(filter((state) => !state.loading && !state.error), map((state) => state.data));
        this.deliveryMode$ = this.checkoutDeliveryModesFacade.getSelectedDeliveryModeState().pipe(filter((state) => !state.loading && !state.error), map((state) => state.data));
    }
    getDeliveryAddressCard(deliveryAddress, countryName) {
        return combineLatest([
            this.translationService.translate('addressCard.shipTo'),
            this.translationService.translate('addressCard.phoneNumber'),
            this.translationService.translate('addressCard.mobileNumber'),
        ]).pipe(map(([textTitle, textPhone, textMobile]) => deliveryAddressCard(textTitle, textPhone, textMobile, deliveryAddress, countryName)));
    }
    getDeliveryModeCard(deliveryMode) {
        return combineLatest([
            this.translationService.translate('checkoutMode.deliveryMethod'),
        ]).pipe(map(([textTitle]) => deliveryModeCard(textTitle, deliveryMode)));
    }
}
CheckoutReviewShippingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CheckoutReviewShippingComponent, deps: [{ token: i1.ActiveCartFacade }, { token: i2.CheckoutDeliveryModesFacade }, { token: i2.CheckoutDeliveryAddressFacade }, { token: i3.TranslationService }, { token: i4.CheckoutStepService }], target: i0.ɵɵFactoryTarget.Component });
CheckoutReviewShippingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: CheckoutReviewShippingComponent, selector: "cx-checkout-review-shipping", ngImport: i0, template: "<ng-container *ngIf=\"entries$ | async as entries\">\n  <ng-container *ngIf=\"entries.length > 0\">\n    <h2 class=\"cx-review-header\">\n      {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n    </h2>\n\n    <div class=\"cx-review-summary cx-review-shipping-summary\">\n      <!-- DELIVERY ADDRESS SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div\n          *ngIf=\"deliveryAddress$ | async as deliveryAddress\"\n          class=\"cx-review-summary-card cx-review-card-address\"\n        >\n          <cx-card\n            [content]=\"getDeliveryAddressCard(deliveryAddress) | async\"\n          ></cx-card>\n          <div class=\"cx-review-summary-edit-step\">\n            <a\n              [attr.aria-label]=\"\n                'checkoutReview.editDeliveryAddressDetails' | cxTranslate\n              \"\n              [routerLink]=\"\n                {\n                  cxRoute: deliveryAddressStepRoute\n                } | cxUrl\n              \"\n              ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n            ></a>\n          </div>\n        </div>\n      </div>\n\n      <!-- DELIVERY MODE SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div class=\"cx-review-summary-card cx-review-card-address\">\n          <cx-card\n            *ngIf=\"deliveryMode$ | async as deliveryMode\"\n            [content]=\"getDeliveryModeCard(deliveryMode) | async\"\n          ></cx-card>\n          <div class=\"cx-review-summary-edit-step\">\n            <a\n              [attr.aria-label]=\"\n                'checkoutReview.editDeliveryMode' | cxTranslate\n              \"\n              [routerLink]=\"{ cxRoute: deliveryModeStepRoute } | cxUrl\"\n            >\n              <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- CART ITEM SECTION -->\n    <div class=\"cx-review-cart-item\">\n      <ng-template\n        [cxOutlet]=\"cartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          items: entries,\n          readonly: true\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i6.CardComponent, selector: "cx-card", inputs: ["border", "editMode", "isDefault", "content", "fitToContainer", "truncateText", "charactersLimit", "index"], outputs: ["deleteCard", "setDefaultCard", "sendCard", "editCard", "cancelCard"] }, { kind: "directive", type: i7.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i6.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "directive", type: i6.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer", "cxComponentRef"], outputs: ["loaded", "cxComponentRefChange"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i3.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: CheckoutReviewShippingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-checkout-review-shipping', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"entries$ | async as entries\">\n  <ng-container *ngIf=\"entries.length > 0\">\n    <h2 class=\"cx-review-header\">\n      {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n    </h2>\n\n    <div class=\"cx-review-summary cx-review-shipping-summary\">\n      <!-- DELIVERY ADDRESS SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div\n          *ngIf=\"deliveryAddress$ | async as deliveryAddress\"\n          class=\"cx-review-summary-card cx-review-card-address\"\n        >\n          <cx-card\n            [content]=\"getDeliveryAddressCard(deliveryAddress) | async\"\n          ></cx-card>\n          <div class=\"cx-review-summary-edit-step\">\n            <a\n              [attr.aria-label]=\"\n                'checkoutReview.editDeliveryAddressDetails' | cxTranslate\n              \"\n              [routerLink]=\"\n                {\n                  cxRoute: deliveryAddressStepRoute\n                } | cxUrl\n              \"\n              ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n            ></a>\n          </div>\n        </div>\n      </div>\n\n      <!-- DELIVERY MODE SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div class=\"cx-review-summary-card cx-review-card-address\">\n          <cx-card\n            *ngIf=\"deliveryMode$ | async as deliveryMode\"\n            [content]=\"getDeliveryModeCard(deliveryMode) | async\"\n          ></cx-card>\n          <div class=\"cx-review-summary-edit-step\">\n            <a\n              [attr.aria-label]=\"\n                'checkoutReview.editDeliveryMode' | cxTranslate\n              \"\n              [routerLink]=\"{ cxRoute: deliveryModeStepRoute } | cxUrl\"\n            >\n              <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- CART ITEM SECTION -->\n    <div class=\"cx-review-cart-item\">\n      <ng-template\n        [cxOutlet]=\"cartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          items: entries,\n          readonly: true\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ActiveCartFacade }, { type: i2.CheckoutDeliveryModesFacade }, { type: i2.CheckoutDeliveryAddressFacade }, { type: i3.TranslationService }, { type: i4.CheckoutStepService }]; } });
//# sourceMappingURL=data:application/json;base64,