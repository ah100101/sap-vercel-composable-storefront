/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { CxEvent } from '@spartacus/core';
/**
 * Emit this event to force checkout details reload
 */
export class CheckoutQueryReloadEvent extends CxEvent {
}
/**
 * Event's type
 */
CheckoutQueryReloadEvent.type = 'CheckoutQueryReloadEvent';
/**
 * Emit this event to force checkout details reset
 */
export class CheckoutQueryResetEvent extends CxEvent {
}
/**
 * Event's type
 */
CheckoutQueryResetEvent.type = 'CheckoutQueryResetEvent';
/**
 * An abstract event for all the checkout events.
 */
export class CheckoutEvent extends CxEvent {
}
/**
 * An abstract event for all the delivery address related events.
 */
export class CheckoutDeliveryAddressEvent extends CheckoutEvent {
}
/**
 * Fired when the delivery address is create cleared.
 */
export class CheckoutDeliveryAddressCreatedEvent extends CheckoutDeliveryAddressEvent {
}
/**
 * Event's type
 */
CheckoutDeliveryAddressCreatedEvent.type = 'CheckoutDeliveryAddressCreatedEvent';
/**
 * Fired when the user sets a delivery address during checkout.
 */
export class CheckoutDeliveryAddressSetEvent extends CheckoutDeliveryAddressEvent {
}
/**
 * Event's type
 */
CheckoutDeliveryAddressSetEvent.type = 'CheckoutDeliveryAddressSetEvent';
/**
 * Fired when the delivery address has to be cleared.
 */
export class CheckoutDeliveryAddressClearedEvent extends CheckoutDeliveryAddressEvent {
}
/**
 * Event's type
 */
CheckoutDeliveryAddressClearedEvent.type = 'CheckoutDeliveryAddressClearedEvent';
/**
 * An abstract event for all the delivery mode related events.
 */
export class CheckoutDeliveryModeEvent extends CheckoutEvent {
}
/**
 * Fired when the delivery mode was set.
 */
export class CheckoutDeliveryModeSetEvent extends CheckoutDeliveryModeEvent {
}
/**
 * Event's type
 */
CheckoutDeliveryModeSetEvent.type = 'CheckoutDeliveryModeSetEvent';
/**
 * Fired when the delivery mode has been cleared.
 */
export class CheckoutDeliveryModeClearedEvent extends CheckoutDeliveryModeEvent {
}
/**
 * Event's type
 */
CheckoutDeliveryModeClearedEvent.type = 'CheckoutDeliveryModeClearedEvent';
/**
 * Fired when the delivery mode has an error when trying to be cleared.
 */
export class CheckoutDeliveryModeClearedErrorEvent extends CheckoutDeliveryModeEvent {
}
/**
 * Event's type
 */
CheckoutDeliveryModeClearedErrorEvent.type = 'CheckoutDeliveryModeClearedErrorEvent';
/**
 * Emit this event to force delivery modes reload
 */
export class CheckoutSupportedDeliveryModesQueryReloadEvent extends CheckoutDeliveryModeEvent {
}
/**
 * Event's type
 */
CheckoutSupportedDeliveryModesQueryReloadEvent.type = 'CheckoutSupportedDeliveryModesQueryReloadEvent';
/**
 * Emit this event to force delivery modes reset
 */
export class CheckoutSupportedDeliveryModesQueryResetEvent extends CheckoutDeliveryModeEvent {
}
/**
 * Event's type
 */
CheckoutSupportedDeliveryModesQueryResetEvent.type = 'CheckoutSupportedDeliveryModesQueryResetEvent';
/**
 * An abstract event for all the payment details related events.
 */
export class CheckoutPaymentDetailsEvent extends CheckoutEvent {
}
/**
 * Fired when the payment details have been created.
 */
export class CheckoutPaymentDetailsCreatedEvent extends CheckoutPaymentDetailsEvent {
}
/**
 * Event's type
 */
CheckoutPaymentDetailsCreatedEvent.type = 'CheckoutPaymentDetailsCreatedEvent';
/**
 * Fired when the payment details have been set.
 */
export class CheckoutPaymentDetailsSetEvent extends CheckoutPaymentDetailsEvent {
}
/**
 * Event's type
 */
CheckoutPaymentDetailsSetEvent.type = 'CheckoutPaymentDetailsSetEvent';
/**
 * Emit this event to force payment card types reload
 */
export class CheckoutPaymentCardTypesQueryReloadEvent extends CheckoutPaymentDetailsEvent {
}
/**
 * Event's type
 */
CheckoutPaymentCardTypesQueryReloadEvent.type = 'CheckoutPaymentCardTypesQueryReloadEvent';
/**
 * Emit this event to force payment card types reset
 */
export class CheckoutPaymentCardTypesQueryResetEvent extends CheckoutPaymentDetailsEvent {
}
/**
 * Event's type
 */
CheckoutPaymentCardTypesQueryResetEvent.type = 'CheckoutPaymentCardTypesQueryResetEvent';
//# sourceMappingURL=data:application/json;base64,