{"version":3,"file":"spartacus-checkout-base-occ.mjs","sources":["../../../feature-libs/checkout/base/occ/adapters/occ-checkout-delivery-address.adapter.ts","../../../feature-libs/checkout/base/occ/adapters/occ-checkout-delivery-modes.adapter.ts","../../../feature-libs/checkout/base/occ/adapters/occ-checkout-payment.adapter.ts","../../../feature-libs/checkout/base/occ/adapters/occ-checkout.adapter.ts","../../../feature-libs/checkout/base/occ/adapters/index.ts","../../../feature-libs/checkout/base/occ/config/default-occ-checkout-config.ts","../../../feature-libs/checkout/base/occ/checkout-occ.module.ts","../../../feature-libs/checkout/base/occ/model/index.ts","../../../feature-libs/checkout/base/occ/public_api.ts","../../../feature-libs/checkout/base/occ/spartacus-checkout-base-occ.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CheckoutDeliveryAddressAdapter } from '@spartacus/checkout/base/core';\nimport {\n  Address,\n  ADDRESS_NORMALIZER,\n  ADDRESS_SERIALIZER,\n  backOff,\n  ConverterService,\n  isJaloError,\n  normalizeHttpError,\n  Occ,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutDeliveryAddressAdapter\n  implements CheckoutDeliveryAddressAdapter\n{\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  public createAddress(\n    userId: string,\n    cartId: string,\n    address: Address\n  ): Observable<Address> {\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .post<Occ.Address>(\n        this.getCreateDeliveryAddressEndpoint(userId, cartId),\n        address,\n        {\n          headers: new HttpHeaders().set('Content-Type', 'application/json'),\n        }\n      )\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        }),\n        this.converter.pipeable(ADDRESS_NORMALIZER)\n      );\n  }\n\n  protected getCreateDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('createDeliveryAddress', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  public setAddress(\n    userId: string,\n    cartId: string,\n    addressId: string\n  ): Observable<unknown> {\n    return this.http\n      .put<unknown>(\n        this.getSetDeliveryAddressEndpoint(userId, cartId, addressId),\n        {}\n      )\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected getSetDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string,\n    addressId?: string\n  ): string {\n    return this.occEndpoints.buildUrl('setDeliveryAddress', {\n      urlParams: { userId, cartId },\n      queryParams: { addressId },\n    });\n  }\n\n  clearCheckoutDeliveryAddress(\n    userId: string,\n    cartId: string\n  ): Observable<unknown> {\n    return this.http\n      .delete<unknown>(this.getRemoveDeliveryAddressEndpoint(userId, cartId))\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected getRemoveDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('removeDeliveryAddress', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DeliveryMode } from '@spartacus/cart/base/root';\nimport {\n  CheckoutDeliveryModesAdapter,\n  DELIVERY_MODE_NORMALIZER,\n} from '@spartacus/checkout/base/core';\nimport {\n  backOff,\n  ConverterService,\n  isJaloError,\n  normalizeHttpError,\n  Occ,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, pluck } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutDeliveryModesAdapter\n  implements CheckoutDeliveryModesAdapter\n{\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  public setMode(\n    userId: string,\n    cartId: string,\n    deliveryModeId: string\n  ): Observable<unknown> {\n    return this.http\n      .put(this.getSetDeliveryModeEndpoint(userId, cartId, deliveryModeId), {})\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected getSetDeliveryModeEndpoint(\n    userId: string,\n    cartId: string,\n    deliveryModeId?: string\n  ): string {\n    return this.occEndpoints.buildUrl('setDeliveryMode', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n      queryParams: { deliveryModeId },\n    });\n  }\n\n  public getSupportedModes(\n    userId: string,\n    cartId: string\n  ): Observable<DeliveryMode[]> {\n    return this.http\n      .get<Occ.DeliveryModeList>(this.getDeliveryModesEndpoint(userId, cartId))\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        }),\n        pluck('deliveryModes'),\n        map((modes) => modes ?? []),\n        this.converter.pipeableMany(DELIVERY_MODE_NORMALIZER)\n      );\n  }\n\n  protected getDeliveryModesEndpoint(userId: string, cartId: string): string {\n    return this.occEndpoints.buildUrl('deliveryModes', {\n      urlParams: { userId, cartId },\n    });\n  }\n\n  clearCheckoutDeliveryMode(\n    userId: string,\n    cartId: string\n  ): Observable<unknown> {\n    return this.http\n      .delete<unknown>(this.getClearDeliveryModeEndpoint(userId, cartId))\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected getClearDeliveryModeEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('clearDeliveryMode', {\n      urlParams: { userId, cartId },\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CardType, PaymentDetails } from '@spartacus/cart/base/root';\nimport {\n  CheckoutPaymentAdapter,\n  PAYMENT_CARD_TYPE_NORMALIZER,\n  PAYMENT_DETAILS_SERIALIZER,\n} from '@spartacus/checkout/base/core';\nimport {\n  backOff,\n  ConverterService,\n  HttpParamsURIEncoder,\n  isJaloError,\n  normalizeHttpError,\n  Occ,\n  OccEndpointsService,\n  PAYMENT_DETAILS_NORMALIZER,\n} from '@spartacus/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutPaymentAdapter implements CheckoutPaymentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {\n    if (typeof DOMParser !== 'undefined') {\n      this.domparser = new DOMParser();\n    }\n  }\n\n  private domparser: DOMParser;\n\n  public createPaymentDetails(\n    userId: string,\n    cartId: string,\n    paymentDetails: PaymentDetails\n  ): Observable<PaymentDetails> {\n    paymentDetails = this.converter.convert(\n      paymentDetails,\n      PAYMENT_DETAILS_SERIALIZER\n    );\n    return this.getProviderSubInfo(userId, cartId).pipe(\n      map((data) => {\n        const labelsMap = this.convertToMap(data.mappingLabels.entry) as {\n          [key: string]: string;\n        };\n        return {\n          url: data.postUrl,\n          parameters: this.getParamsForPaymentProvider(\n            paymentDetails,\n            data.parameters.entry,\n            labelsMap\n          ),\n          mappingLabels: labelsMap,\n        };\n      }),\n      mergeMap((sub) =>\n        // create a subscription directly with payment provider\n        this.createSubWithProvider(sub.url, sub.parameters).pipe(\n          map((response) => this.extractPaymentDetailsFromHtml(response)),\n          mergeMap((fromPaymentProvider) => {\n            fromPaymentProvider['defaultPayment'] =\n              paymentDetails.defaultPayment ?? false;\n            fromPaymentProvider['savePaymentInfo'] = true;\n            return this.createDetailsWithParameters(\n              userId,\n              cartId,\n              fromPaymentProvider\n            ).pipe(\n              catchError((error) => throwError(normalizeHttpError(error))),\n              backOff({\n                shouldRetry: isJaloError,\n              }),\n              this.converter.pipeable(PAYMENT_DETAILS_NORMALIZER)\n            );\n          })\n        )\n      )\n    );\n  }\n\n  public setPaymentDetails(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): Observable<unknown> {\n    return this.http\n      .put(\n        this.getSetPaymentDetailsEndpoint(userId, cartId, paymentDetailsId),\n        {}\n      )\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected getSetPaymentDetailsEndpoint(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): string {\n    return this.occEndpoints.buildUrl('setCartPaymentDetails', {\n      urlParams: { userId, cartId },\n      queryParams: { paymentDetailsId },\n    });\n  }\n\n  getPaymentCardTypes(): Observable<CardType[]> {\n    return this.http\n      .get<Occ.CardTypeList>(this.getPaymentCardTypesEndpoint())\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        }),\n        map((cardTypeList) => cardTypeList.cardTypes ?? []),\n        this.converter.pipeableMany(PAYMENT_CARD_TYPE_NORMALIZER)\n      );\n  }\n\n  protected getPaymentCardTypesEndpoint(): string {\n    return this.occEndpoints.buildUrl('cardTypes');\n  }\n\n  protected getProviderSubInfo(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.http\n      .get(this.getPaymentProviderSubInfoEndpoint(userId, cartId))\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected getPaymentProviderSubInfoEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('paymentProviderSubInfo', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected createSubWithProvider(\n    postUrl: string,\n    parameters: any\n  ): Observable<any> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Accept: 'text/html',\n    });\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    return this.http\n      .post(postUrl, httpParams, {\n        headers,\n        responseType: 'text',\n      })\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected createDetailsWithParameters(\n    userId: string,\n    cartId: string,\n    parameters: any\n  ): Observable<PaymentDetails> {\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    return this.http\n      .post<PaymentDetails>(\n        this.getCreatePaymentDetailsEndpoint(userId, cartId),\n        httpParams,\n        { headers }\n      )\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        })\n      );\n  }\n\n  protected getCreatePaymentDetailsEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('createPaymentDetails', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  private getParamsForPaymentProvider(\n    paymentDetails: PaymentDetails,\n    parameters: { key: string; value: string }[],\n    mappingLabels: { [key: string]: string }\n  ) {\n    const params = this.convertToMap(parameters);\n    params[mappingLabels['hybris_account_holder_name']] =\n      paymentDetails.accountHolderName;\n    params[mappingLabels['hybris_card_type']] = paymentDetails.cardType?.code;\n    params[mappingLabels['hybris_card_number']] = paymentDetails.cardNumber;\n    if (mappingLabels['hybris_combined_expiry_date'] === 'true') {\n      params[mappingLabels['hybris_card_expiry_date']] =\n        paymentDetails.expiryMonth +\n        mappingLabels['hybris_separator_expiry_date'] +\n        paymentDetails.expiryYear;\n    } else {\n      params[mappingLabels['hybris_card_expiration_month']] =\n        paymentDetails.expiryMonth;\n      params[mappingLabels['hybris_card_expiration_year']] =\n        paymentDetails.expiryYear;\n    }\n    params[mappingLabels['hybris_card_cvn']] = paymentDetails.cvn;\n\n    // billing address\n    params[mappingLabels['hybris_billTo_country']] =\n      paymentDetails.billingAddress?.country?.isocode;\n    params[mappingLabels['hybris_billTo_firstname']] =\n      paymentDetails.billingAddress?.firstName;\n    params[mappingLabels['hybris_billTo_lastname']] =\n      paymentDetails.billingAddress?.lastName;\n    params[mappingLabels['hybris_billTo_street1']] =\n      paymentDetails.billingAddress?.line1 +\n      ' ' +\n      paymentDetails.billingAddress?.line2;\n    params[mappingLabels['hybris_billTo_city']] =\n      paymentDetails.billingAddress?.town;\n    if (paymentDetails.billingAddress?.region) {\n      params[mappingLabels['hybris_billTo_region']] =\n        paymentDetails.billingAddress.region.isocodeShort;\n    } else {\n      params[mappingLabels['hybris_billTo_region']] = '';\n    }\n    params[mappingLabels['hybris_billTo_postalcode']] =\n      paymentDetails.billingAddress?.postalCode;\n    return params;\n  }\n\n  private extractPaymentDetailsFromHtml(html: string): {\n    [key: string]: string | boolean;\n  } {\n    const domdoc = this.domparser.parseFromString(html, 'text/xml');\n    const responseForm = domdoc.getElementsByTagName('form')[0];\n    const inputs = responseForm.getElementsByTagName('input');\n\n    const values: { [key: string]: string | boolean } = {};\n    for (let i = 0; inputs[i]; i++) {\n      const input = inputs[i];\n      const name = input.getAttribute('name');\n      const value = input.getAttribute('value');\n      if (name && name !== '{}' && value && value !== '') {\n        values[name] = value;\n      }\n    }\n\n    return values;\n  }\n\n  private convertToMap(paramList: { key: string; value: string }[]): {\n    [key: string]: string | undefined;\n  } {\n    return paramList.reduce(function (\n      result: { [key: string]: string | undefined },\n      item\n    ) {\n      const key = item.key;\n      result[key] = item.value;\n      return result;\n    },\n    {});\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CheckoutAdapter,\n  CHECKOUT_NORMALIZER,\n} from '@spartacus/checkout/base/core';\nimport { CheckoutState } from '@spartacus/checkout/base/root';\nimport {\n  backOff,\n  ConverterService,\n  isJaloError,\n  normalizeHttpError,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutAdapter implements CheckoutAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  getCheckoutDetails(\n    userId: string,\n    cartId: string\n  ): Observable<CheckoutState> {\n    return this.http\n      .get<CheckoutState>(this.getGetCheckoutDetailsEndpoint(userId, cartId))\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        backOff({\n          shouldRetry: isJaloError,\n        }),\n        this.converter.pipeable(CHECKOUT_NORMALIZER)\n      );\n  }\n\n  protected getGetCheckoutDetailsEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('getCheckoutDetails', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-checkout-delivery-address.adapter';\nexport * from './occ-checkout-delivery-modes.adapter';\nexport * from './occ-checkout-payment.adapter';\nexport * from './occ-checkout.adapter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '@spartacus/core';\n\nconst DELIVERY_ENDPOINT = 'users/${userId}/carts/${cartId}/addresses/delivery';\nconst DELIVERY_MODE_ENDPOINT = 'users/${userId}/carts/${cartId}/deliverymode';\n\nexport const defaultOccCheckoutConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        setDeliveryAddress: DELIVERY_ENDPOINT,\n        cardTypes: 'cardtypes',\n        createDeliveryAddress: DELIVERY_ENDPOINT,\n        removeDeliveryAddress: DELIVERY_ENDPOINT,\n        deliveryMode: DELIVERY_MODE_ENDPOINT,\n        setDeliveryMode: DELIVERY_MODE_ENDPOINT,\n        clearDeliveryMode: DELIVERY_MODE_ENDPOINT,\n        deliveryModes: `${DELIVERY_MODE_ENDPOINT}s`,\n        setCartPaymentDetails: 'users/${userId}/carts/${cartId}/paymentdetails',\n        paymentProviderSubInfo:\n          'users/${userId}/carts/${cartId}/payment/sop/request?responseUrl=sampleUrl',\n        createPaymentDetails:\n          'users/${userId}/carts/${cartId}/payment/sop/response',\n        getCheckoutDetails:\n          'users/${userId}/carts/${cartId}?fields=deliveryAddress(FULL),deliveryMode(FULL),paymentInfo(FULL)',\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CheckoutAdapter,\n  CheckoutDeliveryAddressAdapter,\n  CheckoutDeliveryModesAdapter,\n  CheckoutPaymentAdapter,\n} from '@spartacus/checkout/base/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { OccCheckoutDeliveryAddressAdapter } from './adapters/occ-checkout-delivery-address.adapter';\nimport { OccCheckoutDeliveryModesAdapter } from './adapters/occ-checkout-delivery-modes.adapter';\nimport { OccCheckoutPaymentAdapter } from './adapters/occ-checkout-payment.adapter';\nimport { OccCheckoutAdapter } from './adapters/occ-checkout.adapter';\nimport { defaultOccCheckoutConfig } from './config/default-occ-checkout-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccCheckoutConfig),\n    {\n      provide: CheckoutAdapter,\n      useClass: OccCheckoutAdapter,\n    },\n    {\n      provide: CheckoutDeliveryAddressAdapter,\n      useClass: OccCheckoutDeliveryAddressAdapter,\n    },\n    {\n      provide: CheckoutDeliveryModesAdapter,\n      useClass: OccCheckoutDeliveryModesAdapter,\n    },\n    {\n      provide: CheckoutPaymentAdapter,\n      useClass: OccCheckoutPaymentAdapter,\n    },\n  ],\n})\nexport class CheckoutOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-checkout-endpoints.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './adapters/index';\nexport * from './checkout-occ.module';\nexport * from './model/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AAIG;MAoBU,iCAAiC,CAAA;AAG5C,IAAA,WAAA,CACY,IAAgB,EAChB,YAAiC,EACjC,SAA2B,EAAA;AAF3B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;AAChB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;AACjC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;KACnC;AAEG,IAAA,aAAa,CAClB,MAAc,EACd,MAAc,EACd,OAAgB,EAAA;QAEhB,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,MAAM,CAAC,EACrD,OAAO,EACP;YACE,OAAO,EAAE,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;SACnE,CACF;AACA,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;SACzB,CAAC,EACF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAC5C,CAAC;KACL;IAES,gCAAgC,CACxC,MAAc,EACd,MAAc,EAAA;AAEd,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,uBAAuB,EAAE;AACzD,YAAA,SAAS,EAAE;gBACT,MAAM;gBACN,MAAM;AACP,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;AAEM,IAAA,UAAU,CACf,MAAc,EACd,MAAc,EACd,SAAiB,EAAA;QAEjB,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CACF,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,EAC7D,EAAE,CACH;AACA,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;AAES,IAAA,6BAA6B,CACrC,MAAc,EACd,MAAc,EACd,SAAkB,EAAA;AAElB,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAoB,EAAE;AACtD,YAAA,SAAS,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;YAC7B,WAAW,EAAE,EAAE,SAAS,EAAE;AAC3B,SAAA,CAAC,CAAC;KACJ;IAED,4BAA4B,CAC1B,MAAc,EACd,MAAc,EAAA;QAEd,OAAO,IAAI,CAAC,IAAI;aACb,MAAM,CAAU,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtE,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;IAES,gCAAgC,CACxC,MAAc,EACd,MAAc,EAAA;AAEd,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,uBAAuB,EAAE;AACzD,YAAA,SAAS,EAAE;gBACT,MAAM;gBACN,MAAM;AACP,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;;8HAlGU,iCAAiC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kIAAjC,iCAAiC,EAAA,CAAA,CAAA;2FAAjC,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAD7C,UAAU;;;MCEE,+BAA+B,CAAA;AAG1C,IAAA,WAAA,CACY,IAAgB,EAChB,YAAiC,EACjC,SAA2B,EAAA;AAF3B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;AAChB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;AACjC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;KACnC;AAEG,IAAA,OAAO,CACZ,MAAc,EACd,MAAc,EACd,cAAsB,EAAA;QAEtB,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,MAAM,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC;AACxE,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;AAES,IAAA,0BAA0B,CAClC,MAAc,EACd,MAAc,EACd,cAAuB,EAAA;AAEvB,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,EAAE;AACnD,YAAA,SAAS,EAAE;gBACT,MAAM;gBACN,MAAM;AACP,aAAA;YACD,WAAW,EAAE,EAAE,cAAc,EAAE;AAChC,SAAA,CAAC,CAAC;KACJ;IAEM,iBAAiB,CACtB,MAAc,EACd,MAAc,EAAA;QAEd,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAuB,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACxE,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,EACF,KAAK,CAAC,eAAe,CAAC,EACtB,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAL,KAAK,GAAI,EAAE,CAAC,EAC3B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,CACtD,CAAC;KACL;IAES,wBAAwB,CAAC,MAAc,EAAE,MAAc,EAAA;AAC/D,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAE;AACjD,YAAA,SAAS,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;AAC9B,SAAA,CAAC,CAAC;KACJ;IAED,yBAAyB,CACvB,MAAc,EACd,MAAc,EAAA;QAEd,OAAO,IAAI,CAAC,IAAI;aACb,MAAM,CAAU,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAClE,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;IAES,4BAA4B,CACpC,MAAc,EACd,MAAc,EAAA;AAEd,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,mBAAmB,EAAE;AACrD,YAAA,SAAS,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;AAC9B,SAAA,CAAC,CAAC;KACJ;;4HAlFU,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;gIAA/B,+BAA+B,EAAA,CAAA,CAAA;2FAA/B,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAD3C,UAAU;;;ACxBX;;;;AAIG;MAwBU,yBAAyB,CAAA;AACpC,IAAA,WAAA,CACY,IAAgB,EAChB,YAAiC,EACjC,SAA2B,EAAA;AAF3B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;AAChB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;AACjC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;AAErC,QAAA,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;AACpC,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;AAClC,SAAA;KACF;AAIM,IAAA,oBAAoB,CACzB,MAAc,EACd,MAAc,EACd,cAA8B,EAAA;QAE9B,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CACrC,cAAc,EACd,0BAA0B,CAC3B,CAAC;AACF,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CACjD,GAAG,CAAC,CAAC,IAAI,KAAI;AACX,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAE3D,CAAC;YACF,OAAO;gBACL,GAAG,EAAE,IAAI,CAAC,OAAO;AACjB,gBAAA,UAAU,EAAE,IAAI,CAAC,2BAA2B,CAC1C,cAAc,EACd,IAAI,CAAC,UAAU,CAAC,KAAK,EACrB,SAAS,CACV;AACD,gBAAA,aAAa,EAAE,SAAS;aACzB,CAAC;AACJ,SAAC,CAAC,EACF,QAAQ,CAAC,CAAC,GAAG;;AAEX,QAAA,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CACtD,GAAG,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,6BAA6B,CAAC,QAAQ,CAAC,CAAC,EAC/D,QAAQ,CAAC,CAAC,mBAAmB,KAAI;;YAC/B,mBAAmB,CAAC,gBAAgB,CAAC;AACnC,gBAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,KAAK,CAAC;AACzC,YAAA,mBAAmB,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;AAC9C,YAAA,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,EACN,MAAM,EACN,mBAAmB,CACpB,CAAC,IAAI,CACJ,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,gBAAA,WAAW,EAAE,WAAW;aACzB,CAAC,EACF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CACpD,CAAC;AACJ,SAAC,CAAC,CACH,CACF,CACF,CAAC;KACH;AAEM,IAAA,iBAAiB,CACtB,MAAc,EACd,MAAc,EACd,gBAAwB,EAAA;QAExB,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CACF,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,MAAM,EAAE,gBAAgB,CAAC,EACnE,EAAE,CACH;AACA,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;AAES,IAAA,4BAA4B,CACpC,MAAc,EACd,MAAc,EACd,gBAAwB,EAAA;AAExB,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,uBAAuB,EAAE;AACzD,YAAA,SAAS,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;YAC7B,WAAW,EAAE,EAAE,gBAAgB,EAAE;AAClC,SAAA,CAAC,CAAC;KACJ;IAED,mBAAmB,GAAA;QACjB,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CAAmB,IAAI,CAAC,2BAA2B,EAAE,CAAC;AACzD,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,EACF,GAAG,CAAC,CAAC,YAAY,KAAI,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,YAAY,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAA,EAAA,CAAC,EACnD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAC1D,CAAC;KACL;IAES,2BAA2B,GAAA;QACnC,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;KAChD;IAES,kBAAkB,CAC1B,MAAc,EACd,MAAc,EAAA;QAEd,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,iCAAiC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC3D,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;IAES,iCAAiC,CACzC,MAAc,EACd,MAAc,EAAA;AAEd,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,wBAAwB,EAAE;AAC1D,YAAA,SAAS,EAAE;gBACT,MAAM;gBACN,MAAM;AACP,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;IAES,qBAAqB,CAC7B,OAAe,EACf,UAAe,EAAA;AAEf,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC;AAC9B,YAAA,cAAc,EAAE,mCAAmC;AACnD,YAAA,MAAM,EAAE,WAAW;AACpB,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,UAAU,GAAG,IAAI,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,oBAAoB,EAAE,EAAE,CAAC,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACtC,YAAA,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,SAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE;YACzB,OAAO;AACP,YAAA,YAAY,EAAE,MAAM;SACrB,CAAC;AACD,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;AAES,IAAA,2BAA2B,CACnC,MAAc,EACd,MAAc,EACd,UAAe,EAAA;AAEf,QAAA,IAAI,UAAU,GAAG,IAAI,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,oBAAoB,EAAE,EAAE,CAAC,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACtC,YAAA,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,SAAC,CAAC,CAAC;AAEH,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC;AAC9B,YAAA,cAAc,EAAE,mCAAmC;AACpD,SAAA,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,IAAI,CACH,IAAI,CAAC,+BAA+B,CAAC,MAAM,EAAE,MAAM,CAAC,EACpD,UAAU,EACV,EAAE,OAAO,EAAE,CACZ;AACA,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;AACzB,SAAA,CAAC,CACH,CAAC;KACL;IAES,+BAA+B,CACvC,MAAc,EACd,MAAc,EAAA;AAEd,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,sBAAsB,EAAE;AACxD,YAAA,SAAS,EAAE;gBACT,MAAM;gBACN,MAAM;AACP,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,2BAA2B,CACjC,cAA8B,EAC9B,UAA4C,EAC5C,aAAwC,EAAA;;QAExC,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AAC7C,QAAA,MAAM,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC;YACjD,cAAc,CAAC,iBAAiB,CAAC;AACnC,QAAA,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC;QAC1E,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,GAAG,cAAc,CAAC,UAAU,CAAC;AACxE,QAAA,IAAI,aAAa,CAAC,6BAA6B,CAAC,KAAK,MAAM,EAAE;AAC3D,YAAA,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;AAC9C,gBAAA,cAAc,CAAC,WAAW;oBAC1B,aAAa,CAAC,8BAA8B,CAAC;oBAC7C,cAAc,CAAC,UAAU,CAAC;AAC7B,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;gBACnD,cAAc,CAAC,WAAW,CAAC;AAC7B,YAAA,MAAM,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC;gBAClD,cAAc,CAAC,UAAU,CAAC;AAC7B,SAAA;QACD,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC;;AAG9D,QAAA,MAAM,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;YAC5C,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,0CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;AAClD,QAAA,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;AAC9C,YAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,CAAC;AAC3C,QAAA,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;AAC7C,YAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC;AAC1C,QAAA,MAAM,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;AAC5C,YAAA,CAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,0CAAE,KAAK;gBACpC,GAAG;AACH,iBAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAA,CAAC;AACvC,QAAA,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;AACzC,YAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC;AACtC,QAAA,IAAI,MAAA,cAAc,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,EAAE;AACzC,YAAA,MAAM,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;AAC3C,gBAAA,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC;AACrD,SAAA;AAAM,aAAA;YACL,MAAM,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,GAAG,EAAE,CAAC;AACpD,SAAA;AACD,QAAA,MAAM,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC;AAC/C,YAAA,CAAA,EAAA,GAAA,cAAc,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAC5C,QAAA,OAAO,MAAM,CAAC;KACf;AAEO,IAAA,6BAA6B,CAAC,IAAY,EAAA;AAGhD,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAChE,MAAM,YAAY,GAAG,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,MAAM,MAAM,GAAG,YAAY,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAE1D,MAAM,MAAM,GAAwC,EAAE,CAAC;AACvD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9B,YAAA,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACxC,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;AAClD,gBAAA,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACtB,aAAA;AACF,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACf;AAEO,IAAA,YAAY,CAAC,SAA2C,EAAA;AAG9D,QAAA,OAAO,SAAS,CAAC,MAAM,CAAC,UACtB,MAA6C,EAC7C,IAAI,EAAA;AAEJ,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACrB,YAAA,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,YAAA,OAAO,MAAM,CAAC;SACf,EACD,EAAE,CAAC,CAAC;KACL;;sHAvRU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;0HAAzB,yBAAyB,EAAA,CAAA,CAAA;2FAAzB,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBADrC,UAAU;;;MCHE,kBAAkB,CAAA;AAC7B,IAAA,WAAA,CACY,IAAgB,EAChB,YAAiC,EACjC,SAA2B,EAAA;AAF3B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;AAChB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;AACjC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;KACnC;IAEJ,kBAAkB,CAChB,MAAc,EACd,MAAc,EAAA;QAEd,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtE,aAAA,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,OAAO,CAAC;AACN,YAAA,WAAW,EAAE,WAAW;SACzB,CAAC,EACF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAC7C,CAAC;KACL;IAES,6BAA6B,CACrC,MAAc,EACd,MAAc,EAAA;AAEd,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAoB,EAAE;AACtD,YAAA,SAAS,EAAE;gBACT,MAAM;gBACN,MAAM;AACP,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;;+GAhCU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;mHAAlB,kBAAkB,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;;;ACvBX;;;;AAIG;;ACJH;;;;AAIG;AAIH,MAAM,iBAAiB,GAAG,oDAAoD,CAAC;AAC/E,MAAM,sBAAsB,GAAG,8CAA8C,CAAC;AAEvE,MAAM,wBAAwB,GAAc;AACjD,IAAA,OAAO,EAAE;AACP,QAAA,GAAG,EAAE;AACH,YAAA,SAAS,EAAE;AACT,gBAAA,kBAAkB,EAAE,iBAAiB;AACrC,gBAAA,SAAS,EAAE,WAAW;AACtB,gBAAA,qBAAqB,EAAE,iBAAiB;AACxC,gBAAA,qBAAqB,EAAE,iBAAiB;AACxC,gBAAA,YAAY,EAAE,sBAAsB;AACpC,gBAAA,eAAe,EAAE,sBAAsB;AACvC,gBAAA,iBAAiB,EAAE,sBAAsB;gBACzC,aAAa,EAAE,CAAG,EAAA,sBAAsB,CAAG,CAAA,CAAA;AAC3C,gBAAA,qBAAqB,EAAE,gDAAgD;AACvE,gBAAA,sBAAsB,EACpB,2EAA2E;AAC7E,gBAAA,oBAAoB,EAClB,sDAAsD;AACxD,gBAAA,kBAAkB,EAChB,mGAAmG;AACtG,aAAA;AACF,SAAA;AACF,KAAA;CACF;;ACjCD;;;;AAIG;MAuCU,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YArBlB,YAAY,CAAA,EAAA,CAAA,CAAA;AAqBX,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EApBjB,SAAA,EAAA;QACT,oBAAoB,CAAC,wBAAwB,CAAC;AAC9C,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,QAAQ,EAAE,kBAAkB;AAC7B,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,8BAA8B;AACvC,YAAA,QAAQ,EAAE,iCAAiC;AAC5C,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,4BAA4B;AACrC,YAAA,QAAQ,EAAE,+BAA+B;AAC1C,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,QAAQ,EAAE,yBAAyB;AACpC,SAAA;AACF,KAAA,EAAA,OAAA,EAAA,CAnBS,YAAY,CAAA,EAAA,CAAA,CAAA;2FAqBX,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAtB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE;wBACT,oBAAoB,CAAC,wBAAwB,CAAC;AAC9C,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,QAAQ,EAAE,kBAAkB;AAC7B,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,8BAA8B;AACvC,4BAAA,QAAQ,EAAE,iCAAiC;AAC5C,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,4BAA4B;AACrC,4BAAA,QAAQ,EAAE,+BAA+B;AAC1C,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,QAAQ,EAAE,yBAAyB;AACpC,yBAAA;AACF,qBAAA;iBACF,CAAA;;;AC1CD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;AAEG;;;;"}