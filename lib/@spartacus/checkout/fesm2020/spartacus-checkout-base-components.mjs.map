{"version":3,"file":"spartacus-checkout-base-components.mjs","sources":["../../../feature-libs/checkout/base/components/guards/cart-not-empty.guard.ts","../../../feature-libs/checkout/base/components/services/checkout-config.service.ts","../../../feature-libs/checkout/base/components/guards/checkout-auth.guard.ts","../../../feature-libs/checkout/base/components/services/checkout-step.service.ts","../../../feature-libs/checkout/base/components/checkout-delivery-address/checkout-delivery-address.component.ts","../../../feature-libs/checkout/base/components/checkout-delivery-address/checkout-delivery-address.component.html","../../../feature-libs/checkout/base/components/checkout-delivery-address/checkout-delivery-address.module.ts","../../../feature-libs/checkout/base/components/checkout-delivery-mode/checkout-delivery-mode.component.ts","../../../feature-libs/checkout/base/components/checkout-delivery-mode/checkout-delivery-mode.component.html","../../../feature-libs/checkout/base/components/checkout-delivery-mode/checkout-delivery-mode.module.ts","../../../feature-libs/checkout/base/components/guards/not-checkout-auth.guard.ts","../../../feature-libs/checkout/base/components/checkout-login/checkout-login.component.ts","../../../feature-libs/checkout/base/components/checkout-login/checkout-login.component.html","../../../feature-libs/checkout/base/components/checkout-login/checkout-login.module.ts","../../../feature-libs/checkout/base/components/services/express-checkout.service.ts","../../../feature-libs/checkout/base/components/guards/checkout.guard.ts","../../../feature-libs/checkout/base/components/checkout-orchestrator/checkout-orchestrator.component.ts","../../../feature-libs/checkout/base/components/checkout-orchestrator/checkout-orchestrator.module.ts","../../../feature-libs/checkout/base/components/checkout-order-summary/checkout-order-summary.component.ts","../../../feature-libs/checkout/base/components/checkout-order-summary/checkout-order-summary.component.html","../../../feature-libs/checkout/base/components/checkout-order-summary/checkout-order-summary.module.ts","../../../feature-libs/checkout/base/components/checkout-payment-method/checkout-payment-form/checkout-payment-form.component.ts","../../../feature-libs/checkout/base/components/checkout-payment-method/checkout-payment-form/checkout-payment-form.component.html","../../../feature-libs/checkout/base/components/checkout-payment-method/checkout-payment-form/checkout-payment-form.module.ts","../../../feature-libs/checkout/base/components/checkout-payment-method/checkout-payment-method.component.ts","../../../feature-libs/checkout/base/components/checkout-payment-method/checkout-payment-method.component.html","../../../feature-libs/checkout/base/components/checkout-payment-method/checkout-payment-method.module.ts","../../../feature-libs/checkout/base/components/checkout-place-order/checkout-place-order.component.ts","../../../feature-libs/checkout/base/components/checkout-place-order/checkout-place-order.component.html","../../../feature-libs/checkout/base/components/checkout-place-order/default-place-order-spinner-layout.config.ts","../../../feature-libs/checkout/base/components/checkout-place-order/checkout-place-order.module.ts","../../../feature-libs/checkout/base/components/guards/checkout-steps-set.guard.ts","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.html","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.html","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","../../../feature-libs/checkout/base/components/checkout-progress/multiline-titles.pipe.ts","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress.component.ts","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress.component.html","../../../feature-libs/checkout/base/components/checkout-progress/checkout-progress.module.ts","../../../feature-libs/checkout/base/components/checkout-review-submit/checkout-review-submit.component.ts","../../../feature-libs/checkout/base/components/checkout-review-submit/checkout-review-submit.component.html","../../../feature-libs/checkout/base/components/checkout-review-submit/checkout-review-submit.module.ts","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-overview/checkout-review-overview.component.ts","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-overview/checkout-review-overview.component.html","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-overview/checkout-review-overview.module.ts","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-payment/checkout-review-payment.component.ts","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-payment/checkout-review-payment.component.html","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-payment/checkout-review-payment.module.ts","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-shipping/checkout-review-shipping.component.ts","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-shipping/checkout-review-shipping.component.html","../../../feature-libs/checkout/base/components/checkout-review/checkout-review-shipping/checkout-review-shipping.module.ts","../../../feature-libs/checkout/base/components/checkout-components.module.ts","../../../feature-libs/checkout/base/components/guards/index.ts","../../../feature-libs/checkout/base/components/services/index.ts","../../../feature-libs/checkout/base/components/public_api.ts","../../../feature-libs/checkout/base/components/spartacus-checkout-base-components.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartFacade, Cart } from '@spartacus/cart/base/root';\nimport { SemanticPathService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    protected activeCartFacade: ActiveCartFacade,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.activeCartFacade.takeActive().pipe(\n      map((cart) => {\n        if (this.isEmpty(cart)) {\n          return this.router.parseUrl(\n            this.semanticPathService.get('home') ?? ''\n          );\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { DeliveryMode } from '@spartacus/cart/base/root';\nimport {\n  CheckoutConfig,\n  DeliveryModePreferences,\n} from '@spartacus/checkout/base/root';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  private express: boolean = this.checkoutConfig.checkout?.express ?? false;\n  private guest: boolean = this.checkoutConfig.checkout?.guest ?? false;\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\n    this.checkoutConfig.checkout?.defaultDeliveryMode || [];\n\n  constructor(private checkoutConfig: CheckoutConfig) {}\n\n  protected compareDeliveryCost(\n    deliveryMode1: DeliveryMode,\n    deliveryMode2: DeliveryMode\n  ): number {\n    if (\n      deliveryMode1.deliveryCost?.value &&\n      deliveryMode2.deliveryCost?.value\n    ) {\n      if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\n        return 1;\n      } else if (\n        deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\n      ) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  protected findMatchingDeliveryMode(\n    deliveryModes: DeliveryMode[],\n    index = 0\n  ): string | undefined {\n    switch (this.defaultDeliveryMode[index]) {\n      case DeliveryModePreferences.FREE:\n        if (deliveryModes[0].deliveryCost?.value === 0) {\n          return deliveryModes[0].code;\n        }\n        break;\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\n        const leastExpensiveFound = deliveryModes.find(\n          (deliveryMode) => deliveryMode.deliveryCost?.value !== 0\n        );\n        if (leastExpensiveFound) {\n          return leastExpensiveFound.code;\n        }\n        break;\n      case DeliveryModePreferences.MOST_EXPENSIVE:\n        return deliveryModes[deliveryModes.length - 1].code;\n      default:\n        const codeFound = deliveryModes.find(\n          (deliveryMode) =>\n            deliveryMode.code === this.defaultDeliveryMode[index]\n        );\n        if (codeFound) {\n          return codeFound.code;\n        }\n    }\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\n    return lastMode\n      ? deliveryModes[0].code\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\n  }\n\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string | undefined {\n    deliveryModes.sort(this.compareDeliveryCost);\n    return this.findMatchingDeliveryMode(deliveryModes);\n  }\n\n  isExpressCheckout(): boolean {\n    return this.express;\n  }\n\n  isGuestCheckout(): boolean {\n    return this.guest;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  AuthRedirectService,\n  AuthService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.authService.isUserLoggedIn(),\n      this.activeCartFacade.isGuestCart(),\n      this.activeCartFacade.isStable(),\n    ]).pipe(\n      map(([isLoggedIn, isGuestCart, isStable]) => ({\n        isLoggedIn,\n        isGuestCart,\n        isStable,\n      })),\n      filter((data) => data.isStable),\n      map((data) => {\n        if (!data.isLoggedIn) {\n          return data.isGuestCart ? true : this.handleAnonymousUser();\n        }\n        return data.isLoggedIn;\n      })\n    );\n  }\n\n  protected handleAnonymousUser(): boolean | UrlTree {\n    this.authRedirectService.saveCurrentNavigationUrl();\n    if (this.checkoutConfigService.isGuestCheckout()) {\n      return this.router.createUrlTree(\n        [this.semanticPathService.get('login')],\n        { queryParams: { forced: true } }\n      );\n    } else {\n      return this.router.parseUrl(this.semanticPathService.get('login') ?? '');\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutConfig,\n  CheckoutStep,\n  CheckoutStepType,\n} from '@spartacus/checkout/base/root';\nimport { RoutingConfigService, RoutingService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepService {\n  // initial enabled steps\n  allSteps: CheckoutStep[];\n\n  readonly steps$: BehaviorSubject<CheckoutStep[]> = new BehaviorSubject<\n    CheckoutStep[]\n  >([]);\n\n  readonly activeStepIndex$: Observable<number> = this.routingService\n    .getRouterState()\n    .pipe(\n      switchMap((router) => {\n        const activeStepUrl = router.state.context.id;\n        return this.steps$.pipe(\n          map((steps) => {\n            let activeIndex: number = 0;\n            steps.forEach((step, index) => {\n              const routeUrl = `/${\n                this.routingConfigService.getRouteConfig(step.routeName)\n                  ?.paths?.[0]\n              }`;\n              if (routeUrl === activeStepUrl) {\n                activeIndex = index;\n              }\n            });\n            return activeIndex;\n          })\n        );\n      })\n    );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected checkoutConfig: CheckoutConfig,\n    protected routingConfigService: RoutingConfigService\n  ) {\n    this.resetSteps();\n  }\n\n  back(activatedRoute: ActivatedRoute): void {\n    const previousUrl = this.getPreviousCheckoutStepUrl(activatedRoute);\n    this.routingService.go(previousUrl === null ? 'cart' : previousUrl);\n  }\n\n  next(activatedRoute: ActivatedRoute): void {\n    const nextUrl = this.getNextCheckoutStepUrl(activatedRoute);\n    this.routingService.go(nextUrl);\n  }\n\n  goToStepWithIndex(stepIndex: number): void {\n    this.routingService.go(\n      this.getStepUrlFromStepRoute(this.allSteps[stepIndex].routeName)\n    );\n  }\n\n  getBackBntText(activatedRoute: ActivatedRoute): string {\n    if (this.getPreviousCheckoutStepUrl(activatedRoute) === null) {\n      return 'checkout.backToCart';\n    }\n    return 'common.back';\n  }\n\n  resetSteps(): void {\n    this.allSteps = (this.checkoutConfig.checkout?.steps ?? [])\n      .filter((step) => !step.disabled)\n      .map((x) => Object.assign({}, x));\n    this.steps$.next(this.allSteps);\n  }\n\n  disableEnableStep(\n    currentStepType: CheckoutStepType | string,\n    disabled: boolean\n  ): void {\n    const currentStep = this.allSteps.find((step) =>\n      step.type.includes(currentStepType as CheckoutStepType)\n    );\n    if (currentStep && currentStep.disabled !== disabled) {\n      currentStep.disabled = disabled;\n      this.steps$.next(this.allSteps.filter((step) => !step.disabled));\n    }\n  }\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep | undefined {\n    const index = this.getCheckoutStepIndex('type', currentStepType);\n    if (index !== null) {\n      return this.allSteps[index];\n    }\n  }\n\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string | undefined {\n    return this.getCheckoutStep(currentStepType)?.routeName;\n  }\n\n  getFirstCheckoutStepRoute(): string {\n    return this.allSteps[0].routeName;\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string | null {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex !== null && stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex + i] &&\n        this.allSteps[stepIndex + i].disabled\n      ) {\n        i++;\n      }\n      const nextStep = this.allSteps[stepIndex + i];\n      if (nextStep) {\n        return this.getStepUrlFromStepRoute(nextStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string | null {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex !== null && stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex - i] &&\n        this.allSteps[stepIndex - i].disabled\n      ) {\n        i++;\n      }\n      const previousStep = this.allSteps[stepIndex - i];\n      if (previousStep) {\n        return this.getStepUrlFromStepRoute(previousStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\n    const currentStepUrl = this.getStepUrlFromActivatedRoute(activatedRoute);\n\n    const stepIndex = this.allSteps.findIndex(\n      (step) =>\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n    );\n    return stepIndex === -1 ? null : stepIndex;\n  }\n\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string): string | null {\n    return (\n      this.routingConfigService.getRouteConfig(stepRoute)?.paths?.[0] ?? null\n    );\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.allSteps.findIndex((step: CheckoutStep) => {\n          const propertyVal = step[key as keyof CheckoutStep];\n          return propertyVal instanceof Array\n            ? propertyVal.includes(value)\n            : propertyVal === value;\n        })\n      : null;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n} from '@spartacus/checkout/base/root';\nimport {\n  Address,\n  getLastValueSync,\n  GlobalMessageService,\n  GlobalMessageType,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Card, getAddressNumbers } from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-delivery-address',\n  templateUrl: './checkout-delivery-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutDeliveryAddressComponent implements OnInit {\n  protected busy$ = new BehaviorSubject<boolean>(false);\n\n  cards$: Observable<CardWithAddress[]>;\n  isUpdating$: Observable<boolean>;\n\n  addressFormOpened = false;\n  doneAutoSelect = false;\n\n  get isGuestCheckout(): boolean {\n    return !!getLastValueSync(this.activeCartFacade.isGuestCart());\n  }\n\n  get backBtnText(): string {\n    return this.checkoutStepService.getBackBntText(this.activatedRoute);\n  }\n\n  get selectedAddress$(): Observable<Address | undefined> {\n    return this.checkoutDeliveryAddressFacade.getDeliveryAddressState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      distinctUntilChanged((prev, curr) => prev?.id === curr?.id)\n    );\n  }\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected activatedRoute: ActivatedRoute,\n    protected translationService: TranslationService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadAddresses();\n\n    this.cards$ = this.createCards();\n    this.isUpdating$ = this.createIsUpdating();\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultDeliveryAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string,\n    textPhone: string,\n    textMobile: string\n  ): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    /**\n     * TODO: (#CXSPA-53) Remove feature config check in 6.0\n     */\n    const numbers = getAddressNumbers(address, textPhone, textMobile);\n\n    return {\n      role: 'region',\n      title: address.defaultAddress ? textDefaultDeliveryAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country?.isocode,\n        address.postalCode,\n        numbers,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n      label: address.defaultAddress\n        ? 'addressBook.defaultDeliveryAddress'\n        : 'addressBook.additionalDeliveryAddress',\n    } as Card;\n  }\n\n  selectAddress(address: Address): void {\n    if (address?.id === getLastValueSync(this.selectedAddress$)?.id) {\n      return;\n    }\n\n    this.globalMessageService.add(\n      {\n        key: 'checkoutAddress.deliveryAddressSelected',\n      },\n      GlobalMessageType.MSG_TYPE_INFO\n    );\n\n    this.setAddress(address);\n  }\n\n  addAddress(address: Address | undefined): void {\n    if (!address) {\n      return;\n    }\n\n    this.busy$.next(true);\n    this.doneAutoSelect = true;\n\n    this.checkoutDeliveryAddressFacade\n      .createAndSetAddress(address)\n      .pipe(\n        switchMap(() =>\n          this.checkoutDeliveryModesFacade.clearCheckoutDeliveryMode()\n        )\n      )\n      .subscribe({\n        complete: () => {\n          // we don't call onSuccess here, because it can cause a spinner flickering\n          this.next();\n        },\n        error: () => {\n          this.onError();\n          this.doneAutoSelect = false;\n        },\n      });\n  }\n\n  showNewAddressForm(): void {\n    this.addressFormOpened = true;\n  }\n\n  hideNewAddressForm(goPrevious: boolean = false): void {\n    this.addressFormOpened = false;\n    if (goPrevious) {\n      this.back();\n    }\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  protected loadAddresses(): void {\n    if (!this.isGuestCheckout) {\n      this.userAddressService.loadAddresses();\n    }\n  }\n\n  protected createCards(): Observable<CardWithAddress[]> {\n    const addresses$ = combineLatest([\n      this.getSupportedAddresses(),\n      this.selectedAddress$,\n    ]);\n    const translations$ = combineLatest([\n      this.translationService.translate(\n        'checkoutAddress.defaultDeliveryAddress'\n      ),\n      this.translationService.translate('checkoutAddress.shipToThisAddress'),\n      this.translationService.translate('addressCard.selected'),\n      this.translationService.translate('addressCard.phoneNumber'),\n      this.translationService.translate('addressCard.mobileNumber'),\n    ]);\n\n    return combineLatest([addresses$, translations$]).pipe(\n      tap(([[addresses, selected]]) =>\n        this.selectDefaultAddress(addresses, selected)\n      ),\n      map(\n        ([\n          [addresses, selected],\n          [textDefault, textShipTo, textSelected, textPhone, textMobile],\n        ]) =>\n          addresses?.map((address) => ({\n            address,\n            card: this.getCardContent(\n              address,\n              selected,\n              textDefault,\n              textShipTo,\n              textSelected,\n              textPhone,\n              textMobile\n            ),\n          }))\n      )\n    );\n  }\n\n  protected selectDefaultAddress(\n    addresses: Address[],\n    selected: Address | undefined\n  ): void {\n    if (\n      !this.doneAutoSelect &&\n      addresses?.length &&\n      (!selected || Object.keys(selected).length === 0)\n    ) {\n      selected = addresses.find((address) => address.defaultAddress);\n      if (selected) {\n        this.setAddress(selected);\n      }\n      this.doneAutoSelect = true;\n    }\n  }\n\n  protected getSupportedAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  protected createIsUpdating(): Observable<boolean> {\n    return combineLatest([\n      this.busy$,\n      this.userAddressService.getAddressesLoading(),\n      this.getAddressLoading(),\n    ]).pipe(\n      map(\n        ([busy, userAddressLoading, deliveryAddressLoading]) =>\n          busy || userAddressLoading || deliveryAddressLoading\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  protected getAddressLoading(): Observable<boolean> {\n    return this.checkoutDeliveryAddressFacade.getDeliveryAddressState().pipe(\n      map((state) => state.loading),\n      distinctUntilChanged()\n    );\n  }\n\n  protected setAddress(address: Address): void {\n    this.busy$.next(true);\n    this.checkoutDeliveryAddressFacade\n      .setDeliveryAddress(address)\n      .pipe(\n        switchMap(() =>\n          this.checkoutDeliveryModesFacade.clearCheckoutDeliveryMode()\n        )\n      )\n      .subscribe({\n        complete: () => {\n          this.onSuccess();\n        },\n        error: () => {\n          this.onError();\n        },\n      });\n  }\n\n  protected onSuccess(): void {\n    this.busy$.next(false);\n  }\n\n  protected onError(): void {\n    this.busy$.next(false);\n  }\n}\n","<h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n  {{ 'checkoutAddress.shippingAddress' | cxTranslate }}\n</h2>\n\n<ng-container *ngIf=\"cards$ | async as cards\">\n  <ng-container *ngIf=\"!(isUpdating$ | async); else loading\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container\n      *ngIf=\"\n        cards?.length && !addressFormOpened;\n        then showExistingAddresses;\n        else newAddressForm\n      \"\n    >\n    </ng-container>\n\n    <ng-template #showExistingAddresses>\n      <p class=\"cx-checkout-text\">\n        {{ 'checkoutAddress.selectYourDeliveryAddress' | cxTranslate }}\n      </p>\n      <div class=\"cx-checkout-btns row\">\n        <div class=\"col-sm-12 col-md-12 col-lg-6\">\n          <button\n            class=\"btn btn-block btn-secondary\"\n            (click)=\"showNewAddressForm()\"\n          >\n            {{ 'checkoutAddress.addNewAddress' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"cx-checkout-body row\">\n        <div\n          class=\"cx-delivery-address-card col-md-12 col-lg-6\"\n          *ngFor=\"let card of cards; let i = index\"\n        >\n          <div\n            class=\"cx-delivery-address-card-inner\"\n            (click)=\"selectAddress(card.address)\"\n          >\n            <cx-card\n              [border]=\"true\"\n              [index]=\"i\"\n              [fitToContainer]=\"true\"\n              [content]=\"card.card\"\n              (sendCard)=\"selectAddress(card.address)\"\n            ></cx-card>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"cx-checkout-btns row\">\n        <div class=\"col-md-12 col-lg-6\">\n          <button class=\"cx-btn btn btn-block btn-secondary\" (click)=\"back()\">\n            {{ backBtnText | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-md-12 col-lg-6\">\n          <button\n            class=\"cx-btn btn btn-block btn-primary\"\n            [disabled]=\"!(selectedAddress$ | async)?.id\"\n            (click)=\"next()\"\n          >\n            {{ 'common.continue' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template #newAddressForm>\n      <cx-address-form\n        *ngIf=\"cards.length; else initialAddressForm\"\n        [showTitleCode]=\"true\"\n        (backToAddress)=\"hideNewAddressForm(false)\"\n        (submitAddress)=\"addAddress($event)\"\n      ></cx-address-form>\n      <ng-template #initialAddressForm>\n        <cx-address-form\n          [showTitleCode]=\"true\"\n          [setAsDefaultField]=\"!isGuestCheckout\"\n          cancelBtnLabel=\"{{ backBtnText | cxTranslate }}\"\n          (backToAddress)=\"hideNewAddressForm(true)\"\n          (submitAddress)=\"addAddress($event)\"\n        ></cx-address-form>\n      </ng-template>\n    </ng-template>\n  </ng-container>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CartValidationGuard } from '@spartacus/cart/base/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport {\n  AddressFormModule,\n  CardModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../guards/checkout-auth.guard';\nimport { CheckoutDeliveryAddressComponent } from './checkout-delivery-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryAddress: {\n          component: CheckoutDeliveryAddressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CartValidationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutDeliveryAddressComponent],\n  exports: [CheckoutDeliveryAddressComponent],\n})\nexport class CheckoutDeliveryAddressModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActiveCartFacade, CartOutlets } from '@spartacus/cart/base/root';\nimport { CheckoutDeliveryModesFacade } from '@spartacus/checkout/base/root';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './checkout-delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutDeliveryModeComponent {\n  protected busy$ = new BehaviorSubject(false);\n  readonly CartOutlets = CartOutlets;\n\n  selectedDeliveryModeCode$ = this.checkoutDeliveryModesFacade\n    .getSelectedDeliveryModeState()\n    .pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      map((deliveryMode) => deliveryMode?.code)\n    );\n\n  supportedDeliveryModes$ = this.checkoutDeliveryModesFacade\n    .getSupportedDeliveryModes()\n    .pipe(\n      filter((deliveryModes) => !!deliveryModes?.length),\n      withLatestFrom(this.selectedDeliveryModeCode$),\n      tap(([deliveryModes, code]) => {\n        if (\n          !code ||\n          !deliveryModes.find((deliveryMode) => deliveryMode.code === code)\n        ) {\n          code =\n            this.checkoutConfigService.getPreferredDeliveryMode(deliveryModes);\n        }\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n          this.changeMode(code);\n        }\n      }),\n      map(([deliveryModes]) =>\n        deliveryModes.filter((mode) => mode.code !== 'pickup')\n      )\n    );\n\n  backBtnText = this.checkoutStepService.getBackBntText(this.activatedRoute);\n\n  mode: UntypedFormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  isUpdating$: Observable<boolean> = combineLatest([\n    this.busy$,\n    this.checkoutDeliveryModesFacade\n      .getSelectedDeliveryModeState()\n      .pipe(map((state) => state.loading)),\n  ]).pipe(\n    map(([busy, loading]) => busy || loading),\n    distinctUntilChanged()\n  );\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  constructor(\n    protected fb: UntypedFormBuilder,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade,\n    protected activeCartFacade: ActiveCartFacade\n  ) {}\n\n  changeMode(code: string): void {\n    this.busy$.next(true);\n\n    this.checkoutDeliveryModesFacade.setDeliveryMode(code).subscribe({\n      complete: () => this.onSuccess(),\n      error: () => this.onError(),\n    });\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  getAriaChecked(code: string): boolean {\n    return code === this.mode.controls['deliveryModeId'].value;\n  }\n\n  protected onSuccess(): void {\n    this.busy$.next(false);\n  }\n\n  protected onError(): void {\n    this.busy$.next(false);\n  }\n}\n","<h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n  {{ 'checkoutMode.deliveryMethod' | cxTranslate }}\n</h2>\n\n<ng-container\n  *ngIf=\"\n    !(isUpdating$ | async) &&\n      (supportedDeliveryModes$ | async) as supportedDeliveryModes;\n    else loading\n  \"\n>\n  <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n  <div [formGroup]=\"mode\" class=\"cx-delivery-mode-wrapper\">\n    <div role=\"radiogroup\">\n      <div class=\"form-check\" *ngFor=\"let mode of supportedDeliveryModes\">\n        <input\n          [attr.aria-checked]=\"getAriaChecked(mode.code)\"\n          class=\"form-check-input\"\n          role=\"radio\"\n          type=\"radio\"\n          id=\"deliveryMode-{{ mode.code }}\"\n          (change)=\"changeMode(mode.code)\"\n          [value]=\"mode.code\"\n          formControlName=\"deliveryModeId\"\n        />\n        <label\n          class=\"cx-delivery-label form-check-label form-radio-label\"\n          for=\"deliveryMode-{{ mode.code }}\"\n        >\n          <div class=\"cx-delivery-mode\">\n            {{ mode.name }} ({{ mode.description }})\n          </div>\n          <div class=\"cx-delivery-price\">\n            {{ mode.deliveryCost?.formattedValue }}\n          </div>\n          <div class=\"cx-delivery-details\"></div>\n        </label>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"activeCartFacade.hasPickupItems() | async\">\n  <h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n    {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n  </h2>\n\n  <ng-template\n    [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n    [cxOutletContext]=\"{\n      items: activeCartFacade.getDeliveryEntries() | async,\n      readonly: true\n    }\"\n  >\n  </ng-template>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n\n<ng-container cxInnerComponentsHost></ng-container>\n\n<div class=\"row cx-checkout-btns\">\n  <div class=\"col-md-12 col-lg-6\">\n    <button class=\"btn btn-block btn-secondary\" (click)=\"back()\">\n      {{ backBtnText | cxTranslate }}\n    </button>\n  </div>\n  <div class=\"col-md-12 col-lg-6\">\n    <button\n      class=\"btn btn-block btn-primary\"\n      [disabled]=\"deliveryModeInvalid\"\n      (click)=\"next()\"\n    >\n      {{ 'common.continue' | cxTranslate }}\n    </button>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport {\n  OutletModule,\n  PageComponentModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../guards/checkout-auth.guard';\nimport { CheckoutDeliveryModeComponent } from './checkout-delivery-mode.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    SpinnerModule,\n    OutletModule,\n    PageComponentModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: CheckoutDeliveryModeComponent,\n          data: {\n            composition: {\n              inner: ['PickupInStoreDeliveryModeComponent'],\n            },\n          },\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutDeliveryModeComponent],\n  exports: [CheckoutDeliveryModeComponent],\n})\nexport class CheckoutDeliveryModeModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  AuthService,\n  getLastValueSync,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotCheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.authService.isUserLoggedIn().pipe(\n      map((isLoggedIn) => {\n        if (isLoggedIn) {\n          return this.router.parseUrl(\n            this.semanticPathService.get('home') ?? ''\n          );\n        } else if (!!getLastValueSync(this.activeCartFacade.isGuestCart())) {\n          return this.router.parseUrl(\n            this.semanticPathService.get('cart') ?? ''\n          );\n        }\n        return !isLoggedIn;\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, OnDestroy } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport { AuthRedirectService } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-checkout-login',\n  templateUrl: './checkout-login.component.html',\n})\nexport class CheckoutLoginComponent implements OnDestroy {\n  checkoutLoginForm: UntypedFormGroup = this.formBuilder.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      emailConfirmation: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch(\n        'email',\n        'emailConfirmation'\n      ),\n    }\n  );\n  sub: Subscription;\n\n  constructor(\n    protected formBuilder: UntypedFormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected activeCartFacade: ActiveCartFacade\n  ) {}\n\n  onSubmit() {\n    if (this.checkoutLoginForm.valid) {\n      const email = this.checkoutLoginForm.get('email')?.value;\n      this.activeCartFacade.addEmail(email);\n\n      if (!this.sub) {\n        this.sub = this.activeCartFacade.isGuestCart().subscribe((isGuest) => {\n          if (isGuest) {\n            this.authRedirectService.redirect();\n          }\n        });\n      }\n    } else {\n      this.checkoutLoginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"checkoutLoginForm\">\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content\">{{\n        'checkoutLogin.emailAddress.label' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"email\"\n        name=\"email\"\n        class=\"form-control\"\n        formControlName=\"email\"\n        placeholder=\"{{\n          'checkoutLogin.emailAddress.placeholder' | cxTranslate\n        }}\"\n      />\n      <cx-form-errors\n        [control]=\"checkoutLoginForm.get('email')\"\n      ></cx-form-errors>\n    </label>\n  </div>\n\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content\">{{\n        'checkoutLogin.confirmEmail.label' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"email\"\n        name=\"emailConfirmation\"\n        class=\"form-control\"\n        formControlName=\"emailConfirmation\"\n        placeholder=\"{{\n          'checkoutLogin.confirmEmail.placeholder' | cxTranslate\n        }}\"\n      />\n      <cx-form-errors\n        [control]=\"checkoutLoginForm.get('emailConfirmation')\"\n      ></cx-form-errors>\n    </label>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-block btn-primary\">\n    {{ 'checkoutLogin.continue' | cxTranslate }}\n  </button>\n</form>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { NotCheckoutAuthGuard } from '../guards/not-checkout-auth.guard';\nimport { CheckoutLoginComponent } from './checkout-login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        GuestCheckoutLoginComponent: {\n          component: CheckoutLoginComponent,\n          guards: [NotCheckoutAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutLoginComponent],\n  exports: [CheckoutLoginComponent],\n})\nexport class CheckoutLoginModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n  CheckoutPaymentFacade,\n} from '@spartacus/checkout/base/root';\nimport { UserAddressService, UserPaymentService } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExpressCheckoutService {\n  private deliveryAddressSet$: Observable<boolean>;\n  private deliveryModeSet$: Observable<boolean>;\n  private paymentMethodSet$: Observable<boolean>;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade\n  ) {\n    this.setDeliveryAddress();\n    this.setDeliveryMode();\n    this.setPaymentMethod();\n  }\n\n  protected setDeliveryAddress(): void {\n    this.deliveryAddressSet$ = combineLatest([\n      this.userAddressService.getAddresses(),\n      this.userAddressService.getAddressesLoadedSuccess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(([, addressesLoadedSuccess]) => {\n        if (!addressesLoadedSuccess) {\n          this.userAddressService.loadAddresses();\n        }\n      }),\n      filter(([, addressesLoadedSuccess]) => addressesLoadedSuccess),\n      take(1),\n      switchMap(([addresses]) => {\n        const defaultAddress =\n          addresses.find((address) => address.defaultAddress) || addresses[0];\n        if (defaultAddress && Object.keys(defaultAddress).length) {\n          return this.checkoutDeliveryAddressFacade\n            .setDeliveryAddress(defaultAddress)\n            .pipe(\n              switchMap(() =>\n                this.checkoutDeliveryAddressFacade.getDeliveryAddressState()\n              ),\n              filter((state) => !state.error && !state.loading),\n              map((state) => state.data),\n              map((data) => !!(data && Object.keys(data).length)),\n              catchError(() => of(false))\n            );\n        }\n        return of(false);\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  protected setDeliveryMode(): void {\n    this.deliveryModeSet$ = combineLatest([\n      this.deliveryAddressSet$,\n      this.checkoutDeliveryModesFacade.getSupportedDeliveryModesState(),\n    ]).pipe(\n      debounceTime(0),\n      switchMap(([addressSet, supportedDeliveryModesState]) => {\n        if (!addressSet) {\n          return of(false);\n        }\n        return of([supportedDeliveryModesState]).pipe(\n          filter(\n            ([supportedDeliveryModesStateObject]) =>\n              !supportedDeliveryModesStateObject.loading &&\n              !!supportedDeliveryModesStateObject.data?.length\n          ),\n          switchMap(([deliveryModesState]) => {\n            if (!deliveryModesState.data) {\n              return of(false);\n            }\n            const preferredDeliveryMode =\n              this.checkoutConfigService.getPreferredDeliveryMode(\n                deliveryModesState.data\n              );\n            return of([preferredDeliveryMode]).pipe(\n              switchMap(([deliveryMode]) => {\n                if (!deliveryMode) {\n                  return of(false);\n                }\n                return this.checkoutDeliveryModesFacade\n                  .setDeliveryMode(deliveryMode)\n                  .pipe(\n                    switchMap(() =>\n                      this.checkoutDeliveryModesFacade.getSelectedDeliveryModeState()\n                    ),\n                    filter((state) => !state.error && !state.loading),\n                    map((state) => state.data),\n                    map((data) => !!(data && Object.keys(data).length)),\n                    catchError(() => of(false))\n                  );\n              })\n            );\n          })\n        );\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  protected setPaymentMethod(): void {\n    this.paymentMethodSet$ = combineLatest([\n      this.deliveryModeSet$,\n      this.userPaymentService.getPaymentMethods(),\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(([, , paymentMethodsLoadedSuccess]) => {\n        if (!paymentMethodsLoadedSuccess) {\n          this.userPaymentService.loadPaymentMethods();\n        }\n      }),\n      filter(([, , success]) => success),\n      switchMap(([deliveryModeSet, payments]) => {\n        if (!deliveryModeSet) {\n          return of(false);\n        }\n\n        const defaultPayment =\n          payments.find((address) => address.defaultPayment) || payments[0];\n        if (!defaultPayment || Object.keys(defaultPayment).length === 0) {\n          return of(false);\n        }\n        return this.checkoutPaymentFacade\n          .setPaymentDetails(defaultPayment)\n          .pipe(\n            switchMap(() =>\n              this.checkoutPaymentFacade.getPaymentDetailsState()\n            ),\n            filter((state) => !state.error && !state.loading),\n            map((state) => state.data),\n            map((data) => !!(data && Object.keys(data).length)),\n            catchError(() => of(false))\n          );\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\n    return this.paymentMethodSet$.pipe(\n      map((paymentMethodSet) => !!paymentMethodSet)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport { CheckoutStepType } from '@spartacus/checkout/base/root';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  private readonly firstStep$: Observable<UrlTree> =\n    this.checkoutStepService.steps$.pipe(\n      map((steps) => {\n        return this.router.parseUrl(\n          this.routingConfigService.getRouteConfig(steps[0].routeName)\n            ?.paths?.[0] as string\n        );\n      })\n    );\n\n  constructor(\n    protected router: Router,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected expressCheckoutService: ExpressCheckoutService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const expressCheckout$ = this.expressCheckoutService\n      .trySetDefaultCheckoutDetails()\n      .pipe(\n        switchMap((expressCheckoutPossible) => {\n          const reviewOrderRoute =\n            this.checkoutStepService.getCheckoutStepRoute(\n              CheckoutStepType.REVIEW_ORDER\n            );\n          return expressCheckoutPossible && reviewOrderRoute\n            ? of(\n                this.router.parseUrl(\n                  this.routingConfigService.getRouteConfig(reviewOrderRoute)\n                    ?.paths?.[0] as string\n                )\n              )\n            : this.firstStep$;\n        })\n      );\n\n    return this.activeCartFacade\n      .isGuestCart()\n      .pipe(\n        switchMap((isGuestCart) =>\n          this.checkoutConfigService.isExpressCheckout() && !isGuestCart\n            ? expressCheckout$\n            : this.firstStep$\n        )\n      );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../guards/checkout-auth.guard';\nimport { CheckoutGuard } from '../guards/checkout.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartFacade, Cart, CartOutlets } from '@spartacus/cart/base/root';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  readonly cartOutlets = CartOutlets;\n\n  constructor(protected activeCartFacade: ActiveCartFacade) {\n    this.cart$ = this.activeCartFacade.getActive();\n  }\n}\n","<ng-template\n  [cxOutlet]=\"cartOutlets.ORDER_SUMMARY\"\n  [cxOutletContext]=\"cart$ | async\"\n>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '@spartacus/storefront';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CardType, PaymentDetails } from '@spartacus/cart/base/root';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutPaymentFacade,\n} from '@spartacus/checkout/base/root';\nimport {\n  Address,\n  AddressValidation,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  TranslationService,\n  UserAddressService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport {\n  Card,\n  getAddressNumbers,\n  ICON_TYPE,\n  LaunchDialogService,\n  LAUNCH_CALLER,\n} from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './checkout-payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutPaymentFormComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  months: string[] = [];\n  years: number[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  deliveryAddress$: Observable<Address | undefined>;\n  countries$: Observable<Country[]>;\n  sameAsDeliveryAddress = true;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  showSameAsDeliveryAddressCheckbox$: Observable<boolean>;\n\n  @Input()\n  loading: boolean;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Input()\n  paymentDetails?: PaymentDetails;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  paymentForm: UntypedFormGroup = this.fb.group({\n    cardType: this.fb.group({\n      code: [null, Validators.required],\n    }),\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    expiryMonth: [null, Validators.required],\n    expiryYear: [null, Validators.required],\n    cvn: ['', Validators.required],\n    defaultPayment: [false],\n  });\n\n  billingAddressForm: UntypedFormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: UntypedFormBuilder,\n    protected userAddressService: UserAddressService,\n    protected launchDialogService: LaunchDialogService,\n    protected translationService: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.paymentDetails) {\n      this.paymentForm.patchValue(this.paymentDetails);\n    }\n\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap((countries) => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentFacade.getPaymentCardTypes();\n\n    this.deliveryAddress$ = this.checkoutDeliveryAddressFacade\n      .getDeliveryAddressState()\n      .pipe(\n        filter((state) => !state.loading),\n        map((state) => state.data)\n      );\n\n    this.showSameAsDeliveryAddressCheckbox$ = combineLatest([\n      this.countries$,\n      this.deliveryAddress$,\n    ]).pipe(\n      map(([countries, address]) => {\n        return (\n          (address?.country &&\n            !!countries.filter(\n              (country: Country): boolean =>\n                country.isocode === address.country?.isocode\n            ).length) ??\n          false\n        );\n      }),\n      tap((shouldShowCheckbox) => {\n        this.sameAsDeliveryAddress = shouldShowCheckbox;\n      })\n    );\n\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions) => {\n        const regionControl = this.billingAddressForm.get(\n          'region.isocodeShort'\n        );\n        if (regions.length > 0) {\n          regionControl?.enable();\n        } else {\n          regionControl?.disable();\n        }\n      })\n    );\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n\n    for (let i = 0; i < 10; i++) {\n      this.years.push(year + i);\n    }\n\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push(`0${j}`);\n      } else {\n        this.months.push(j.toString());\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.paymentForm.value.defaultPayment =\n      !this.paymentForm.value.defaultPayment;\n  }\n\n  toggleSameAsDeliveryAddress(): void {\n    this.sameAsDeliveryAddress = !this.sameAsDeliveryAddress;\n  }\n  getAddressCardContent(address: Address): Observable<Card> {\n    return this.translationService\n      ? combineLatest([\n          this.translationService.translate('addressCard.phoneNumber'),\n          this.translationService.translate('addressCard.mobileNumber'),\n        ]).pipe(\n          map(([textPhone, textMobile]) => {\n            let region = '';\n            if (address.region && address.region.isocode) {\n              region = address.region.isocode + ', ';\n            }\n            const numbers = getAddressNumbers(address, textPhone, textMobile);\n\n            return {\n              textBold: address.firstName + ' ' + address.lastName,\n              text: [\n                address.line1,\n                address.line2,\n                address.town + ', ' + region + address.country?.isocode,\n                address.postalCode,\n                numbers,\n              ],\n            } as Card;\n          })\n        )\n      : EMPTY;\n  }\n\n  //TODO: Add elementRef to trigger button when verifyAddress is used.\n  openSuggestedAddress(results: AddressValidation): void {\n    this.launchDialogService.openDialogAndSubscribe(\n      LAUNCH_CALLER.SUGGESTED_ADDRESSES,\n      undefined,\n      {\n        enteredAddress: this.billingAddressForm.value,\n        suggestedAddresses: results.suggestedAddresses,\n      }\n    );\n    //TODO: Add logic that handle dialog's actions. Scope of CXSPA-1276\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n  /**\n   *TODO: This method is not used, but should be. It triggers suggested addresses modal under the hood.\n   *\n   * See ticket CXSPA-1276\n   */\n  verifyAddress(): void {\n    if (this.sameAsDeliveryAddress) {\n      this.next();\n    } else {\n      this.userAddressService\n        .verifyAddress(this.billingAddressForm.value)\n        .subscribe((result) => {\n          this.handleAddressVerificationResults(result);\n        });\n    }\n  }\n\n  protected handleAddressVerificationResults(results: AddressValidation) {\n    if (results.decision === 'ACCEPT') {\n      this.next();\n    } else if (results.decision === 'REJECT') {\n      this.globalMessageService.add(\n        { key: 'addressForm.invalidAddress' },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    } else if (results.decision === 'REVIEW') {\n      this.openSuggestedAddress(results);\n    }\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddressForm.get('country.isocode')?.setValue(country.isocode);\n    this.selectedCountry$.next(country.isocode as string);\n  }\n\n  next(): void {\n    if (this.paymentForm.valid) {\n      if (this.sameAsDeliveryAddress) {\n        this.setPaymentDetails.emit({\n          paymentDetails: this.paymentForm.value,\n          billingAddress: null,\n        });\n      } else {\n        if (this.billingAddressForm.valid) {\n          this.setPaymentDetails.emit({\n            paymentDetails: this.paymentForm.value,\n            billingAddress: this.billingAddressForm.value,\n          });\n        } else {\n          this.billingAddressForm.markAllAsTouched();\n        }\n      }\n    } else {\n      this.paymentForm.markAllAsTouched();\n\n      if (!this.sameAsDeliveryAddress) {\n        this.billingAddressForm.markAllAsTouched();\n      }\n    }\n  }\n}\n","<!-- FORM -->\n<ng-container *ngIf=\"!loading; else spinner\">\n  <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n  <form (ngSubmit)=\"next()\" [formGroup]=\"paymentForm\">\n    <div class=\"row\">\n      <div class=\"col-md-12 col-xl-10\">\n        <div class=\"form-group\" formGroupName=\"cardType\">\n          <ng-container *ngIf=\"cardTypes$ | async as cardTypes\">\n            <div *ngIf=\"cardTypes.length !== 0\">\n              <label>\n                <span class=\"label-content required\">{{\n                  'paymentForm.paymentType' | cxTranslate\n                }}</span>\n                <ng-select\n                  [inputAttrs]=\"{ required: 'true' }\"\n                  [searchable]=\"true\"\n                  [clearable]=\"false\"\n                  [items]=\"cardTypes\"\n                  bindLabel=\"name\"\n                  bindValue=\"code\"\n                  placeholder=\"{{ 'paymentForm.selectOne' | cxTranslate }}\"\n                  formControlName=\"code\"\n                  id=\"card-type-select\"\n                  [cxNgSelectA11y]=\"{\n                    ariaLabel: 'paymentForm.paymentType' | cxTranslate\n                  }\"\n                >\n                </ng-select>\n                <cx-form-errors\n                  [control]=\"paymentForm.get('cardType.code')\"\n                ></cx-form-errors>\n              </label>\n            </div>\n          </ng-container>\n        </div>\n\n        <div class=\"form-group\">\n          <label>\n            <span class=\"label-content\">{{\n              'paymentForm.accountHolderName.label' | cxTranslate\n            }}</span>\n            <input\n              required=\"true\"\n              class=\"form-control\"\n              type=\"text\"\n              placeholder=\"{{\n                'paymentForm.accountHolderName.placeholder' | cxTranslate\n              }}\"\n              formControlName=\"accountHolderName\"\n            />\n            <cx-form-errors\n              [control]=\"paymentForm.get('accountHolderName')\"\n            ></cx-form-errors>\n          </label>\n        </div>\n\n        <div class=\"form-group\">\n          <label>\n            <span class=\"label-content\">{{\n              'paymentForm.cardNumber' | cxTranslate\n            }}</span>\n            <input\n              required=\"true\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"cardNumber\"\n            />\n            <cx-form-errors\n              [control]=\"paymentForm.get('cardNumber')\"\n            ></cx-form-errors>\n          </label>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"form-group col-md-8\">\n            <fieldset class=\"cx-payment-form-exp-date\">\n              <legend class=\"label-content\">\n                {{ 'paymentForm.expirationDate' | cxTranslate }}\n              </legend>\n              <label class=\"cx-payment-form-exp-date-wrapper\">\n                <ng-select\n                  [inputAttrs]=\"{ required: 'true' }\"\n                  [searchable]=\"true\"\n                  [clearable]=\"false\"\n                  [items]=\"months\"\n                  placeholder=\"{{ 'paymentForm.monthMask' | cxTranslate }}\"\n                  formControlName=\"expiryMonth\"\n                  id=\"month-select\"\n                  [cxNgSelectA11y]=\"{\n                    ariaLabel:\n                      'paymentForm.expirationMonth'\n                      | cxTranslate\n                        : { selected: paymentForm.get('expiryMonth')?.value }\n                  }\"\n                >\n                </ng-select>\n                <cx-form-errors\n                  [control]=\"paymentForm.get('expiryMonth')\"\n                ></cx-form-errors>\n              </label>\n              <label class=\"cx-payment-form-exp-date-wrapper\">\n                <ng-select\n                  [inputAttrs]=\"{ required: 'true' }\"\n                  [searchable]=\"true\"\n                  [clearable]=\"false\"\n                  [items]=\"years\"\n                  placeholder=\"{{ 'paymentForm.yearMask' | cxTranslate }}\"\n                  id=\"year-select\"\n                  [cxNgSelectA11y]=\"{\n                    ariaLabel:\n                      'paymentForm.expirationYear'\n                      | cxTranslate\n                        : { selected: paymentForm.get('expiryYear')?.value }\n                  }\"\n                  formControlName=\"expiryYear\"\n                >\n                </ng-select>\n                <cx-form-errors\n                  [control]=\"paymentForm.get('expiryYear')\"\n                ></cx-form-errors>\n              </label>\n            </fieldset>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label>\n              <span class=\"label-content\">\n                {{ 'paymentForm.securityCode' | cxTranslate }}\n                <cx-icon\n                  [type]=\"iconTypes.INFO\"\n                  class=\"cx-payment-form-tooltip\"\n                  placement=\"right\"\n                  title=\"{{ 'paymentForm.securityCodeTitle' | cxTranslate }}\"\n                  alt=\"\"\n                ></cx-icon>\n              </span>\n              <input\n                required=\"true\"\n                type=\"text\"\n                class=\"form-control\"\n                id=\"cVVNumber\"\n                formControlName=\"cvn\"\n              />\n              <cx-form-errors\n                [control]=\"paymentForm.get('cvn')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n        </div>\n\n        <div class=\"form-group\" *ngIf=\"setAsDefaultField\">\n          <div class=\"form-check\">\n            <label>\n              <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                (change)=\"toggleDefaultPaymentMethod()\"\n              />\n              <span class=\"form-check-label\">{{\n                'paymentForm.setAsDefault' | cxTranslate\n              }}</span>\n            </label>\n          </div>\n        </div>\n\n        <!-- BILLING -->\n        <div class=\"cx-payment-form-billing\">\n          <div class=\"cx-payment-form-billing-address\">\n            {{ 'paymentForm.billingAddress' | cxTranslate }}\n          </div>\n\n          <!-- SAME AS SHIPPING CHECKBOX -->\n          <ng-container *ngIf=\"showSameAsDeliveryAddressCheckbox$ | async\">\n            <div class=\"form-group\">\n              <div class=\"form-check\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    class=\"form-check-input\"\n                    [checked]=\"sameAsDeliveryAddress\"\n                    (change)=\"toggleSameAsDeliveryAddress()\"\n                    [attr.aria-label]=\"\n                      'paymentForm.billingAddressSameAsShipping' | cxTranslate\n                    \"\n                  />\n                  <span class=\"form-check-label\">{{\n                    'paymentForm.sameAsDeliveryAddress' | cxTranslate\n                  }}</span>\n                </label>\n              </div>\n            </div>\n          </ng-container>\n\n          <!-- BILLING INFO COMPONENT -->\n          <ng-container\n            *ngIf=\"\n              sameAsDeliveryAddress &&\n                (deliveryAddress$ | async) as deliveryAddress;\n              else billingAddress\n            \"\n          >\n            <cx-card\n              [content]=\"getAddressCardContent(deliveryAddress)\"\n            ></cx-card>\n          </ng-container>\n\n          <!-- TODO:#future-checkout do we really want this? We can always pass more inputs to the copied address form component to make it more modular -->\n          <ng-template #billingAddress>\n            <div [formGroup]=\"billingAddressForm\">\n              <div class=\"form-group\" formGroupName=\"country\">\n                <ng-container *ngIf=\"countries$ | async as countries\">\n                  <div *ngIf=\"countries.length !== 0\">\n                    <label>\n                      <span class=\"label-content required\">{{\n                        'addressForm.country' | cxTranslate\n                      }}</span>\n                      <ng-select\n                        [inputAttrs]=\"{ required: 'true' }\"\n                        [searchable]=\"true\"\n                        [clearable]=\"false\"\n                        [items]=\"countries\"\n                        bindLabel=\"name\"\n                        bindValue=\"isocode\"\n                        placeholder=\"{{\n                          'addressForm.selectOne' | cxTranslate\n                        }}\"\n                        (change)=\"countrySelected($event)\"\n                        formControlName=\"isocode\"\n                        id=\"country-payment-select\"\n                        [cxNgSelectA11y]=\"{\n                          ariaLabel: 'addressForm.country' | cxTranslate\n                        }\"\n                      >\n                      </ng-select>\n                      <cx-form-errors\n                        [control]=\"billingAddressForm.get('country.isocode')\"\n                      ></cx-form-errors>\n                    </label>\n                  </div>\n                </ng-container>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content required\">{{\n                    'addressForm.firstName.label' | cxTranslate\n                  }}</span>\n                  <input\n                    required=\"true\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"{{\n                      'addressForm.firstName.placeholder' | cxTranslate\n                    }}\"\n                    formControlName=\"firstName\"\n                  />\n                  <cx-form-errors\n                    [control]=\"billingAddressForm.get('firstName')\"\n                  ></cx-form-errors>\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content required\">{{\n                    'addressForm.lastName.label' | cxTranslate\n                  }}</span>\n                  <input\n                    required=\"true\"\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{\n                      'addressForm.lastName.placeholder' | cxTranslate\n                    }}\"\n                    formControlName=\"lastName\"\n                  />\n                  <cx-form-errors\n                    [control]=\"billingAddressForm.get('lastName')\"\n                  ></cx-form-errors>\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content required\">{{\n                    'addressForm.address1' | cxTranslate\n                  }}</span>\n                  <input\n                    required=\"true\"\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{\n                      'addressForm.streetAddress' | cxTranslate\n                    }}\"\n                    formControlName=\"line1\"\n                  />\n                  <cx-form-errors\n                    [control]=\"billingAddressForm.get('line1')\"\n                  ></cx-form-errors>\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content\">{{\n                    'addressForm.address2' | cxTranslate\n                  }}</span>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'addressForm.aptSuite' | cxTranslate }}\"\n                    formControlName=\"line2\"\n                  />\n                </label>\n              </div>\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <label>\n                    <span class=\"label-content required\">{{\n                      'addressForm.city.label' | cxTranslate\n                    }}</span>\n                    <input\n                      required=\"true\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"{{\n                        'addressForm.city.placeholder' | cxTranslate\n                      }}\"\n                      formControlName=\"town\"\n                    />\n                    <cx-form-errors\n                      [control]=\"billingAddressForm.get('town')\"\n                    ></cx-form-errors>\n                  </label>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label>\n                    <span class=\"label-content required\">{{\n                      'addressForm.zipCode.label' | cxTranslate\n                    }}</span>\n                    <input\n                      required=\"true\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"{{\n                        'addressForm.zipCode.placeholder' | cxTranslate\n                      }}\"\n                      formControlName=\"postalCode\"\n                    />\n                    <cx-form-errors\n                      [control]=\"billingAddressForm.get('postalCode')\"\n                    ></cx-form-errors>\n                  </label>\n                </div>\n                <ng-container\n                  *ngIf=\"regions$ | async as regions\"\n                  formGroupName=\"region\"\n                >\n                  <ng-container *ngIf=\"regions.length !== 0\">\n                    <div class=\"form-group col-md-6\">\n                      <label>\n                        <span class=\"label-content required\">{{\n                          'addressForm.state' | cxTranslate\n                        }}</span>\n                        <ng-select\n                          [inputAttrs]=\"{ required: 'true' }\"\n                          class=\"region-select\"\n                          formControlName=\"isocodeShort\"\n                          [searchable]=\"true\"\n                          [clearable]=\"false\"\n                          [items]=\"regions\"\n                          bindLabel=\"{{\n                            regions[0].name ? 'name' : 'isocodeShort'\n                          }}\"\n                          bindValue=\"{{\n                            regions[0].name ? 'isocodeShort' : 'region'\n                          }}\"\n                          placeholder=\"{{\n                            'addressForm.selectOne' | cxTranslate\n                          }}\"\n                          id=\"region-select\"\n                          [cxNgSelectA11y]=\"{\n                            ariaLabel: 'addressForm.state' | cxTranslate\n                          }\"\n                        >\n                        </ng-select>\n                        <cx-form-errors\n                          [control]=\"\n                            billingAddressForm.get('region.isocodeShort')\n                          \"\n                        ></cx-form-errors>\n                      </label>\n                    </div>\n                  </ng-container>\n                </ng-container>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n\n    <!-- BUTTON SECTION -->\n    <div class=\"cx-checkout-btns row\">\n      <div class=\"col-md-12 col-lg-6\">\n        <button\n          *ngIf=\"paymentMethodsCount === 0\"\n          class=\"btn btn-block btn-secondary\"\n          (click)=\"back()\"\n        >\n          {{ 'common.back' | cxTranslate }}\n        </button>\n        <button\n          *ngIf=\"paymentMethodsCount > 0\"\n          class=\"btn btn-block btn-secondary\"\n          (click)=\"close()\"\n        >\n          {{ 'paymentForm.changePayment' | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-12 col-lg-6\">\n        <button class=\"btn btn-block btn-primary\" type=\"submit\">\n          {{ 'common.continue' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </form>\n</ng-container>\n\n<ng-template #spinner>\n  <cx-spinner></cx-spinner>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport {\n  CardModule,\n  FormErrorsModule,\n  IconModule,\n  SpinnerModule,\n  NgSelectA11yModule,\n} from '@spartacus/storefront';\nimport { CheckoutPaymentFormComponent } from './checkout-payment-form.component';\n\n@NgModule({\n  imports: [\n    NgSelectA11yModule,\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  declarations: [CheckoutPaymentFormComponent],\n  exports: [CheckoutPaymentFormComponent],\n})\nexport class CheckoutPaymentFormModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActiveCartFacade, PaymentDetails } from '@spartacus/cart/base/root';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutPaymentFacade,\n} from '@spartacus/checkout/base/root';\nimport {\n  Address,\n  getLastValueSync,\n  GlobalMessageService,\n  GlobalMessageType,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { Card, ICON_TYPE } from '@spartacus/storefront';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './checkout-payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutPaymentMethodComponent implements OnInit, OnDestroy {\n  protected subscriptions = new Subscription();\n  protected deliveryAddress: Address | undefined;\n  protected busy$ = new BehaviorSubject<boolean>(false);\n\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\n  iconTypes = ICON_TYPE;\n  isGuestCheckout = false;\n  newPaymentFormManuallyOpened = false;\n  doneAutoSelect = false;\n  paymentDetails?: PaymentDetails;\n\n  isUpdating$: Observable<boolean> = combineLatest([\n    this.busy$,\n    this.userPaymentService.getPaymentMethodsLoading(),\n    this.checkoutPaymentFacade\n      .getPaymentDetailsState()\n      .pipe(map((state) => state.loading)),\n  ]).pipe(\n    map(\n      ([busy, userPaymentLoading, paymentMethodLoading]) =>\n        busy || userPaymentLoading || paymentMethodLoading\n    ),\n    distinctUntilChanged()\n  );\n\n  get backBtnText() {\n    return this.checkoutStepService.getBackBntText(this.activatedRoute);\n  }\n\n  get existingPaymentMethods$(): Observable<PaymentDetails[]> {\n    return this.userPaymentService.getPaymentMethods();\n  }\n\n  get selectedMethod$(): Observable<PaymentDetails | undefined> {\n    return this.checkoutPaymentFacade.getPaymentDetailsState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      distinctUntilChanged((prev, curr) => prev?.id === curr?.id)\n    );\n  }\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected activatedRoute: ActivatedRoute,\n    protected translationService: TranslationService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected checkoutStepService: CheckoutStepService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    if (!getLastValueSync(this.activeCartFacade.isGuestCart())) {\n      this.userPaymentService.loadPaymentMethods();\n    } else {\n      this.isGuestCheckout = true;\n    }\n\n    this.checkoutDeliveryAddressFacade\n      .getDeliveryAddressState()\n      .pipe(\n        filter((state) => !state.loading),\n        take(1),\n        map((state) => state.data)\n      )\n      .subscribe((address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.cards$ = combineLatest([\n      this.existingPaymentMethods$.pipe(\n        switchMap((methods) => {\n          return !methods?.length\n            ? of([])\n            : combineLatest(\n                methods.map((method) =>\n                  combineLatest([\n                    of(method),\n                    this.translationService.translate('paymentCard.expires', {\n                      month: method.expiryMonth,\n                      year: method.expiryYear,\n                    }),\n                  ]).pipe(\n                    map(([payment, translation]) => ({\n                      payment,\n                      expiryTranslation: translation,\n                    }))\n                  )\n                )\n              );\n        })\n      ),\n      this.selectedMethod$,\n      this.translationService.translate('paymentForm.useThisPayment'),\n      this.translationService.translate('paymentCard.defaultPaymentMethod'),\n      this.translationService.translate('paymentCard.selected'),\n    ]).pipe(\n      tap(([paymentMethods, selectedMethod]) =>\n        this.selectDefaultPaymentMethod(paymentMethods, selectedMethod)\n      ),\n      map(\n        ([\n          paymentMethods,\n          selectedMethod,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) =>\n          paymentMethods.map((payment) => ({\n            content: this.createCard(\n              payment.payment,\n              {\n                textExpires: payment.expiryTranslation,\n                textUseThisPayment,\n                textDefaultPaymentMethod,\n                textSelected,\n              },\n              selectedMethod\n            ),\n            paymentMethod: payment.payment,\n          }))\n      )\n    );\n  }\n\n  selectDefaultPaymentMethod(\n    paymentMethods: { payment: PaymentDetails; expiryTranslation: string }[],\n    selectedMethod: PaymentDetails | undefined\n  ) {\n    if (\n      !this.doneAutoSelect &&\n      paymentMethods?.length &&\n      (!selectedMethod || Object.keys(selectedMethod).length === 0)\n    ) {\n      const defaultPaymentMethod = paymentMethods.find(\n        (paymentMethod) => paymentMethod.payment.defaultPayment\n      );\n      if (defaultPaymentMethod) {\n        selectedMethod = defaultPaymentMethod.payment;\n        this.savePaymentMethod(selectedMethod);\n      }\n      this.doneAutoSelect = true;\n    }\n  }\n\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\n    if (paymentDetails?.id === getLastValueSync(this.selectedMethod$)?.id) {\n      return;\n    }\n\n    this.globalMessageService.add(\n      {\n        key: 'paymentMethods.paymentMethodSelected',\n      },\n      GlobalMessageType.MSG_TYPE_INFO\n    );\n\n    this.savePaymentMethod(paymentDetails);\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n  }): void {\n    this.paymentDetails = paymentDetails;\n\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress ?? this.deliveryAddress;\n    this.busy$.next(true);\n    this.subscriptions.add(\n      this.checkoutPaymentFacade.createPaymentDetails(details).subscribe({\n        complete: () => {\n          // we don't call onSuccess here, because it can cause a spinner flickering\n          this.next();\n        },\n        error: () => {\n          this.onError();\n        },\n      })\n    );\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  protected savePaymentMethod(paymentDetails: PaymentDetails): void {\n    this.busy$.next(true);\n    this.subscriptions.add(\n      this.checkoutPaymentFacade.setPaymentDetails(paymentDetails).subscribe({\n        complete: () => this.onSuccess(),\n        error: () => this.onError(),\n      })\n    );\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n\n  protected createCard(\n    paymentDetails: PaymentDetails,\n    cardLabels: {\n      textDefaultPaymentMethod: string;\n      textExpires: string;\n      textUseThisPayment: string;\n      textSelected: string;\n    },\n    selected: PaymentDetails | undefined\n  ): Card {\n    return {\n      role: 'region',\n      title: paymentDetails.defaultPayment\n        ? cardLabels.textDefaultPaymentMethod\n        : '',\n      textBold: paymentDetails.accountHolderName,\n      text: [paymentDetails.cardNumber ?? '', cardLabels.textExpires],\n      img: this.getCardIcon(paymentDetails.cardType?.code as string),\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\n      header:\n        selected?.id === paymentDetails.id\n          ? cardLabels.textSelected\n          : undefined,\n      label: paymentDetails.defaultPayment\n        ? 'paymentCard.defaultPaymentLabel'\n        : 'paymentCard.additionalPaymentLabel',\n    };\n  }\n\n  protected onSuccess(): void {\n    this.busy$.next(false);\n  }\n\n  protected onError(): void {\n    this.busy$.next(false);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n  {{ 'paymentForm.payment' | cxTranslate }}\n</h2>\n<ng-container *ngIf=\"cards$ | async as cards\">\n  <ng-container *ngIf=\"!(isUpdating$ | async); else loading\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container\n      *ngIf=\"\n        cards?.length && !newPaymentFormManuallyOpened;\n        then hasExistingPaymentMethods;\n        else newPaymentForm\n      \"\n    >\n    </ng-container>\n  </ng-container>\n\n  <ng-template #hasExistingPaymentMethods>\n    <p class=\"cx-checkout-text\">\n      {{ 'paymentForm.choosePaymentMethod' | cxTranslate }}\n    </p>\n    <div class=\"cx-checkout-btns row\">\n      <div class=\"col-md-12 col-lg-6\">\n        <button\n          class=\"btn btn-block btn-secondary\"\n          (click)=\"showNewPaymentForm()\"\n        >\n          {{ 'paymentForm.addNewPayment' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"cx-checkout-body row\">\n      <div\n        class=\"cx-payment-card col-md-12 col-lg-6\"\n        *ngFor=\"let card of cards; let i = index\"\n      >\n        <div\n          class=\"cx-payment-card-inner\"\n          (click)=\"selectPaymentMethod(card.paymentMethod)\"\n        >\n          <cx-card\n            [border]=\"true\"\n            [fitToContainer]=\"true\"\n            [content]=\"card.content\"\n            [index]=\"i\"\n            (sendCard)=\"selectPaymentMethod(card.paymentMethod)\"\n          ></cx-card>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row cx-checkout-btns\">\n      <div class=\"col-md-12 col-lg-6\">\n        <button class=\"btn btn-block btn-secondary\" (click)=\"back()\">\n          {{ backBtnText | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-12 col-lg-6\">\n        <button\n          class=\"btn btn-block btn-primary\"\n          [disabled]=\"!(selectedMethod$ | async)?.id\"\n          (click)=\"next()\"\n        >\n          {{ 'common.continue' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #newPaymentForm>\n    <cx-payment-form\n      (setPaymentDetails)=\"setPaymentDetails($event)\"\n      (closeForm)=\"hideNewPaymentForm()\"\n      (goBack)=\"back()\"\n      [paymentMethodsCount]=\"cards?.length || 0\"\n      [setAsDefaultField]=\"!isGuestCheckout && !!cards?.length\"\n      [loading]=\"isUpdating$ | async\"\n      [paymentDetails]=\"paymentDetails\"\n    ></cx-payment-form>\n  </ng-template>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule, SpinnerModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../guards/checkout-auth.guard';\nimport { CheckoutPaymentFormModule } from './checkout-payment-form/checkout-payment-form.module';\nimport { CheckoutPaymentMethodComponent } from './checkout-payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CheckoutPaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: CheckoutPaymentMethodComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutPaymentMethodComponent],\n  exports: [CheckoutPaymentMethodComponent],\n})\nexport class CheckoutPaymentMethodModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  OnDestroy,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { OrderFacade } from '@spartacus/order/root';\nimport { LaunchDialogService, LAUNCH_CALLER } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './checkout-place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutPlaceOrderComponent implements OnDestroy {\n  placedOrder: void | Observable<ComponentRef<any> | undefined>;\n\n  checkoutSubmitForm: UntypedFormGroup = this.fb.group({\n    termsAndConditions: [false, Validators.requiredTrue],\n  });\n\n  get termsAndConditionInvalid(): boolean {\n    return this.checkoutSubmitForm.invalid;\n  }\n\n  constructor(\n    protected orderFacade: OrderFacade,\n    protected routingService: RoutingService,\n    protected fb: UntypedFormBuilder,\n    protected launchDialogService: LaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  submitForm(): void {\n    if (this.checkoutSubmitForm.valid) {\n      this.placedOrder = this.launchDialogService.launch(\n        LAUNCH_CALLER.PLACE_ORDER_SPINNER,\n        this.vcr\n      );\n      this.orderFacade.placeOrder(this.checkoutSubmitForm.valid).subscribe({\n        error: () => {\n          if (!this.placedOrder) {\n            return;\n          }\n\n          this.placedOrder\n            .subscribe((component) => {\n              this.launchDialogService.clear(LAUNCH_CALLER.PLACE_ORDER_SPINNER);\n              if (component) {\n                component.destroy();\n              }\n            })\n            .unsubscribe();\n        },\n        next: () => this.onSuccess(),\n      });\n    } else {\n      this.checkoutSubmitForm.markAllAsTouched();\n    }\n  }\n\n  onSuccess(): void {\n    this.routingService.go({ cxRoute: 'orderConfirmation' });\n  }\n\n  ngOnDestroy(): void {\n    this.launchDialogService.clear(LAUNCH_CALLER.PLACE_ORDER_SPINNER);\n  }\n}\n","<form class=\"cx-place-order-form form-check\" [formGroup]=\"checkoutSubmitForm\">\n  <div class=\"form-group\">\n    <label>\n      <input\n        formControlName=\"termsAndConditions\"\n        class=\"scaled-input form-check-input\"\n        type=\"checkbox\"\n      />\n      <span class=\"form-check-label\">\n        {{ 'checkoutReview.confirmThatRead' | cxTranslate }}\n        <a\n          [routerLink]=\"{ cxRoute: 'termsAndConditions' } | cxUrl\"\n          class=\"cx-tc-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {{ 'checkoutReview.termsAndConditions' | cxTranslate }}\n        </a>\n      </span>\n    </label>\n  </div>\n\n  <button\n    (click)=\"submitForm()\"\n    class=\"btn btn-primary btn-block\"\n    [disabled]=\"termsAndConditionInvalid\"\n    [cxAtMessage]=\"'checkoutReview.orderInProcess' | cxTranslate\"\n  >\n    {{ 'checkoutReview.placeOrder' | cxTranslate }}\n  </button>\n</form>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  DIALOG_TYPE,\n  LayoutConfig,\n  SpinnerComponent,\n} from '@spartacus/storefront';\n\nexport const defaultPlaceOrderSpinnerLayoutConfig: LayoutConfig = {\n  launch: {\n    PLACE_ORDER_SPINNER: {\n      inline: true,\n      component: SpinnerComponent,\n      dialogType: DIALOG_TYPE.POPOVER_CENTER_BACKDROP,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { AtMessageModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../guards/checkout-auth.guard';\nimport { CheckoutPlaceOrderComponent } from './checkout-place-order.component';\nimport { defaultPlaceOrderSpinnerLayoutConfig } from './default-place-order-spinner-layout.config';\n\n@NgModule({\n  imports: [\n    AtMessageModule,\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultPlaceOrderSpinnerLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: CheckoutPlaceOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutPlaceOrderComponent],\n  exports: [CheckoutPlaceOrderComponent],\n})\nexport class CheckoutPlaceOrderModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode, OnDestroy } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  UrlTree,\n} from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n  CheckoutPaymentFacade,\n  CheckoutStep,\n  CheckoutStepType,\n} from '@spartacus/checkout/base/root';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable, of, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepsSetGuard implements CanActivate, OnDestroy {\n  protected subscription: Subscription;\n\n  constructor(\n    protected checkoutStepService: CheckoutStepService,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade,\n    protected router: Router,\n    protected activeCartFacade: ActiveCartFacade\n  ) {\n    this.subscription = this.activeCartFacade\n      .hasDeliveryItems()\n      .pipe(distinctUntilChanged())\n      .subscribe((hasDeliveryItems) => {\n        this.checkoutStepService.disableEnableStep(\n          CheckoutStepType.DELIVERY_ADDRESS,\n          !hasDeliveryItems\n        );\n        this.checkoutStepService.disableEnableStep(\n          CheckoutStepType.DELIVERY_MODE,\n          !hasDeliveryItems\n        );\n\n        this.setStepNameMultiLine(\n          CheckoutStepType.PAYMENT_DETAILS,\n          hasDeliveryItems\n        );\n        this.setStepNameMultiLine(\n          CheckoutStepType.REVIEW_ORDER,\n          hasDeliveryItems\n        );\n      });\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean | UrlTree> {\n    let currentIndex = -1;\n    const currentRouteUrl = '/' + route.url.join('/');\n\n    // check whether the previous step is set\n    return this.checkoutStepService.steps$.pipe(\n      take(1),\n      switchMap((steps) => {\n        currentIndex = steps.findIndex((step) => {\n          const stepRouteUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName)?.paths?.[0]\n          }`;\n          return stepRouteUrl === currentRouteUrl;\n        });\n        // get current step\n        let currentStep;\n        if (currentIndex >= 0) {\n          currentStep = steps[currentIndex];\n        }\n        if (Boolean(currentStep)) {\n          return this.isStepSet(steps[currentIndex - 1]);\n        } else {\n          if (isDevMode()) {\n            console.warn(\n              `Missing step with route '${currentRouteUrl}' in checkout configuration or this step is disabled.`\n            );\n          }\n          return of(this.getUrl('checkout'));\n        }\n      })\n    );\n  }\n\n  protected isStepSet(step: CheckoutStep): Observable<boolean | UrlTree> {\n    if (step && !step.disabled) {\n      switch (step.type[0]) {\n        case CheckoutStepType.DELIVERY_ADDRESS: {\n          return this.isDeliveryAddress(step);\n        }\n        case CheckoutStepType.DELIVERY_MODE: {\n          return this.isDeliveryModeSet(step);\n        }\n        case CheckoutStepType.PAYMENT_DETAILS: {\n          if (\n            this.checkoutStepService.getCheckoutStep(\n              CheckoutStepType.DELIVERY_MODE\n            )?.disabled\n          ) {\n            this.checkoutDeliveryModesFacade.setDeliveryMode('pickup');\n          }\n\n          return this.isPaymentDetailsSet(step);\n        }\n        case CheckoutStepType.REVIEW_ORDER: {\n          break;\n        }\n      }\n    }\n    return of(true);\n  }\n\n  protected isDeliveryAddress(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDeliveryAddressFacade.getDeliveryAddressState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      map((deliveryAddress) => {\n        if (deliveryAddress && Object.keys(deliveryAddress).length) {\n          return true;\n        } else {\n          return this.getUrl(step.routeName);\n        }\n      })\n    );\n  }\n\n  protected isDeliveryModeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDeliveryModesFacade.getSelectedDeliveryModeState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      map((mode) => (mode ? true : this.getUrl(step.routeName)))\n    );\n  }\n\n  protected isPaymentDetailsSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutPaymentFacade.getPaymentDetailsState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      map((paymentDetails) =>\n        paymentDetails && Object.keys(paymentDetails).length !== 0\n          ? true\n          : this.getUrl(step.routeName)\n      )\n    );\n  }\n\n  protected getUrl(routeName: string): UrlTree {\n    return this.router.parseUrl(\n      this.routingConfigService.getRouteConfig(routeName)?.paths?.[0] as string\n    );\n  }\n\n  protected setStepNameMultiLine(\n    stepType: CheckoutStepType,\n    value: boolean\n  ): void {\n    const step = this.checkoutStepService.getCheckoutStep(stepType);\n    if (step) {\n      step.nameMultiLine = value;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CheckoutStep } from '@spartacus/checkout/base/root';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileBottomComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> =\n    this.checkoutStepService.steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<number> =\n    this.checkoutStepService.activeStepIndex$.pipe(\n      tap((index) => (this.activeStepIndex = index))\n    );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n}\n","<div *ngIf=\"(activeStepIndex$ | async) !== undefined\">\n  <div class=\"cx-media\">\n    <div *ngFor=\"let step of steps$ | async; let i = index\">\n      <div class=\"cx-list-media\" *ngIf=\"i > activeStepIndex\">\n        <div>{{ i + 1 }}. {{ step.name | cxTranslate }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../../guards/checkout-steps-set.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartFacade, Cart } from '@spartacus/cart/base/root';\nimport { CheckoutStep } from '@spartacus/checkout/base/root';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileTopComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> =\n    this.checkoutStepService.steps$;\n  cart$: Observable<Cart> = this.activeCartFacade.getActive();\n\n  constructor(\n    protected activeCartFacade: ActiveCartFacade,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<number> =\n    this.checkoutStepService.activeStepIndex$.pipe(\n      tap((index) => (this.activeStepIndex = index))\n    );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n}\n","<div *ngIf=\"(activeStepIndex$ | async) !== undefined\">\n  <div *ngIf=\"cart$ | async as cart\">\n    <div class=\"cx-media\">\n      <div class=\"cx-list-media\" *ngIf=\"cart?.totalItems && cart?.subTotal\">\n        {{ 'cartItems.cartTotal' | cxTranslate: { count: cart.totalItems } }}:\n        {{ cart.subTotal.formattedValue }}\n      </div>\n      <div *ngFor=\"let step of steps$ | async; let i = index\">\n        <div class=\"cx-list-media\" *ngIf=\"i < activeStepIndex\">\n          <div>{{ i + 1 }}. {{ step.name | cxTranslate }}</div>\n          <button\n            class=\"btn btn-link\"\n            [routerLink]=\"{ cxRoute: step.routeName } | cxUrl\"\n          >\n            {{ 'common.edit' | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"cx-list-media is-active\" *ngIf=\"i === activeStepIndex\">\n          <div>{{ i + 1 }}. {{ step.name | cxTranslate }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../../guards/checkout-steps-set.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cxMultiLine',\n})\nexport class MultiLinePipe implements PipeTransform {\n  transform(value: string): string {\n    const lastIndex = value.lastIndexOf(' ');\n\n    if (lastIndex === -1) {\n      return value;\n    }\n\n    return (\n      value.substring(0, lastIndex) +\n      '<br />' +\n      value.substring(lastIndex, value.length).trim()\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CheckoutStep } from '@spartacus/checkout/base/root';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> =\n    this.checkoutStepService.steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<number> =\n    this.checkoutStepService.activeStepIndex$.pipe(\n      tap((index) => (this.activeStepIndex = index))\n    );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n\n  getTabIndex(stepIndex: number): number {\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\n  }\n\n  isActive(index: number): boolean {\n    return index === this.activeStepIndex;\n  }\n\n  isDisabled(index: number): boolean {\n    return index > this.activeStepIndex;\n  }\n}\n","<nav\n  [attr.aria-label]=\"'checkoutProgress.label' | cxTranslate\"\n  *ngIf=\"(activeStepIndex$ | async) !== undefined\"\n>\n  <div class=\"cx-nav d-none d-lg-block d-xl-block\">\n    <ul class=\"cx-list\">\n      <ng-container *ngFor=\"let step of steps$ | async; let i = index\">\n        <li\n          class=\"cx-item\"\n          [class.active]=\"isActive(i)\"\n          [class.disabled]=\"isDisabled(i)\"\n        >\n          <a\n            [routerLink]=\"{ cxRoute: step.routeName } | cxUrl\"\n            class=\"cx-link\"\n            [class.active]=\"isActive(i)\"\n            [class.disabled]=\"isDisabled(i)\"\n            [tabindex]=\"getTabIndex(i)\"\n            [innerHTML]=\"\n              step.nameMultiLine !== false\n                ? (step.name | cxTranslate | cxMultiLine)\n                : (step.name | cxTranslate)\n            \"\n          >\n          </a>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</nav>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../guards/checkout-steps-set.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\nimport { MultiLinePipe } from './multiline-titles.pipe';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  declarations: [CheckoutProgressComponent, MultiLinePipe],\n  exports: [CheckoutProgressComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutProgressModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  ActiveCartFacade,\n  Cart,\n  CartOutlets,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  PromotionLocation,\n} from '@spartacus/cart/base/root';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n  CheckoutPaymentFacade,\n  CheckoutStep,\n  CheckoutStepType,\n} from '@spartacus/checkout/base/root';\nimport { Address, TranslationService } from '@spartacus/core';\nimport { deliveryAddressCard, deliveryModeCard } from '@spartacus/order/root';\nimport { Card, ICON_TYPE } from '@spartacus/storefront';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './checkout-review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutReviewSubmitComponent {\n  readonly cartOutlets = CartOutlets;\n  iconTypes = ICON_TYPE;\n\n  checkoutStepTypeDeliveryAddress = CheckoutStepType.DELIVERY_ADDRESS;\n  checkoutStepTypePaymentDetails = CheckoutStepType.PAYMENT_DETAILS;\n  checkoutStepTypeDeliveryMode = CheckoutStepType.DELIVERY_MODE;\n\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  constructor(\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected activeCartFacade: ActiveCartFacade,\n    protected translationService: TranslationService,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade\n  ) {}\n\n  get cart$(): Observable<Cart> {\n    return this.activeCartFacade.getActive();\n  }\n\n  get entries$(): Observable<OrderEntry[]> {\n    return this.activeCartFacade.getEntries();\n  }\n\n  protected getCheckoutDeliverySteps(): Array<CheckoutStepType | string> {\n    return [CheckoutStepType.DELIVERY_ADDRESS, CheckoutStepType.DELIVERY_MODE];\n  }\n\n  protected getCheckoutPaymentSteps(): Array<CheckoutStepType | string> {\n    return [\n      CheckoutStepType.PAYMENT_DETAILS,\n      CheckoutStepType.DELIVERY_ADDRESS,\n    ];\n  }\n\n  steps$: Observable<CheckoutStep[]> = this.checkoutStepService.steps$;\n\n  deliveryAddress$: Observable<Address | undefined> =\n    this.checkoutDeliveryAddressFacade.getDeliveryAddressState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n\n  deliveryMode$: Observable<DeliveryMode | undefined> =\n    this.checkoutDeliveryModesFacade.getSelectedDeliveryModeState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n\n  paymentDetails$: Observable<PaymentDetails | undefined> =\n    this.checkoutPaymentFacade.getPaymentDetailsState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n\n  getDeliveryAddressCard(\n    deliveryAddress: Address,\n    countryName?: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('addressCard.shipTo'),\n      this.translationService.translate('addressCard.phoneNumber'),\n      this.translationService.translate('addressCard.mobileNumber'),\n    ]).pipe(\n      map(([textTitle, textPhone, textMobile]) =>\n        deliveryAddressCard(\n          textTitle,\n          textPhone,\n          textMobile,\n          deliveryAddress,\n          countryName\n        )\n      )\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('checkoutMode.deliveryMethod'),\n    ]).pipe(map(([textTitle]) => deliveryModeCard(textTitle, deliveryMode)));\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('paymentForm.payment'),\n      this.translationService.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n      this.translationService.translate('paymentForm.billingAddress'),\n    ]).pipe(\n      map(([textTitle, textExpires, billingAddress]) => {\n        const region = paymentDetails.billingAddress?.region?.isocode\n          ? paymentDetails.billingAddress?.region?.isocode + ', '\n          : '';\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n          paragraphs: [\n            {\n              title: billingAddress + ':',\n              text: [\n                paymentDetails.billingAddress?.firstName +\n                  ' ' +\n                  paymentDetails.billingAddress?.lastName,\n                paymentDetails.billingAddress?.line1,\n                paymentDetails.billingAddress?.town +\n                  ', ' +\n                  region +\n                  paymentDetails.billingAddress?.country?.isocode,\n                paymentDetails.billingAddress?.postalCode,\n              ],\n            },\n          ],\n        } as Card;\n      })\n    );\n  }\n\n  getCheckoutStepUrl(stepType: CheckoutStepType | string): string | undefined {\n    const step = this.checkoutStepService.getCheckoutStep(\n      stepType as CheckoutStepType\n    );\n    return step?.routeName;\n  }\n\n  deliverySteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) =>\n      this.getCheckoutDeliverySteps().includes(step.type[0])\n    );\n  }\n\n  paymentSteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) =>\n      this.getCheckoutPaymentSteps().includes(step.type[0])\n    );\n  }\n}\n","<div class=\"cx-review\">\n  <!-- TITLE -->\n  <h2 class=\"cx-review-title d-none d-lg-block d-xl-block\">\n    {{ 'checkoutReview.review' | cxTranslate }}\n  </h2>\n\n  <div class=\"cx-review-summary row\">\n    <ng-container *ngIf=\"(steps$ | async)?.slice(0, -1) as steps\">\n      <div class=\"col-md-12 col-lg-6 col-xl-6 cx-review-payment-col\">\n        <ng-container *ngFor=\"let step of paymentSteps(steps)\">\n          <ng-container [ngSwitch]=\"step.type[0]\">\n            <ng-container *ngSwitchCase=\"checkoutStepTypePaymentDetails\">\n              <ng-container *ngTemplateOutlet=\"paymentMethod\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"col-md-12 col-lg-6 col-xl-6 cx-review-shipping-col\">\n        <ng-container *ngFor=\"let step of deliverySteps(steps)\">\n          <ng-container [ngSwitch]=\"step.type[0]\">\n            <ng-container *ngSwitchCase=\"checkoutStepTypeDeliveryAddress\">\n              <ng-container *ngTemplateOutlet=\"deliveryAddress\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepTypeDeliveryMode\">\n              <ng-container *ngTemplateOutlet=\"deliveryMode\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  </div>\n\n  <!-- DELIVERY ADDRESS SECTION -->\n  <ng-template #deliveryAddress>\n    <div\n      *ngIf=\"deliveryAddress$ | async as deliveryAddress\"\n      class=\"cx-review-summary-card cx-review-card-address\"\n    >\n      <cx-card\n        [content]=\"getDeliveryAddressCard(deliveryAddress) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"\n            'checkoutReview.editDeliveryAddressDetails' | cxTranslate\n          \"\n          [routerLink]=\"\n            {\n              cxRoute: getCheckoutStepUrl(checkoutStepTypeDeliveryAddress)\n            } | cxUrl\n          \"\n          ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n        ></a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- DELIVERY MODE SECTION -->\n  <ng-template #deliveryMode>\n    <div class=\"cx-review-summary-card cx-review-card-shipping\">\n      <cx-card\n        *ngIf=\"deliveryMode$ | async as deliveryMode\"\n        [content]=\"getDeliveryModeCard(deliveryMode) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editDeliveryMode' | cxTranslate\"\n          [routerLink]=\"\n            { cxRoute: getCheckoutStepUrl(checkoutStepTypeDeliveryMode) }\n              | cxUrl\n          \"\n        >\n          <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- PAYMENT METHOD SECTION -->\n  <ng-template #paymentMethod>\n    <div class=\"cx-review-summary-card cx-review-card-payment\">\n      <div>\n        <cx-card\n          *ngIf=\"paymentDetails$ | async as paymentDetails\"\n          [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editPaymentDetails' | cxTranslate\"\n          [routerLink]=\"\n            { cxRoute: getCheckoutStepUrl(checkoutStepTypePaymentDetails) }\n              | cxUrl\n          \"\n        >\n          <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- CART ITEM SECTION -->\n  <ng-container *ngIf=\"cart$ | async as cart\">\n    <div class=\"cx-review-cart-total d-none d-lg-block d-xl-block\">\n      {{\n        'cartItems.cartTotal'\n          | cxTranslate: { count: cart.deliveryItemsQuantity }\n      }}:\n      {{ cart.totalPrice?.formattedValue }}\n    </div>\n    <div class=\"cx-review-cart-heading d-block d-lg-none d-xl-none\">\n      {{ 'checkoutReview.placeOrder' | cxTranslate }}\n    </div>\n    <div class=\"cx-review-cart-item\" *ngIf=\"entries$ | async as entries\">\n      <cx-promotions\n        [promotions]=\"\n          (cart.appliedOrderPromotions || []).concat(\n            cart.potentialOrderPromotions || []\n          )\n        \"\n      ></cx-promotions>\n\n      <ng-template\n        [cxOutlet]=\"cartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          items: entries,\n          readonly: true,\n          promotionLocation: promotionLocation\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  CardModule,\n  IconModule,\n  OutletModule,\n  PromotionsModule,\n} from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../guards/checkout-auth.guard';\nimport { CheckoutReviewSubmitComponent } from './checkout-review-submit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    IconModule,\n    OutletModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: CheckoutReviewSubmitComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutReviewSubmitComponent],\n  exports: [CheckoutReviewSubmitComponent],\n})\nexport class CheckoutReviewSubmitModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartFacade, Cart } from '@spartacus/cart/base/root';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-checkout-review-overview',\n  templateUrl: './checkout-review-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutReviewOverviewComponent {\n  constructor(protected activeCartFacade: ActiveCartFacade) {}\n\n  get cart$(): Observable<Cart> {\n    return this.activeCartFacade.getActive();\n  }\n}\n","<ng-container *ngIf=\"cart$ | async as cart\">\n  <div class=\"cx-review-cart-total d-none d-lg-block d-xl-block\">\n    {{ 'cartItems.cartTotal' | cxTranslate: { count: cart.totalUnitCount } }}:\n    {{ cart.totalPrice?.formattedValue }}\n  </div>\n  <cx-promotions\n    [promotions]=\"\n      (cart.appliedOrderPromotions || []).concat(\n        cart.potentialOrderPromotions || []\n      )\n    \"\n  ></cx-promotions>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { PromotionsModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutReviewOverviewComponent } from './checkout-review-overview.component';\n\n@NgModule({\n  declarations: [CheckoutReviewOverviewComponent],\n  imports: [CommonModule, PromotionsModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOverview: {\n          component: CheckoutReviewOverviewComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutReviewOverviewModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { PaymentDetails } from '@spartacus/cart/base/root';\nimport {\n  CheckoutPaymentFacade,\n  CheckoutStepType,\n} from '@spartacus/checkout/base/root';\nimport { TranslationService } from '@spartacus/core';\nimport { billingAddressCard, paymentMethodCard } from '@spartacus/order/root';\nimport { Card, ICON_TYPE } from '@spartacus/storefront';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-review-payment',\n  templateUrl: './checkout-review-payment.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutReviewPaymentComponent {\n  iconTypes = ICON_TYPE;\n\n  paymentDetailsStepRoute = this.checkoutStepService.getCheckoutStepRoute(\n    CheckoutStepType.PAYMENT_DETAILS\n  );\n\n  constructor(\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected translationService: TranslationService\n  ) {}\n\n  paymentDetails$: Observable<PaymentDetails | undefined> =\n    this.checkoutPaymentFacade.getPaymentDetailsState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('paymentForm.payment'),\n      this.translationService.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) =>\n        paymentMethodCard(textTitle, textExpires, paymentDetails)\n      )\n    );\n  }\n\n  getBillingAddressCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('paymentForm.billingAddress'),\n      this.translationService.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([billingAddress, billTo]) =>\n        billingAddressCard(billingAddress, billTo, paymentDetails)\n      )\n    );\n  }\n}\n","<div\n  class=\"cx-review-summary\"\n  *ngIf=\"paymentDetails$ | async as paymentDetails\"\n>\n  <div class=\"cx-review-summary-card cx-review-summary-payment-card\">\n    <div>\n      <cx-card\n        [content]=\"getBillingAddressCard(paymentDetails) | async\"\n      ></cx-card>\n    </div>\n    <div class=\"cx-review-summary-edit-step\">\n      <a\n        [attr.aria-label]=\"'checkoutReview.editPaymentDetails' | cxTranslate\"\n        [routerLink]=\"{ cxRoute: paymentDetailsStepRoute } | cxUrl\"\n      >\n        <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n      </a>\n    </div>\n  </div>\n\n  <div class=\"cx-review-summary-card cx-review-summary-payment-card\">\n    <div>\n      <cx-card\n        [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n      ></cx-card>\n    </div>\n    <div class=\"cx-review-summary-edit-step\">\n      <a\n        [attr.aria-label]=\"'checkoutReview.editPaymentDetails' | cxTranslate\"\n        [routerLink]=\"{ cxRoute: paymentDetailsStepRoute } | cxUrl\"\n      >\n        <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n      </a>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule, IconModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutReviewPaymentComponent } from './checkout-review-payment.component';\n\n@NgModule({\n  declarations: [CheckoutReviewPaymentComponent],\n  exports: [CheckoutReviewPaymentComponent],\n  imports: [\n    CommonModule,\n    CardModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewPayment: {\n          component: CheckoutReviewPaymentComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutReviewPaymentModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  ActiveCartFacade,\n  CartOutlets,\n  DeliveryMode,\n  OrderEntry,\n} from '@spartacus/cart/base/root';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n  CheckoutStepType,\n} from '@spartacus/checkout/base/root';\nimport { Address, TranslationService } from '@spartacus/core';\nimport { deliveryAddressCard, deliveryModeCard } from '@spartacus/order/root';\nimport { Card, ICON_TYPE } from '@spartacus/storefront';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-review-shipping',\n  templateUrl: './checkout-review-shipping.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutReviewShippingComponent {\n  readonly cartOutlets = CartOutlets;\n  iconTypes = ICON_TYPE;\n\n  deliveryAddressStepRoute = this.checkoutStepService.getCheckoutStepRoute(\n    CheckoutStepType.DELIVERY_ADDRESS\n  );\n  deliveryModeStepRoute = this.checkoutStepService.getCheckoutStepRoute(\n    CheckoutStepType.DELIVERY_MODE\n  );\n\n  constructor(\n    protected activeCartFacade: ActiveCartFacade,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected translationService: TranslationService,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  entries$: Observable<OrderEntry[]> =\n    this.activeCartFacade.getDeliveryEntries();\n\n  deliveryAddress$: Observable<Address | undefined> =\n    this.checkoutDeliveryAddressFacade.getDeliveryAddressState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n\n  deliveryMode$: Observable<DeliveryMode | undefined> =\n    this.checkoutDeliveryModesFacade.getSelectedDeliveryModeState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n\n  getDeliveryAddressCard(\n    deliveryAddress: Address,\n    countryName?: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('addressCard.shipTo'),\n      this.translationService.translate('addressCard.phoneNumber'),\n      this.translationService.translate('addressCard.mobileNumber'),\n    ]).pipe(\n      map(([textTitle, textPhone, textMobile]) =>\n        deliveryAddressCard(\n          textTitle,\n          textPhone,\n          textMobile,\n          deliveryAddress,\n          countryName\n        )\n      )\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('checkoutMode.deliveryMethod'),\n    ]).pipe(map(([textTitle]) => deliveryModeCard(textTitle, deliveryMode)));\n  }\n}\n","<ng-container *ngIf=\"entries$ | async as entries\">\n  <ng-container *ngIf=\"entries.length > 0\">\n    <h2 class=\"cx-review-header\">\n      {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n    </h2>\n\n    <div class=\"cx-review-summary cx-review-shipping-summary\">\n      <!-- DELIVERY ADDRESS SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div\n          *ngIf=\"deliveryAddress$ | async as deliveryAddress\"\n          class=\"cx-review-summary-card cx-review-card-address\"\n        >\n          <cx-card\n            [content]=\"getDeliveryAddressCard(deliveryAddress) | async\"\n          ></cx-card>\n          <div class=\"cx-review-summary-edit-step\">\n            <a\n              [attr.aria-label]=\"\n                'checkoutReview.editDeliveryAddressDetails' | cxTranslate\n              \"\n              [routerLink]=\"\n                {\n                  cxRoute: deliveryAddressStepRoute\n                } | cxUrl\n              \"\n              ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n            ></a>\n          </div>\n        </div>\n      </div>\n\n      <!-- DELIVERY MODE SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div class=\"cx-review-summary-card cx-review-card-address\">\n          <cx-card\n            *ngIf=\"deliveryMode$ | async as deliveryMode\"\n            [content]=\"getDeliveryModeCard(deliveryMode) | async\"\n          ></cx-card>\n          <div class=\"cx-review-summary-edit-step\">\n            <a\n              [attr.aria-label]=\"\n                'checkoutReview.editDeliveryMode' | cxTranslate\n              \"\n              [routerLink]=\"{ cxRoute: deliveryModeStepRoute } | cxUrl\"\n            >\n              <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- CART ITEM SECTION -->\n    <div class=\"cx-review-cart-item\">\n      <ng-template\n        [cxOutlet]=\"cartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          items: entries,\n          readonly: true\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule, IconModule, OutletModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutReviewShippingComponent } from './checkout-review-shipping.component';\n\n@NgModule({\n  declarations: [CheckoutReviewShippingComponent],\n  exports: [CheckoutReviewShippingComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    CardModule,\n    UrlModule,\n    RouterModule,\n    IconModule,\n    OutletModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewShipping: {\n          component: CheckoutReviewShippingComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutReviewShippingModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CheckoutDeliveryAddressModule } from './checkout-delivery-address/checkout-delivery-address.module';\nimport { CheckoutDeliveryModeModule } from './checkout-delivery-mode/checkout-delivery-mode.module';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { CheckoutOrchestratorModule } from './checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './checkout-order-summary/checkout-order-summary.module';\nimport { CheckoutPaymentMethodModule } from './checkout-payment-method/checkout-payment-method.module';\nimport { CheckoutPlaceOrderModule } from './checkout-place-order/checkout-place-order.module';\nimport { CheckoutProgressMobileBottomModule } from './checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\nimport { CheckoutProgressMobileTopModule } from './checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './checkout-progress/checkout-progress.module';\nimport { CheckoutReviewSubmitModule } from './checkout-review-submit/checkout-review-submit.module';\nimport { CheckoutReviewOverviewModule } from './checkout-review/checkout-review-overview/checkout-review-overview.module';\nimport { CheckoutReviewPaymentModule } from './checkout-review/checkout-review-payment/checkout-review-payment.module';\nimport { CheckoutReviewShippingModule } from './checkout-review/checkout-review-shipping/checkout-review-shipping.module';\n\n@NgModule({\n  imports: [\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    CheckoutDeliveryModeModule,\n    CheckoutPaymentMethodModule,\n    CheckoutPlaceOrderModule,\n    CheckoutReviewSubmitModule,\n    CheckoutReviewPaymentModule,\n    CheckoutReviewShippingModule,\n    CheckoutReviewOverviewModule,\n    CheckoutDeliveryAddressModule,\n    CheckoutLoginModule,\n  ],\n})\nexport class CheckoutComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cart-not-empty.guard';\nexport * from './checkout-auth.guard';\nexport * from './checkout-steps-set.guard';\nexport * from './checkout.guard';\nexport * from './not-checkout-auth.guard';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './checkout-config.service';\nexport * from './checkout-step.service';\nexport * from './express-checkout.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './checkout-components.module';\nexport * from './checkout-delivery-address/checkout-delivery-address.component';\nexport * from './checkout-delivery-address/checkout-delivery-address.module';\nexport * from './checkout-delivery-mode/checkout-delivery-mode.component';\nexport * from './checkout-delivery-mode/checkout-delivery-mode.module';\nexport * from './checkout-login/checkout-login.component';\nexport * from './checkout-login/checkout-login.module';\nexport * from './checkout-orchestrator/checkout-orchestrator.component';\nexport * from './checkout-orchestrator/checkout-orchestrator.module';\nexport * from './checkout-order-summary/checkout-order-summary.component';\nexport * from './checkout-order-summary/checkout-order-summary.module';\nexport * from './checkout-payment-method/checkout-payment-form/checkout-payment-form.component';\nexport * from './checkout-payment-method/checkout-payment-form/checkout-payment-form.module';\nexport * from './checkout-payment-method/checkout-payment-method.component';\nexport * from './checkout-payment-method/checkout-payment-method.module';\nexport * from './checkout-place-order/checkout-place-order.component';\nexport * from './checkout-place-order/checkout-place-order.module';\nexport * from './checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component';\nexport * from './checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\nexport * from './checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component';\nexport * from './checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nexport * from './checkout-progress/checkout-progress.component';\nexport * from './checkout-progress/checkout-progress.module';\nexport * from './checkout-review-submit/checkout-review-submit.component';\nexport * from './checkout-review-submit/checkout-review-submit.module';\nexport * from './guards/index';\nexport * from './services/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2","i1","i2.CheckoutConfigService","i3","i4","i5.CheckoutStepService","i6","i7","i4.CheckoutStepService","i5","i8","i9","i3.CheckoutConfigService","i4.ExpressCheckoutService","i6.CheckoutStepService","i7.CheckoutPaymentFormComponent","i1.CheckoutStepService","i2.CheckoutStepService","i5.MultiLinePipe"],"mappings":"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"}