{"version":3,"file":"spartacus-checkout-b2b-components.mjs","sources":["../../../feature-libs/checkout/b2b/components/checkout-cost-center/checkout-cost-center.component.ts","../../../feature-libs/checkout/b2b/components/checkout-cost-center/checkout-cost-center.component.html","../../../feature-libs/checkout/b2b/components/checkout-cost-center/checkout-cost-center.module.ts","../../../feature-libs/checkout/b2b/components/checkout-delivery-address/checkout-delivery-address.component.ts","../../../feature-libs/checkout/b2b/components/checkout-delivery-address/checkout-delivery-address.component.html","../../../feature-libs/checkout/b2b/components/checkout-delivery-address/checkout-delivery-address.module.ts","../../../feature-libs/checkout/b2b/components/checkout-payment-type/checkout-payment-type.component.ts","../../../feature-libs/checkout/b2b/components/checkout-payment-type/checkout-payment-type.component.html","../../../feature-libs/checkout/b2b/components/checkout-payment-type/checkout-payment-type.module.ts","../../../feature-libs/checkout/b2b/components/checkout-review-submit/checkout-review-submit.component.ts","../../../feature-libs/checkout/b2b/components/checkout-review-submit/checkout-review-submit.component.html","../../../feature-libs/checkout/b2b/components/checkout-review-submit/checkout-review-submit.module.ts","../../../feature-libs/checkout/b2b/components/guards/checkout-b2b-auth.guard.ts","../../../feature-libs/checkout/b2b/components/guards/checkout-b2b-steps-set.guard.ts","../../../feature-libs/checkout/b2b/components/checkout-b2b-components.module.ts","../../../feature-libs/checkout/b2b/components/guards/index.ts","../../../feature-libs/checkout/b2b/components/public_api.ts","../../../feature-libs/checkout/b2b/components/spartacus-checkout-b2b-components.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  CheckoutCostCenterFacade,\n  CheckoutPaymentTypeFacade,\n} from '@spartacus/checkout/b2b/root';\nimport { CostCenter, UserCostCenterService } from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, take, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cost-center',\n  templateUrl: './checkout-cost-center.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutCostCenterComponent implements OnInit, OnDestroy {\n  protected subscription = new Subscription();\n  protected userCostCenters$: Observable<CostCenter[]> =\n    this.userCostCenterService\n      .getActiveCostCenters()\n      .pipe(filter((costCenters) => !!costCenters));\n\n  costCenterId: string | undefined;\n  costCenters$: Observable<CostCenter[]>;\n  isAccountPayment: boolean;\n\n  @HostBinding('class.hidden')\n  get disabled() {\n    return !this.isAccountPayment;\n  }\n\n  constructor(\n    protected userCostCenterService: UserCostCenterService,\n    protected checkoutCostCenterFacade: CheckoutCostCenterFacade,\n    protected checkoutPaymentTypeFacade: CheckoutPaymentTypeFacade\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.checkoutPaymentTypeFacade\n        .isAccountPayment()\n        .pipe(distinctUntilChanged())\n        .subscribe((isAccountPayment) => {\n          this.isAccountPayment = isAccountPayment;\n        })\n    );\n\n    this.costCenters$ = combineLatest([\n      this.userCostCenters$,\n      this.checkoutCostCenterFacade.getCostCenterState().pipe(\n        filter((state) => !state.loading),\n        map((state) => state.data),\n        distinctUntilChanged()\n      ),\n    ]).pipe(\n      take(1),\n      tap(([costCenters, costCenter]) => {\n        if (!costCenter) {\n          this.setCostCenter(costCenters[0].code as string);\n        } else {\n          this.costCenterId = costCenter.code;\n        }\n      }),\n      map(([costCenters]) => costCenters)\n    );\n  }\n\n  setCostCenter(selectCostCenter: string): void {\n    this.costCenterId = selectCostCenter;\n    this.checkoutCostCenterFacade.setCostCenter(this.costCenterId);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"isAccountPayment\">\n  <div class=\"row\">\n    <div class=\"col-md-12 col-xl-10\">\n      <ng-container *ngIf=\"costCenters$ | async as costCenters\">\n        <div *ngIf=\"costCenters.length !== 0\">\n          <label>\n            <span class=\"label-content required\">{{\n              'checkoutB2B.costCenter' | cxTranslate\n            }}</span>\n            <select (change)=\"setCostCenter($event.target.value)\">\n              <option\n                *ngFor=\"let costCenter of costCenters\"\n                value=\"{{ costCenter.code }}\"\n                [selected]=\"costCenterId === costCenter.code\"\n              >\n                {{ costCenter.name }}\n              </option>\n            </select>\n            <span class=\"label-content\">{{\n              'checkoutB2B.availableLabel' | cxTranslate\n            }}</span>\n          </label>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CartValidationGuard } from '@spartacus/cart/base/core';\nimport {\n  CartNotEmptyGuard,\n  CheckoutAuthGuard,\n} from '@spartacus/checkout/base/components';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { CheckoutCostCenterComponent } from './checkout-cost-center.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutCostCenterComponent: {\n          component: CheckoutCostCenterComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CartValidationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutCostCenterComponent],\n})\nexport class CheckoutCostCenterModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  CheckoutCostCenterFacade,\n  CheckoutPaymentTypeFacade,\n} from '@spartacus/checkout/b2b/root';\nimport {\n  CheckoutDeliveryAddressComponent,\n  CheckoutStepService,\n} from '@spartacus/checkout/base/components';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n} from '@spartacus/checkout/base/root';\nimport {\n  Address,\n  GlobalMessageService,\n  TranslationService,\n  UserAddressService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { Card } from '@spartacus/storefront';\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-delivery-address',\n  templateUrl: './checkout-delivery-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class B2BCheckoutDeliveryAddressComponent\n  extends CheckoutDeliveryAddressComponent\n  implements OnInit, OnDestroy\n{\n  protected subscriptions = new Subscription();\n\n  protected isAccountPayment$: Observable<boolean> =\n    this.checkoutPaymentTypeFacade\n      .isAccountPayment()\n      .pipe(distinctUntilChanged());\n\n  protected costCenterAddresses$: Observable<Address[]> =\n    this.checkoutCostCenterFacade.getCostCenterState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      distinctUntilChanged((prev, curr) => prev?.code === curr?.code),\n      switchMap((costCenter) => {\n        this.doneAutoSelect = false;\n        return costCenter?.code\n          ? this.userCostCenterService.getCostCenterAddresses(costCenter.code)\n          : of([]);\n      })\n    );\n\n  protected creditCardAddressLoading$: Observable<boolean> =\n    super.getAddressLoading();\n\n  protected accountAddressLoading$: Observable<boolean> = combineLatest([\n    this.creditCardAddressLoading$,\n    this.checkoutCostCenterFacade\n      .getCostCenterState()\n      .pipe(map((state) => state.loading)),\n  ]).pipe(\n    map(\n      ([creditCardAddressLoading, costCenterLoading]) =>\n        creditCardAddressLoading || costCenterLoading\n    ),\n    distinctUntilChanged()\n  );\n\n  isAccountPayment = false;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected activatedRoute: ActivatedRoute,\n    protected translationService: TranslationService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade,\n    protected globalMessageService: GlobalMessageService,\n    protected checkoutCostCenterFacade: CheckoutCostCenterFacade,\n    protected checkoutPaymentTypeFacade: CheckoutPaymentTypeFacade,\n    protected userCostCenterService: UserCostCenterService\n  ) {\n    super(\n      userAddressService,\n      checkoutDeliveryAddressFacade,\n      activatedRoute,\n      translationService,\n      activeCartFacade,\n      checkoutStepService,\n      checkoutDeliveryModesFacade,\n      globalMessageService\n    );\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.isAccountPayment$.subscribe(\n        (isAccount) => (this.isAccountPayment = isAccount)\n      )\n    );\n\n    super.ngOnInit();\n  }\n\n  protected loadAddresses(): void {\n    if (!this.isAccountPayment) {\n      super.loadAddresses();\n    }\n    // else: do nothing, as we don't need to load user addresses for account payment\n  }\n\n  protected getAddressLoading(): Observable<boolean> {\n    return this.isAccountPayment$.pipe(\n      switchMap((isAccountPayment) =>\n        isAccountPayment\n          ? this.accountAddressLoading$\n          : this.creditCardAddressLoading$\n      )\n    );\n  }\n\n  protected getSupportedAddresses(): Observable<Address[]> {\n    return this.isAccountPayment$.pipe(\n      switchMap((isAccountPayment) =>\n        isAccountPayment\n          ? this.costCenterAddresses$\n          : super.getSupportedAddresses()\n      )\n    );\n  }\n\n  protected selectDefaultAddress(\n    addresses: Address[],\n    selected: Address | undefined\n  ): void {\n    if (\n      !this.doneAutoSelect &&\n      addresses?.length &&\n      (!selected || Object.keys(selected).length === 0)\n    ) {\n      if (this.isAccountPayment) {\n        if (addresses.length === 1) {\n          this.setAddress(addresses[0]);\n        }\n      } else {\n        super.selectDefaultAddress(addresses, selected);\n      }\n      this.doneAutoSelect = true;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n  {{ 'checkoutAddress.shippingAddress' | cxTranslate }}\n</h2>\n\n<ng-container *ngIf=\"cards$ | async as cards\">\n  <ng-container *ngIf=\"!(isUpdating$ | async); else loading\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container\n      *ngIf=\"\n        isAccountPayment || (cards?.length && !addressFormOpened);\n        then showExistingAddresses;\n        else newAddressForm\n      \"\n    >\n    </ng-container>\n\n    <ng-template #showExistingAddresses>\n      <p class=\"cx-checkout-text\">\n        {{ 'checkoutAddress.selectYourDeliveryAddress' | cxTranslate }}\n      </p>\n      <div class=\"cx-checkout-btns row\" *ngIf=\"!isAccountPayment\">\n        <div class=\"col-sm-12 col-md-12 col-lg-6\">\n          <button\n            class=\"btn btn-block btn-secondary\"\n            (click)=\"showNewAddressForm()\"\n          >\n            {{ 'checkoutAddress.addNewAddress' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"cx-checkout-body row\">\n        <div\n          class=\"cx-delivery-address-card col-md-12 col-lg-6\"\n          *ngFor=\"let card of cards; let i = index\"\n        >\n          <div\n            class=\"cx-delivery-address-card-inner\"\n            (click)=\"selectAddress(card.address)\"\n          >\n            <cx-card\n              [border]=\"true\"\n              [index]=\"i\"\n              [fitToContainer]=\"true\"\n              [content]=\"card.card\"\n              (sendCard)=\"selectAddress(card.address)\"\n            ></cx-card>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"cx-checkout-btns row\">\n        <div class=\"col-md-12 col-lg-6\">\n          <button class=\"cx-btn btn btn-block btn-secondary\" (click)=\"back()\">\n            {{ backBtnText | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-md-12 col-lg-6\">\n          <button\n            class=\"cx-btn btn btn-block btn-primary\"\n            [disabled]=\"!(selectedAddress$ | async)?.id\"\n            (click)=\"next()\"\n          >\n            {{ 'common.continue' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template #newAddressForm>\n      <cx-address-form\n        *ngIf=\"cards.length; else initialAddressForm\"\n        [showTitleCode]=\"true\"\n        (backToAddress)=\"hideNewAddressForm(false)\"\n        (submitAddress)=\"addAddress($event)\"\n      ></cx-address-form>\n      <ng-template #initialAddressForm>\n        <cx-address-form\n          [showTitleCode]=\"true\"\n          [setAsDefaultField]=\"!isGuestCheckout\"\n          cancelBtnLabel=\"{{ backBtnText | cxTranslate }}\"\n          (backToAddress)=\"hideNewAddressForm(true)\"\n          (submitAddress)=\"addAddress($event)\"\n        ></cx-address-form>\n      </ng-template>\n    </ng-template>\n  </ng-container>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CartValidationGuard } from '@spartacus/cart/base/core';\nimport {\n  CartNotEmptyGuard,\n  CheckoutAuthGuard,\n} from '@spartacus/checkout/base/components';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport {\n  AddressFormModule,\n  CardModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { B2BCheckoutDeliveryAddressComponent } from './checkout-delivery-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryAddress: {\n          component: B2BCheckoutDeliveryAddressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CartValidationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [B2BCheckoutDeliveryAddressComponent],\n  exports: [B2BCheckoutDeliveryAddressComponent],\n})\nexport class B2BCheckoutDeliveryAddressModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PaymentType } from '@spartacus/cart/base/root';\nimport {\n  B2BPaymentTypeEnum,\n  CheckoutPaymentTypeFacade,\n} from '@spartacus/checkout/b2b/root';\nimport { CheckoutStepService } from '@spartacus/checkout/base/components';\nimport { CheckoutStepType } from '@spartacus/checkout/base/root';\nimport { getLastValueSync, isNotUndefined } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-payment-type',\n  templateUrl: './checkout-payment-type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutPaymentTypeComponent {\n  @ViewChild('poNumber', { static: false })\n  private poNumberInputElement: ElementRef<HTMLInputElement>;\n\n  protected busy$ = new BehaviorSubject<boolean>(false);\n\n  typeSelected?: string;\n\n  isUpdating$ = combineLatest([\n    this.busy$,\n    this.checkoutPaymentTypeFacade\n      .getSelectedPaymentTypeState()\n      .pipe(map((state) => state.loading)),\n  ]).pipe(\n    map(([busy, loading]) => busy || loading),\n    distinctUntilChanged()\n  );\n\n  paymentTypes$: Observable<PaymentType[]> =\n    this.checkoutPaymentTypeFacade.getPaymentTypes();\n\n  typeSelected$: Observable<PaymentType> = combineLatest([\n    this.checkoutPaymentTypeFacade.getSelectedPaymentTypeState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data)\n    ),\n    this.paymentTypes$,\n  ]).pipe(\n    map(\n      ([selectedPaymentType, availablePaymentTypes]: [\n        PaymentType | undefined,\n        PaymentType[]\n      ]) => {\n        if (\n          selectedPaymentType &&\n          availablePaymentTypes.find((availablePaymentType) => {\n            return availablePaymentType.code === selectedPaymentType.code;\n          })\n        ) {\n          return selectedPaymentType;\n        }\n        if (availablePaymentTypes.length) {\n          this.busy$.next(true);\n          this.checkoutPaymentTypeFacade\n            .setPaymentType(\n              availablePaymentTypes[0].code as string,\n              this.poNumberInputElement?.nativeElement?.value\n            )\n            .subscribe({\n              complete: () => this.onSuccess(),\n              error: () => this.onError(),\n            });\n          return availablePaymentTypes[0];\n        }\n        return undefined;\n      }\n    ),\n    filter(isNotUndefined),\n    distinctUntilChanged(),\n    tap((selected) => {\n      this.typeSelected = selected?.code;\n      this.checkoutStepService.resetSteps();\n      this.checkoutStepService.disableEnableStep(\n        CheckoutStepType.PAYMENT_DETAILS,\n        selected?.code === B2BPaymentTypeEnum.ACCOUNT_PAYMENT\n      );\n    })\n  );\n\n  cartPoNumber$: Observable<string> = this.checkoutPaymentTypeFacade\n    .getPurchaseOrderNumberState()\n    .pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      filter(isNotUndefined),\n      distinctUntilChanged()\n    );\n\n  constructor(\n    protected checkoutPaymentTypeFacade: CheckoutPaymentTypeFacade,\n    protected checkoutStepService: CheckoutStepService,\n    protected activatedRoute: ActivatedRoute\n  ) {}\n\n  changeType(code: string): void {\n    this.busy$.next(true);\n    this.typeSelected = code;\n\n    this.checkoutPaymentTypeFacade\n      .setPaymentType(code, this.poNumberInputElement.nativeElement.value)\n      .subscribe({\n        complete: () => this.onSuccess(),\n        error: () => this.onError(),\n      });\n  }\n\n  next(): void {\n    if (!this.typeSelected) {\n      return;\n    }\n\n    const poNumberInput = this.poNumberInputElement.nativeElement.value;\n    // if the PO number didn't change\n    if (poNumberInput === getLastValueSync(this.cartPoNumber$)) {\n      this.checkoutStepService.next(this.activatedRoute);\n      return;\n    }\n\n    this.busy$.next(true);\n    this.checkoutPaymentTypeFacade\n      .setPaymentType(this.typeSelected, poNumberInput)\n      .subscribe({\n        // we don't call onSuccess here, because it can cause a spinner flickering\n        complete: () => this.checkoutStepService.next(this.activatedRoute),\n        error: () => this.onError(),\n      });\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  protected onSuccess(): void {\n    this.busy$.next(false);\n  }\n\n  protected onError(): void {\n    this.busy$.next(false);\n  }\n}\n","<h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n  {{ 'checkoutB2B.methodOfPayment.paymentType' | cxTranslate }}\n</h2>\n\n<ng-container *ngIf=\"paymentTypes$ | async as paymentTypes\">\n  <ng-container\n    *ngIf=\"\n      !!paymentTypes.length &&\n        (typeSelected$ | async) &&\n        !(isUpdating$ | async);\n      else loading\n    \"\n  >\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-6\">\n        <label>\n          <span class=\"label-content\">{{\n            'checkoutB2B.poNumber' | cxTranslate\n          }}</span>\n          <input\n            #poNumber\n            class=\"form-control\"\n            formControlName=\"poNumber\"\n            type=\"text\"\n            placeholder=\"{{ 'checkoutB2B.placeholder' | cxTranslate }}\"\n            value=\"{{ cartPoNumber$ | async }}\"\n          />\n        </label>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-6\">\n        <label class=\"cx-payment-type-container\">\n          <span class=\"label-content\">{{\n            'paymentTypes.title' | cxTranslate\n          }}</span>\n          <div class=\"form-check\" *ngFor=\"let type of paymentTypes\">\n            <input\n              id=\"paymentType-{{ type.code }}\"\n              class=\"form-check-input\"\n              role=\"radio\"\n              type=\"radio\"\n              aria-checked=\"true\"\n              (change)=\"changeType(type.code)\"\n              [value]=\"type.code\"\n              [checked]=\"type.code === typeSelected\"\n              formControlName=\"paymentType\"\n            />\n            <label\n              class=\"cx-payment-type-label form-check-label form-radio-label\"\n              for=\"paymentType-{{ type.code }}\"\n            >\n              <div class=\"cx-payment-type\">\n                {{ 'paymentTypes.paymentType_' + type?.code | cxTranslate }}\n              </div>\n            </label>\n          </div>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"cx-checkout-btns row\">\n      <div class=\"col-md-12 col-lg-6\">\n        <button class=\"btn btn-block btn-secondary\" (click)=\"back()\">\n          {{ 'checkout.backToCart' | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-12 col-lg-6\">\n        <button class=\"btn btn-block btn-primary\" (click)=\"next()\">\n          {{ 'common.continue' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CartValidationGuard } from '@spartacus/cart/base/core';\nimport {\n  CartNotEmptyGuard,\n  CheckoutAuthGuard,\n} from '@spartacus/checkout/base/components';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { SpinnerModule } from '@spartacus/storefront';\nimport { CheckoutPaymentTypeComponent } from './checkout-payment-type.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentType: {\n          component: CheckoutPaymentTypeComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CartValidationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutPaymentTypeComponent],\n  exports: [CheckoutPaymentTypeComponent],\n})\nexport class CheckoutPaymentTypeModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartFacade, PaymentType } from '@spartacus/cart/base/root';\nimport {\n  CheckoutCostCenterFacade,\n  CheckoutPaymentTypeFacade,\n} from '@spartacus/checkout/b2b/root';\nimport {\n  CheckoutReviewSubmitComponent,\n  CheckoutStepService,\n} from '@spartacus/checkout/base/components';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n  CheckoutPaymentFacade,\n  CheckoutStepType,\n} from '@spartacus/checkout/base/root';\nimport {\n  CostCenter,\n  TranslationService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { Card } from '@spartacus/storefront';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './checkout-review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class B2BCheckoutReviewSubmitComponent extends CheckoutReviewSubmitComponent {\n  checkoutStepTypePaymentType = CheckoutStepType.PAYMENT_TYPE;\n\n  constructor(\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected activeCartFacade: ActiveCartFacade,\n    protected translationService: TranslationService,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade,\n    protected checkoutPaymentTypeFacade: CheckoutPaymentTypeFacade,\n    protected checkoutCostCenterFacade: CheckoutCostCenterFacade,\n    protected userCostCenterService: UserCostCenterService\n  ) {\n    super(\n      checkoutDeliveryAddressFacade,\n      checkoutPaymentFacade,\n      activeCartFacade,\n      translationService,\n      checkoutStepService,\n      checkoutDeliveryModesFacade\n    );\n  }\n\n  get poNumber$(): Observable<string | undefined> {\n    return this.checkoutPaymentTypeFacade.getPurchaseOrderNumberState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n  }\n\n  get paymentType$(): Observable<PaymentType | undefined> {\n    return this.checkoutPaymentTypeFacade.getSelectedPaymentTypeState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n  }\n\n  get isAccountPayment$(): Observable<boolean> {\n    return this.checkoutPaymentTypeFacade.isAccountPayment();\n  }\n\n  get costCenter$(): Observable<CostCenter | undefined> {\n    return this.checkoutCostCenterFacade.getCostCenterState().pipe(\n      filter((state) => !state.loading && !state.error),\n      map((state) => state.data)\n    );\n  }\n\n  protected getCheckoutPaymentSteps(): Array<CheckoutStepType | string> {\n    return [\n      CheckoutStepType.PAYMENT_DETAILS,\n      CheckoutStepType.PAYMENT_TYPE,\n      CheckoutStepType.DELIVERY_ADDRESS,\n    ];\n  }\n\n  getCostCenterCard(costCenter?: CostCenter): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('checkoutB2B.costCenter'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: costCenter?.name,\n          text: ['(' + costCenter?.unit?.name + ')'],\n        };\n      })\n    );\n  }\n\n  getPoNumberCard(poNumber?: string | null): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('checkoutB2B.review.poNumber'),\n      this.translationService.translate('checkoutB2B.noPoNumber'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => {\n        return {\n          title: textTitle,\n          textBold: poNumber ? poNumber : noneTextTitle,\n        };\n      })\n    );\n  }\n\n  getPaymentTypeCard(paymentType: PaymentType): Observable<Card> {\n    return combineLatest([\n      this.translationService.translate('checkoutB2B.progress.methodOfPayment'),\n      this.translationService.translate(\n        'paymentTypes.paymentType_' + paymentType.code\n      ),\n    ]).pipe(\n      map(([textTitle, paymentTypeTranslation]) => {\n        return {\n          title: textTitle,\n          textBold: paymentTypeTranslation,\n        };\n      })\n    );\n  }\n}\n","<div class=\"cx-review\">\n  <!-- TITLE -->\n  <h2 class=\"cx-review-title d-none d-lg-block d-xl-block\">\n    {{ 'checkoutReview.review' | cxTranslate }}\n  </h2>\n\n  <div class=\"cx-review-summary row\">\n    <ng-container *ngIf=\"(steps$ | async)?.slice(0, -1) as steps\">\n      <div class=\"col-md-12 col-lg-6 col-xl-6 cx-review-payment-col\">\n        <ng-container *ngFor=\"let step of paymentSteps(steps)\">\n          <ng-container [ngSwitch]=\"step.type[0]\">\n            <ng-container *ngSwitchCase=\"checkoutStepTypePaymentType\">\n              <ng-container *ngTemplateOutlet=\"poNumber\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepTypePaymentType\">\n              <ng-container *ngTemplateOutlet=\"paymentType\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepTypePaymentDetails\">\n              <ng-container *ngTemplateOutlet=\"paymentMethod\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepTypeDeliveryAddress\">\n              <ng-container *ngTemplateOutlet=\"costCenter\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"col-md-12 col-lg-6 col-xl-6 cx-review-shipping-col\">\n        <ng-container *ngFor=\"let step of deliverySteps(steps)\">\n          <ng-container [ngSwitch]=\"step.type[0]\">\n            <ng-container *ngSwitchCase=\"checkoutStepTypeDeliveryAddress\">\n              <ng-container *ngTemplateOutlet=\"deliveryAddress\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepTypeDeliveryMode\">\n              <ng-container *ngTemplateOutlet=\"deliveryMode\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  </div>\n\n  <!-- PO NUMBER SECTION -->\n  <ng-template #poNumber>\n    <div class=\"cx-review-summary-card\">\n      <cx-card [content]=\"getPoNumberCard(poNumber$ | async) | async\"></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editPaymentType' | cxTranslate\"\n          [routerLink]=\"\n            {\n              cxRoute: getCheckoutStepUrl(checkoutStepTypePaymentType)\n            } | cxUrl\n          \"\n          ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n        ></a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- PAYMENT TYPE SECTION -->\n  <ng-template #paymentType>\n    <div class=\"cx-review-summary-card\">\n      <cx-card\n        *ngIf=\"paymentType$ | async as paymentType\"\n        [content]=\"getPaymentTypeCard(paymentType) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editPaymentType' | cxTranslate\"\n          [routerLink]=\"\n            {\n              cxRoute: getCheckoutStepUrl(checkoutStepTypePaymentType)\n            } | cxUrl\n          \"\n          ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n        ></a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- COST CENTER SECTION -->\n  <ng-template #costCenter>\n    <ng-container *ngIf=\"isAccountPayment$ | async\">\n      <div class=\"cx-review-summary-card\">\n        <cx-card\n          *ngIf=\"costCenter$ | async as costCenter\"\n          [content]=\"getCostCenterCard(costCenter) | async\"\n        ></cx-card>\n        <div class=\"cx-review-summary-edit-step\">\n          <a\n            [attr.aria-label]=\"\n              'checkoutReview.editDeliveryAddressDetails' | cxTranslate\n            \"\n            [routerLink]=\"\n              {\n                cxRoute: getCheckoutStepUrl(checkoutStepTypeDeliveryAddress)\n              } | cxUrl\n            \"\n            ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n          ></a>\n        </div>\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <!-- DELIVERY ADDRESS SECTION -->\n  <ng-template #deliveryAddress>\n    <div\n      *ngIf=\"deliveryAddress$ | async as deliveryAddress\"\n      class=\"cx-review-summary-card cx-review-card-address\"\n    >\n      <cx-card\n        [content]=\"getDeliveryAddressCard(deliveryAddress) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"\n            'checkoutReview.editDeliveryAddressDetails' | cxTranslate\n          \"\n          [routerLink]=\"\n            {\n              cxRoute: getCheckoutStepUrl(checkoutStepTypeDeliveryAddress)\n            } | cxUrl\n          \"\n          ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n        ></a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- DELIVERY MODE SECTION -->\n  <ng-template #deliveryMode>\n    <div class=\"cx-review-summary-card cx-review-card-shipping\">\n      <cx-card\n        *ngIf=\"deliveryMode$ | async as deliveryMode\"\n        [content]=\"getDeliveryModeCard(deliveryMode) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editDeliveryMode' | cxTranslate\"\n          [routerLink]=\"\n            { cxRoute: getCheckoutStepUrl(checkoutStepTypeDeliveryMode) }\n              | cxUrl\n          \"\n        >\n          <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- PAYMENT METHOD SECTION -->\n  <ng-template #paymentMethod>\n    <div class=\"cx-review-summary-card cx-review-card-payment\">\n      <div>\n        <cx-card\n          *ngIf=\"paymentDetails$ | async as paymentDetails\"\n          [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editPaymentDetails' | cxTranslate\"\n          [routerLink]=\"\n            { cxRoute: getCheckoutStepUrl(checkoutStepTypePaymentDetails) }\n              | cxUrl\n          \"\n        >\n          <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- CART ITEM SECTION -->\n  <ng-container *ngIf=\"cart$ | async as cart\">\n    <div class=\"cx-review-cart-total d-none d-lg-block d-xl-block\">\n      {{\n        'cartItems.cartTotal'\n          | cxTranslate: { count: cart.deliveryItemsQuantity }\n      }}:\n      {{ cart.totalPrice?.formattedValue }}\n    </div>\n    <div class=\"cx-review-cart-heading d-block d-lg-none d-xl-none\">\n      {{ 'checkoutReview.placeOrder' | cxTranslate }}\n    </div>\n    <div class=\"cx-review-cart-item\" *ngIf=\"entries$ | async as entries\">\n      <cx-promotions\n        [promotions]=\"\n          (cart.appliedOrderPromotions || []).concat(\n            cart.potentialOrderPromotions || []\n          )\n        \"\n      ></cx-promotions>\n\n      <ng-template\n        [cxOutlet]=\"cartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          items: entries,\n          readonly: true,\n          promotionLocation: promotionLocation\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CartNotEmptyGuard,\n  CheckoutAuthGuard,\n} from '@spartacus/checkout/base/components';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  CardModule,\n  IconModule,\n  OutletModule,\n  PromotionsModule,\n} from '@spartacus/storefront';\nimport { B2BCheckoutReviewSubmitComponent } from './checkout-review-submit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    IconModule,\n    OutletModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: B2BCheckoutReviewSubmitComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [B2BCheckoutReviewSubmitComponent],\n  exports: [B2BCheckoutReviewSubmitComponent],\n})\nexport class B2BCheckoutReviewSubmitModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  CheckoutAuthGuard,\n  CheckoutConfigService,\n} from '@spartacus/checkout/base/components';\nimport {\n  AuthRedirectService,\n  AuthService,\n  B2BUser,\n  B2BUserRole,\n  GlobalMessageService,\n  GlobalMessageType,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { User, UserAccountFacade } from '@spartacus/user/account/root';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutB2BAuthGuard\n  extends CheckoutAuthGuard\n  implements CanActivate\n{\n  constructor(\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router,\n    protected userAccountFacade: UserAccountFacade,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(\n      authService,\n      authRedirectService,\n      checkoutConfigService,\n      activeCartFacade,\n      semanticPathService,\n      router\n    );\n  }\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.authService.isUserLoggedIn(),\n      this.activeCartFacade.isGuestCart(),\n      this.userAccountFacade.get(),\n      this.activeCartFacade.isStable(),\n    ]).pipe(\n      map(([isLoggedIn, isGuestCart, user, isStable]) => ({\n        isLoggedIn,\n        isGuestCart,\n        user,\n        isStable,\n      })),\n      filter((data) => data.isStable),\n      // if the user is authenticated and we have their data, OR if the user is anonymous\n      filter((data) => (!!data.user && data.isLoggedIn) || !data.isLoggedIn),\n      map((data) => {\n        if (!data.isLoggedIn) {\n          return data.isGuestCart ? true : this.handleAnonymousUser();\n        } else if (data.user && 'roles' in data.user) {\n          return this.handleUserRole(data.user);\n        }\n        return data.isLoggedIn;\n      })\n    );\n  }\n\n  protected handleUserRole(user: User): boolean | UrlTree {\n    const roles = (<B2BUser>user).roles;\n    if (roles?.includes(B2BUserRole.CUSTOMER)) {\n      return true;\n    }\n    this.globalMessageService.add(\n      { key: 'checkoutB2B.invalid.accountType' },\n      GlobalMessageType.MSG_TYPE_WARNING\n    );\n    return this.router.parseUrl(this.semanticPathService.get('home') ?? '');\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  UrlTree,\n} from '@angular/router';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  CheckoutCostCenterFacade,\n  CheckoutPaymentTypeFacade,\n} from '@spartacus/checkout/b2b/root';\nimport {\n  CheckoutStepService,\n  CheckoutStepsSetGuard,\n} from '@spartacus/checkout/base/components';\nimport {\n  CheckoutDeliveryAddressFacade,\n  CheckoutDeliveryModesFacade,\n  CheckoutPaymentFacade,\n  CheckoutStep,\n  CheckoutStepType,\n} from '@spartacus/checkout/base/root';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutB2BStepsSetGuard\n  extends CheckoutStepsSetGuard\n  implements CanActivate\n{\n  constructor(\n    protected checkoutStepService: CheckoutStepService,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade,\n    protected checkoutPaymentFacade: CheckoutPaymentFacade,\n    protected checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade,\n    protected router: Router,\n    protected checkoutPaymentTypeFacade: CheckoutPaymentTypeFacade,\n    protected checkoutCostCenterFacade: CheckoutCostCenterFacade,\n    protected activeCartFacade: ActiveCartFacade\n  ) {\n    super(\n      checkoutStepService,\n      routingConfigService,\n      checkoutDeliveryAddressFacade,\n      checkoutPaymentFacade,\n      checkoutDeliveryModesFacade,\n      router,\n      activeCartFacade\n    );\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean | UrlTree> {\n    let currentIndex = -1;\n    const currentRouteUrl = '/' + route.url.join('/');\n\n    // check whether the previous step is set\n    return combineLatest([\n      this.checkoutStepService.steps$,\n      this.checkoutPaymentTypeFacade.isAccountPayment(),\n    ]).pipe(\n      tap(([, isAccount]) => {\n        this.checkoutStepService.disableEnableStep(\n          CheckoutStepType.PAYMENT_DETAILS,\n          isAccount\n        );\n      }),\n      take(1),\n      switchMap(([steps, isAccount]) => {\n        currentIndex = steps.findIndex((step) => {\n          const stepRouteUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName)?.paths?.[0]\n          }`;\n          return stepRouteUrl === currentRouteUrl;\n        });\n        // get current step\n        let currentStep;\n        if (currentIndex >= 0) {\n          currentStep = steps[currentIndex];\n        }\n        if (Boolean(currentStep)) {\n          return this.isB2BStepSet(steps[currentIndex - 1], isAccount);\n        } else {\n          if (isDevMode()) {\n            console.warn(\n              `Missing step with route '${currentRouteUrl}' in checkout configuration or this step is disabled.`\n            );\n          }\n          return of(this.getUrl('checkout'));\n        }\n      })\n    );\n  }\n\n  protected isB2BStepSet(\n    step: CheckoutStep,\n    isAccountPayment: boolean\n  ): Observable<boolean | UrlTree> {\n    if (step && !step.disabled) {\n      switch (step.type[0]) {\n        case CheckoutStepType.PAYMENT_TYPE: {\n          return this.isPaymentTypeSet(step);\n        }\n        case CheckoutStepType.DELIVERY_ADDRESS: {\n          return this.isDeliveryAddressAndCostCenterSet(step, isAccountPayment);\n        }\n        case CheckoutStepType.DELIVERY_MODE: {\n          return this.isDeliveryModeSet(step);\n        }\n        case CheckoutStepType.PAYMENT_DETAILS: {\n          return this.isPaymentDetailsSet(step);\n        }\n        case CheckoutStepType.REVIEW_ORDER: {\n          break;\n        }\n      }\n    }\n    return of(true);\n  }\n\n  protected isPaymentTypeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutPaymentTypeFacade.getSelectedPaymentTypeState().pipe(\n      filter((state) => !state.loading),\n      map((state) => state.data),\n      map((paymentType) => {\n        if (paymentType) {\n          return true;\n        } else {\n          return this.getUrl(step.routeName);\n        }\n      })\n    );\n  }\n\n  protected isDeliveryAddressAndCostCenterSet(\n    step: CheckoutStep,\n    isAccountPayment: boolean\n  ): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.checkoutDeliveryAddressFacade.getDeliveryAddressState().pipe(\n        filter((state) => !state.loading),\n        map((state) => state.data)\n      ),\n      this.checkoutCostCenterFacade.getCostCenterState().pipe(\n        filter((state) => !state.loading),\n        map((state) => state.data)\n      ),\n    ]).pipe(\n      map(([deliveryAddress, costCenter]) => {\n        if (isAccountPayment) {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            !!costCenter\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        } else {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            costCenter === undefined\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        }\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CheckoutAuthGuard,\n  CheckoutStepsSetGuard,\n} from '@spartacus/checkout/base/components';\nimport { CheckoutCostCenterModule } from './checkout-cost-center/checkout-cost-center.module';\nimport { B2BCheckoutDeliveryAddressModule } from './checkout-delivery-address/checkout-delivery-address.module';\nimport { CheckoutPaymentTypeModule } from './checkout-payment-type/checkout-payment-type.module';\nimport { B2BCheckoutReviewSubmitModule } from './checkout-review-submit/checkout-review-submit.module';\nimport { CheckoutB2BAuthGuard } from './guards/checkout-b2b-auth.guard';\nimport { CheckoutB2BStepsSetGuard } from './guards/checkout-b2b-steps-set.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutCostCenterModule,\n    CheckoutPaymentTypeModule,\n    B2BCheckoutDeliveryAddressModule,\n    B2BCheckoutReviewSubmitModule,\n  ],\n  providers: [\n    {\n      provide: CheckoutAuthGuard,\n      useExisting: CheckoutB2BAuthGuard,\n    },\n    {\n      provide: CheckoutStepsSetGuard,\n      useExisting: CheckoutB2BStepsSetGuard,\n    },\n  ],\n})\nexport class CheckoutB2BComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './checkout-b2b-auth.guard';\nexport * from './checkout-b2b-steps-set.guard';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './checkout-b2b-components.module';\nexport * from './checkout-cost-center/checkout-cost-center.component';\nexport * from './checkout-cost-center/checkout-cost-center.module';\nexport * from './checkout-delivery-address/checkout-delivery-address.component';\nexport * from './checkout-delivery-address/checkout-delivery-address.module';\nexport * from './checkout-payment-type/checkout-payment-type.component';\nexport * from './checkout-payment-type/checkout-payment-type.module';\nexport * from './checkout-review-submit/checkout-review-submit.component';\nexport * from './checkout-review-submit/checkout-review-submit.module';\nexport * from './guards/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2","i3","i5","i6","i7","i8","i1","i4"],"mappings":"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"}